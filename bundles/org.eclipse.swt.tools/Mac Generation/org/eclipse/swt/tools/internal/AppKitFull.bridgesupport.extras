<?xml version="1.0" encoding="UTF8"?>
<signatures swt_gen="mixed">
  <depends_on path="/System/Library/Frameworks/ApplicationServices.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/AudioToolbox.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/AudioUnit.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/CoreData.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/Foundation.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/IOKit.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/QuartzCore.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/Security.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/CoreAudio.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/DiskArbitration.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/CoreServices.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/CoreFoundation.framework"></depends_on>
  <opaque name="NSModalSession"></opaque>
  <constant name="NSAbortModalException"></constant>
  <constant name="NSAbortPrintingException"></constant>
  <constant name="NSAccessibilityAllowedValuesAttribute"></constant>
  <constant name="NSAccessibilityApplicationActivatedNotification"></constant>
  <constant name="NSAccessibilityApplicationDeactivatedNotification"></constant>
  <constant name="NSAccessibilityApplicationHiddenNotification"></constant>
  <constant name="NSAccessibilityApplicationRole"></constant>
  <constant name="NSAccessibilityApplicationShownNotification"></constant>
  <constant name="NSAccessibilityAscendingSortDirectionValue"></constant>
  <constant name="NSAccessibilityAttachmentTextAttribute"></constant>
  <constant name="NSAccessibilityAttributedStringForRangeParameterizedAttribute"></constant>
  <constant name="NSAccessibilityBackgroundColorTextAttribute"></constant>
  <constant name="NSAccessibilityBoundsForRangeParameterizedAttribute"></constant>
  <constant name="NSAccessibilityBrowserRole"></constant>
  <constant name="NSAccessibilityBusyIndicatorRole"></constant>
  <constant name="NSAccessibilityButtonRole"></constant>
  <constant name="NSAccessibilityCancelAction"></constant>
  <constant name="NSAccessibilityCancelButtonAttribute"></constant>
  <constant name="NSAccessibilityCenterTabStopMarkerTypeValue"></constant>
  <constant name="NSAccessibilityCentimetersUnitValue"></constant>
  <constant name="NSAccessibilityCheckBoxRole"></constant>
  <constant name="NSAccessibilityChildrenAttribute"></constant>
  <constant name="NSAccessibilityClearButtonAttribute"></constant>
  <constant name="NSAccessibilityCloseButtonAttribute"></constant>
  <constant name="NSAccessibilityCloseButtonSubrole"></constant>
  <constant name="NSAccessibilityColorWellRole"></constant>
  <constant name="NSAccessibilityColumnCountAttribute"></constant>
  <constant name="NSAccessibilityColumnRole"></constant>
  <constant name="NSAccessibilityColumnTitlesAttribute"></constant>
  <constant name="NSAccessibilityColumnsAttribute"></constant>
  <constant name="NSAccessibilityComboBoxRole"></constant>
  <constant name="NSAccessibilityConfirmAction"></constant>
  <constant name="NSAccessibilityContentsAttribute"></constant>
  <constant name="NSAccessibilityCreatedNotification"></constant>
  <constant name="NSAccessibilityDecimalTabStopMarkerTypeValue"></constant>
  <constant name="NSAccessibilityDecrementAction"></constant>
  <constant name="NSAccessibilityDecrementArrowSubrole"></constant>
  <constant name="NSAccessibilityDecrementButtonAttribute"></constant>
  <constant name="NSAccessibilityDecrementPageSubrole"></constant>
  <constant name="NSAccessibilityDefaultButtonAttribute"></constant>
  <constant name="NSAccessibilityDeleteAction"></constant>
  <constant name="NSAccessibilityDescendingSortDirectionValue"></constant>
  <constant name="NSAccessibilityDescriptionAttribute"></constant>
  <constant name="NSAccessibilityDialogSubrole"></constant>
  <constant name="NSAccessibilityDisclosedByRowAttribute"></constant>
  <constant name="NSAccessibilityDisclosedRowsAttribute"></constant>
  <constant name="NSAccessibilityDisclosingAttribute"></constant>
  <constant name="NSAccessibilityDisclosureLevelAttribute"></constant>
  <constant name="NSAccessibilityDisclosureTriangleRole"></constant>
  <constant name="NSAccessibilityDocumentAttribute"></constant>
  <constant name="NSAccessibilityDrawerCreatedNotification"></constant>
  <constant name="NSAccessibilityDrawerRole"></constant>
  <constant name="NSAccessibilityEditedAttribute"></constant>
  <constant name="NSAccessibilityEnabledAttribute"></constant>
  <constant name="NSAccessibilityErrorCodeExceptionInfo"></constant>
  <constant name="NSAccessibilityException"></constant>
  <constant name="NSAccessibilityExpandedAttribute"></constant>
  <constant name="NSAccessibilityFilenameAttribute"></constant>
  <constant name="NSAccessibilityFirstLineIndentMarkerTypeValue"></constant>
  <constant name="NSAccessibilityFloatingWindowSubrole"></constant>
  <constant name="NSAccessibilityFocusedAttribute"></constant>
  <constant name="NSAccessibilityFocusedUIElementAttribute"></constant>
  <constant name="NSAccessibilityFocusedUIElementChangedNotification"></constant>
  <constant name="NSAccessibilityFocusedWindowAttribute"></constant>
  <constant name="NSAccessibilityFocusedWindowChangedNotification"></constant>
  <constant name="NSAccessibilityFontFamilyKey"></constant>
  <constant name="NSAccessibilityFontNameKey"></constant>
  <constant name="NSAccessibilityFontSizeKey"></constant>
  <constant name="NSAccessibilityFontTextAttribute"></constant>
  <constant name="NSAccessibilityForegroundColorTextAttribute"></constant>
  <constant name="NSAccessibilityFrontmostAttribute"></constant>
  <constant name="NSAccessibilityGridRole"></constant>
  <constant name="NSAccessibilityGroupRole"></constant>
  <constant name="NSAccessibilityGrowAreaAttribute"></constant>
  <constant name="NSAccessibilityGrowAreaRole"></constant>
  <constant name="NSAccessibilityHeadIndentMarkerTypeValue"></constant>
  <constant name="NSAccessibilityHeaderAttribute"></constant>
  <constant name="NSAccessibilityHelpAttribute"></constant>
  <constant name="NSAccessibilityHelpTagCreatedNotification"></constant>
  <constant name="NSAccessibilityHelpTagRole"></constant>
  <constant name="NSAccessibilityHiddenAttribute"></constant>
  <constant name="NSAccessibilityHorizontalOrientationValue"></constant>
  <constant name="NSAccessibilityHorizontalScrollBarAttribute"></constant>
  <constant name="NSAccessibilityImageRole"></constant>
  <constant name="NSAccessibilityInchesUnitValue"></constant>
  <constant name="NSAccessibilityIncrementAction"></constant>
  <constant name="NSAccessibilityIncrementArrowSubrole"></constant>
  <constant name="NSAccessibilityIncrementButtonAttribute"></constant>
  <constant name="NSAccessibilityIncrementPageSubrole"></constant>
  <constant name="NSAccessibilityIncrementorRole"></constant>
  <constant name="NSAccessibilityIndexAttribute"></constant>
  <constant name="NSAccessibilityInsertionPointLineNumberAttribute"></constant>
  <constant name="NSAccessibilityLabelUIElementsAttribute"></constant>
  <constant name="NSAccessibilityLabelValueAttribute"></constant>
  <constant name="NSAccessibilityLeftTabStopMarkerTypeValue"></constant>
  <constant name="NSAccessibilityLineForIndexParameterizedAttribute"></constant>
  <constant name="NSAccessibilityLinkRole"></constant>
  <constant name="NSAccessibilityLinkTextAttribute"></constant>
  <constant name="NSAccessibilityLinkedUIElementsAttribute"></constant>
  <constant name="NSAccessibilityListRole"></constant>
  <constant name="NSAccessibilityMainAttribute"></constant>
  <constant name="NSAccessibilityMainWindowAttribute"></constant>
  <constant name="NSAccessibilityMainWindowChangedNotification"></constant>
  <constant name="NSAccessibilityMarkerGroupUIElementAttribute"></constant>
  <constant name="NSAccessibilityMarkerTypeAttribute"></constant>
  <constant name="NSAccessibilityMarkerTypeDescriptionAttribute"></constant>
  <constant name="NSAccessibilityMarkerUIElementsAttribute"></constant>
  <constant name="NSAccessibilityMarkerValuesAttribute"></constant>
  <constant name="NSAccessibilityMatteContentUIElementAttribute"></constant>
  <constant name="NSAccessibilityMatteHoleAttribute"></constant>
  <constant name="NSAccessibilityMatteRole"></constant>
  <constant name="NSAccessibilityMaxValueAttribute"></constant>
  <constant name="NSAccessibilityMenuBarAttribute"></constant>
  <constant name="NSAccessibilityMenuBarRole"></constant>
  <constant name="NSAccessibilityMenuButtonRole"></constant>
  <constant name="NSAccessibilityMenuItemRole"></constant>
  <constant name="NSAccessibilityMenuRole"></constant>
  <constant name="NSAccessibilityMinValueAttribute"></constant>
  <constant name="NSAccessibilityMinimizeButtonAttribute"></constant>
  <constant name="NSAccessibilityMinimizeButtonSubrole"></constant>
  <constant name="NSAccessibilityMinimizedAttribute"></constant>
  <constant name="NSAccessibilityMisspelledTextAttribute"></constant>
  <constant name="NSAccessibilityModalAttribute"></constant>
  <constant name="NSAccessibilityMovedNotification"></constant>
  <constant name="NSAccessibilityNextContentsAttribute"></constant>
  <constant name="NSAccessibilityNumberOfCharactersAttribute"></constant>
  <constant name="NSAccessibilityOrderedByRowAttribute"></constant>
  <constant name="NSAccessibilityOrientationAttribute"></constant>
  <constant name="NSAccessibilityOutlineRole"></constant>
  <constant name="NSAccessibilityOutlineRowSubrole"></constant>
  <constant name="NSAccessibilityOverflowButtonAttribute"></constant>
  <constant name="NSAccessibilityParentAttribute"></constant>
  <constant name="NSAccessibilityPicasUnitValue"></constant>
  <constant name="NSAccessibilityPickAction"></constant>
  <constant name="NSAccessibilityPointsUnitValue"></constant>
  <constant name="NSAccessibilityPopUpButtonRole"></constant>
  <constant name="NSAccessibilityPositionAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityPressAction"></constant>
  <constant name="NSAccessibilityPreviousContentsAttribute"></constant>
  <constant name="NSAccessibilityProgressIndicatorRole"></constant>
  <constant name="NSAccessibilityProxyAttribute"></constant>
  <constant name="NSAccessibilityRTFForRangeParameterizedAttribute"></constant>
  <constant name="NSAccessibilityRadioButtonRole"></constant>
  <constant name="NSAccessibilityRadioGroupRole"></constant>
  <constant name="NSAccessibilityRaiseAction"></constant>
  <constant name="NSAccessibilityRangeForIndexParameterizedAttribute"></constant>
  <constant name="NSAccessibilityRangeForLineParameterizedAttribute"></constant>
  <constant name="NSAccessibilityRangeForPositionParameterizedAttribute"></constant>
  <constant name="NSAccessibilityResizedNotification"></constant>
  <constant name="NSAccessibilityRightTabStopMarkerTypeValue"></constant>
  <constant name="NSAccessibilityRoleAttribute"></constant>
  <constant name="NSAccessibilityRoleDescriptionAttribute"></constant>
  <constant name="NSAccessibilityRowCountAttribute"></constant>
  <constant name="NSAccessibilityRowCountChangedNotification"></constant>
  <constant name="NSAccessibilityRowRole"></constant>
  <constant name="NSAccessibilityRowsAttribute"></constant>
  <constant name="NSAccessibilityRulerMarkerRole"></constant>
  <constant name="NSAccessibilityRulerRole"></constant>
  <constant name="NSAccessibilityScrollAreaRole"></constant>
  <constant name="NSAccessibilityScrollBarRole"></constant>
  <constant name="NSAccessibilitySearchButtonAttribute"></constant>
  <constant name="NSAccessibilitySearchFieldSubrole"></constant>
  <constant name="NSAccessibilitySearchMenuAttribute"></constant>
  <constant name="NSAccessibilitySecureTextFieldSubrole"></constant>
  <constant name="NSAccessibilitySelectedAttribute"></constant>
  <constant name="NSAccessibilitySelectedChildrenAttribute"></constant>
  <constant name="NSAccessibilitySelectedChildrenChangedNotification"></constant>
  <constant name="NSAccessibilitySelectedColumnsAttribute"></constant>
  <constant name="NSAccessibilitySelectedColumnsChangedNotification"></constant>
  <constant name="NSAccessibilitySelectedRowsAttribute"></constant>
  <constant name="NSAccessibilitySelectedRowsChangedNotification"></constant>
  <constant name="NSAccessibilitySelectedTextAttribute"></constant>
  <constant name="NSAccessibilitySelectedTextChangedNotification"></constant>
  <constant name="NSAccessibilitySelectedTextRangeAttribute"></constant>
  <constant name="NSAccessibilitySelectedTextRangesAttribute"></constant>
  <constant name="NSAccessibilityServesAsTitleForUIElementsAttribute"></constant>
  <constant name="NSAccessibilityShadowTextAttribute"></constant>
  <constant name="NSAccessibilitySharedCharacterRangeAttribute"></constant>
  <constant name="NSAccessibilitySharedTextUIElementsAttribute"></constant>
  <constant name="NSAccessibilitySheetCreatedNotification"></constant>
  <constant name="NSAccessibilitySheetRole"></constant>
  <constant name="NSAccessibilityShowMenuAction"></constant>
  <constant name="NSAccessibilityShownMenuAttribute"></constant>
  <constant name="NSAccessibilitySizeAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilitySliderRole"></constant>
  <constant name="NSAccessibilitySortButtonRole"></constant>
  <constant name="NSAccessibilitySortDirectionAttribute"></constant>
  <constant name="NSAccessibilitySplitGroupRole"></constant>
  <constant name="NSAccessibilitySplitterRole"></constant>
  <constant name="NSAccessibilitySplittersAttribute"></constant>
  <constant name="NSAccessibilityStandardWindowSubrole"></constant>
  <constant name="NSAccessibilityStaticTextRole"></constant>
  <constant name="NSAccessibilityStrikethroughColorTextAttribute"></constant>
  <constant name="NSAccessibilityStrikethroughTextAttribute"></constant>
  <constant name="NSAccessibilityStringForRangeParameterizedAttribute"></constant>
  <constant name="NSAccessibilityStyleRangeForIndexParameterizedAttribute"></constant>
  <constant name="NSAccessibilitySubroleAttribute"></constant>
  <constant name="NSAccessibilitySuperscriptTextAttribute"></constant>
  <constant name="NSAccessibilitySystemDialogSubrole"></constant>
  <constant name="NSAccessibilitySystemFloatingWindowSubrole"></constant>
  <constant name="NSAccessibilitySystemWideRole"></constant>
  <constant name="NSAccessibilityTabGroupRole"></constant>
  <constant name="NSAccessibilityTableRole"></constant>
  <constant name="NSAccessibilityTableRowSubrole"></constant>
  <constant name="NSAccessibilityTabsAttribute"></constant>
  <constant name="NSAccessibilityTailIndentMarkerTypeValue"></constant>
  <constant name="NSAccessibilityTextAreaRole"></constant>
  <constant name="NSAccessibilityTextAttachmentSubrole"></constant>
  <constant name="NSAccessibilityTextFieldRole"></constant>
  <constant name="NSAccessibilityTextLinkSubrole"></constant>
  <constant name="NSAccessibilityTimelineSubrole"></constant>
  <constant name="NSAccessibilityTitleAttribute"></constant>
  <constant name="NSAccessibilityTitleChangedNotification"></constant>
  <constant name="NSAccessibilityTitleUIElementAttribute"></constant>
  <constant name="NSAccessibilityToolbarButtonAttribute"></constant>
  <constant name="NSAccessibilityToolbarButtonSubrole"></constant>
  <constant name="NSAccessibilityToolbarRole"></constant>
  <constant name="NSAccessibilityTopLevelUIElementAttribute"></constant>
  <constant name="NSAccessibilityUIElementDestroyedNotification"></constant>
  <constant name="NSAccessibilityURLAttribute"></constant>
  <constant name="NSAccessibilityUnderlineColorTextAttribute"></constant>
  <constant name="NSAccessibilityUnderlineTextAttribute"></constant>
  <constant name="NSAccessibilityUnitDescriptionAttribute"></constant>
  <constant name="NSAccessibilityUnitsAttribute"></constant>
  <constant name="NSAccessibilityUnknownMarkerTypeValue"></constant>
  <constant name="NSAccessibilityUnknownRole"></constant>
  <constant name="NSAccessibilityUnknownSortDirectionValue"></constant>
  <constant name="NSAccessibilityUnknownSubrole"></constant>
  <constant name="NSAccessibilityUnknownUnitValue"></constant>
  <constant name="NSAccessibilityValueAttribute"></constant>
  <constant name="NSAccessibilityValueChangedNotification"></constant>
  <constant name="NSAccessibilityValueDescriptionAttribute"></constant>
  <constant name="NSAccessibilityValueIndicatorRole"></constant>
  <constant name="NSAccessibilityVerticalOrientationValue"></constant>
  <constant name="NSAccessibilityVerticalScrollBarAttribute"></constant>
  <constant name="NSAccessibilityVisibleCharacterRangeAttribute"></constant>
  <constant name="NSAccessibilityVisibleChildrenAttribute"></constant>
  <constant name="NSAccessibilityVisibleColumnsAttribute"></constant>
  <constant name="NSAccessibilityVisibleNameKey"></constant>
  <constant name="NSAccessibilityVisibleRowsAttribute"></constant>
  <constant name="NSAccessibilityWindowAttribute"></constant>
  <constant name="NSAccessibilityWindowCreatedNotification"></constant>
  <constant name="NSAccessibilityWindowDeminiaturizedNotification"></constant>
  <constant name="NSAccessibilityWindowMiniaturizedNotification"></constant>
  <constant name="NSAccessibilityWindowMovedNotification"></constant>
  <constant name="NSAccessibilityWindowResizedNotification"></constant>
  <constant name="NSAccessibilityWindowRole"></constant>
  <constant name="NSAccessibilityWindowsAttribute"></constant>
  <constant name="NSAccessibilityZoomButtonAttribute"></constant>
  <constant name="NSAccessibilityZoomButtonSubrole"></constant>
  <constant name="NSAlignmentBinding"></constant>
  <constant name="NSAllRomanInputSourcesLocaleIdentifier"></constant>
  <constant name="NSAllowsEditingMultipleValuesSelectionBindingOption"></constant>
  <constant name="NSAllowsNullArgumentBindingOption"></constant>
  <constant name="NSAlternateImageBinding"></constant>
  <constant name="NSAlternateTitleBinding"></constant>
  <constant name="NSAlwaysPresentsApplicationModalAlertsBindingOption"></constant>
  <constant name="NSAnimateBinding"></constant>
  <constant name="NSAnimationDelayBinding"></constant>
  <constant name="NSAnimationProgressMark"></constant>
  <constant name="NSAnimationProgressMarkNotification"></constant>
  <constant name="NSAnimationTriggerOrderIn"></constant>
  <constant name="NSAnimationTriggerOrderOut"></constant>
  <constant name="NSAntialiasThresholdChangedNotification"></constant>
  <constant name="NSApp"></constant>
  <constant name="NSAppKitIgnoredException"></constant>
  <constant name="NSAppKitVersionNumber"></constant>
  <constant name="NSAppKitVirtualMemoryException"></constant>
  <constant name="NSApplicationDidBecomeActiveNotification"></constant>
  <constant name="NSApplicationDidChangeScreenParametersNotification"></constant>
  <constant name="NSApplicationDidFinishLaunchingNotification"></constant>
  <constant name="NSApplicationDidHideNotification"></constant>
  <constant name="NSApplicationDidResignActiveNotification"></constant>
  <constant name="NSApplicationDidUnhideNotification"></constant>
  <constant name="NSApplicationDidUpdateNotification"></constant>
  <constant name="NSApplicationFileType"></constant>
  <constant name="NSApplicationWillBecomeActiveNotification"></constant>
  <constant name="NSApplicationWillFinishLaunchingNotification"></constant>
  <constant name="NSApplicationWillHideNotification"></constant>
  <constant name="NSApplicationWillResignActiveNotification"></constant>
  <constant name="NSApplicationWillTerminateNotification"></constant>
  <constant name="NSApplicationWillUnhideNotification"></constant>
  <constant name="NSApplicationWillUpdateNotification"></constant>
  <constant name="NSArgumentBinding"></constant>
  <constant name="NSAttachmentAttributeName"></constant>
  <constant name="NSAttributedStringBinding"></constant>
  <constant name="NSAuthorDocumentAttribute"></constant>
  <constant name="NSBackgroundColorAttributeName" swt_gen="true"></constant>
  <constant name="NSBackgroundColorDocumentAttribute"></constant>
  <constant name="NSBadBitmapParametersException"></constant>
  <constant name="NSBadComparisonException"></constant>
  <constant name="NSBadRTFColorTableException"></constant>
  <constant name="NSBadRTFDirectiveException"></constant>
  <constant name="NSBadRTFFontTableException"></constant>
  <constant name="NSBadRTFStyleSheetException"></constant>
  <constant name="NSBaseURLDocumentOption"></constant>
  <constant name="NSBaselineOffsetAttributeName" swt_gen="true"></constant>
  <constant name="NSBlack"></constant>
  <constant name="NSBottomMarginDocumentAttribute"></constant>
  <constant name="NSBrowserColumnConfigurationDidChangeNotification"></constant>
  <constant name="NSBrowserIllegalDelegateException"></constant>
  <constant name="NSCalibratedBlackColorSpace"></constant>
  <constant name="NSCalibratedRGBColorSpace" swt_gen="true"></constant>
  <constant name="NSCalibratedWhiteColorSpace"></constant>
  <constant name="NSCharacterEncodingDocumentAttribute"></constant>
  <constant name="NSCharacterEncodingDocumentOption"></constant>
  <constant name="NSCharacterShapeAttributeName"></constant>
  <constant name="NSCocoaVersionDocumentAttribute"></constant>
  <constant name="NSColorListDidChangeNotification"></constant>
  <constant name="NSColorListIOException"></constant>
  <constant name="NSColorListNotEditableException"></constant>
  <constant name="NSColorPanelColorDidChangeNotification"></constant>
  <constant name="NSColorPboardType"></constant>
  <constant name="NSComboBoxSelectionDidChangeNotification"></constant>
  <constant name="NSComboBoxSelectionIsChangingNotification"></constant>
  <constant name="NSComboBoxWillDismissNotification"></constant>
  <constant name="NSComboBoxWillPopUpNotification"></constant>
  <constant name="NSCommentDocumentAttribute"></constant>
  <constant name="NSCompanyDocumentAttribute"></constant>
  <constant name="NSConditionallySetsEditableBindingOption"></constant>
  <constant name="NSConditionallySetsEnabledBindingOption"></constant>
  <constant name="NSConditionallySetsHiddenBindingOption"></constant>
  <constant name="NSContentArrayBinding"></constant>
  <constant name="NSContentArrayForMultipleSelectionBinding"></constant>
  <constant name="NSContentBinding"></constant>
  <constant name="NSContentDictionaryBinding"></constant>
  <constant name="NSContentHeightBinding"></constant>
  <constant name="NSContentObjectBinding"></constant>
  <constant name="NSContentObjectsBinding"></constant>
  <constant name="NSContentPlacementTagBindingOption"></constant>
  <constant name="NSContentSetBinding"></constant>
  <constant name="NSContentValuesBinding"></constant>
  <constant name="NSContentWidthBinding"></constant>
  <constant name="NSContextHelpModeDidActivateNotification"></constant>
  <constant name="NSContextHelpModeDidDeactivateNotification"></constant>
  <constant name="NSContinuouslyUpdatesValueBindingOption"></constant>
  <constant name="NSControlTextDidBeginEditingNotification"></constant>
  <constant name="NSControlTextDidChangeNotification"></constant>
  <constant name="NSControlTextDidEndEditingNotification"></constant>
  <constant name="NSControlTintDidChangeNotification"></constant>
  <constant name="NSConvertedDocumentAttribute"></constant>
  <constant name="NSCopyrightDocumentAttribute"></constant>
  <constant name="NSCreatesSortDescriptorBindingOption"></constant>
  <constant name="NSCreationTimeDocumentAttribute"></constant>
  <constant name="NSCriticalValueBinding"></constant>
  <constant name="NSCursorAttributeName"></constant>
  <constant name="NSCustomColorSpace"></constant>
  <constant name="NSDarkGray"></constant>
  <constant name="NSDataBinding"></constant>
  <constant name="NSDefaultAttributesDocumentOption"></constant>
  <constant name="NSDefaultTabIntervalDocumentAttribute"></constant>
  <constant name="NSDeletesObjectsOnRemoveBindingsOption"></constant>
  <constant name="NSDeviceBitsPerSample"></constant>
  <constant name="NSDeviceBlackColorSpace"></constant>
  <constant name="NSDeviceCMYKColorSpace"></constant>
  <constant name="NSDeviceColorSpaceName"></constant>
  <constant name="NSDeviceIsPrinter"></constant>
  <constant name="NSDeviceIsScreen"></constant>
  <constant name="NSDeviceRGBColorSpace" swt_gen="true"></constant>
  <constant name="NSDeviceResolution" swt_gen="true"></constant>
  <constant name="NSDeviceSize"></constant>
  <constant name="NSDeviceWhiteColorSpace"></constant>
  <constant name="NSDirectoryFileType"></constant>
  <constant name="NSDisplayNameBindingOption"></constant>
  <constant name="NSDisplayPatternBindingOption"></constant>
  <constant name="NSDisplayPatternTitleBinding"></constant>
  <constant name="NSDisplayPatternValueBinding"></constant>
  <constant name="NSDocFormatTextDocumentType"></constant>
  <constant name="NSDocumentEditedBinding"></constant>
  <constant name="NSDocumentTypeDocumentAttribute"></constant>
  <constant name="NSDocumentTypeDocumentOption"></constant>
  <constant name="NSDoubleClickArgumentBinding"></constant>
  <constant name="NSDoubleClickTargetBinding"></constant>
  <constant name="NSDragPboard"></constant>
  <constant name="NSDraggingException"></constant>
  <constant name="NSDrawerDidCloseNotification"></constant>
  <constant name="NSDrawerDidOpenNotification"></constant>
  <constant name="NSDrawerWillCloseNotification"></constant>
  <constant name="NSDrawerWillOpenNotification"></constant>
  <constant name="NSEditableBinding"></constant>
  <constant name="NSEditorDocumentAttribute"></constant>
  <constant name="NSEnabledBinding"></constant>
  <constant name="NSEventTrackingRunLoopMode"></constant>
  <constant name="NSExcludedElementsDocumentAttribute"></constant>
  <constant name="NSExcludedKeysBinding"></constant>
  <constant name="NSExpansionAttributeName"></constant>
  <constant name="NSFileContentsPboardType"></constant>
  <constant name="NSFilenamesPboardType" swt_gen="true"></constant>
  <constant name="NSFilesPromisePboardType"></constant>
  <constant name="NSFilesystemFileType"></constant>
  <constant name="NSFilterPredicateBinding"></constant>
  <constant name="NSFindPanelCaseInsensitiveSearch"></constant>
  <constant name="NSFindPanelSearchOptionsPboardType"></constant>
  <constant name="NSFindPanelSubstringMatch"></constant>
  <constant name="NSFindPboard"></constant>
  <constant name="NSFontAttributeName" swt_gen="true"></constant>
  <constant name="NSFontBinding"></constant>
  <constant name="NSFontBoldBinding"></constant>
  <constant name="NSFontCascadeListAttribute"></constant>
  <constant name="NSFontCharacterSetAttribute"></constant>
  <constant name="NSFontFaceAttribute"></constant>
  <constant name="NSFontFamilyAttribute"></constant>
  <constant name="NSFontFamilyNameBinding"></constant>
  <constant name="NSFontFeatureSelectorIdentifierKey"></constant>
  <constant name="NSFontFeatureSettingsAttribute"></constant>
  <constant name="NSFontFeatureTypeIdentifierKey"></constant>
  <constant name="NSFontFixedAdvanceAttribute"></constant>
  <constant name="NSFontIdentityMatrix"></constant>
  <constant name="NSFontItalicBinding"></constant>
  <constant name="NSFontMatrixAttribute"></constant>
  <constant name="NSFontNameAttribute"></constant>
  <constant name="NSFontNameBinding"></constant>
  <constant name="NSFontPboard"></constant>
  <constant name="NSFontPboardType"></constant>
  <constant name="NSFontSetChangedNotification"></constant>
  <constant name="NSFontSizeAttribute"></constant>
  <constant name="NSFontSizeBinding"></constant>
  <constant name="NSFontSlantTrait"></constant>
  <constant name="NSFontSymbolicTrait"></constant>
  <constant name="NSFontTraitsAttribute"></constant>
  <constant name="NSFontUnavailableException"></constant>
  <constant name="NSFontVariationAttribute"></constant>
  <constant name="NSFontVariationAxisDefaultValueKey"></constant>
  <constant name="NSFontVariationAxisIdentifierKey"></constant>
  <constant name="NSFontVariationAxisMaximumValueKey"></constant>
  <constant name="NSFontVariationAxisMinimumValueKey"></constant>
  <constant name="NSFontVariationAxisNameKey"></constant>
  <constant name="NSFontVisibleNameAttribute"></constant>
  <constant name="NSFontWeightTrait"></constant>
  <constant name="NSFontWidthTrait"></constant>
  <constant name="NSForegroundColorAttributeName" swt_gen="true"></constant>
  <constant name="NSFullScreenModeAllScreens"></constant>
  <constant name="NSFullScreenModeSetting"></constant>
  <constant name="NSFullScreenModeWindowLevel"></constant>
  <constant name="NSGeneralPboard"></constant>
  <constant name="NSGlyphInfoAttributeName"></constant>
  <constant name="NSGraphicsContextDestinationAttributeName"></constant>
  <constant name="NSGraphicsContextPDFFormat"></constant>
  <constant name="NSGraphicsContextPSFormat"></constant>
  <constant name="NSGraphicsContextRepresentationFormatAttributeName"></constant>
  <constant name="NSHTMLPboardType"></constant>
  <constant name="NSHTMLTextDocumentType"></constant>
  <constant name="NSHandlesContentAsCompoundValueBindingOption"></constant>
  <constant name="NSHeaderTitleBinding"></constant>
  <constant name="NSHiddenBinding"></constant>
  <constant name="NSHyphenationFactorDocumentAttribute"></constant>
  <constant name="NSIllegalSelectorException"></constant>
  <constant name="NSImageBinding"></constant>
  <constant name="NSImageCacheException"></constant>
  <constant name="NSImageColorSyncProfileData"></constant>
  <constant name="NSImageCompressionFactor"></constant>
  <constant name="NSImageCompressionMethod"></constant>
  <constant name="NSImageCurrentFrame"></constant>
  <constant name="NSImageCurrentFrameDuration"></constant>
  <constant name="NSImageDitherTransparency"></constant>
  <constant name="NSImageEXIFData"></constant>
  <constant name="NSImageFallbackBackgroundColor"></constant>
  <constant name="NSImageFrameCount"></constant>
  <constant name="NSImageGamma"></constant>
  <constant name="NSImageInterlaced"></constant>
  <constant name="NSImageLoopCount"></constant>
  <constant name="NSImageNameActionTemplate"></constant>
  <constant name="NSImageNameAddTemplate"></constant>
  <constant name="NSImageNameAdvanced"></constant>
  <constant name="NSImageNameBluetoothTemplate"></constant>
  <constant name="NSImageNameBonjour"></constant>
  <constant name="NSImageNameColorPanel"></constant>
  <constant name="NSImageNameColumnViewTemplate"></constant>
  <constant name="NSImageNameComputer"></constant>
  <constant name="NSImageNameDotMac"></constant>
  <constant name="NSImageNameEnterFullScreenTemplate"></constant>
  <constant name="NSImageNameEveryone"></constant>
  <constant name="NSImageNameExitFullScreenTemplate"></constant>
  <constant name="NSImageNameFlowViewTemplate"></constant>
  <constant name="NSImageNameFolderBurnable"></constant>
  <constant name="NSImageNameFolderSmart"></constant>
  <constant name="NSImageNameFollowLinkFreestandingTemplate"></constant>
  <constant name="NSImageNameFontPanel"></constant>
  <constant name="NSImageNameGoLeftTemplate"></constant>
  <constant name="NSImageNameGoRightTemplate"></constant>
  <constant name="NSImageNameIChatTheaterTemplate"></constant>
  <constant name="NSImageNameIconViewTemplate"></constant>
  <constant name="NSImageNameInfo"></constant>
  <constant name="NSImageNameInvalidDataFreestandingTemplate"></constant>
  <constant name="NSImageNameLeftFacingTriangleTemplate"></constant>
  <constant name="NSImageNameListViewTemplate"></constant>
  <constant name="NSImageNameLockLockedTemplate"></constant>
  <constant name="NSImageNameLockUnlockedTemplate"></constant>
  <constant name="NSImageNameMultipleDocuments"></constant>
  <constant name="NSImageNameNetwork"></constant>
  <constant name="NSImageNamePathTemplate"></constant>
  <constant name="NSImageNamePreferencesGeneral"></constant>
  <constant name="NSImageNameQuickLookTemplate"></constant>
  <constant name="NSImageNameRefreshFreestandingTemplate"></constant>
  <constant name="NSImageNameRefreshTemplate"></constant>
  <constant name="NSImageNameRemoveTemplate"></constant>
  <constant name="NSImageNameRevealFreestandingTemplate"></constant>
  <constant name="NSImageNameRightFacingTriangleTemplate"></constant>
  <constant name="NSImageNameSlideshowTemplate"></constant>
  <constant name="NSImageNameSmartBadgeTemplate"></constant>
  <constant name="NSImageNameStopProgressFreestandingTemplate"></constant>
  <constant name="NSImageNameStopProgressTemplate"></constant>
  <constant name="NSImageNameUser"></constant>
  <constant name="NSImageNameUserAccounts"></constant>
  <constant name="NSImageNameUserGroup"></constant>
  <constant name="NSImageProgressive"></constant>
  <constant name="NSImageRGBColorTable"></constant>
  <constant name="NSImageRepRegistryDidChangeNotification"></constant>
  <constant name="NSIncludedKeysBinding"></constant>
  <constant name="NSInitialKeyBinding"></constant>
  <constant name="NSInitialValueBinding"></constant>
  <constant name="NSInkTextPboardType"></constant>
  <constant name="NSInsertsNullPlaceholderBindingOption"></constant>
  <constant name="NSInterfaceStyleDefault"></constant>
  <constant name="NSInvokesSeparatelyWithArrayObjectsBindingOption"></constant>
  <constant name="NSIsIndeterminateBinding"></constant>
  <constant name="NSKernAttributeName"></constant>
  <constant name="NSKeywordsDocumentAttribute"></constant>
  <constant name="NSLabelBinding"></constant>
  <constant name="NSLeftMarginDocumentAttribute"></constant>
  <constant name="NSLigatureAttributeName"></constant>
  <constant name="NSLightGray"></constant>
  <constant name="NSLinkAttributeName" swt_gen="true"></constant>
  <constant name="NSLocalizedKeyDictionaryBinding"></constant>
  <constant name="NSMacSimpleTextDocumentType"></constant>
  <constant name="NSManagedObjectContextBinding"></constant>
  <constant name="NSMarkedClauseSegmentAttributeName"></constant>
  <constant name="NSMaxValueBinding"></constant>
  <constant name="NSMaxWidthBinding"></constant>
  <constant name="NSMaximumRecentsBinding"></constant>
  <constant name="NSMenuDidAddItemNotification"></constant>
  <constant name="NSMenuDidBeginTrackingNotification"></constant>
  <constant name="NSMenuDidChangeItemNotification"></constant>
  <constant name="NSMenuDidEndTrackingNotification"></constant>
  <constant name="NSMenuDidRemoveItemNotification"></constant>
  <constant name="NSMenuDidSendActionNotification"></constant>
  <constant name="NSMenuWillSendActionNotification"></constant>
  <constant name="NSMinValueBinding"></constant>
  <constant name="NSMinWidthBinding"></constant>
  <constant name="NSMixedStateImageBinding"></constant>
  <constant name="NSModalPanelRunLoopMode"></constant>
  <constant name="NSModificationTimeDocumentAttribute"></constant>
  <constant name="NSMultipleTextSelectionPboardType"></constant>
  <constant name="NSMultipleValuesMarker"></constant>
  <constant name="NSMultipleValuesPlaceholderBindingOption"></constant>
  <constant name="NSNamedColorSpace"></constant>
  <constant name="NSNibLoadingException"></constant>
  <constant name="NSNibOwner"></constant>
  <constant name="NSNibTopLevelObjects"></constant>
  <constant name="NSNoSelectionMarker"></constant>
  <constant name="NSNoSelectionPlaceholderBindingOption"></constant>
  <constant name="NSNotApplicableMarker"></constant>
  <constant name="NSNotApplicablePlaceholderBindingOption"></constant>
  <constant name="NSNullPlaceholderBindingOption"></constant>
  <constant name="NSObliquenessAttributeName"></constant>
  <constant name="NSObservedKeyPathKey"></constant>
  <constant name="NSObservedObjectKey"></constant>
  <constant name="NSOffStateImageBinding"></constant>
  <constant name="NSOfficeOpenXMLTextDocumentType"></constant>
  <constant name="NSOnStateImageBinding"></constant>
  <constant name="NSOpenDocumentTextDocumentType"></constant>
  <constant name="NSOptionsKey"></constant>
  <constant name="NSOutlineViewColumnDidMoveNotification"></constant>
  <constant name="NSOutlineViewColumnDidResizeNotification"></constant>
  <constant name="NSOutlineViewItemDidCollapseNotification"></constant>
  <constant name="NSOutlineViewItemDidExpandNotification"></constant>
  <constant name="NSOutlineViewItemWillCollapseNotification"></constant>
  <constant name="NSOutlineViewItemWillExpandNotification"></constant>
  <constant name="NSOutlineViewSelectionDidChangeNotification"></constant>
  <constant name="NSOutlineViewSelectionIsChangingNotification"></constant>
  <constant name="NSPDFPboardType"></constant>
  <constant name="NSPICTPboardType"></constant>
  <constant name="NSPPDIncludeNotFoundException"></constant>
  <constant name="NSPPDIncludeStackOverflowException"></constant>
  <constant name="NSPPDIncludeStackUnderflowException"></constant>
  <constant name="NSPPDParseException"></constant>
  <constant name="NSPaperSizeDocumentAttribute"></constant>
  <constant name="NSParagraphStyleAttributeName" swt_gen="true"></constant>
  <constant name="NSPasteboardCommunicationException"></constant>
  <constant name="NSPatternColorSpace"></constant>
  <constant name="NSPlainFileType"></constant>
  <constant name="NSPlainTextDocumentType"></constant>
  <constant name="NSPopUpButtonCellWillPopUpNotification"></constant>
  <constant name="NSPopUpButtonWillPopUpNotification"></constant>
  <constant name="NSPostScriptPboardType"></constant>
  <constant name="NSPredicateBinding"></constant>
  <constant name="NSPredicateFormatBindingOption"></constant>
  <constant name="NSPrefixSpacesDocumentAttribute"></constant>
  <constant name="NSPrintAllPages" swt_gen="true"></constant>
  <constant name="NSPrintBottomMargin"></constant>
  <constant name="NSPrintCancelJob"></constant>
  <constant name="NSPrintCopies" swt_gen="true"></constant>
  <constant name="NSPrintDetailedErrorReporting"></constant>
  <constant name="NSPrintFaxCoverSheetName"></constant>
  <constant name="NSPrintFaxHighResolution"></constant>
  <constant name="NSPrintFaxJob"></constant>
  <constant name="NSPrintFaxModem"></constant>
  <constant name="NSPrintFaxNumber"></constant>
  <constant name="NSPrintFaxReceiverNames"></constant>
  <constant name="NSPrintFaxReceiverNumbers"></constant>
  <constant name="NSPrintFaxReturnReceipt"></constant>
  <constant name="NSPrintFaxSendTime"></constant>
  <constant name="NSPrintFaxTrimPageEnds"></constant>
  <constant name="NSPrintFaxUseCoverSheet"></constant>
  <constant name="NSPrintFirstPage" swt_gen="true"></constant>
  <constant name="NSPrintFormName"></constant>
  <constant name="NSPrintHeaderAndFooter"></constant>
  <constant name="NSPrintHorizontalPagination"></constant>
  <constant name="NSPrintHorizontallyCentered"></constant>
  <constant name="NSPrintJobDisposition" swt_gen="true"></constant>
  <constant name="NSPrintJobFeatures"></constant>
  <constant name="NSPrintLastPage" swt_gen="true"></constant>
  <constant name="NSPrintLeftMargin"></constant>
  <constant name="NSPrintManualFeed"></constant>
  <constant name="NSPrintMustCollate" swt_gen="true"></constant>
  <constant name="NSPrintOperationExistsException"></constant>
  <constant name="NSPrintOrientation"></constant>
  <constant name="NSPrintPackageException"></constant>
  <constant name="NSPrintPagesAcross"></constant>
  <constant name="NSPrintPagesDown"></constant>
  <constant name="NSPrintPagesPerSheet"></constant>
  <constant name="NSPrintPanelAccessorySummaryItemDescriptionKey"></constant>
  <constant name="NSPrintPanelAccessorySummaryItemNameKey"></constant>
  <constant name="NSPrintPaperFeed"></constant>
  <constant name="NSPrintPaperName"></constant>
  <constant name="NSPrintPaperSize"></constant>
  <constant name="NSPrintPhotoJobStyleHint"></constant>
  <constant name="NSPrintPreviewJob" swt_gen="true"></constant>
  <constant name="NSPrintPrinter"></constant>
  <constant name="NSPrintPrinterName"></constant>
  <constant name="NSPrintReversePageOrder"></constant>
  <constant name="NSPrintRightMargin"></constant>
  <constant name="NSPrintSaveJob" swt_gen="true"></constant>
  <constant name="NSPrintSavePath" swt_gen="true"></constant>
  <constant name="NSPrintScalingFactor"></constant>
  <constant name="NSPrintSpoolJob" swt_gen="true"></constant>
  <constant name="NSPrintTime"></constant>
  <constant name="NSPrintTopMargin"></constant>
  <constant name="NSPrintVerticalPagination"></constant>
  <constant name="NSPrintVerticallyCentered"></constant>
  <constant name="NSPrintingCommunicationException"></constant>
  <constant name="NSRTFDPboardType"></constant>
  <constant name="NSRTFDTextDocumentType"></constant>
  <constant name="NSRTFPboardType" swt_gen="true"></constant>
  <constant name="NSRTFPropertyStackOverflowException"></constant>
  <constant name="NSRTFTextDocumentType"></constant>
  <constant name="NSRaisesForNotApplicableKeysBindingOption"></constant>
  <constant name="NSReadOnlyDocumentAttribute"></constant>
  <constant name="NSRecentSearchesBinding"></constant>
  <constant name="NSRepresentedFilenameBinding"></constant>
  <constant name="NSRightMarginDocumentAttribute"></constant>
  <constant name="NSRowHeightBinding"></constant>
  <constant name="NSRuleEditorPredicateComparisonModifier"></constant>
  <constant name="NSRuleEditorPredicateCompoundType"></constant>
  <constant name="NSRuleEditorPredicateCustomSelector"></constant>
  <constant name="NSRuleEditorPredicateLeftExpression"></constant>
  <constant name="NSRuleEditorPredicateOperatorType"></constant>
  <constant name="NSRuleEditorPredicateOptions"></constant>
  <constant name="NSRuleEditorPredicateRightExpression"></constant>
  <constant name="NSRuleEditorRowsDidChangeNotification"></constant>
  <constant name="NSRulerPboard"></constant>
  <constant name="NSRulerPboardType"></constant>
  <constant name="NSSelectedIdentifierBinding"></constant>
  <constant name="NSSelectedIndexBinding"></constant>
  <constant name="NSSelectedLabelBinding"></constant>
  <constant name="NSSelectedObjectBinding"></constant>
  <constant name="NSSelectedObjectsBinding"></constant>
  <constant name="NSSelectedTagBinding"></constant>
  <constant name="NSSelectedValueBinding"></constant>
  <constant name="NSSelectedValuesBinding"></constant>
  <constant name="NSSelectionIndexPathsBinding"></constant>
  <constant name="NSSelectionIndexesBinding"></constant>
  <constant name="NSSelectorNameBindingOption"></constant>
  <constant name="NSSelectsAllWhenSettingContentBindingOption"></constant>
  <constant name="NSShadowAttributeName"></constant>
  <constant name="NSShellCommandFileType"></constant>
  <constant name="NSSortDescriptorsBinding"></constant>
  <constant name="NSSoundPboardType"></constant>
  <constant name="NSSpeechCharacterModeProperty"></constant>
  <constant name="NSSpeechCommandDelimiterProperty"></constant>
  <constant name="NSSpeechCommandPrefix"></constant>
  <constant name="NSSpeechCommandSuffix"></constant>
  <constant name="NSSpeechCurrentVoiceProperty"></constant>
  <constant name="NSSpeechDictionaryAbbreviations"></constant>
  <constant name="NSSpeechDictionaryEntryPhonemes"></constant>
  <constant name="NSSpeechDictionaryEntrySpelling"></constant>
  <constant name="NSSpeechDictionaryLocaleIdentifier"></constant>
  <constant name="NSSpeechDictionaryModificationDate"></constant>
  <constant name="NSSpeechDictionaryPronunciations"></constant>
  <constant name="NSSpeechErrorCount"></constant>
  <constant name="NSSpeechErrorNewestCharacterOffset"></constant>
  <constant name="NSSpeechErrorNewestCode"></constant>
  <constant name="NSSpeechErrorOldestCharacterOffset"></constant>
  <constant name="NSSpeechErrorOldestCode"></constant>
  <constant name="NSSpeechErrorsProperty"></constant>
  <constant name="NSSpeechInputModeProperty"></constant>
  <constant name="NSSpeechModeLiteral"></constant>
  <constant name="NSSpeechModeNormal"></constant>
  <constant name="NSSpeechModePhoneme"></constant>
  <constant name="NSSpeechModeText"></constant>
  <constant name="NSSpeechNumberModeProperty"></constant>
  <constant name="NSSpeechOutputToFileURLProperty"></constant>
  <constant name="NSSpeechPhonemeInfoExample"></constant>
  <constant name="NSSpeechPhonemeInfoHiliteEnd"></constant>
  <constant name="NSSpeechPhonemeInfoHiliteStart"></constant>
  <constant name="NSSpeechPhonemeInfoOpcode"></constant>
  <constant name="NSSpeechPhonemeInfoSymbol"></constant>
  <constant name="NSSpeechPhonemeSymbolsProperty"></constant>
  <constant name="NSSpeechPitchBaseProperty"></constant>
  <constant name="NSSpeechPitchModProperty"></constant>
  <constant name="NSSpeechRateProperty"></constant>
  <constant name="NSSpeechRecentSyncProperty"></constant>
  <constant name="NSSpeechResetProperty"></constant>
  <constant name="NSSpeechStatusNumberOfCharactersLeft"></constant>
  <constant name="NSSpeechStatusOutputBusy"></constant>
  <constant name="NSSpeechStatusOutputPaused"></constant>
  <constant name="NSSpeechStatusPhonemeCode"></constant>
  <constant name="NSSpeechStatusProperty"></constant>
  <constant name="NSSpeechSynthesizerInfoIdentifier"></constant>
  <constant name="NSSpeechSynthesizerInfoProperty"></constant>
  <constant name="NSSpeechSynthesizerInfoVersion"></constant>
  <constant name="NSSpeechVolumeProperty"></constant>
  <constant name="NSSpellingStateAttributeName"></constant>
  <constant name="NSSplitViewDidResizeSubviewsNotification"></constant>
  <constant name="NSSplitViewWillResizeSubviewsNotification"></constant>
  <constant name="NSStrikethroughColorAttributeName" swt_gen="true"></constant>
  <constant name="NSStrikethroughStyleAttributeName" swt_gen="true"></constant>
  <constant name="NSStringPboardType" swt_gen="true"></constant>
  <constant name="NSStrokeColorAttributeName"></constant>
  <constant name="NSStrokeWidthAttributeName"></constant>
  <constant name="NSSubjectDocumentAttribute"></constant>
  <constant name="NSSuperscriptAttributeName"></constant>
  <constant name="NSSystemColorsDidChangeNotification"></constant>
  <constant name="NSTIFFException"></constant>
  <constant name="NSTIFFPboardType" swt_gen="true"></constant>
  <constant name="NSTabColumnTerminatorsAttributeName"></constant>
  <constant name="NSTableViewColumnDidMoveNotification"></constant>
  <constant name="NSTableViewColumnDidResizeNotification"></constant>
  <constant name="NSTableViewSelectionDidChangeNotification"></constant>
  <constant name="NSTableViewSelectionIsChangingNotification"></constant>
  <constant name="NSTabularTextPboardType"></constant>
  <constant name="NSTargetBinding"></constant>
  <constant name="NSTextColorBinding"></constant>
  <constant name="NSTextDidBeginEditingNotification"></constant>
  <constant name="NSTextDidChangeNotification"></constant>
  <constant name="NSTextDidEndEditingNotification"></constant>
  <constant name="NSTextEncodingNameDocumentAttribute"></constant>
  <constant name="NSTextEncodingNameDocumentOption"></constant>
  <constant name="NSTextLineTooLongException"></constant>
  <constant name="NSTextNoSelectionException"></constant>
  <constant name="NSTextReadException"></constant>
  <constant name="NSTextSizeMultiplierDocumentOption"></constant>
  <constant name="NSTextStorageDidProcessEditingNotification"></constant>
  <constant name="NSTextStorageWillProcessEditingNotification"></constant>
  <constant name="NSTextViewDidChangeSelectionNotification"></constant>
  <constant name="NSTextViewDidChangeTypingAttributesNotification"></constant>
  <constant name="NSTextViewWillChangeNotifyingTextViewNotification"></constant>
  <constant name="NSTextWriteException"></constant>
  <constant name="NSTimeoutDocumentOption"></constant>
  <constant name="NSTitleBinding"></constant>
  <constant name="NSTitleDocumentAttribute"></constant>
  <constant name="NSToolTipAttributeName"></constant>
  <constant name="NSToolTipBinding"></constant>
  <constant name="NSToolbarCustomizeToolbarItemIdentifier"></constant>
  <constant name="NSToolbarDidRemoveItemNotification"></constant>
  <constant name="NSToolbarFlexibleSpaceItemIdentifier"></constant>
  <constant name="NSToolbarPrintItemIdentifier"></constant>
  <constant name="NSToolbarSeparatorItemIdentifier"></constant>
  <constant name="NSToolbarShowColorsItemIdentifier"></constant>
  <constant name="NSToolbarShowFontsItemIdentifier"></constant>
  <constant name="NSToolbarSpaceItemIdentifier"></constant>
  <constant name="NSToolbarWillAddItemNotification"></constant>
  <constant name="NSTopMarginDocumentAttribute"></constant>
  <constant name="NSTransparentBinding"></constant>
  <constant name="NSTypedStreamVersionException"></constant>
  <constant name="NSURLPboardType" swt_gen="true"></constant>
  <constant name="NSUnderlineByWordMask"></constant>
  <constant name="NSUnderlineColorAttributeName" swt_gen="true"></constant>
  <constant name="NSUnderlineStrikethroughMask"></constant>
  <constant name="NSUnderlineStyleAttributeName" swt_gen="true"></constant>
  <constant name="NSVCardPboardType"></constant>
  <constant name="NSValidatesImmediatelyBindingOption"></constant>
  <constant name="NSValueBinding"></constant>
  <constant name="NSValuePathBinding"></constant>
  <constant name="NSValueTransformerBindingOption"></constant>
  <constant name="NSValueTransformerNameBindingOption"></constant>
  <constant name="NSValueURLBinding"></constant>
  <constant name="NSViewAnimationEffectKey"></constant>
  <constant name="NSViewAnimationEndFrameKey"></constant>
  <constant name="NSViewAnimationFadeInEffect"></constant>
  <constant name="NSViewAnimationFadeOutEffect"></constant>
  <constant name="NSViewAnimationStartFrameKey"></constant>
  <constant name="NSViewAnimationTargetKey"></constant>
  <constant name="NSViewBoundsDidChangeNotification"></constant>
  <constant name="NSViewDidUpdateTrackingAreasNotification"></constant>
  <constant name="NSViewFocusDidChangeNotification"></constant>
  <constant name="NSViewFrameDidChangeNotification"></constant>
  <constant name="NSViewGlobalFrameDidChangeNotification"></constant>
  <constant name="NSViewModeDocumentAttribute"></constant>
  <constant name="NSViewSizeDocumentAttribute"></constant>
  <constant name="NSViewZoomDocumentAttribute"></constant>
  <constant name="NSVisibleBinding"></constant>
  <constant name="NSVoiceAge"></constant>
  <constant name="NSVoiceDemoText"></constant>
  <constant name="NSVoiceGender"></constant>
  <constant name="NSVoiceGenderFemale"></constant>
  <constant name="NSVoiceGenderMale"></constant>
  <constant name="NSVoiceGenderNeuter"></constant>
  <constant name="NSVoiceIdentifier"></constant>
  <constant name="NSVoiceIndividuallySpokenCharacters"></constant>
  <constant name="NSVoiceLocaleIdentifier"></constant>
  <constant name="NSVoiceName"></constant>
  <constant name="NSVoiceSupportedCharacters"></constant>
  <constant name="NSWarningValueBinding"></constant>
  <constant name="NSWebArchiveTextDocumentType"></constant>
  <constant name="NSWebPreferencesDocumentOption"></constant>
  <constant name="NSWebResourceLoadDelegateDocumentOption"></constant>
  <constant name="NSWhite"></constant>
  <constant name="NSWidthBinding"></constant>
  <constant name="NSWindowDidBecomeKeyNotification"></constant>
  <constant name="NSWindowDidBecomeMainNotification"></constant>
  <constant name="NSWindowDidChangeScreenNotification"></constant>
  <constant name="NSWindowDidChangeScreenProfileNotification"></constant>
  <constant name="NSWindowDidDeminiaturizeNotification"></constant>
  <constant name="NSWindowDidEndSheetNotification"></constant>
  <constant name="NSWindowDidExposeNotification"></constant>
  <constant name="NSWindowDidMiniaturizeNotification"></constant>
  <constant name="NSWindowDidMoveNotification"></constant>
  <constant name="NSWindowDidResignKeyNotification"></constant>
  <constant name="NSWindowDidResignMainNotification"></constant>
  <constant name="NSWindowDidResizeNotification"></constant>
  <constant name="NSWindowDidUpdateNotification"></constant>
  <constant name="NSWindowServerCommunicationException"></constant>
  <constant name="NSWindowWillBeginSheetNotification"></constant>
  <constant name="NSWindowWillCloseNotification"></constant>
  <constant name="NSWindowWillMiniaturizeNotification"></constant>
  <constant name="NSWindowWillMoveNotification"></constant>
  <constant name="NSWordMLTextDocumentType"></constant>
  <constant name="NSWordTablesReadException"></constant>
  <constant name="NSWordTablesWriteException"></constant>
  <constant name="NSWorkspaceCompressOperation"></constant>
  <constant name="NSWorkspaceCopyOperation"></constant>
  <constant name="NSWorkspaceDecompressOperation"></constant>
  <constant name="NSWorkspaceDecryptOperation"></constant>
  <constant name="NSWorkspaceDestroyOperation"></constant>
  <constant name="NSWorkspaceDidLaunchApplicationNotification"></constant>
  <constant name="NSWorkspaceDidMountNotification"></constant>
  <constant name="NSWorkspaceDidPerformFileOperationNotification"></constant>
  <constant name="NSWorkspaceDidTerminateApplicationNotification"></constant>
  <constant name="NSWorkspaceDidUnmountNotification"></constant>
  <constant name="NSWorkspaceDidWakeNotification"></constant>
  <constant name="NSWorkspaceDuplicateOperation"></constant>
  <constant name="NSWorkspaceEncryptOperation"></constant>
  <constant name="NSWorkspaceLinkOperation"></constant>
  <constant name="NSWorkspaceMoveOperation"></constant>
  <constant name="NSWorkspaceRecycleOperation"></constant>
  <constant name="NSWorkspaceSessionDidBecomeActiveNotification"></constant>
  <constant name="NSWorkspaceSessionDidResignActiveNotification"></constant>
  <constant name="NSWorkspaceWillLaunchApplicationNotification"></constant>
  <constant name="NSWorkspaceWillPowerOffNotification"></constant>
  <constant name="NSWorkspaceWillSleepNotification"></constant>
  <constant name="NSWorkspaceWillUnmountNotification"></constant>
  <enum name="NSAWTEventType" swt_gen="true"></enum>
  <enum name="NSAboveBottom" swt_gen="true"></enum>
  <enum name="NSAboveTop" swt_gen="true"></enum>
  <enum name="NSAddTraitFontAction" swt_gen="true"></enum>
  <enum name="NSAdobeCNS1CharacterCollection" swt_gen="true"></enum>
  <enum name="NSAdobeGB1CharacterCollection" swt_gen="true"></enum>
  <enum name="NSAdobeJapan1CharacterCollection" swt_gen="true"></enum>
  <enum name="NSAdobeJapan2CharacterCollection" swt_gen="true"></enum>
  <enum name="NSAdobeKorea1CharacterCollection" swt_gen="true"></enum>
  <enum name="NSAlertAlternateReturn" swt_gen="true"></enum>
  <enum name="NSAlertDefaultReturn" swt_gen="true"></enum>
  <enum name="NSAlertErrorReturn" swt_gen="true"></enum>
  <enum name="NSAlertFirstButtonReturn" swt_gen="true"></enum>
  <enum name="NSAlertOtherReturn" swt_gen="true"></enum>
  <enum name="NSAlertSecondButtonReturn" swt_gen="true"></enum>
  <enum name="NSAlertThirdButtonReturn" swt_gen="true"></enum>
  <enum name="NSAllScrollerParts" swt_gen="true"></enum>
  <enum name="NSAlphaFirstBitmapFormat" swt_gen="true"></enum>
  <enum name="NSAlphaNonpremultipliedBitmapFormat" swt_gen="true"></enum>
  <enum name="NSAlphaShiftKeyMask" swt_gen="true"></enum>
  <enum name="NSAlternateKeyMask" swt_gen="true"></enum>
  <enum name="NSAnimationBlocking" swt_gen="true"></enum>
  <enum name="NSAnimationEaseIn" swt_gen="true"></enum>
  <enum name="NSAnimationEaseInOut" swt_gen="true"></enum>
  <enum name="NSAnimationEaseOut" swt_gen="true"></enum>
  <enum name="NSAnimationEffectDisappearingItemDefault" swt_gen="true"></enum>
  <enum name="NSAnimationEffectPoof" swt_gen="true"></enum>
  <enum name="NSAnimationLinear" swt_gen="true"></enum>
  <enum name="NSAnimationNonblocking" swt_gen="true"></enum>
  <enum name="NSAnimationNonblockingThreaded" swt_gen="true"></enum>
  <enum name="NSAnyEventMask" swt_gen="true"></enum>
  <enum name="NSAnyType" swt_gen="true"></enum>
  <enum name="NSAppKitDefined" swt_gen="true"></enum>
  <enum name="NSAppKitDefinedMask" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumber10_0" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumber10_1" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumber10_2" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumber10_2_3" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumber10_3" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumber10_3_2" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumber10_3_3" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumber10_3_5" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumber10_3_7" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumber10_3_9" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumber10_4" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumberWithColumnResizingBrowser" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumberWithContinuousScrollingBrowser" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumberWithCursorSizeSupport" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumberWithCustomSheetPosition" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumberWithDirectionalTabs" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumberWithPatternColorLeakFix" swt_gen="true"></enum>
  <enum name="NSApplicationActivatedEventType" swt_gen="true"></enum>
  <enum name="NSApplicationDeactivatedEventType" swt_gen="true"></enum>
  <enum name="NSApplicationDefined" swt_gen="true"></enum>
  <enum name="NSApplicationDefinedMask" swt_gen="true"></enum>
  <enum name="NSApplicationDelegateReplyCancel" swt_gen="true"></enum>
  <enum name="NSApplicationDelegateReplyFailure" swt_gen="true"></enum>
  <enum name="NSApplicationDelegateReplySuccess" swt_gen="true"></enum>
  <enum name="NSAscendingPageOrder" swt_gen="true"></enum>
  <enum name="NSAtBottom" swt_gen="true"></enum>
  <enum name="NSAtTop" swt_gen="true"></enum>
  <enum name="NSAttachmentCharacter" swt_gen="true"></enum>
  <enum name="NSAutoPagination" swt_gen="true"></enum>
  <enum name="NSAutosaveOperation" swt_gen="true"></enum>
  <enum name="NSBMPFileType" swt_gen="true"></enum>
  <enum name="NSBackTabCharacter" swt_gen="true"></enum>
  <enum name="NSBackgroundStyleDark" swt_gen="true"></enum>
  <enum name="NSBackgroundStyleLight" swt_gen="true"></enum>
  <enum name="NSBackgroundStyleLowered" swt_gen="true"></enum>
  <enum name="NSBackgroundStyleRaised" swt_gen="true"></enum>
  <enum name="NSBackgroundTab" swt_gen="true"></enum>
  <enum name="NSBackingStoreBuffered" swt_gen="true"></enum>
  <enum name="NSBackingStoreNonretained" swt_gen="true"></enum>
  <enum name="NSBackingStoreRetained" swt_gen="true"></enum>
  <enum name="NSBackspaceCharacter" swt_gen="true"></enum>
  <enum name="NSBacktabTextMovement" swt_gen="true"></enum>
  <enum name="NSBeginFunctionKey" swt_gen="true"></enum>
  <enum name="NSBelowBottom" swt_gen="true"></enum>
  <enum name="NSBelowTop" swt_gen="true"></enum>
  <enum name="NSBevelLineJoinStyle" swt_gen="true"></enum>
  <enum name="NSBezelBorder" swt_gen="true"></enum>
  <enum name="NSBlueControlTint" swt_gen="true"></enum>
  <enum name="NSBoldFontMask" swt_gen="true"></enum>
  <enum name="NSBorderlessWindowMask" swt_gen="true"></enum>
  <enum name="NSBottomTabsBezelBorder" swt_gen="true"></enum>
  <enum name="NSBoxCustom" swt_gen="true"></enum>
  <enum name="NSBoxOldStyle" swt_gen="true"></enum>
  <enum name="NSBoxPrimary" swt_gen="true"></enum>
  <enum name="NSBoxSecondary" swt_gen="true"></enum>
  <enum name="NSBoxSeparator" swt_gen="true"></enum>
  <enum name="NSBreakFunctionKey" swt_gen="true"></enum>
  <enum name="NSBrowserAutoColumnResizing" swt_gen="true"></enum>
  <enum name="NSBrowserDropAbove" swt_gen="true"></enum>
  <enum name="NSBrowserDropOn" swt_gen="true"></enum>
  <enum name="NSBrowserNoColumnResizing" swt_gen="true"></enum>
  <enum name="NSBrowserUserColumnResizing" swt_gen="true"></enum>
  <enum name="NSButtLineCapStyle" swt_gen="true"></enum>
  <enum name="NSCMYKColorSpaceModel" swt_gen="true"></enum>
  <enum name="NSCMYKModeColorPanel" swt_gen="true"></enum>
  <enum name="NSCancelButton" swt_gen="true"></enum>
  <enum name="NSCancelTextMovement" swt_gen="true"></enum>
  <enum name="NSCarriageReturnCharacter" swt_gen="true"></enum>
  <enum name="NSCellAllowsMixedState" swt_gen="true"></enum>
  <enum name="NSCellChangesContents" swt_gen="true"></enum>
  <enum name="NSCellDisabled" swt_gen="true"></enum>
  <enum name="NSCellEditable" swt_gen="true"></enum>
  <enum name="NSCellHasImageHorizontal" swt_gen="true"></enum>
  <enum name="NSCellHasImageOnLeftOrBottom" swt_gen="true"></enum>
  <enum name="NSCellHasOverlappingImage" swt_gen="true"></enum>
  <enum name="NSCellHighlighted" swt_gen="true"></enum>
  <enum name="NSCellHitContentArea" swt_gen="true"></enum>
  <enum name="NSCellHitEditableTextArea" swt_gen="true"></enum>
  <enum name="NSCellHitNone" swt_gen="true"></enum>
  <enum name="NSCellHitTrackableArea" swt_gen="true"></enum>
  <enum name="NSCellIsBordered" swt_gen="true"></enum>
  <enum name="NSCellIsInsetButton" swt_gen="true"></enum>
  <enum name="NSCellLightsByBackground" swt_gen="true"></enum>
  <enum name="NSCellLightsByContents" swt_gen="true"></enum>
  <enum name="NSCellLightsByGray" swt_gen="true"></enum>
  <enum name="NSCellState" swt_gen="true"></enum>
  <enum name="NSCenterTabStopType" swt_gen="true"></enum>
  <enum name="NSCenterTextAlignment" swt_gen="true"></enum>
  <enum name="NSChangeAutosaved" swt_gen="true"></enum>
  <enum name="NSChangeBackgroundCell" swt_gen="true"></enum>
  <enum name="NSChangeBackgroundCellMask" swt_gen="true"></enum>
  <enum name="NSChangeCleared" swt_gen="true"></enum>
  <enum name="NSChangeDone" swt_gen="true"></enum>
  <enum name="NSChangeGrayCell" swt_gen="true"></enum>
  <enum name="NSChangeGrayCellMask" swt_gen="true"></enum>
  <enum name="NSChangeReadOtherContents" swt_gen="true"></enum>
  <enum name="NSChangeRedone" swt_gen="true"></enum>
  <enum name="NSChangeUndone" swt_gen="true"></enum>
  <enum name="NSCircularBezelStyle" swt_gen="true"></enum>
  <enum name="NSCircularSlider" swt_gen="true"></enum>
  <enum name="NSClearControlTint" swt_gen="true"></enum>
  <enum name="NSClearDisplayFunctionKey" swt_gen="true"></enum>
  <enum name="NSClearLineFunctionKey" swt_gen="true"></enum>
  <enum name="NSClipPagination" swt_gen="true"></enum>
  <enum name="NSClockAndCalendarDatePickerStyle" swt_gen="true"></enum>
  <enum name="NSClosableWindowMask" swt_gen="true"></enum>
  <enum name="NSClosePathBezierPathElement" swt_gen="true"></enum>
  <enum name="NSColorListModeColorPanel" swt_gen="true"></enum>
  <enum name="NSColorPanelAllModesMask" swt_gen="true"></enum>
  <enum name="NSColorPanelCMYKModeMask" swt_gen="true"></enum>
  <enum name="NSColorPanelColorListModeMask" swt_gen="true"></enum>
  <enum name="NSColorPanelCrayonModeMask" swt_gen="true"></enum>
  <enum name="NSColorPanelCustomPaletteModeMask" swt_gen="true"></enum>
  <enum name="NSColorPanelGrayModeMask" swt_gen="true"></enum>
  <enum name="NSColorPanelHSBModeMask" swt_gen="true"></enum>
  <enum name="NSColorPanelRGBModeMask" swt_gen="true"></enum>
  <enum name="NSColorPanelWheelModeMask" swt_gen="true"></enum>
  <enum name="NSColorRenderingIntentAbsoluteColorimetric" swt_gen="true"></enum>
  <enum name="NSColorRenderingIntentDefault" swt_gen="true"></enum>
  <enum name="NSColorRenderingIntentPerceptual" swt_gen="true"></enum>
  <enum name="NSColorRenderingIntentRelativeColorimetric" swt_gen="true"></enum>
  <enum name="NSColorRenderingIntentSaturation" swt_gen="true"></enum>
  <enum name="NSCommandKeyMask" swt_gen="true"></enum>
  <enum name="NSCompositeClear" swt_gen="true"></enum>
  <enum name="NSCompositeCopy" swt_gen="true"></enum>
  <enum name="NSCompositeDestinationAtop" swt_gen="true"></enum>
  <enum name="NSCompositeDestinationIn" swt_gen="true"></enum>
  <enum name="NSCompositeDestinationOut" swt_gen="true"></enum>
  <enum name="NSCompositeDestinationOver" swt_gen="true"></enum>
  <enum name="NSCompositeHighlight" swt_gen="true"></enum>
  <enum name="NSCompositePlusDarker" swt_gen="true"></enum>
  <enum name="NSCompositePlusLighter" swt_gen="true"></enum>
  <enum name="NSCompositeSourceAtop" swt_gen="true"></enum>
  <enum name="NSCompositeSourceIn" swt_gen="true"></enum>
  <enum name="NSCompositeSourceOut" swt_gen="true"></enum>
  <enum name="NSCompositeSourceOver" swt_gen="true"></enum>
  <enum name="NSCompositeXOR" swt_gen="true"></enum>
  <enum name="NSCompressedFontMask" swt_gen="true"></enum>
  <enum name="NSCondensedFontMask" swt_gen="true"></enum>
  <enum name="NSContentsCellMask" swt_gen="true"></enum>
  <enum name="NSContinuousCapacityLevelIndicatorStyle" swt_gen="true"></enum>
  <enum name="NSControlGlyph" swt_gen="true"></enum>
  <enum name="NSControlKeyMask" swt_gen="true"></enum>
  <enum name="NSCrayonModeColorPanel" swt_gen="true"></enum>
  <enum name="NSCriticalAlertStyle" swt_gen="true"></enum>
  <enum name="NSCriticalRequest" swt_gen="true"></enum>
  <enum name="NSCursorPointingDevice" swt_gen="true"></enum>
  <enum name="NSCursorUpdate" swt_gen="true"></enum>
  <enum name="NSCursorUpdateMask" swt_gen="true"></enum>
  <enum name="NSCurveToBezierPathElement" swt_gen="true"></enum>
  <enum name="NSCustomPaletteModeColorPanel" swt_gen="true"></enum>
  <enum name="NSDecimalTabStopType" swt_gen="true"></enum>
  <enum name="NSDefaultControlTint" swt_gen="true"></enum>
  <enum name="NSDefaultTokenStyle" swt_gen="true"></enum>
  <enum name="NSDeleteCharFunctionKey" swt_gen="true"></enum>
  <enum name="NSDeleteCharacter" swt_gen="true"></enum>
  <enum name="NSDeleteFunctionKey" swt_gen="true"></enum>
  <enum name="NSDeleteLineFunctionKey" swt_gen="true"></enum>
  <enum name="NSDescendingPageOrder" swt_gen="true"></enum>
  <enum name="NSDeviceIndependentModifierFlagsMask" swt_gen="true"></enum>
  <enum name="NSDeviceNColorSpaceModel" swt_gen="true"></enum>
  <enum name="NSDirectSelection" swt_gen="true"></enum>
  <enum name="NSDisclosureBezelStyle" swt_gen="true"></enum>
  <enum name="NSDiscreteCapacityLevelIndicatorStyle" swt_gen="true"></enum>
  <enum name="NSDisplayWindowRunLoopOrdering" swt_gen="true"></enum>
  <enum name="NSDocModalWindowMask" swt_gen="true"></enum>
  <enum name="NSDockWindowLevel" swt_gen="true"></enum>
  <enum name="NSDoubleType" swt_gen="true"></enum>
  <enum name="NSDownArrowFunctionKey" swt_gen="true"></enum>
  <enum name="NSDownTextMovement" swt_gen="true"></enum>
  <enum name="NSDragOperationAll" swt_gen="true"></enum>
  <enum name="NSDragOperationAll_Obsolete" swt_gen="true"></enum>
  <enum name="NSDragOperationCopy" swt_gen="true"></enum>
  <enum name="NSDragOperationDelete" swt_gen="true"></enum>
  <enum name="NSDragOperationEvery" swt_gen="true"></enum>
  <enum name="NSDragOperationGeneric" swt_gen="true"></enum>
  <enum name="NSDragOperationLink" swt_gen="true"></enum>
  <enum name="NSDragOperationMove" swt_gen="true"></enum>
  <enum name="NSDragOperationNone" swt_gen="true"></enum>
  <enum name="NSDragOperationPrivate" swt_gen="true"></enum>
  <enum name="NSDrawerClosedState" swt_gen="true"></enum>
  <enum name="NSDrawerClosingState" swt_gen="true"></enum>
  <enum name="NSDrawerOpenState" swt_gen="true"></enum>
  <enum name="NSDrawerOpeningState" swt_gen="true"></enum>
  <enum name="NSEndFunctionKey" swt_gen="true"></enum>
  <enum name="NSEnterCharacter" swt_gen="true"></enum>
  <enum name="NSEraDatePickerElementFlag" swt_gen="true"></enum>
  <enum name="NSEraserPointingDevice" swt_gen="true"></enum>
  <enum name="NSEvenOddWindingRule" swt_gen="true"></enum>
  <enum name="NSExclude10_4ElementsIconCreationOption" swt_gen="true"></enum>
  <enum name="NSExcludeQuickDrawElementsIconCreationOption" swt_gen="true"></enum>
  <enum name="NSExecuteFunctionKey" swt_gen="true"></enum>
  <enum name="NSExpandedFontMask" swt_gen="true"></enum>
  <enum name="NSF10FunctionKey" swt_gen="true"></enum>
  <enum name="NSF11FunctionKey" swt_gen="true"></enum>
  <enum name="NSF12FunctionKey" swt_gen="true"></enum>
  <enum name="NSF13FunctionKey" swt_gen="true"></enum>
  <enum name="NSF14FunctionKey" swt_gen="true"></enum>
  <enum name="NSF15FunctionKey" swt_gen="true"></enum>
  <enum name="NSF16FunctionKey" swt_gen="true"></enum>
  <enum name="NSF17FunctionKey" swt_gen="true"></enum>
  <enum name="NSF18FunctionKey" swt_gen="true"></enum>
  <enum name="NSF19FunctionKey" swt_gen="true"></enum>
  <enum name="NSF1FunctionKey" swt_gen="true"></enum>
  <enum name="NSF20FunctionKey" swt_gen="true"></enum>
  <enum name="NSF21FunctionKey" swt_gen="true"></enum>
  <enum name="NSF22FunctionKey" swt_gen="true"></enum>
  <enum name="NSF23FunctionKey" swt_gen="true"></enum>
  <enum name="NSF24FunctionKey" swt_gen="true"></enum>
  <enum name="NSF25FunctionKey" swt_gen="true"></enum>
  <enum name="NSF26FunctionKey" swt_gen="true"></enum>
  <enum name="NSF27FunctionKey" swt_gen="true"></enum>
  <enum name="NSF28FunctionKey" swt_gen="true"></enum>
  <enum name="NSF29FunctionKey" swt_gen="true"></enum>
  <enum name="NSF2FunctionKey" swt_gen="true"></enum>
  <enum name="NSF30FunctionKey" swt_gen="true"></enum>
  <enum name="NSF31FunctionKey" swt_gen="true"></enum>
  <enum name="NSF32FunctionKey" swt_gen="true"></enum>
  <enum name="NSF33FunctionKey" swt_gen="true"></enum>
  <enum name="NSF34FunctionKey" swt_gen="true"></enum>
  <enum name="NSF35FunctionKey" swt_gen="true"></enum>
  <enum name="NSF3FunctionKey" swt_gen="true"></enum>
  <enum name="NSF4FunctionKey" swt_gen="true"></enum>
  <enum name="NSF5FunctionKey" swt_gen="true"></enum>
  <enum name="NSF6FunctionKey" swt_gen="true"></enum>
  <enum name="NSF7FunctionKey" swt_gen="true"></enum>
  <enum name="NSF8FunctionKey" swt_gen="true"></enum>
  <enum name="NSF9FunctionKey" swt_gen="true"></enum>
  <enum name="NSFPCurrentField" swt_gen="true"></enum>
  <enum name="NSFPPreviewButton" swt_gen="true"></enum>
  <enum name="NSFPPreviewField" swt_gen="true"></enum>
  <enum name="NSFPRevertButton" swt_gen="true"></enum>
  <enum name="NSFPSetButton" swt_gen="true"></enum>
  <enum name="NSFPSizeField" swt_gen="true"></enum>
  <enum name="NSFPSizeTitle" swt_gen="true"></enum>
  <enum name="NSFileHandlingPanelCancelButton" swt_gen="true"></enum>
  <enum name="NSFileHandlingPanelOKButton" swt_gen="true"></enum>
  <enum name="NSFindFunctionKey" swt_gen="true"></enum>
  <enum name="NSFindPanelActionNext" swt_gen="true"></enum>
  <enum name="NSFindPanelActionPrevious" swt_gen="true"></enum>
  <enum name="NSFindPanelActionReplace" swt_gen="true"></enum>
  <enum name="NSFindPanelActionReplaceAll" swt_gen="true"></enum>
  <enum name="NSFindPanelActionReplaceAllInSelection" swt_gen="true"></enum>
  <enum name="NSFindPanelActionReplaceAndFind" swt_gen="true"></enum>
  <enum name="NSFindPanelActionSelectAll" swt_gen="true"></enum>
  <enum name="NSFindPanelActionSelectAllInSelection" swt_gen="true"></enum>
  <enum name="NSFindPanelActionSetFindString" swt_gen="true"></enum>
  <enum name="NSFindPanelActionShowFindPanel" swt_gen="true"></enum>
  <enum name="NSFindPanelSubstringMatchTypeContains" swt_gen="true"></enum>
  <enum name="NSFindPanelSubstringMatchTypeEndsWith" swt_gen="true"></enum>
  <enum name="NSFindPanelSubstringMatchTypeFullWord" swt_gen="true"></enum>
  <enum name="NSFindPanelSubstringMatchTypeStartsWith" swt_gen="true"></enum>
  <enum name="NSFitPagination" swt_gen="true"></enum>
  <enum name="NSFixedPitchFontMask" swt_gen="true"></enum>
  <enum name="NSFlagsChanged" swt_gen="true"></enum>
  <enum name="NSFlagsChangedMask" swt_gen="true"></enum>
  <enum name="NSFloatType" swt_gen="true"></enum>
  <enum name="NSFloatingPointSamplesBitmapFormat" swt_gen="true"></enum>
  <enum name="NSFloatingWindowLevel" swt_gen="true"></enum>
  <enum name="NSFocusRingAbove" swt_gen="true"></enum>
  <enum name="NSFocusRingBelow" swt_gen="true"></enum>
  <enum name="NSFocusRingOnly" swt_gen="true"></enum>
  <enum name="NSFocusRingTypeDefault" swt_gen="true"></enum>
  <enum name="NSFocusRingTypeExterior" swt_gen="true"></enum>
  <enum name="NSFocusRingTypeNone" swt_gen="true"></enum>
  <enum name="NSFontAntialiasedIntegerAdvancementsRenderingMode" swt_gen="true"></enum>
  <enum name="NSFontAntialiasedRenderingMode" swt_gen="true"></enum>
  <enum name="NSFontBoldTrait" swt_gen="true"></enum>
  <enum name="NSFontClarendonSerifsClass" swt_gen="true"></enum>
  <enum name="NSFontCollectionApplicationOnlyMask" swt_gen="true"></enum>
  <enum name="NSFontCondensedTrait" swt_gen="true"></enum>
  <enum name="NSFontDefaultRenderingMode" swt_gen="true"></enum>
  <enum name="NSFontExpandedTrait" swt_gen="true"></enum>
  <enum name="NSFontFamilyClassMask" swt_gen="true"></enum>
  <enum name="NSFontFreeformSerifsClass" swt_gen="true"></enum>
  <enum name="NSFontIntegerAdvancementsRenderingMode" swt_gen="true"></enum>
  <enum name="NSFontItalicTrait" swt_gen="true"></enum>
  <enum name="NSFontModernSerifsClass" swt_gen="true"></enum>
  <enum name="NSFontMonoSpaceTrait" swt_gen="true"></enum>
  <enum name="NSFontOldStyleSerifsClass" swt_gen="true"></enum>
  <enum name="NSFontOrnamentalsClass" swt_gen="true"></enum>
  <enum name="NSFontPanelAllEffectsModeMask" swt_gen="true"></enum>
  <enum name="NSFontPanelAllModesMask" swt_gen="true"></enum>
  <enum name="NSFontPanelCollectionModeMask" swt_gen="true"></enum>
  <enum name="NSFontPanelDocumentColorEffectModeMask" swt_gen="true"></enum>
  <enum name="NSFontPanelFaceModeMask" swt_gen="true"></enum>
  <enum name="NSFontPanelShadowEffectModeMask" swt_gen="true"></enum>
  <enum name="NSFontPanelSizeModeMask" swt_gen="true"></enum>
  <enum name="NSFontPanelStandardModesMask" swt_gen="true"></enum>
  <enum name="NSFontPanelStrikethroughEffectModeMask" swt_gen="true"></enum>
  <enum name="NSFontPanelTextColorEffectModeMask" swt_gen="true"></enum>
  <enum name="NSFontPanelUnderlineEffectModeMask" swt_gen="true"></enum>
  <enum name="NSFontSansSerifClass" swt_gen="true"></enum>
  <enum name="NSFontScriptsClass" swt_gen="true"></enum>
  <enum name="NSFontSlabSerifsClass" swt_gen="true"></enum>
  <enum name="NSFontSymbolicClass" swt_gen="true"></enum>
  <enum name="NSFontTransitionalSerifsClass" swt_gen="true"></enum>
  <enum name="NSFontUIOptimizedTrait" swt_gen="true"></enum>
  <enum name="NSFontUnknownClass" swt_gen="true"></enum>
  <enum name="NSFontVerticalTrait" swt_gen="true"></enum>
  <enum name="NSFormFeedCharacter" swt_gen="true"></enum>
  <enum name="NSFunctionKeyMask" swt_gen="true"></enum>
  <enum name="NSGIFFileType" swt_gen="true"></enum>
  <enum name="NSGlyphAttributeBidiLevel" swt_gen="true"></enum>
  <enum name="NSGlyphAttributeElastic" swt_gen="true"></enum>
  <enum name="NSGlyphAttributeInscribe" swt_gen="true"></enum>
  <enum name="NSGlyphAttributeSoft" swt_gen="true"></enum>
  <enum name="NSGlyphInscribeAbove" swt_gen="true"></enum>
  <enum name="NSGlyphInscribeBase" swt_gen="true"></enum>
  <enum name="NSGlyphInscribeBelow" swt_gen="true"></enum>
  <enum name="NSGlyphInscribeOverBelow" swt_gen="true"></enum>
  <enum name="NSGlyphInscribeOverstrike" swt_gen="true"></enum>
  <enum name="NSGradientConcaveStrong" swt_gen="true"></enum>
  <enum name="NSGradientConcaveWeak" swt_gen="true"></enum>
  <enum name="NSGradientConvexStrong" swt_gen="true"></enum>
  <enum name="NSGradientConvexWeak" swt_gen="true"></enum>
  <enum name="NSGradientDrawsAfterEndingLocation" swt_gen="true"></enum>
  <enum name="NSGradientDrawsBeforeStartingLocation" swt_gen="true"></enum>
  <enum name="NSGradientNone" swt_gen="true"></enum>
  <enum name="NSGraphiteControlTint" swt_gen="true"></enum>
  <enum name="NSGrayColorSpaceModel" swt_gen="true"></enum>
  <enum name="NSGrayModeColorPanel" swt_gen="true"></enum>
  <enum name="NSGrooveBorder" swt_gen="true"></enum>
  <enum name="NSHSBModeColorPanel" swt_gen="true"></enum>
  <enum name="NSHUDWindowMask" swt_gen="true"></enum>
  <enum name="NSHeavierFontAction" swt_gen="true"></enum>
  <enum name="NSHelpButtonBezelStyle" swt_gen="true"></enum>
  <enum name="NSHelpFunctionKey" swt_gen="true"></enum>
  <enum name="NSHelpKeyMask" swt_gen="true"></enum>
  <enum name="NSHighlightModeMatrix" swt_gen="true"></enum>
  <enum name="NSHomeFunctionKey" swt_gen="true"></enum>
  <enum name="NSHorizontalRuler" swt_gen="true"></enum>
  <enum name="NSHourMinuteDatePickerElementFlag" swt_gen="true"></enum>
  <enum name="NSHourMinuteSecondDatePickerElementFlag" swt_gen="true"></enum>
  <enum name="NSIdentityMappingCharacterCollection" swt_gen="true"></enum>
  <enum name="NSIllegalTextMovement" swt_gen="true"></enum>
  <enum name="NSImageAbove" swt_gen="true"></enum>
  <enum name="NSImageAlignBottom" swt_gen="true"></enum>
  <enum name="NSImageAlignBottomLeft" swt_gen="true"></enum>
  <enum name="NSImageAlignBottomRight" swt_gen="true"></enum>
  <enum name="NSImageAlignCenter" swt_gen="true"></enum>
  <enum name="NSImageAlignLeft" swt_gen="true"></enum>
  <enum name="NSImageAlignRight" swt_gen="true"></enum>
  <enum name="NSImageAlignTop" swt_gen="true"></enum>
  <enum name="NSImageAlignTopLeft" swt_gen="true"></enum>
  <enum name="NSImageAlignTopRight" swt_gen="true"></enum>
  <enum name="NSImageBelow" swt_gen="true"></enum>
  <enum name="NSImageCacheAlways" swt_gen="true"></enum>
  <enum name="NSImageCacheBySize" swt_gen="true"></enum>
  <enum name="NSImageCacheDefault" swt_gen="true"></enum>
  <enum name="NSImageCacheNever" swt_gen="true"></enum>
  <enum name="NSImageCellType" swt_gen="true"></enum>
  <enum name="NSImageFrameButton" swt_gen="true"></enum>
  <enum name="NSImageFrameGrayBezel" swt_gen="true"></enum>
  <enum name="NSImageFrameGroove" swt_gen="true"></enum>
  <enum name="NSImageFrameNone" swt_gen="true"></enum>
  <enum name="NSImageFramePhoto" swt_gen="true"></enum>
  <enum name="NSImageInterpolationDefault" swt_gen="true"></enum>
  <enum name="NSImageInterpolationHigh" swt_gen="true"></enum>
  <enum name="NSImageInterpolationLow" swt_gen="true"></enum>
  <enum name="NSImageInterpolationNone" swt_gen="true"></enum>
  <enum name="NSImageLeft" swt_gen="true"></enum>
  <enum name="NSImageLoadStatusCancelled" swt_gen="true"></enum>
  <enum name="NSImageLoadStatusCompleted" swt_gen="true"></enum>
  <enum name="NSImageLoadStatusInvalidData" swt_gen="true"></enum>
  <enum name="NSImageLoadStatusReadError" swt_gen="true"></enum>
  <enum name="NSImageLoadStatusUnexpectedEOF" swt_gen="true"></enum>
  <enum name="NSImageOnly" swt_gen="true"></enum>
  <enum name="NSImageOverlaps" swt_gen="true"></enum>
  <enum name="NSImageRepLoadStatusCompleted" swt_gen="true"></enum>
  <enum name="NSImageRepLoadStatusInvalidData" swt_gen="true"></enum>
  <enum name="NSImageRepLoadStatusReadingHeader" swt_gen="true"></enum>
  <enum name="NSImageRepLoadStatusUnexpectedEOF" swt_gen="true"></enum>
  <enum name="NSImageRepLoadStatusUnknownType" swt_gen="true"></enum>
  <enum name="NSImageRepLoadStatusWillNeedAllData" swt_gen="true"></enum>
  <enum name="NSImageRepMatchesDevice" swt_gen="true"></enum>
  <enum name="NSImageRight" swt_gen="true"></enum>
  <enum name="NSImageScaleAxesIndependently" swt_gen="true"></enum>
  <enum name="NSImageScaleNone" swt_gen="true"></enum>
  <enum name="NSImageScaleProportionallyDown" swt_gen="true"></enum>
  <enum name="NSImageScaleProportionallyUpOrDown" swt_gen="true"></enum>
  <enum name="NSIndexedColorSpaceModel" swt_gen="true"></enum>
  <enum name="NSInformationalAlertStyle" swt_gen="true"></enum>
  <enum name="NSInformationalRequest" swt_gen="true"></enum>
  <enum name="NSInsertCharFunctionKey" swt_gen="true"></enum>
  <enum name="NSInsertFunctionKey" swt_gen="true"></enum>
  <enum name="NSInsertLineFunctionKey" swt_gen="true"></enum>
  <enum name="NSIntType" swt_gen="true"></enum>
  <enum name="NSItalicFontMask" swt_gen="true"></enum>
  <enum name="NSJPEG2000FileType" swt_gen="true"></enum>
  <enum name="NSJPEGFileType" swt_gen="true"></enum>
  <enum name="NSJustifiedTextAlignment" swt_gen="true"></enum>
  <enum name="NSKeyDown" swt_gen="true"></enum>
  <enum name="NSKeyDownMask" swt_gen="true"></enum>
  <enum name="NSKeyUp" swt_gen="true"></enum>
  <enum name="NSKeyUpMask" swt_gen="true"></enum>
  <enum name="NSLABColorSpaceModel" swt_gen="true"></enum>
  <enum name="NSLandscapeOrientation" swt_gen="true"></enum>
  <enum name="NSLeftArrowFunctionKey" swt_gen="true"></enum>
  <enum name="NSLeftMouseDown" swt_gen="true"></enum>
  <enum name="NSLeftMouseDownMask" swt_gen="true"></enum>
  <enum name="NSLeftMouseDragged" swt_gen="true"></enum>
  <enum name="NSLeftMouseDraggedMask" swt_gen="true"></enum>
  <enum name="NSLeftMouseUp" swt_gen="true"></enum>
  <enum name="NSLeftMouseUpMask" swt_gen="true"></enum>
  <enum name="NSLeftTabStopType" swt_gen="true"></enum>
  <enum name="NSLeftTabsBezelBorder" swt_gen="true"></enum>
  <enum name="NSLeftTextAlignment" swt_gen="true"></enum>
  <enum name="NSLeftTextMovement" swt_gen="true"></enum>
  <enum name="NSLighterFontAction" swt_gen="true"></enum>
  <enum name="NSLineBorder" swt_gen="true"></enum>
  <enum name="NSLineBreakByCharWrapping" swt_gen="true"></enum>
  <enum name="NSLineBreakByClipping" swt_gen="true"></enum>
  <enum name="NSLineBreakByTruncatingHead" swt_gen="true"></enum>
  <enum name="NSLineBreakByTruncatingMiddle" swt_gen="true"></enum>
  <enum name="NSLineBreakByTruncatingTail" swt_gen="true"></enum>
  <enum name="NSLineBreakByWordWrapping" swt_gen="true"></enum>
  <enum name="NSLineDoesntMove" swt_gen="true"></enum>
  <enum name="NSLineMovesDown" swt_gen="true"></enum>
  <enum name="NSLineMovesLeft" swt_gen="true"></enum>
  <enum name="NSLineMovesRight" swt_gen="true"></enum>
  <enum name="NSLineMovesUp" swt_gen="true"></enum>
  <enum name="NSLineSeparatorCharacter" swt_gen="true"></enum>
  <enum name="NSLineSweepDown" swt_gen="true"></enum>
  <enum name="NSLineSweepLeft" swt_gen="true"></enum>
  <enum name="NSLineSweepRight" swt_gen="true"></enum>
  <enum name="NSLineSweepUp" swt_gen="true"></enum>
  <enum name="NSLineToBezierPathElement" swt_gen="true"></enum>
  <enum name="NSLinearSlider" swt_gen="true"></enum>
  <enum name="NSListModeMatrix" swt_gen="true"></enum>
  <enum name="NSMacintoshInterfaceStyle" swt_gen="true"></enum>
  <enum name="NSMainMenuWindowLevel" swt_gen="true"></enum>
  <enum name="NSMenuFunctionKey" swt_gen="true"></enum>
  <enum name="NSMiniControlSize" swt_gen="true"></enum>
  <enum name="NSMiniaturizableWindowMask" swt_gen="true"></enum>
  <enum name="NSMiterLineJoinStyle" swt_gen="true"></enum>
  <enum name="NSMixedState" swt_gen="true"></enum>
  <enum name="NSModalPanelWindowLevel" swt_gen="true"></enum>
  <enum name="NSModeSwitchFunctionKey" swt_gen="true"></enum>
  <enum name="NSMomentaryChangeButton" swt_gen="true"></enum>
  <enum name="NSMomentaryLight" swt_gen="true"></enum>
  <enum name="NSMomentaryLightButton" swt_gen="true"></enum>
  <enum name="NSMomentaryPushButton" swt_gen="true"></enum>
  <enum name="NSMomentaryPushInButton" swt_gen="true"></enum>
  <enum name="NSMouseEntered" swt_gen="true"></enum>
  <enum name="NSMouseEnteredMask" swt_gen="true"></enum>
  <enum name="NSMouseEventSubtype" swt_gen="true"></enum>
  <enum name="NSMouseExited" swt_gen="true"></enum>
  <enum name="NSMouseExitedMask" swt_gen="true"></enum>
  <enum name="NSMouseMoved" swt_gen="true"></enum>
  <enum name="NSMouseMovedMask" swt_gen="true"></enum>
  <enum name="NSMoveToBezierPathElement" swt_gen="true"></enum>
  <enum name="NSNarrowFontMask" swt_gen="true"></enum>
  <enum name="NSNativeShortGlyphPacking" swt_gen="true"></enum>
  <enum name="NSNaturalTextAlignment" swt_gen="true"></enum>
  <enum name="NSNewlineCharacter" swt_gen="true"></enum>
  <enum name="NSNextFunctionKey" swt_gen="true"></enum>
  <enum name="NSNextStepInterfaceStyle" swt_gen="true"></enum>
  <enum name="NSNoBorder" swt_gen="true"></enum>
  <enum name="NSNoCellMask" swt_gen="true"></enum>
  <enum name="NSNoFontChangeAction" swt_gen="true"></enum>
  <enum name="NSNoImage" swt_gen="true"></enum>
  <enum name="NSNoInterfaceStyle" swt_gen="true"></enum>
  <enum name="NSNoModeColorPanel" swt_gen="true"></enum>
  <enum name="NSNoScrollerParts" swt_gen="true"></enum>
  <enum name="NSNoTabsBezelBorder" swt_gen="true"></enum>
  <enum name="NSNoTabsLineBorder" swt_gen="true"></enum>
  <enum name="NSNoTabsNoBorder" swt_gen="true"></enum>
  <enum name="NSNoTitle" swt_gen="true"></enum>
  <enum name="NSNoUnderlineStyle" swt_gen="true"></enum>
  <enum name="NSNonStandardCharacterSetFontMask" swt_gen="true"></enum>
  <enum name="NSNonZeroWindingRule" swt_gen="true"></enum>
  <enum name="NSNonactivatingPanelMask" swt_gen="true"></enum>
  <enum name="NSNormalWindowLevel" swt_gen="true"></enum>
  <enum name="NSNullCellType" swt_gen="true"></enum>
  <enum name="NSNullGlyph" swt_gen="true"></enum>
  <enum name="NSNumericPadKeyMask" swt_gen="true"></enum>
  <enum name="NSOKButton" swt_gen="true"></enum>
  <enum name="NSOPENGL_CURRENT_VERSION" swt_gen="true"></enum>
  <enum name="NSOffState" swt_gen="true"></enum>
  <enum name="NSOnOffButton" swt_gen="true"></enum>
  <enum name="NSOnState" swt_gen="true"></enum>
  <enum name="NSOnlyScrollerArrows" swt_gen="true"></enum>
  <enum name="NSOpenGLCPRasterizationEnable" swt_gen="true"></enum>
  <enum name="NSOpenGLCPStateValidation" swt_gen="true"></enum>
  <enum name="NSOpenGLCPSurfaceOpacity" swt_gen="true"></enum>
  <enum name="NSOpenGLCPSurfaceOrder" swt_gen="true"></enum>
  <enum name="NSOpenGLCPSwapInterval" swt_gen="true"></enum>
  <enum name="NSOpenGLCPSwapRectangle" swt_gen="true"></enum>
  <enum name="NSOpenGLCPSwapRectangleEnable" swt_gen="true"></enum>
  <enum name="NSOpenGLGOClearFormatCache" swt_gen="true"></enum>
  <enum name="NSOpenGLGOFormatCacheSize" swt_gen="true"></enum>
  <enum name="NSOpenGLGOResetLibrary" swt_gen="true"></enum>
  <enum name="NSOpenGLGORetainRenderers" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAAccelerated" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAAccumSize" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAAllRenderers" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAAllowOfflineRenderers" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAAlphaSize" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAAuxBuffers" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAAuxDepthStencil" swt_gen="true"></enum>
  <enum name="NSOpenGLPFABackingStore" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAClosestPolicy" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAColorFloat" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAColorSize" swt_gen="true"></enum>
  <enum name="NSOpenGLPFACompliant" swt_gen="true"></enum>
  <enum name="NSOpenGLPFADepthSize" swt_gen="true"></enum>
  <enum name="NSOpenGLPFADoubleBuffer" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAFullScreen" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAMPSafe" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAMaximumPolicy" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAMinimumPolicy" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAMultiScreen" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAMultisample" swt_gen="true"></enum>
  <enum name="NSOpenGLPFANoRecovery" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAOffScreen" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAPixelBuffer" swt_gen="true"></enum>
  <enum name="NSOpenGLPFARendererID" swt_gen="true"></enum>
  <enum name="NSOpenGLPFARobust" swt_gen="true"></enum>
  <enum name="NSOpenGLPFASampleAlpha" swt_gen="true"></enum>
  <enum name="NSOpenGLPFASampleBuffers" swt_gen="true"></enum>
  <enum name="NSOpenGLPFASamples" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAScreenMask" swt_gen="true"></enum>
  <enum name="NSOpenGLPFASingleRenderer" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAStencilSize" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAStereo" swt_gen="true"></enum>
  <enum name="NSOpenGLPFASupersample" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAVirtualScreenCount" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAWindow" swt_gen="true"></enum>
  <enum name="NSOtherMouseDown" swt_gen="true"></enum>
  <enum name="NSOtherMouseDownMask" swt_gen="true"></enum>
  <enum name="NSOtherMouseDragged" swt_gen="true"></enum>
  <enum name="NSOtherMouseDraggedMask" swt_gen="true"></enum>
  <enum name="NSOtherMouseUp" swt_gen="true"></enum>
  <enum name="NSOtherMouseUpMask" swt_gen="true"></enum>
  <enum name="NSOtherTextMovement" swt_gen="true"></enum>
  <enum name="NSOutlineViewDropOnItemIndex" swt_gen="true"></enum>
  <enum name="NSPNGFileType" swt_gen="true"></enum>
  <enum name="NSPageDownFunctionKey" swt_gen="true"></enum>
  <enum name="NSPageUpFunctionKey" swt_gen="true"></enum>
  <enum name="NSParagraphSeparatorCharacter" swt_gen="true"></enum>
  <enum name="NSPathStyleNavigationBar" swt_gen="true"></enum>
  <enum name="NSPathStylePopUp" swt_gen="true"></enum>
  <enum name="NSPathStyleStandard" swt_gen="true"></enum>
  <enum name="NSPatternColorSpaceModel" swt_gen="true"></enum>
  <enum name="NSPauseFunctionKey" swt_gen="true"></enum>
  <enum name="NSPenLowerSideMask" swt_gen="true"></enum>
  <enum name="NSPenPointingDevice" swt_gen="true"></enum>
  <enum name="NSPenTipMask" swt_gen="true"></enum>
  <enum name="NSPenUpperSideMask" swt_gen="true"></enum>
  <enum name="NSPeriodic" swt_gen="true"></enum>
  <enum name="NSPeriodicMask" swt_gen="true"></enum>
  <enum name="NSPlainTextTokenStyle" swt_gen="true"></enum>
  <enum name="NSPopUpArrowAtBottom" swt_gen="true"></enum>
  <enum name="NSPopUpArrowAtCenter" swt_gen="true"></enum>
  <enum name="NSPopUpMenuWindowLevel" swt_gen="true"></enum>
  <enum name="NSPopUpNoArrow" swt_gen="true"></enum>
  <enum name="NSPortraitOrientation" swt_gen="true"></enum>
  <enum name="NSPositiveDoubleType" swt_gen="true"></enum>
  <enum name="NSPositiveFloatType" swt_gen="true"></enum>
  <enum name="NSPositiveIntType" swt_gen="true"></enum>
  <enum name="NSPosterFontMask" swt_gen="true"></enum>
  <enum name="NSPowerOffEventType" swt_gen="true"></enum>
  <enum name="NSPressedTab" swt_gen="true"></enum>
  <enum name="NSPrevFunctionKey" swt_gen="true"></enum>
  <enum name="NSPrintFunctionKey" swt_gen="true"></enum>
  <enum name="NSPrintPanelShowsCopies" swt_gen="true"></enum>
  <enum name="NSPrintPanelShowsOrientation" swt_gen="true"></enum>
  <enum name="NSPrintPanelShowsPageRange" swt_gen="true"></enum>
  <enum name="NSPrintPanelShowsPageSetupAccessory" swt_gen="true"></enum>
  <enum name="NSPrintPanelShowsPaperSize" swt_gen="true"></enum>
  <enum name="NSPrintPanelShowsPreview" swt_gen="true"></enum>
  <enum name="NSPrintPanelShowsScaling" swt_gen="true"></enum>
  <enum name="NSPrintScreenFunctionKey" swt_gen="true"></enum>
  <enum name="NSPrinterTableError" swt_gen="true"></enum>
  <enum name="NSPrinterTableNotFound" swt_gen="true"></enum>
  <enum name="NSPrinterTableOK" swt_gen="true"></enum>
  <enum name="NSPrintingCancelled" swt_gen="true"></enum>
  <enum name="NSPrintingFailure" swt_gen="true"></enum>
  <enum name="NSPrintingReplyLater" swt_gen="true"></enum>
  <enum name="NSPrintingSuccess" swt_gen="true"></enum>
  <enum name="NSProgressIndicatorBarStyle" swt_gen="true"></enum>
  <enum name="NSProgressIndicatorPreferredAquaThickness" swt_gen="true"></enum>
  <enum name="NSProgressIndicatorPreferredLargeThickness" swt_gen="true"></enum>
  <enum name="NSProgressIndicatorPreferredSmallThickness" swt_gen="true"></enum>
  <enum name="NSProgressIndicatorPreferredThickness" swt_gen="true"></enum>
  <enum name="NSProgressIndicatorSpinningStyle" swt_gen="true"></enum>
  <enum name="NSPushInCell" swt_gen="true"></enum>
  <enum name="NSPushInCellMask" swt_gen="true"></enum>
  <enum name="NSPushOnPushOffButton" swt_gen="true"></enum>
  <enum name="NSQTMovieLoopingBackAndForthPlayback" swt_gen="true"></enum>
  <enum name="NSQTMovieLoopingPlayback" swt_gen="true"></enum>
  <enum name="NSQTMovieNormalPlayback" swt_gen="true"></enum>
  <enum name="NSRGBColorSpaceModel" swt_gen="true"></enum>
  <enum name="NSRGBModeColorPanel" swt_gen="true"></enum>
  <enum name="NSRadioButton" swt_gen="true"></enum>
  <enum name="NSRadioModeMatrix" swt_gen="true"></enum>
  <enum name="NSRangeDateMode" swt_gen="true"></enum>
  <enum name="NSRatingLevelIndicatorStyle" swt_gen="true"></enum>
  <enum name="NSRecessedBezelStyle" swt_gen="true"></enum>
  <enum name="NSRedoFunctionKey" swt_gen="true"></enum>
  <enum name="NSRegularControlSize" swt_gen="true"></enum>
  <enum name="NSRegularSquareBezelStyle" swt_gen="true"></enum>
  <enum name="NSRelevancyLevelIndicatorStyle" swt_gen="true"></enum>
  <enum name="NSRemoveTraitFontAction" swt_gen="true"></enum>
  <enum name="NSResetCursorRectsRunLoopOrdering" swt_gen="true"></enum>
  <enum name="NSResetFunctionKey" swt_gen="true"></enum>
  <enum name="NSResizableWindowMask" swt_gen="true"></enum>
  <enum name="NSReturnTextMovement" swt_gen="true"></enum>
  <enum name="NSRightArrowFunctionKey" swt_gen="true"></enum>
  <enum name="NSRightMouseDown" swt_gen="true"></enum>
  <enum name="NSRightMouseDownMask" swt_gen="true"></enum>
  <enum name="NSRightMouseDragged" swt_gen="true"></enum>
  <enum name="NSRightMouseDraggedMask" swt_gen="true"></enum>
  <enum name="NSRightMouseUp" swt_gen="true"></enum>
  <enum name="NSRightMouseUpMask" swt_gen="true"></enum>
  <enum name="NSRightTabStopType" swt_gen="true"></enum>
  <enum name="NSRightTabsBezelBorder" swt_gen="true"></enum>
  <enum name="NSRightTextAlignment" swt_gen="true"></enum>
  <enum name="NSRightTextMovement" swt_gen="true"></enum>
  <enum name="NSRoundLineCapStyle" swt_gen="true"></enum>
  <enum name="NSRoundLineJoinStyle" swt_gen="true"></enum>
  <enum name="NSRoundRectBezelStyle" swt_gen="true"></enum>
  <enum name="NSRoundedBezelStyle" swt_gen="true"></enum>
  <enum name="NSRoundedDisclosureBezelStyle" swt_gen="true"></enum>
  <enum name="NSRoundedTokenStyle" swt_gen="true"></enum>
  <enum name="NSRuleEditorNestingModeCompound" swt_gen="true"></enum>
  <enum name="NSRuleEditorNestingModeList" swt_gen="true"></enum>
  <enum name="NSRuleEditorNestingModeSimple" swt_gen="true"></enum>
  <enum name="NSRuleEditorNestingModeSingle" swt_gen="true"></enum>
  <enum name="NSRuleEditorRowTypeCompound" swt_gen="true"></enum>
  <enum name="NSRuleEditorRowTypeSimple" swt_gen="true"></enum>
  <enum name="NSRunAbortedResponse" swt_gen="true"></enum>
  <enum name="NSRunContinuesResponse" swt_gen="true"></enum>
  <enum name="NSRunStoppedResponse" swt_gen="true"></enum>
  <enum name="NSSaveAsOperation" swt_gen="true"></enum>
  <enum name="NSSaveOperation" swt_gen="true"></enum>
  <enum name="NSSaveToOperation" swt_gen="true"></enum>
  <enum name="NSScaleNone" swt_gen="true"></enum>
  <enum name="NSScaleProportionally" swt_gen="true"></enum>
  <enum name="NSScaleToFit" swt_gen="true"></enum>
  <enum name="NSScreenChangedEventType" swt_gen="true"></enum>
  <enum name="NSScreenSaverWindowLevel" swt_gen="true"></enum>
  <enum name="NSScrollLockFunctionKey" swt_gen="true"></enum>
  <enum name="NSScrollWheel" swt_gen="true"></enum>
  <enum name="NSScrollWheelMask" swt_gen="true"></enum>
  <enum name="NSScrollerArrowsDefaultSetting" swt_gen="true"></enum>
  <enum name="NSScrollerArrowsMaxEnd" swt_gen="true"></enum>
  <enum name="NSScrollerArrowsMinEnd" swt_gen="true"></enum>
  <enum name="NSScrollerArrowsNone" swt_gen="true"></enum>
  <enum name="NSScrollerDecrementArrow" swt_gen="true"></enum>
  <enum name="NSScrollerDecrementLine" swt_gen="true"></enum>
  <enum name="NSScrollerDecrementPage" swt_gen="true"></enum>
  <enum name="NSScrollerIncrementArrow" swt_gen="true"></enum>
  <enum name="NSScrollerIncrementLine" swt_gen="true"></enum>
  <enum name="NSScrollerIncrementPage" swt_gen="true"></enum>
  <enum name="NSScrollerKnob" swt_gen="true"></enum>
  <enum name="NSScrollerKnobSlot" swt_gen="true"></enum>
  <enum name="NSScrollerNoPart" swt_gen="true"></enum>
  <enum name="NSSearchFieldClearRecentsMenuItemTag" swt_gen="true"></enum>
  <enum name="NSSearchFieldNoRecentsMenuItemTag" swt_gen="true"></enum>
  <enum name="NSSearchFieldRecentsMenuItemTag" swt_gen="true"></enum>
  <enum name="NSSearchFieldRecentsTitleMenuItemTag" swt_gen="true"></enum>
  <enum name="NSSegmentStyleAutomatic" swt_gen="true"></enum>
  <enum name="NSSegmentStyleCapsule" swt_gen="true"></enum>
  <enum name="NSSegmentStyleRoundRect" swt_gen="true"></enum>
  <enum name="NSSegmentStyleRounded" swt_gen="true"></enum>
  <enum name="NSSegmentStyleSmallSquare" swt_gen="true"></enum>
  <enum name="NSSegmentStyleTexturedRounded" swt_gen="true"></enum>
  <enum name="NSSegmentStyleTexturedSquare" swt_gen="true"></enum>
  <enum name="NSSegmentSwitchTrackingMomentary" swt_gen="true"></enum>
  <enum name="NSSegmentSwitchTrackingSelectAny" swt_gen="true"></enum>
  <enum name="NSSegmentSwitchTrackingSelectOne" swt_gen="true"></enum>
  <enum name="NSSelectByCharacter" swt_gen="true"></enum>
  <enum name="NSSelectByParagraph" swt_gen="true"></enum>
  <enum name="NSSelectByWord" swt_gen="true"></enum>
  <enum name="NSSelectFunctionKey" swt_gen="true"></enum>
  <enum name="NSSelectedTab" swt_gen="true"></enum>
  <enum name="NSSelectingNext" swt_gen="true"></enum>
  <enum name="NSSelectingPrevious" swt_gen="true"></enum>
  <enum name="NSSelectionAffinityDownstream" swt_gen="true"></enum>
  <enum name="NSSelectionAffinityUpstream" swt_gen="true"></enum>
  <enum name="NSServiceApplicationLaunchFailedError" swt_gen="true"></enum>
  <enum name="NSServiceApplicationNotFoundError" swt_gen="true"></enum>
  <enum name="NSServiceErrorMaximum" swt_gen="true"></enum>
  <enum name="NSServiceErrorMinimum" swt_gen="true"></enum>
  <enum name="NSServiceInvalidPasteboardDataError" swt_gen="true"></enum>
  <enum name="NSServiceMalformedServiceDictionaryError" swt_gen="true"></enum>
  <enum name="NSServiceMiscellaneousError" swt_gen="true"></enum>
  <enum name="NSServiceRequestTimedOutError" swt_gen="true"></enum>
  <enum name="NSShadowlessSquareBezelStyle" swt_gen="true"></enum>
  <enum name="NSShiftKeyMask" swt_gen="true"></enum>
  <enum name="NSShowControlGlyphs" swt_gen="true"></enum>
  <enum name="NSShowInvisibleGlyphs" swt_gen="true"></enum>
  <enum name="NSSingleDateMode" swt_gen="true"></enum>
  <enum name="NSSingleUnderlineStyle" swt_gen="true"></enum>
  <enum name="NSSizeDownFontAction" swt_gen="true"></enum>
  <enum name="NSSizeUpFontAction" swt_gen="true"></enum>
  <enum name="NSSmallCapsFontMask" swt_gen="true"></enum>
  <enum name="NSSmallControlSize" swt_gen="true"></enum>
  <enum name="NSSmallIconButtonBezelStyle" swt_gen="true"></enum>
  <enum name="NSSmallSquareBezelStyle" swt_gen="true"></enum>
  <enum name="NSSpecialPageOrder" swt_gen="true"></enum>
  <enum name="NSSpeechImmediateBoundary" swt_gen="true"></enum>
  <enum name="NSSpeechSentenceBoundary" swt_gen="true"></enum>
  <enum name="NSSpeechWordBoundary" swt_gen="true"></enum>
  <enum name="NSSpellingStateGrammarFlag" swt_gen="true"></enum>
  <enum name="NSSpellingStateSpellingFlag" swt_gen="true"></enum>
  <enum name="NSSplitViewDividerStyleThick" swt_gen="true"></enum>
  <enum name="NSSplitViewDividerStyleThin" swt_gen="true"></enum>
  <enum name="NSSquareLineCapStyle" swt_gen="true"></enum>
  <enum name="NSSquareStatusItemLength" swt_gen="true"></enum>
  <enum name="NSStatusWindowLevel" swt_gen="true"></enum>
  <enum name="NSStopFunctionKey" swt_gen="true"></enum>
  <enum name="NSStringDrawingDisableScreenFontSubstitution" swt_gen="true"></enum>
  <enum name="NSStringDrawingOneShot" swt_gen="true"></enum>
  <enum name="NSStringDrawingTruncatesLastVisibleLine" swt_gen="true"></enum>
  <enum name="NSStringDrawingUsesDeviceMetrics" swt_gen="true"></enum>
  <enum name="NSStringDrawingUsesFontLeading" swt_gen="true"></enum>
  <enum name="NSStringDrawingUsesLineFragmentOrigin" swt_gen="true"></enum>
  <enum name="NSSubmenuWindowLevel" swt_gen="true"></enum>
  <enum name="NSSwitchButton" swt_gen="true"></enum>
  <enum name="NSSysReqFunctionKey" swt_gen="true"></enum>
  <enum name="NSSystemDefined" swt_gen="true"></enum>
  <enum name="NSSystemDefinedMask" swt_gen="true"></enum>
  <enum name="NSSystemFunctionKey" swt_gen="true"></enum>
  <enum name="NSTIFFCompressionCCITTFAX3" swt_gen="true"></enum>
  <enum name="NSTIFFCompressionCCITTFAX4" swt_gen="true"></enum>
  <enum name="NSTIFFCompressionJPEG" swt_gen="true"></enum>
  <enum name="NSTIFFCompressionLZW" swt_gen="true"></enum>
  <enum name="NSTIFFCompressionNEXT" swt_gen="true"></enum>
  <enum name="NSTIFFCompressionNone" swt_gen="true"></enum>
  <enum name="NSTIFFCompressionOldJPEG" swt_gen="true"></enum>
  <enum name="NSTIFFCompressionPackBits" swt_gen="true"></enum>
  <enum name="NSTIFFFileType" swt_gen="true"></enum>
  <enum name="NSTabCharacter" swt_gen="true"></enum>
  <enum name="NSTabTextMovement" swt_gen="true"></enum>
  <enum name="NSTableColumnAutoresizingMask" swt_gen="true"></enum>
  <enum name="NSTableColumnNoResizing" swt_gen="true"></enum>
  <enum name="NSTableColumnUserResizingMask" swt_gen="true"></enum>
  <enum name="NSTableViewDropAbove" swt_gen="true"></enum>
  <enum name="NSTableViewDropOn" swt_gen="true"></enum>
  <enum name="NSTableViewFirstColumnOnlyAutoresizingStyle" swt_gen="true"></enum>
  <enum name="NSTableViewGridNone" swt_gen="true"></enum>
  <enum name="NSTableViewLastColumnOnlyAutoresizingStyle" swt_gen="true"></enum>
  <enum name="NSTableViewNoColumnAutoresizing" swt_gen="true"></enum>
  <enum name="NSTableViewReverseSequentialColumnAutoresizingStyle" swt_gen="true"></enum>
  <enum name="NSTableViewSelectionHighlightStyleRegular" swt_gen="true"></enum>
  <enum name="NSTableViewSelectionHighlightStyleSourceList" swt_gen="true"></enum>
  <enum name="NSTableViewSequentialColumnAutoresizingStyle" swt_gen="true"></enum>
  <enum name="NSTableViewSolidHorizontalGridLineMask" swt_gen="true"></enum>
  <enum name="NSTableViewSolidVerticalGridLineMask" swt_gen="true"></enum>
  <enum name="NSTableViewUniformColumnAutoresizingStyle" swt_gen="true"></enum>
  <enum name="NSTabletPoint" swt_gen="true"></enum>
  <enum name="NSTabletPointEventSubtype" swt_gen="true"></enum>
  <enum name="NSTabletPointMask" swt_gen="true"></enum>
  <enum name="NSTabletProximity" swt_gen="true"></enum>
  <enum name="NSTabletProximityEventSubtype" swt_gen="true"></enum>
  <enum name="NSTabletProximityMask" swt_gen="true"></enum>
  <enum name="NSTerminateCancel" swt_gen="true"></enum>
  <enum name="NSTerminateLater" swt_gen="true"></enum>
  <enum name="NSTerminateNow" swt_gen="true"></enum>
  <enum name="NSTextBlockAbsoluteValueType" swt_gen="true"></enum>
  <enum name="NSTextBlockBaselineAlignment" swt_gen="true"></enum>
  <enum name="NSTextBlockBorder" swt_gen="true"></enum>
  <enum name="NSTextBlockBottomAlignment" swt_gen="true"></enum>
  <enum name="NSTextBlockHeight" swt_gen="true"></enum>
  <enum name="NSTextBlockMargin" swt_gen="true"></enum>
  <enum name="NSTextBlockMaximumHeight" swt_gen="true"></enum>
  <enum name="NSTextBlockMaximumWidth" swt_gen="true"></enum>
  <enum name="NSTextBlockMiddleAlignment" swt_gen="true"></enum>
  <enum name="NSTextBlockMinimumHeight" swt_gen="true"></enum>
  <enum name="NSTextBlockMinimumWidth" swt_gen="true"></enum>
  <enum name="NSTextBlockPadding" swt_gen="true"></enum>
  <enum name="NSTextBlockPercentageValueType" swt_gen="true"></enum>
  <enum name="NSTextBlockTopAlignment" swt_gen="true"></enum>
  <enum name="NSTextBlockWidth" swt_gen="true"></enum>
  <enum name="NSTextCellType" swt_gen="true"></enum>
  <enum name="NSTextFieldAndStepperDatePickerStyle" swt_gen="true"></enum>
  <enum name="NSTextFieldDatePickerStyle" swt_gen="true"></enum>
  <enum name="NSTextFieldRoundedBezel" swt_gen="true"></enum>
  <enum name="NSTextFieldSquareBezel" swt_gen="true"></enum>
  <enum name="NSTextListPrependEnclosingMarker" swt_gen="true"></enum>
  <enum name="NSTextReadInapplicableDocumentTypeError" swt_gen="true"></enum>
  <enum name="NSTextReadWriteErrorMaximum" swt_gen="true"></enum>
  <enum name="NSTextReadWriteErrorMinimum" swt_gen="true"></enum>
  <enum name="NSTextStorageEditedAttributes" swt_gen="true"></enum>
  <enum name="NSTextStorageEditedCharacters" swt_gen="true"></enum>
  <enum name="NSTextTableAutomaticLayoutAlgorithm" swt_gen="true"></enum>
  <enum name="NSTextTableFixedLayoutAlgorithm" swt_gen="true"></enum>
  <enum name="NSTextWriteInapplicableDocumentTypeError" swt_gen="true"></enum>
  <enum name="NSTexturedBackgroundWindowMask" swt_gen="true"></enum>
  <enum name="NSTexturedRoundedBezelStyle" swt_gen="true"></enum>
  <enum name="NSTexturedSquareBezelStyle" swt_gen="true"></enum>
  <enum name="NSThickSquareBezelStyle" swt_gen="true"></enum>
  <enum name="NSThickerSquareBezelStyle" swt_gen="true"></enum>
  <enum name="NSTickMarkAbove" swt_gen="true"></enum>
  <enum name="NSTickMarkBelow" swt_gen="true"></enum>
  <enum name="NSTickMarkLeft" swt_gen="true"></enum>
  <enum name="NSTickMarkRight" swt_gen="true"></enum>
  <enum name="NSTimeZoneDatePickerElementFlag" swt_gen="true"></enum>
  <enum name="NSTitledWindowMask" swt_gen="true"></enum>
  <enum name="NSToggleButton" swt_gen="true"></enum>
  <enum name="NSToolbarDisplayModeDefault" swt_gen="true"></enum>
  <enum name="NSToolbarDisplayModeIconAndLabel" swt_gen="true"></enum>
  <enum name="NSToolbarDisplayModeIconOnly" swt_gen="true"></enum>
  <enum name="NSToolbarDisplayModeLabelOnly" swt_gen="true"></enum>
  <enum name="NSToolbarItemVisibilityPriorityHigh" swt_gen="true"></enum>
  <enum name="NSToolbarItemVisibilityPriorityLow" swt_gen="true"></enum>
  <enum name="NSToolbarItemVisibilityPriorityStandard" swt_gen="true"></enum>
  <enum name="NSToolbarItemVisibilityPriorityUser" swt_gen="true"></enum>
  <enum name="NSToolbarSizeModeDefault" swt_gen="true"></enum>
  <enum name="NSToolbarSizeModeRegular" swt_gen="true"></enum>
  <enum name="NSToolbarSizeModeSmall" swt_gen="true"></enum>
  <enum name="NSTopTabsBezelBorder" swt_gen="true"></enum>
  <enum name="NSTornOffMenuWindowLevel" swt_gen="true"></enum>
  <enum name="NSTrackModeMatrix" swt_gen="true"></enum>
  <enum name="NSTrackingActiveAlways" swt_gen="true"></enum>
  <enum name="NSTrackingActiveInActiveApp" swt_gen="true"></enum>
  <enum name="NSTrackingActiveInKeyWindow" swt_gen="true"></enum>
  <enum name="NSTrackingActiveWhenFirstResponder" swt_gen="true"></enum>
  <enum name="NSTrackingAssumeInside" swt_gen="true"></enum>
  <enum name="NSTrackingCursorUpdate" swt_gen="true"></enum>
  <enum name="NSTrackingEnabledDuringMouseDrag" swt_gen="true"></enum>
  <enum name="NSTrackingInVisibleRect" swt_gen="true"></enum>
  <enum name="NSTrackingMouseEnteredAndExited" swt_gen="true"></enum>
  <enum name="NSTrackingMouseMoved" swt_gen="true"></enum>
  <enum name="NSTypesetterBehavior_10_2" swt_gen="true"></enum>
  <enum name="NSTypesetterBehavior_10_2_WithCompatibility" swt_gen="true"></enum>
  <enum name="NSTypesetterBehavior_10_3" swt_gen="true"></enum>
  <enum name="NSTypesetterBehavior_10_4" swt_gen="true"></enum>
  <enum name="NSTypesetterContainerBreakAction" swt_gen="true"></enum>
  <enum name="NSTypesetterHorizontalTabAction" swt_gen="true"></enum>
  <enum name="NSTypesetterLatestBehavior" swt_gen="true"></enum>
  <enum name="NSTypesetterLineBreakAction" swt_gen="true"></enum>
  <enum name="NSTypesetterOriginalBehavior" swt_gen="true"></enum>
  <enum name="NSTypesetterParagraphBreakAction" swt_gen="true"></enum>
  <enum name="NSTypesetterWhitespaceAction" swt_gen="true"></enum>
  <enum name="NSTypesetterZeroAdvancementAction" swt_gen="true"></enum>
  <enum name="NSUnboldFontMask" swt_gen="true"></enum>
  <enum name="NSUnderlinePatternDash" swt_gen="true"></enum>
  <enum name="NSUnderlinePatternDashDot" swt_gen="true"></enum>
  <enum name="NSUnderlinePatternDashDotDot" swt_gen="true"></enum>
  <enum name="NSUnderlinePatternDot" swt_gen="true"></enum>
  <enum name="NSUnderlinePatternSolid" swt_gen="true"></enum>
  <enum name="NSUnderlineStyleDouble" swt_gen="true"></enum>
  <enum name="NSUnderlineStyleNone" swt_gen="true"></enum>
  <enum name="NSUnderlineStyleSingle" swt_gen="true"></enum>
  <enum name="NSUnderlineStyleThick" swt_gen="true"></enum>
  <enum name="NSUndoFunctionKey" swt_gen="true"></enum>
  <enum name="NSUnifiedTitleAndToolbarWindowMask" swt_gen="true"></enum>
  <enum name="NSUnitalicFontMask" swt_gen="true"></enum>
  <enum name="NSUnknownColorSpaceModel" swt_gen="true"></enum>
  <enum name="NSUnknownPageOrder" swt_gen="true"></enum>
  <enum name="NSUnknownPointingDevice" swt_gen="true"></enum>
  <enum name="NSUnscaledWindowMask" swt_gen="true"></enum>
  <enum name="NSUpArrowFunctionKey" swt_gen="true"></enum>
  <enum name="NSUpTextMovement" swt_gen="true"></enum>
  <enum name="NSUpdateWindowsRunLoopOrdering" swt_gen="true"></enum>
  <enum name="NSUserFunctionKey" swt_gen="true"></enum>
  <enum name="NSUtilityWindowMask" swt_gen="true"></enum>
  <enum name="NSVariableStatusItemLength" swt_gen="true"></enum>
  <enum name="NSVerticalRuler" swt_gen="true"></enum>
  <enum name="NSViaPanelFontAction" swt_gen="true"></enum>
  <enum name="NSViewHeightSizable" swt_gen="true"></enum>
  <enum name="NSViewMaxXMargin" swt_gen="true"></enum>
  <enum name="NSViewMaxYMargin" swt_gen="true"></enum>
  <enum name="NSViewMinXMargin" swt_gen="true"></enum>
  <enum name="NSViewMinYMargin" swt_gen="true"></enum>
  <enum name="NSViewNotSizable" swt_gen="true"></enum>
  <enum name="NSViewWidthSizable" swt_gen="true"></enum>
  <enum name="NSWantsBidiLevels" swt_gen="true"></enum>
  <enum name="NSWarningAlertStyle" swt_gen="true"></enum>
  <enum name="NSWheelModeColorPanel" swt_gen="true"></enum>
  <enum name="NSWindowAbove" swt_gen="true"></enum>
  <enum name="NSWindowBackingLocationDefault" swt_gen="true"></enum>
  <enum name="NSWindowBackingLocationMainMemory" swt_gen="true"></enum>
  <enum name="NSWindowBackingLocationVideoMemory" swt_gen="true"></enum>
  <enum name="NSWindowBelow" swt_gen="true"></enum>
  <enum name="NSWindowCloseButton" swt_gen="true"></enum>
  <enum name="NSWindowCollectionBehaviorCanJoinAllSpaces" swt_gen="true"></enum>
  <enum name="NSWindowCollectionBehaviorDefault" swt_gen="true"></enum>
  <enum name="NSWindowCollectionBehaviorMoveToActiveSpace" swt_gen="true"></enum>
  <enum name="NSWindowDocumentIconButton" swt_gen="true"></enum>
  <enum name="NSWindowExposedEventType" swt_gen="true"></enum>
  <enum name="NSWindowMiniaturizeButton" swt_gen="true"></enum>
  <enum name="NSWindowMovedEventType" swt_gen="true"></enum>
  <enum name="NSWindowOut" swt_gen="true"></enum>
  <enum name="NSWindowSharingNone" swt_gen="true"></enum>
  <enum name="NSWindowSharingReadOnly" swt_gen="true"></enum>
  <enum name="NSWindowSharingReadWrite" swt_gen="true"></enum>
  <enum name="NSWindowToolbarButton" swt_gen="true"></enum>
  <enum name="NSWindowZoomButton" swt_gen="true"></enum>
  <enum name="NSWindows95InterfaceStyle" swt_gen="true"></enum>
  <enum name="NSWorkspaceLaunchAllowingClassicStartup" swt_gen="true"></enum>
  <enum name="NSWorkspaceLaunchAndHide" swt_gen="true"></enum>
  <enum name="NSWorkspaceLaunchAndHideOthers" swt_gen="true"></enum>
  <enum name="NSWorkspaceLaunchAndPrint" swt_gen="true"></enum>
  <enum name="NSWorkspaceLaunchAsync" swt_gen="true"></enum>
  <enum name="NSWorkspaceLaunchDefault" swt_gen="true"></enum>
  <enum name="NSWorkspaceLaunchInhibitingBackgroundOnly" swt_gen="true"></enum>
  <enum name="NSWorkspaceLaunchNewInstance" swt_gen="true"></enum>
  <enum name="NSWorkspaceLaunchPreferringClassic" swt_gen="true"></enum>
  <enum name="NSWorkspaceLaunchWithoutActivation" swt_gen="true"></enum>
  <enum name="NSWorkspaceLaunchWithoutAddingToRecents" swt_gen="true"></enum>
  <enum name="NSWritingDirectionLeftToRight" swt_gen="true"></enum>
  <enum name="NSWritingDirectionNatural" swt_gen="true"></enum>
  <enum name="NSWritingDirectionRightToLeft" swt_gen="true"></enum>
  <enum name="NSYearMonthDatePickerElementFlag" swt_gen="true"></enum>
  <enum name="NSYearMonthDayDatePickerElementFlag" swt_gen="true"></enum>
  <function name="NSAccessibilityActionDescription">
    <arg name="action"></arg>
    <retval></retval>
  </function>
  <function name="NSAccessibilityPostNotification">
    <arg name="element"></arg>
    <arg name="notification"></arg>
  </function>
  <function name="NSAccessibilityRaiseBadArgumentException">
    <arg name="element"></arg>
    <arg name="attribute"></arg>
    <arg name="value"></arg>
  </function>
  <function name="NSAccessibilityRoleDescription">
    <arg name="role"></arg>
    <arg name="subrole"></arg>
    <retval></retval>
  </function>
  <function name="NSAccessibilityRoleDescriptionForUIElement">
    <arg name="element"></arg>
    <retval></retval>
  </function>
  <function name="NSAccessibilityUnignoredAncestor">
    <arg name="element"></arg>
    <retval></retval>
  </function>
  <function name="NSAccessibilityUnignoredChildren">
    <arg name="originalChildren"></arg>
    <retval></retval>
  </function>
  <function name="NSAccessibilityUnignoredChildrenForOnlyChild">
    <arg name="originalChild"></arg>
    <retval></retval>
  </function>
  <function name="NSAccessibilityUnignoredDescendant">
    <arg name="element"></arg>
    <retval></retval>
  </function>
  <function name="NSApplicationLoad">
    <retval></retval>
  </function>
  <function name="NSApplicationMain">
    <arg name="argc"></arg>
    <arg name="argv"></arg>
    <retval></retval>
  </function>
  <function name="NSAvailableWindowDepths">
    <retval></retval>
  </function>
  <function name="NSBeep"></function>
  <function name="NSBeginAlertSheet">
    <arg name="title"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <arg name="docWindow"></arg>
    <arg name="modalDelegate"></arg>
    <arg name="didEndSelector"></arg>
    <arg name="didDismissSelector"></arg>
    <arg name="contextInfo"></arg>
    <arg name="msgFormat"></arg>
  </function>
  <function name="NSBeginCriticalAlertSheet">
    <arg name="title"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <arg name="docWindow"></arg>
    <arg name="modalDelegate"></arg>
    <arg name="didEndSelector"></arg>
    <arg name="didDismissSelector"></arg>
    <arg name="contextInfo"></arg>
    <arg name="msgFormat"></arg>
  </function>
  <function name="NSBeginInformationalAlertSheet">
    <arg name="title"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <arg name="docWindow"></arg>
    <arg name="modalDelegate"></arg>
    <arg name="didEndSelector"></arg>
    <arg name="didDismissSelector"></arg>
    <arg name="contextInfo"></arg>
    <arg name="msgFormat"></arg>
  </function>
  <function name="NSBestDepth">
    <arg name="colorSpace"></arg>
    <arg name="bps"></arg>
    <arg name="bpp"></arg>
    <arg name="planar"></arg>
    <arg name="exactMatch"></arg>
    <retval></retval>
  </function>
  <function name="NSBitsPerPixelFromDepth" swt_gen="true">
    <arg name="depth" swt_gen="true"></arg>
    <retval swt_gen="true"></retval>
  </function>
  <function name="NSBitsPerSampleFromDepth">
    <arg name="depth"></arg>
    <retval></retval>
  </function>
  <function name="NSColorSpaceFromDepth">
    <arg name="depth"></arg>
    <retval></retval>
  </function>
  <function name="NSConvertGlyphsToPackedGlyphs">
    <arg name="glBuf"></arg>
    <arg name="count"></arg>
    <arg name="packing"></arg>
    <arg name="packedGlyphs"></arg>
    <retval></retval>
  </function>
  <function name="NSCopyBits">
    <arg name="srcGState"></arg>
    <arg name="srcRect"></arg>
    <arg name="destPoint"></arg>
  </function>
  <function name="NSCountWindows">
    <arg name="count"></arg>
  </function>
  <function name="NSCountWindowsForContext">
    <arg name="context"></arg>
    <arg name="count"></arg>
  </function>
  <function name="NSCreateFileContentsPboardType">
    <arg name="fileType"></arg>
    <retval></retval>
  </function>
  <function name="NSCreateFilenamePboardType">
    <arg name="fileType"></arg>
    <retval></retval>
  </function>
  <function name="NSDisableScreenUpdates"></function>
  <function name="NSDottedFrameRect">
    <arg name="aRect"></arg>
  </function>
  <function name="NSDrawBitmap">
    <arg name="rect"></arg>
    <arg name="width"></arg>
    <arg name="height"></arg>
    <arg name="bps"></arg>
    <arg name="spp"></arg>
    <arg name="bpp"></arg>
    <arg name="bpr"></arg>
    <arg name="isPlanar"></arg>
    <arg name="hasAlpha"></arg>
    <arg name="colorSpaceName"></arg>
    <arg name="data"></arg>
  </function>
  <function name="NSDrawButton">
    <arg name="aRect"></arg>
    <arg name="clipRect"></arg>
  </function>
  <function name="NSDrawColorTiledRects">
    <arg name="boundsRect"></arg>
    <arg name="clipRect"></arg>
    <arg name="sides"></arg>
    <arg name="colors"></arg>
    <arg name="count"></arg>
    <retval></retval>
  </function>
  <function name="NSDrawDarkBezel">
    <arg name="aRect"></arg>
    <arg name="clipRect"></arg>
  </function>
  <function name="NSDrawGrayBezel">
    <arg name="aRect"></arg>
    <arg name="clipRect"></arg>
  </function>
  <function name="NSDrawGroove">
    <arg name="aRect"></arg>
    <arg name="clipRect"></arg>
  </function>
  <function name="NSDrawLightBezel">
    <arg name="aRect"></arg>
    <arg name="clipRect"></arg>
  </function>
  <function name="NSDrawNinePartImage">
    <arg name="frame"></arg>
    <arg name="topLeftCorner"></arg>
    <arg name="topEdgeFill"></arg>
    <arg name="topRightCorner"></arg>
    <arg name="leftEdgeFill"></arg>
    <arg name="centerFill"></arg>
    <arg name="rightEdgeFill"></arg>
    <arg name="bottomLeftCorner"></arg>
    <arg name="bottomEdgeFill"></arg>
    <arg name="bottomRightCorner"></arg>
    <arg name="op"></arg>
    <arg name="alphaFraction"></arg>
    <arg name="flipped"></arg>
  </function>
  <function name="NSDrawThreePartImage">
    <arg name="frame"></arg>
    <arg name="startCap"></arg>
    <arg name="centerFill"></arg>
    <arg name="endCap"></arg>
    <arg name="vertical"></arg>
    <arg name="op"></arg>
    <arg name="alphaFraction"></arg>
    <arg name="flipped"></arg>
  </function>
  <function name="NSDrawTiledRects">
    <arg name="boundsRect"></arg>
    <arg name="clipRect"></arg>
    <arg name="sides"></arg>
    <arg name="grays"></arg>
    <arg name="count"></arg>
    <retval></retval>
  </function>
  <function name="NSDrawWhiteBezel">
    <arg name="aRect"></arg>
    <arg name="clipRect"></arg>
  </function>
  <function name="NSDrawWindowBackground">
    <arg name="aRect"></arg>
  </function>
  <function name="NSEnableScreenUpdates"></function>
  <function name="NSEraseRect">
    <arg name="aRect"></arg>
  </function>
  <function name="NSEventMaskFromType">
    <arg name="type"></arg>
    <retval></retval>
  </function>
  <function name="NSFrameRect">
    <arg name="aRect"></arg>
  </function>
  <function name="NSFrameRectWithWidth">
    <arg name="aRect"></arg>
    <arg name="frameWidth"></arg>
  </function>
  <function name="NSFrameRectWithWidthUsingOperation">
    <arg name="aRect"></arg>
    <arg name="frameWidth"></arg>
    <arg name="op"></arg>
  </function>
  <function name="NSGetAlertPanel">
    <arg name="title"></arg>
    <arg name="msgFormat"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <retval></retval>
  </function>
  <function name="NSGetCriticalAlertPanel">
    <arg name="title"></arg>
    <arg name="msgFormat"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <retval></retval>
  </function>
  <function name="NSGetFileType">
    <arg name="pboardType"></arg>
    <retval></retval>
  </function>
  <function name="NSGetFileTypes">
    <arg name="pboardTypes"></arg>
    <retval></retval>
  </function>
  <function name="NSGetInformationalAlertPanel">
    <arg name="title"></arg>
    <arg name="msgFormat"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <retval></retval>
  </function>
  <function name="NSGetWindowServerMemory">
    <arg name="context"></arg>
    <arg name="virtualMemory"></arg>
    <arg name="windowBackingMemory"></arg>
    <arg name="windowDumpString"></arg>
    <retval></retval>
  </function>
  <function name="NSHighlightRect">
    <arg name="aRect"></arg>
  </function>
  <function name="NSInterfaceStyleForKey">
    <arg name="key"></arg>
    <arg name="responder"></arg>
    <retval></retval>
  </function>
  <function name="NSIsControllerMarker">
    <arg name="object"></arg>
    <retval></retval>
  </function>
  <function name="NSNumberOfColorComponents">
    <arg name="colorSpaceName"></arg>
    <retval></retval>
  </function>
  <function name="NSOpenGLGetOption">
    <arg name="pname"></arg>
    <arg name="param"></arg>
  </function>
  <function name="NSOpenGLGetVersion">
    <arg name="major"></arg>
    <arg name="minor"></arg>
  </function>
  <function name="NSOpenGLSetOption">
    <arg name="pname"></arg>
    <arg name="param"></arg>
  </function>
  <function name="NSPerformService">
    <arg name="itemName"></arg>
    <arg name="pboard"></arg>
    <retval></retval>
  </function>
  <function name="NSPlanarFromDepth">
    <arg name="depth"></arg>
    <retval></retval>
  </function>
  <function name="NSReadPixel">
    <arg name="passedPoint"></arg>
    <retval></retval>
  </function>
  <function name="NSRectClip">
    <arg name="aRect"></arg>
  </function>
  <function name="NSRectClipList">
    <arg name="rects"></arg>
    <arg name="count"></arg>
  </function>
  <function name="NSRectFill">
    <arg name="aRect"></arg>
  </function>
  <function name="NSRectFillList">
    <arg name="rects"></arg>
    <arg name="count"></arg>
  </function>
  <function name="NSRectFillListUsingOperation">
    <arg name="rects"></arg>
    <arg name="count"></arg>
    <arg name="op"></arg>
  </function>
  <function name="NSRectFillListWithColors">
    <arg name="rects"></arg>
    <arg name="colors"></arg>
    <arg name="num"></arg>
  </function>
  <function name="NSRectFillListWithColorsUsingOperation">
    <arg name="rects"></arg>
    <arg name="colors"></arg>
    <arg name="num"></arg>
    <arg name="op"></arg>
  </function>
  <function name="NSRectFillListWithGrays">
    <arg name="rects"></arg>
    <arg name="grays"></arg>
    <arg name="num"></arg>
  </function>
  <function name="NSRectFillUsingOperation">
    <arg name="aRect"></arg>
    <arg name="op"></arg>
  </function>
  <function name="NSRegisterServicesProvider">
    <arg name="provider"></arg>
    <arg name="name"></arg>
  </function>
  <function name="NSReleaseAlertPanel">
    <arg name="panel"></arg>
  </function>
  <function name="NSRunAlertPanel">
    <arg name="title"></arg>
    <arg name="msgFormat"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <retval></retval>
  </function>
  <function name="NSRunAlertPanelRelativeToWindow">
    <arg name="title"></arg>
    <arg name="msgFormat"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <arg name="docWindow"></arg>
    <retval></retval>
  </function>
  <function name="NSRunCriticalAlertPanel">
    <arg name="title"></arg>
    <arg name="msgFormat"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <retval></retval>
  </function>
  <function name="NSRunCriticalAlertPanelRelativeToWindow">
    <arg name="title"></arg>
    <arg name="msgFormat"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <arg name="docWindow"></arg>
    <retval></retval>
  </function>
  <function name="NSRunInformationalAlertPanel">
    <arg name="title"></arg>
    <arg name="msgFormat"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <retval></retval>
  </function>
  <function name="NSRunInformationalAlertPanelRelativeToWindow">
    <arg name="title"></arg>
    <arg name="msgFormat"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <arg name="docWindow"></arg>
    <retval></retval>
  </function>
  <function name="NSSetFocusRingStyle">
    <arg name="placement"></arg>
  </function>
  <function name="NSSetShowsServicesMenuItem">
    <arg name="itemName"></arg>
    <arg name="enabled"></arg>
    <retval></retval>
  </function>
  <function name="NSShowAnimationEffect">
    <arg name="animationEffect"></arg>
    <arg name="centerLocation"></arg>
    <arg name="size"></arg>
    <arg name="animationDelegate"></arg>
    <arg name="didEndSelector"></arg>
    <arg name="contextInfo"></arg>
  </function>
  <function name="NSShowsServicesMenuItem">
    <arg name="itemName"></arg>
    <retval></retval>
  </function>
  <function name="NSUnregisterServicesProvider">
    <arg name="name"></arg>
  </function>
  <function name="NSUpdateDynamicServices"></function>
  <function name="NSWindowList">
    <arg name="size"></arg>
    <arg name="list"></arg>
  </function>
  <function name="NSWindowListForContext">
    <arg name="context"></arg>
    <arg name="size"></arg>
    <arg name="list"></arg>
  </function>
  <class name="CIColor" swt_gen="true">
    <method selector="initWithColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true" swt_replace_return="CIColor"></retval>
    </method>
  </class>
  <class name="CIImage" swt_gen="true">
    <method selector="drawAtPoint:fromRect:operation:fraction:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <arg name="fromRect" swt_gen="true"></arg>
      <arg name="op" swt_gen="true"></arg>
      <arg name="delta" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawInRect:fromRect:operation:fraction:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="fromRect" swt_gen="true"></arg>
      <arg name="op" swt_gen="true"></arg>
      <arg name="delta" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithBitmapImageRep:" swt_gen="true">
      <arg name="bitmapImageRep" swt_gen="true"></arg>
      <retval swt_gen="true" swt_replace_return="CIImage"></retval>
    </method>
  </class>
  <class name="NSATSTypesetter" swt_gen="true" swt_superclass="NSTypesetter">
    <method selector="lineFragmentRectForProposedRect:remainingRect:" swt_gen="true">
      <arg name="proposedRect" swt_gen="true"></arg>
      <arg name="remainingRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedTypesetter" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSActionCell" swt_gen="true" swt_superclass="NSCell">
    <method selector="action" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doubleValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="floatValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="intValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="integerValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAction:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlignment:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBezeled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBordered:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setControlView:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEnabled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFloatingPointFormat:left:right:" swt_gen="true">
      <arg name="autoRange" swt_gen="true"></arg>
      <arg name="leftDigits" swt_gen="true"></arg>
      <arg name="rightDigits" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFont:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setObjectValue:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTag:" swt_gen="true">
      <arg name="anInt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTarget:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tag" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="target" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSAffineTransform" swt_gen="true">
    <method selector="appendTransform:" swt_gen="true">
      <arg name="transform" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="concat" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithTransform:" swt_gen="true">
      <arg name="transform" swt_gen="true"></arg>
      <retval swt_gen="true" swt_replace_return="NSAffineTransform"></retval>
    </method>
    <method selector="invert" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="prependTransform:" swt_gen="true">
      <arg name="transform" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rotateByDegrees:" swt_gen="true">
      <arg name="angle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rotateByRadians:" swt_gen="true">
      <arg name="angle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scaleBy:" swt_gen="true">
      <arg name="scale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scaleXBy:yBy:" swt_gen="true">
      <arg name="scaleX" swt_gen="true"></arg>
      <arg name="scaleY" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="set" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTransformStruct:" swt_gen="true">
      <arg name="transformStruct" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="transform" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="transformBezierPath:" swt_gen="true">
      <arg name="aPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="transformPoint:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="transformSize:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="transformStruct" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="translateXBy:yBy:" swt_gen="true">
      <arg name="deltaX" swt_gen="true"></arg>
      <arg name="deltaY" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSAlert" swt_gen="true">
    <method selector="accessoryView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addButtonWithTitle:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alertStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alertWithError:" swt_gen="true">
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alertWithMessageText:defaultButton:alternateButton:otherButton:informativeTextWithFormat:" swt_gen="true">
      <arg name="message" swt_gen="true"></arg>
      <arg name="defaultButton" swt_gen="true"></arg>
      <arg name="alternateButton" swt_gen="true"></arg>
      <arg name="otherButton" swt_gen="true"></arg>
      <arg name="informativeTextWithFormat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="beginSheetModalForWindow:modalDelegate:didEndSelector:contextInfo:" swt_gen="true">
      <arg name="window" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didEndSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="buttons" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="helpAnchor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="icon" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="informativeText" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="layout" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="messageText" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runModal" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAccessoryView:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlertStyle:" swt_gen="true">
      <arg name="style" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHelpAnchor:" swt_gen="true">
      <arg name="anchor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIcon:" swt_gen="true">
      <arg name="icon" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setInformativeText:" swt_gen="true">
      <arg name="informativeText" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMessageText:" swt_gen="true">
      <arg name="messageText" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShowsHelp:" swt_gen="true">
      <arg name="showsHelp" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShowsSuppressionButton:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showsHelp" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showsSuppressionButton" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="suppressionButton" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="window" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSAnimation" swt_gen="true">
    <method selector="addProgressMark:" swt_gen="true">
      <arg name="progressMark" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="animationBlockingMode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="animationCurve" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="clearStartAnimation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="clearStopAnimation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentProgress" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="duration" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="frameRate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithDuration:animationCurve:" swt_gen="true">
      <arg name="duration" swt_gen="true"></arg>
      <arg name="animationCurve" swt_gen="true"></arg>
      <retval swt_gen="true" swt_replace_return="NSAnimation"></retval>
    </method>
    <method selector="isAnimating" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="progressMarks" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeProgressMark:" swt_gen="true">
      <arg name="progressMark" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runLoopModesForAnimating" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAnimationBlockingMode:" swt_gen="true">
      <arg name="animationBlockingMode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAnimationCurve:" swt_gen="true">
      <arg name="curve" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCurrentProgress:" swt_gen="true">
      <arg name="progress" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDuration:" swt_gen="true">
      <arg name="duration" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFrameRate:" swt_gen="true">
      <arg name="framesPerSecond" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setProgressMarks:" swt_gen="true">
      <arg name="progressMarks" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="startAnimation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="startWhenAnimation:reachesProgress:" swt_gen="true">
      <arg name="animation" swt_gen="true"></arg>
      <arg name="startProgress" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stopAnimation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stopWhenAnimation:reachesProgress:" swt_gen="true">
      <arg name="animation" swt_gen="true"></arg>
      <arg name="stopProgress" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSAnimationContext" swt_gen="true">
    <method selector="beginGrouping" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="duration" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="endGrouping" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDuration:" swt_gen="true">
      <arg name="duration" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSAppleScript" swt_gen="true">
    <method selector="richTextSource" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSApplication" swt_gen="true" swt_superclass="NSResponder">
    <method selector="abortModal" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="activateContextHelpMode:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="activateIgnoringOtherApps:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addWindowsItem:title:filename:" swt_gen="true">
      <arg name="win" swt_gen="true"></arg>
      <arg name="aString" swt_gen="true"></arg>
      <arg name="isFilename" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applicationIconImage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="arrangeInFront:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="beginModalSessionForWindow:" swt_gen="true">
      <arg name="theWindow" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="beginModalSessionForWindow:relativeToWindow:" swt_gen="true">
      <arg name="theWindow" swt_gen="true"></arg>
      <arg name="docWindow" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:" swt_gen="true">
      <arg name="sheet" swt_gen="true"></arg>
      <arg name="docWindow" swt_gen="true"></arg>
      <arg name="modalDelegate" swt_gen="true"></arg>
      <arg name="didEndSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cancelUserAttentionRequest:" swt_gen="true">
      <arg name="request" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="changeWindowsItem:title:filename:" swt_gen="true">
      <arg name="win" swt_gen="true"></arg>
      <arg name="aString" swt_gen="true"></arg>
      <arg name="isFilename" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="context" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentEvent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deactivate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="detachDrawingThread:toTarget:withObject:" swt_gen="true">
      <arg name="selector" swt_gen="true"></arg>
      <arg name="target" swt_gen="true"></arg>
      <arg name="argument" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="discardEventsMatchingMask:beforeEvent:" swt_gen="true">
      <arg name="mask" swt_gen="true"></arg>
      <arg name="lastEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dockTile" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="endModalSession:" swt_gen="true">
      <arg name="session" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="endSheet:" swt_gen="true">
      <arg name="sheet" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="endSheet:returnCode:" swt_gen="true">
      <arg name="sheet" swt_gen="true"></arg>
      <arg name="returnCode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="finishLaunching" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hide:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hideOtherApplications:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isActive" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isHidden" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isRunning" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mainMenu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mainWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makeWindowsPerform:inOrder:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="miniaturizeAll:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="modalWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nextEventMatchingMask:untilDate:inMode:dequeue:" swt_gen="true">
      <arg name="mask" swt_gen="true"></arg>
      <arg name="expiration" swt_gen="true"></arg>
      <arg name="mode" swt_gen="true"></arg>
      <arg name="deqFlag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderFrontCharacterPalette:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderFrontColorPanel:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderFrontStandardAboutPanel:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderFrontStandardAboutPanelWithOptions:" swt_gen="true">
      <arg name="optionsDictionary" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderedDocuments" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderedWindows" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="postEvent:atStart:" swt_gen="true">
      <arg name="event" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="preventWindowOrdering" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registerServicesMenuSendTypes:returnTypes:" swt_gen="true">
      <arg name="sendTypes" swt_gen="true"></arg>
      <arg name="returnTypes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeWindowsItem:" swt_gen="true">
      <arg name="win" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replyToApplicationShouldTerminate:" swt_gen="true">
      <arg name="shouldTerminate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replyToOpenOrPrint:" swt_gen="true">
      <arg name="reply" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reportException:" swt_gen="true">
      <arg name="theException" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="requestUserAttention:" swt_gen="true">
      <arg name="requestType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="run" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runModalForWindow:" swt_gen="true">
      <arg name="theWindow" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runModalForWindow:relativeToWindow:" swt_gen="true">
      <arg name="theWindow" swt_gen="true"></arg>
      <arg name="docWindow" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runModalSession:" swt_gen="true">
      <arg name="session" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runPageLayout:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendAction:to:from:" swt_gen="true">
      <arg name="theAction" swt_gen="true"></arg>
      <arg name="theTarget" swt_gen="true"></arg>
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendEvent:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="servicesMenu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="servicesProvider" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setApplicationIconImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMainMenu:" swt_gen="true">
      <arg name="aMenu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setServicesMenu:" swt_gen="true">
      <arg name="aMenu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setServicesProvider:" swt_gen="true">
      <arg name="provider" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWindowsMenu:" swt_gen="true">
      <arg name="aMenu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWindowsNeedUpdate:" swt_gen="true">
      <arg name="needUpdate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedApplication" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showHelp:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stop:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stopModal" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stopModalWithCode:" swt_gen="true">
      <arg name="returnCode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="targetForAction:" swt_gen="true">
      <arg name="theAction" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="targetForAction:to:from:" swt_gen="true">
      <arg name="theAction" swt_gen="true"></arg>
      <arg name="theTarget" swt_gen="true"></arg>
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="terminate:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tryToPerform:with:" swt_gen="true">
      <arg name="anAction" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unhide:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unhideAllApplications:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unhideWithoutActivation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="updateWindows" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="updateWindowsItem:" swt_gen="true">
      <arg name="win" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="validRequestorForSendType:returnType:" swt_gen="true">
      <arg name="sendType" swt_gen="true"></arg>
      <arg name="returnType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowWithWindowNumber:" swt_gen="true">
      <arg name="windowNum" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windows" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowsMenu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSArrayController" swt_gen="true" swt_superclass="NSObjectController">
    <method selector="add:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addObjects:" swt_gen="true">
      <arg name="objects" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addSelectedObjects:" swt_gen="true">
      <arg name="objects" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addSelectionIndexes:" swt_gen="true">
      <arg name="indexes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alwaysUsesMultipleValuesMarker" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="arrangeObjects:" swt_gen="true">
      <arg name="objects" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="arrangedObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="automaticRearrangementKeyPaths" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="automaticallyRearrangesObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="avoidsEmptySelection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canInsert" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canSelectNext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canSelectPrevious" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="clearsFilterPredicateOnInsertion" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="didChangeArrangementCriteria" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="filterPredicate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insert:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertObject:atArrangedObjectIndex:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertObjects:atArrangedObjectIndexes:" swt_gen="true">
      <arg name="objects" swt_gen="true"></arg>
      <arg name="indexes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="preservesSelection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rearrangeObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="remove:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObjectAtArrangedObjectIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObjects:" swt_gen="true">
      <arg name="objects" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObjectsAtArrangedObjectIndexes:" swt_gen="true">
      <arg name="indexes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeSelectedObjects:" swt_gen="true">
      <arg name="objects" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeSelectionIndexes:" swt_gen="true">
      <arg name="indexes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectNext:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectPrevious:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectionIndex" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectionIndexes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectsInsertedObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlwaysUsesMultipleValuesMarker:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutomaticallyRearrangesObjects:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAvoidsEmptySelection:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setClearsFilterPredicateOnInsertion:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFilterPredicate:" swt_gen="true">
      <arg name="filterPredicate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPreservesSelection:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectedObjects:" swt_gen="true">
      <arg name="objects" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectionIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectionIndexes:" swt_gen="true">
      <arg name="indexes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectsInsertedObjects:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSortDescriptors:" swt_gen="true">
      <arg name="sortDescriptors" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sortDescriptors" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSAttributedString" swt_gen="true">
    <method selector="RTFDFileWrapperFromRange:documentAttributes:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="RTFDFromRange:documentAttributes:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="RTFFromRange:documentAttributes:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="URLAtIndex:effectiveRange:" swt_gen="true">
      <arg name="location" swt_gen="true"></arg>
      <arg name="effectiveRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attribute:atIndex:effectiveRange:" swt_gen="true">
      <arg name="attrName" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attribute:atIndex:longestEffectiveRange:inRange:" swt_gen="true">
      <arg name="attrName" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <arg name="rangeLimit" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributedStringWithAttachment:" swt_gen="true">
      <arg name="attachment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributedSubstringFromRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributesAtIndex:effectiveRange:" swt_gen="true">
      <arg name="location" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributesAtIndex:longestEffectiveRange:inRange:" swt_gen="true">
      <arg name="location" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <arg name="rangeLimit" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="boundingRectWithSize:options:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="containsAttachments" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataFromRange:documentAttributes:error:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="docFormatFromRange:documentAttributes:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doubleClickAtIndex:" swt_gen="true">
      <arg name="location" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawAtPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawInRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawWithRect:options:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileWrapperFromRange:documentAttributes:error:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontAttributesInRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithAttributedString:" swt_gen="true">
      <arg name="attrStr" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithData:options:documentAttributes:error:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithDocFormat:documentAttributes:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithHTML:baseURL:documentAttributes:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <arg name="base" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithHTML:documentAttributes:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithHTML:options:documentAttributes:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithPath:documentAttributes:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithRTF:documentAttributes:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithRTFD:documentAttributes:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithRTFDFileWrapper:documentAttributes:" swt_gen="true">
      <arg name="wrapper" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithString:" swt_gen="true">
      <arg name="str" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithString:attributes:" swt_gen="true">
      <arg name="str" swt_gen="true"></arg>
      <arg name="attrs" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithURL:documentAttributes:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithURL:options:documentAttributes:error:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEqualToAttributedString:" swt_gen="true">
      <arg name="other" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemNumberInTextList:atIndex:" swt_gen="true">
      <arg name="list" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="length" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineBreakBeforeIndex:withinRange:" swt_gen="true">
      <arg name="location" swt_gen="true"></arg>
      <arg name="aRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineBreakByHyphenatingBeforeIndex:withinRange:" swt_gen="true">
      <arg name="location" swt_gen="true"></arg>
      <arg name="aRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nextWordFromIndex:forward:" swt_gen="true">
      <arg name="location" swt_gen="true"></arg>
      <arg name="isForward" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeOfTextBlock:atIndex:" swt_gen="true">
      <arg name="block" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeOfTextList:atIndex:" swt_gen="true">
      <arg name="list" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeOfTextTable:atIndex:" swt_gen="true">
      <arg name="table" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerAttributesInRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="size" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="string" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textFileTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textPasteboardTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textUnfilteredFileTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textUnfilteredPasteboardTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textUnfilteredTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSBezierPath" swt_gen="true">
    <method selector="addClip" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appendBezierPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appendBezierPathWithArcFromPoint:toPoint:radius:" swt_gen="true">
      <arg name="point1" swt_gen="true"></arg>
      <arg name="point2" swt_gen="true"></arg>
      <arg name="radius" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:" swt_gen="true">
      <arg name="center" swt_gen="true"></arg>
      <arg name="radius" swt_gen="true"></arg>
      <arg name="startAngle" swt_gen="true"></arg>
      <arg name="endAngle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:clockwise:" swt_gen="true">
      <arg name="center" swt_gen="true"></arg>
      <arg name="radius" swt_gen="true"></arg>
      <arg name="startAngle" swt_gen="true"></arg>
      <arg name="endAngle" swt_gen="true"></arg>
      <arg name="clockwise" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appendBezierPathWithGlyph:inFont:" swt_gen="true">
      <arg name="glyph" swt_gen="true"></arg>
      <arg name="font" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appendBezierPathWithGlyphs:count:inFont:" swt_gen="true">
      <arg name="glyphs" swt_gen="true"></arg>
      <arg name="count" swt_gen="true"></arg>
      <arg name="font" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appendBezierPathWithOvalInRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appendBezierPathWithPackedGlyphs:" swt_gen="true">
      <arg name="packedGlyphs" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appendBezierPathWithPoints:count:" swt_gen="true">
      <arg name="points" swt_gen="true"></arg>
      <arg name="count" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appendBezierPathWithRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appendBezierPathWithRoundedRect:xRadius:yRadius:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="xRadius" swt_gen="true"></arg>
      <arg name="yRadius" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bezierPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bezierPathByFlatteningPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bezierPathByReversingPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bezierPathWithOvalInRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bezierPathWithRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bezierPathWithRoundedRect:xRadius:yRadius:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="xRadius" swt_gen="true"></arg>
      <arg name="yRadius" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bounds" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cachesBezierPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="clipRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="closePath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="containsPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlPointBounds" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentPoint" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="curveToPoint:controlPoint1:controlPoint2:" swt_gen="true">
      <arg name="endPoint" swt_gen="true"></arg>
      <arg name="controlPoint1" swt_gen="true"></arg>
      <arg name="controlPoint2" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultFlatness" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultLineCapStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultLineJoinStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultLineWidth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultMiterLimit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultWindingRule" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawPackedGlyphs:atPoint:" swt_gen="true">
      <arg name="packedGlyphs" swt_gen="true"></arg>
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="elementAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="elementAtIndex:associatedPoints:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <arg name="points" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="elementCount" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fill" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fillRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="flatness" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getLineDash:count:phase:" swt_gen="true">
      <arg name="pattern" swt_gen="true"></arg>
      <arg name="count" swt_gen="true"></arg>
      <arg name="phase" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEmpty" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineCapStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineJoinStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineToPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineWidth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="miterLimit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveToPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="relativeCurveToPoint:controlPoint1:controlPoint2:" swt_gen="true">
      <arg name="endPoint" swt_gen="true"></arg>
      <arg name="controlPoint1" swt_gen="true"></arg>
      <arg name="controlPoint2" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="relativeLineToPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="relativeMoveToPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeAllPoints" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAssociatedPoints:atIndex:" swt_gen="true">
      <arg name="points" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCachesBezierPath:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setClip" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDefaultFlatness:" swt_gen="true">
      <arg name="flatness" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDefaultLineCapStyle:" swt_gen="true">
      <arg name="lineCapStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDefaultLineJoinStyle:" swt_gen="true">
      <arg name="lineJoinStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDefaultLineWidth:" swt_gen="true">
      <arg name="lineWidth" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDefaultMiterLimit:" swt_gen="true">
      <arg name="limit" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDefaultWindingRule:" swt_gen="true">
      <arg name="windingRule" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFlatness:" swt_gen="true">
      <arg name="flatness" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLineCapStyle:" swt_gen="true">
      <arg name="lineCapStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLineDash:count:phase:" swt_gen="true">
      <arg name="pattern" swt_gen="true"></arg>
      <arg name="count" swt_gen="true"></arg>
      <arg name="phase" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLineJoinStyle:" swt_gen="true">
      <arg name="lineJoinStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLineWidth:" swt_gen="true">
      <arg name="lineWidth" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMiterLimit:" swt_gen="true">
      <arg name="miterLimit" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWindingRule:" swt_gen="true">
      <arg name="windingRule" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stroke" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="strokeLineFromPoint:toPoint:" swt_gen="true">
      <arg name="point1" swt_gen="true"></arg>
      <arg name="point2" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="strokeRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="transformUsingAffineTransform:" swt_gen="true">
      <arg name="transform" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windingRule" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSBitmapImageRep" swt_gen="true" swt_superclass="NSImageRep">
    <method selector="CGImage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="TIFFRepresentation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="TIFFRepresentationOfImageRepsInArray:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="TIFFRepresentationOfImageRepsInArray:usingCompression:factor:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <arg name="comp" swt_gen="true"></arg>
      <arg name="factor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="TIFFRepresentationUsingCompression:factor:" swt_gen="true">
      <arg name="comp" swt_gen="true"></arg>
      <arg name="factor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bitmapData" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bitmapFormat" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bitsPerPixel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bytesPerPlane" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bytesPerRow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canBeCompressedUsing:" swt_gen="true">
      <arg name="compression" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorAtX:y:" swt_gen="true">
      <arg name="x" swt_gen="true"></arg>
      <arg name="y" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorizeByMappingGray:toColor:blackMapping:whiteMapping:" swt_gen="true">
      <arg name="midPoint" swt_gen="true"></arg>
      <arg name="midPointColor" swt_gen="true"></arg>
      <arg name="shadowColor" swt_gen="true"></arg>
      <arg name="lightColor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getBitmapDataPlanes:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getCompression:factor:" swt_gen="true">
      <arg name="compression" swt_gen="true"></arg>
      <arg name="factor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getPixel:atX:y:" swt_gen="true">
      <arg name="p" swt_gen="true"></arg>
      <arg name="x" swt_gen="true"></arg>
      <arg name="y" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getTIFFCompressionTypes:count:" swt_gen="true">
      <arg name="list" swt_gen="true"></arg>
      <arg name="numTypes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageRepWithData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageRepsWithData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="incrementalLoadFromData:complete:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <arg name="complete" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initForIncrementalLoad" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bitmapFormat:bytesPerRow:bitsPerPixel:" swt_gen="true">
      <arg name="planes" swt_gen="true"></arg>
      <arg name="width" swt_gen="true"></arg>
      <arg name="height" swt_gen="true"></arg>
      <arg name="bps" swt_gen="true"></arg>
      <arg name="spp" swt_gen="true"></arg>
      <arg name="alpha" swt_gen="true"></arg>
      <arg name="isPlanar" swt_gen="true"></arg>
      <arg name="colorSpaceName" swt_gen="true"></arg>
      <arg name="bitmapFormat" swt_gen="true"></arg>
      <arg name="rBytes" swt_gen="true"></arg>
      <arg name="pBits" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bytesPerRow:bitsPerPixel:" swt_gen="true">
      <arg name="planes" swt_gen="true"></arg>
      <arg name="width" swt_gen="true"></arg>
      <arg name="height" swt_gen="true"></arg>
      <arg name="bps" swt_gen="true"></arg>
      <arg name="spp" swt_gen="true"></arg>
      <arg name="alpha" swt_gen="true"></arg>
      <arg name="isPlanar" swt_gen="true"></arg>
      <arg name="colorSpaceName" swt_gen="true"></arg>
      <arg name="rBytes" swt_gen="true"></arg>
      <arg name="pBits" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithCGImage:" swt_gen="true">
      <arg name="cgImage" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithCIImage:" swt_gen="true">
      <arg name="ciImage" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFocusedViewRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isPlanar" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedNameForTIFFCompressionType:" swt_gen="true">
      <arg name="compression" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfPlanes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="representationOfImageRepsInArray:usingType:properties:" swt_gen="true">
      <arg name="imageReps" swt_gen="true"></arg>
      <arg name="storageType" swt_gen="true"></arg>
      <arg name="properties" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="representationUsingType:properties:" swt_gen="true">
      <arg name="storageType" swt_gen="true"></arg>
      <arg name="properties" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="samplesPerPixel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setColor:atX:y:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <arg name="x" swt_gen="true"></arg>
      <arg name="y" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCompression:factor:" swt_gen="true">
      <arg name="compression" swt_gen="true"></arg>
      <arg name="factor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPixel:atX:y:" swt_gen="true">
      <arg name="p" swt_gen="true"></arg>
      <arg name="x" swt_gen="true"></arg>
      <arg name="y" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setProperty:withValue:" swt_gen="true">
      <arg name="property" swt_gen="true"></arg>
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueForProperty:" swt_gen="true">
      <arg name="property" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSBox" swt_gen="true" swt_superclass="NSView">
    <method selector="borderColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="borderRect" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="borderType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="borderWidth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="boxType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentView" swt_gen="true">
      <retval swt_gen="true" swt_replace_return="NSView"></retval>
    </method>
    <method selector="contentViewMargins" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cornerRadius" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fillColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isTransparent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBorderColor:" swt_gen="true">
      <arg name="borderColor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBorderType:" swt_gen="true">
      <arg name="aType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBorderWidth:" swt_gen="true">
      <arg name="borderWidth" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBoxType:" swt_gen="true">
      <arg name="boxType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContentView:" swt_gen="true">
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContentViewMargins:" swt_gen="true">
      <arg name="offsetSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCornerRadius:" swt_gen="true">
      <arg name="cornerRadius" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFillColor:" swt_gen="true">
      <arg name="fillColor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFrameFromContentFrame:" swt_gen="true">
      <arg name="contentFrame" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitle:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleFont:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitlePosition:" swt_gen="true">
      <arg name="aPosition" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleWithMnemonic:" swt_gen="true">
      <arg name="stringWithAmpersand" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTransparent:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sizeToFit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="title" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleCell" swt_gen="true">
      <retval swt_gen="true" swt_replace_return="NSCell"></retval>
    </method>
    <method selector="titleFont" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titlePosition" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleRect" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSBrowser" swt_gen="true" swt_superclass="NSControl">
    <method selector="acceptsArrowKeys" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addColumn" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsBranchSelection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsEmptySelection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsMultipleSelection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsTypeSelect" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="backgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canDragRowsWithIndexes:inColumn:withEvent:" swt_gen="true">
      <arg name="rowIndexes" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cellClass" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cellPrototype" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="columnContentWidthForColumnWidth:" swt_gen="true">
      <arg name="columnWidth" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="columnOfMatrix:" swt_gen="true">
      <arg name="matrix" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="columnResizingType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="columnWidthForColumnContentWidth:" swt_gen="true">
      <arg name="columnContentWidth" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="columnsAutosaveName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displayAllColumns" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displayColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doClick:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doDoubleClick:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doubleAction" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggingImageForRowsWithIndexes:inColumn:withEvent:offset:" swt_gen="true">
      <arg name="rowIndexes" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="dragImageOffset" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawTitleOfColumn:inRect:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <arg name="aRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="firstVisibleColumn" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="frameOfColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="frameOfInsideOfColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasHorizontalScroller" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isLoaded" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isTitled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lastColumn" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lastVisibleColumn" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="loadColumnZero" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="loadedCellAtRow:column:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <arg name="col" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="matrixClass" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="matrixInColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maxVisibleColumns" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minColumnWidth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfVisibleColumns" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="path" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathSeparator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathToColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="prefersAllColumnUserResizing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reloadColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeSavedColumnsWithAutosaveName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reusesColumns" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollColumnToVisible:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollColumnsLeftBy:" swt_gen="true">
      <arg name="shiftAmount" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollColumnsRightBy:" swt_gen="true">
      <arg name="shiftAmount" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollViaScroller:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectAll:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectRow:inColumn:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectRowIndexes:inColumn:" swt_gen="true">
      <arg name="indexes" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedCell" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedCellInColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedCells" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedColumn" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedRowInColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedRowIndexesInColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendAction" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendsActionOnArrowKeys" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="separatesColumns" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAcceptsArrowKeys:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsBranchSelection:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsEmptySelection:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsMultipleSelection:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsTypeSelect:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCellClass:" swt_gen="true">
      <arg name="factoryId" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCellPrototype:" swt_gen="true">
      <arg name="aCell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setColumnResizingType:" swt_gen="true">
      <arg name="columnResizingType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setColumnsAutosaveName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDoubleAction:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDraggingSourceOperationMask:forLocal:" swt_gen="true">
      <arg name="mask" swt_gen="true"></arg>
      <arg name="isLocal" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHasHorizontalScroller:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLastColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMatrixClass:" swt_gen="true">
      <arg name="factoryId" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxVisibleColumns:" swt_gen="true">
      <arg name="columnCount" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinColumnWidth:" swt_gen="true">
      <arg name="columnWidth" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPathSeparator:" swt_gen="true">
      <arg name="newString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPrefersAllColumnUserResizing:" swt_gen="true">
      <arg name="prefersAllColumnResizing" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setReusesColumns:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSendsActionOnArrowKeys:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSeparatesColumns:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTakesTitleFromPreviousColumn:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitle:ofColumn:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWidth:ofColumn:" swt_gen="true">
      <arg name="columnWidth" swt_gen="true"></arg>
      <arg name="columnIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="takesTitleFromPreviousColumn" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tile" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleFrameOfColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleHeight" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleOfColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="updateScroller" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="validateVisibleColumns" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="widthOfColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSBrowserCell" swt_gen="true" swt_superclass="NSCell">
    <method selector="alternateImage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="branchImage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="highlightColorInView:" swt_gen="true">
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="highlightedBranchImage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="image" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isLeaf" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isLoaded" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reset" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="set" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlternateImage:" swt_gen="true">
      <arg name="newAltImage" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLeaf:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLoaded:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSBundle" swt_gen="true">
    <method selector="contextHelpForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="loadNibFile:externalNameTable:withZone:" swt_gen="true">
      <arg name="fileName" swt_gen="true"></arg>
      <arg name="context" swt_gen="true"></arg>
      <arg name="zone" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="loadNibFile:externalNameTable:withZone:" swt_gen="true">
      <arg name="fileName" swt_gen="true"></arg>
      <arg name="context" swt_gen="true"></arg>
      <arg name="zone" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="loadNibNamed:owner:" swt_gen="true">
      <arg name="nibName" swt_gen="true"></arg>
      <arg name="owner" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathForImageResource:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathForSoundResource:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSButton" swt_gen="true" swt_superclass="NSControl">
    <method selector="allowsMixedState" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alternateImage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alternateTitle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributedAlternateTitle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributedTitle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bezelStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getPeriodicDelay:interval:" swt_gen="true">
      <arg name="delay" swt_gen="true"></arg>
      <arg name="interval" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="highlight:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="image" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imagePosition" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isBordered" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isTransparent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyEquivalent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyEquivalentModifierMask" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performKeyEquivalent:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsMixedState:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlternateImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlternateTitle:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributedAlternateTitle:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributedTitle:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBezelStyle:" swt_gen="true">
      <arg name="bezelStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBordered:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setButtonType:" swt_gen="true">
      <arg name="aType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImagePosition:" swt_gen="true">
      <arg name="aPosition" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setKeyEquivalent:" swt_gen="true">
      <arg name="charCode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setKeyEquivalentModifierMask:" swt_gen="true">
      <arg name="mask" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNextState" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPeriodicDelay:interval:" swt_gen="true">
      <arg name="delay" swt_gen="true"></arg>
      <arg name="interval" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShowsBorderOnlyWhileMouseInside:" swt_gen="true">
      <arg name="show" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSound:" swt_gen="true">
      <arg name="aSound" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setState:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitle:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleWithMnemonic:" swt_gen="true">
      <arg name="stringWithAmpersand" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTransparent:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showsBorderOnlyWhileMouseInside" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sound" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="state" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="title" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSButtonCell" swt_gen="true" swt_superclass="NSActionCell">
    <method selector="alternateImage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alternateMnemonic" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alternateMnemonicLocation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alternateTitle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributedAlternateTitle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributedTitle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="backgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bezelStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawBezelWithFrame:inView:" swt_gen="true">
      <arg name="frame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawImage:withFrame:inView:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="frame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawTitle:withFrame:inView:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <arg name="frame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getPeriodicDelay:interval:" swt_gen="true">
      <arg name="delay" swt_gen="true"></arg>
      <arg name="interval" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="gradientType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="highlightsBy" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageDimsWhenDisabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imagePosition" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageScaling" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isOpaque" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isTransparent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyEquivalent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyEquivalentFont" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyEquivalentModifierMask" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseEntered:" swt_gen="true">
      <arg name="event" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseExited:" swt_gen="true">
      <arg name="event" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performClick:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlternateImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlternateMnemonicLocation:" swt_gen="true">
      <arg name="location" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlternateTitle:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlternateTitleWithMnemonic:" swt_gen="true">
      <arg name="stringWithAmpersand" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributedAlternateTitle:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributedTitle:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBezelStyle:" swt_gen="true">
      <arg name="bezelStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setButtonType:" swt_gen="true">
      <arg name="aType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFont:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setGradientType:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHighlightsBy:" swt_gen="true">
      <arg name="aType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImageDimsWhenDisabled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImagePosition:" swt_gen="true">
      <arg name="aPosition" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImageScaling:" swt_gen="true">
      <arg name="scaling" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setKeyEquivalent:" swt_gen="true">
      <arg name="aKeyEquivalent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setKeyEquivalentFont:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setKeyEquivalentFont:size:" swt_gen="true">
      <arg name="fontName" swt_gen="true"></arg>
      <arg name="fontSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setKeyEquivalentModifierMask:" swt_gen="true">
      <arg name="mask" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPeriodicDelay:interval:" swt_gen="true">
      <arg name="delay" swt_gen="true"></arg>
      <arg name="interval" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShowsBorderOnlyWhileMouseInside:" swt_gen="true">
      <arg name="show" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShowsStateBy:" swt_gen="true">
      <arg name="aType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSound:" swt_gen="true">
      <arg name="aSound" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitle:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleWithMnemonic:" swt_gen="true">
      <arg name="stringWithAmpersand" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTransparent:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showsBorderOnlyWhileMouseInside" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showsStateBy" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sound" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="title" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSCIImageRep" swt_gen="true" swt_superclass="NSImageRep">
    <method selector="CIImage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageRepWithCIImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithCIImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSCachedImageRep" swt_gen="true" swt_superclass="NSImageRep">
    <method selector="initWithSize:depth:separate:alpha:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <arg name="depth" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <arg name="alpha" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithWindow:rect:" swt_gen="true">
      <arg name="win" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rect" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="window" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSCell" swt_gen="true">
    <method selector="acceptsFirstResponder" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="action" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alignment" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsEditingTextAttributes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsMixedState" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsUndo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributedStringValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="backgroundStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="baseWritingDirection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="calcDrawInfo:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cellAttribute:" swt_gen="true">
      <arg name="aParameter" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cellSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cellSizeForBounds:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="compare:" swt_gen="true">
      <arg name="otherCell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="continueTracking:at:inView:" swt_gen="true">
      <arg name="lastPoint" swt_gen="true"></arg>
      <arg name="currentPoint" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlTint" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultFocusRingType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultMenu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doubleValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawInteriorWithFrame:inView:" swt_gen="true">
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawWithExpansionFrame:inView:" swt_gen="true">
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawWithFrame:inView:" swt_gen="true">
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawingRectForBounds:" swt_gen="true">
      <arg name="theRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="editWithFrame:inView:editor:delegate:event:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <arg name="textObj" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="endEditing:" swt_gen="true">
      <arg name="textObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="entryType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="expansionFrameWithFrame:inView:" swt_gen="true">
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="floatValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="focusRingType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="font" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="formatter" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getPeriodicDelay:interval:" swt_gen="true">
      <arg name="delay" swt_gen="true"></arg>
      <arg name="interval" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasValidObjectValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="highlight:withFrame:inView:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="highlightColorWithFrame:inView:" swt_gen="true">
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hitTestForEvent:inRect:ofView:" swt_gen="true">
      <arg name="event" swt_gen="true"></arg>
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="image" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageRectForBounds:" swt_gen="true">
      <arg name="theRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="importsGraphics" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initImageCell:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initTextCell:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="intValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="integerValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="interiorBackgroundStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isBezeled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isBordered" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isContinuous" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEditable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEnabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEntryAcceptable:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isHighlighted" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isOpaque" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isScrollable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSelectable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyEquivalent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineBreakMode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menuForEvent:inRect:ofView:" swt_gen="true">
      <arg name="event" swt_gen="true"></arg>
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mnemonic" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mnemonicLocation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseDownFlags" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nextState" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performClick:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="prefersTrackingUntilMouseUp" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="refusesFirstResponder" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="representedObject" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resetCursorRect:inView:" swt_gen="true">
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectWithFrame:inView:editor:delegate:start:length:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <arg name="textObj" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <arg name="selStart" swt_gen="true"></arg>
      <arg name="selLength" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendActionOn:" swt_gen="true">
      <arg name="mask" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendsActionOnEndEditing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAction:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlignment:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsEditingTextAttributes:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsMixedState:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsUndo:" swt_gen="true">
      <arg name="allowsUndo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributedStringValue:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundStyle:" swt_gen="true">
      <arg name="style" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBaseWritingDirection:" swt_gen="true">
      <arg name="writingDirection" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBezeled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBordered:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCellAttribute:to:" swt_gen="true">
      <arg name="aParameter" swt_gen="true"></arg>
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContinuous:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setControlSize:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setControlTint:" swt_gen="true">
      <arg name="controlTint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setControlView:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDoubleValue:" swt_gen="true">
      <arg name="aDouble" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEditable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEnabled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEntryType:" swt_gen="true">
      <arg name="aType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFloatValue:" swt_gen="true">
      <arg name="aFloat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFloatingPointFormat:left:right:" swt_gen="true">
      <arg name="autoRange" swt_gen="true"></arg>
      <arg name="leftDigits" swt_gen="true"></arg>
      <arg name="rightDigits" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFocusRingType:" swt_gen="true">
      <arg name="focusRingType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFont:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFormatter:" swt_gen="true">
      <arg name="newFormatter" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHighlighted:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImportsGraphics:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIntValue:" swt_gen="true">
      <arg name="anInt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIntegerValue:" swt_gen="true">
      <arg name="anInteger" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLineBreakMode:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMenu:" swt_gen="true">
      <arg name="aMenu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMnemonicLocation:" swt_gen="true">
      <arg name="location" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNextState" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setObjectValue:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRefusesFirstResponder:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRepresentedObject:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setScrollable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSendsActionOnEndEditing:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShowsFirstResponder:" swt_gen="true">
      <arg name="showFR" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setState:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setStringValue:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTag:" swt_gen="true">
      <arg name="anInt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTarget:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitle:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleWithMnemonic:" swt_gen="true">
      <arg name="stringWithAmpersand" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTruncatesLastVisibleLine:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setType:" swt_gen="true">
      <arg name="aType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUpFieldEditorAttributes:" swt_gen="true">
      <arg name="textObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWraps:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showsFirstResponder" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="startTrackingAt:inView:" swt_gen="true">
      <arg name="startPoint" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="state" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stopTracking:at:inView:mouseIsUp:" swt_gen="true">
      <arg name="lastPoint" swt_gen="true"></arg>
      <arg name="stopPoint" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tag" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="takeDoubleValueFrom:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="takeFloatValueFrom:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="takeIntValueFrom:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="takeIntegerValueFrom:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="takeObjectValueFrom:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="takeStringValueFrom:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="target" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="title" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleRectForBounds:" swt_gen="true">
      <arg name="theRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="trackMouse:inRect:ofView:untilMouseUp:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="truncatesLastVisibleLine" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="type" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="wantsNotificationForMarkedText" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="wraps" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSClipView" swt_gen="true" swt_superclass="NSView">
    <method selector="autoscroll:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="backgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="constrainScrollPoint:" swt_gen="true">
      <arg name="newOrigin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="copiesOnScroll" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="documentCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="documentRect" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="documentView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="documentVisibleRect" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawsBackground" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollToPoint:" swt_gen="true">
      <arg name="newOrigin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCopiesOnScroll:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDocumentCursor:" swt_gen="true">
      <arg name="anObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDocumentView:" swt_gen="true">
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDrawsBackground:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="viewBoundsChanged:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="viewFrameChanged:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSCoder" swt_gen="true">
    <method selector="decodeNXColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSCollectionView" swt_gen="true" swt_superclass="NSView">
    <method selector="allowsMultipleSelection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="backgroundColors" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="content" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isFirstResponder" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSelectable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemPrototype" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maxItemSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maxNumberOfColumns" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maxNumberOfRows" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minItemSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="newItemForRepresentedObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectionIndexes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsMultipleSelection:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundColors:" swt_gen="true">
      <arg name="colors" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContent:" swt_gen="true">
      <arg name="content" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setItemPrototype:" swt_gen="true">
      <arg name="prototype" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxItemSize:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxNumberOfColumns:" swt_gen="true">
      <arg name="number" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxNumberOfRows:" swt_gen="true">
      <arg name="number" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinItemSize:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectionIndexes:" swt_gen="true">
      <arg name="indexes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSCollectionViewItem" swt_gen="true">
    <method selector="collectionView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSelected" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="representedObject" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRepresentedObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelected:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setView:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="view" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSColor" swt_gen="true">
    <method selector="alphaComponent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alternateSelectedControlColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alternateSelectedControlTextColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="blackColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="blackComponent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="blendedColorWithFraction:ofColor:" swt_gen="true">
      <arg name="fraction" swt_gen="true"></arg>
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="blueColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="blueComponent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="brightnessComponent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="brownColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="catalogNameComponent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="clearColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorForControlTint:" swt_gen="true">
      <arg name="controlTint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorFromPasteboard:" swt_gen="true">
      <arg name="pasteBoard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorNameComponent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorSpace" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorSpaceName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorUsingColorSpace:" swt_gen="true">
      <arg name="space" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorUsingColorSpaceName:" swt_gen="true">
      <arg name="colorSpace" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorUsingColorSpaceName:device:" swt_gen="true">
      <arg name="colorSpace" swt_gen="true"></arg>
      <arg name="deviceDescription" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorWithAlphaComponent:" swt_gen="true">
      <arg name="alpha" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorWithCIColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorWithCalibratedHue:saturation:brightness:alpha:" swt_gen="true">
      <arg name="hue" swt_gen="true"></arg>
      <arg name="saturation" swt_gen="true"></arg>
      <arg name="brightness" swt_gen="true"></arg>
      <arg name="alpha" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorWithCalibratedRed:green:blue:alpha:" swt_gen="true">
      <arg name="red" swt_gen="true"></arg>
      <arg name="green" swt_gen="true"></arg>
      <arg name="blue" swt_gen="true"></arg>
      <arg name="alpha" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorWithCalibratedWhite:alpha:" swt_gen="true">
      <arg name="white" swt_gen="true"></arg>
      <arg name="alpha" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorWithCatalogName:colorName:" swt_gen="true">
      <arg name="listName" swt_gen="true"></arg>
      <arg name="colorName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorWithColorSpace:components:count:" swt_gen="true">
      <arg name="space" swt_gen="true"></arg>
      <arg name="components" swt_gen="true"></arg>
      <arg name="numberOfComponents" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorWithDeviceCyan:magenta:yellow:black:alpha:" swt_gen="true">
      <arg name="cyan" swt_gen="true"></arg>
      <arg name="magenta" swt_gen="true"></arg>
      <arg name="yellow" swt_gen="true"></arg>
      <arg name="black" swt_gen="true"></arg>
      <arg name="alpha" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorWithDeviceHue:saturation:brightness:alpha:" swt_gen="true">
      <arg name="hue" swt_gen="true"></arg>
      <arg name="saturation" swt_gen="true"></arg>
      <arg name="brightness" swt_gen="true"></arg>
      <arg name="alpha" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorWithDeviceRed:green:blue:alpha:" swt_gen="true">
      <arg name="red" swt_gen="true"></arg>
      <arg name="green" swt_gen="true"></arg>
      <arg name="blue" swt_gen="true"></arg>
      <arg name="alpha" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorWithDeviceWhite:alpha:" swt_gen="true">
      <arg name="white" swt_gen="true"></arg>
      <arg name="alpha" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorWithPatternImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlAlternatingRowBackgroundColors" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlBackgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlDarkShadowColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlHighlightColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlLightHighlightColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlShadowColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlTextColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentControlTint" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cyanColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cyanComponent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="darkGrayColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="disabledControlTextColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawSwatchInRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getComponents:" swt_gen="true">
      <arg name="components" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getCyan:magenta:yellow:black:alpha:" swt_gen="true">
      <arg name="cyan" swt_gen="true"></arg>
      <arg name="magenta" swt_gen="true"></arg>
      <arg name="yellow" swt_gen="true"></arg>
      <arg name="black" swt_gen="true"></arg>
      <arg name="alpha" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getHue:saturation:brightness:alpha:" swt_gen="true">
      <arg name="hue" swt_gen="true"></arg>
      <arg name="saturation" swt_gen="true"></arg>
      <arg name="brightness" swt_gen="true"></arg>
      <arg name="alpha" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getRed:green:blue:alpha:" swt_gen="true">
      <arg name="red" swt_gen="true"></arg>
      <arg name="green" swt_gen="true"></arg>
      <arg name="blue" swt_gen="true"></arg>
      <arg name="alpha" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getWhite:alpha:" swt_gen="true">
      <arg name="white" swt_gen="true"></arg>
      <arg name="alpha" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="grayColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="greenColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="greenComponent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="gridColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="headerColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="headerTextColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="highlightColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="highlightWithLevel:" swt_gen="true">
      <arg name="val" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hueComponent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ignoresAlpha" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyboardFocusIndicatorColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="knobColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lightGrayColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedCatalogNameComponent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedColorNameComponent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="magentaColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="magentaComponent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfComponents" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orangeColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="patternImage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="purpleColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="redColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="redComponent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="saturationComponent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollBarColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="secondarySelectedControlColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedControlColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedControlTextColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedKnobColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedMenuItemColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedMenuItemTextColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedTextBackgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedTextColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="set" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFill" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIgnoresAlpha:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setStroke" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shadowColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shadowWithLevel:" swt_gen="true">
      <arg name="val" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textBackgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="whiteColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="whiteComponent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowBackgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowFrameColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowFrameTextColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToPasteboard:" swt_gen="true">
      <arg name="pasteBoard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="yellowColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="yellowComponent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSColorList" swt_gen="true">
    <method selector="allKeys" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="availableColorLists" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorListNamed:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorWithKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithName:fromFile:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertColor:key:atIndex:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <arg name="loc" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEditable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="name" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeColorWithKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeFile" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setColor:forKey:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToFile:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSColorPanel" swt_gen="true" swt_superclass="NSPanel">
    <method selector="accessoryView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alpha" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attachColorList:" swt_gen="true">
      <arg name="colorList" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="color" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="detachColorList:" swt_gen="true">
      <arg name="colorList" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dragColor:withEvent:fromView:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <arg name="theEvent" swt_gen="true"></arg>
      <arg name="sourceView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isContinuous" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAccessoryView:" swt_gen="true">
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAction:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContinuous:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMode:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPickerMask:" swt_gen="true">
      <arg name="mask" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPickerMode:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShowsAlpha:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTarget:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedColorPanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedColorPanelExists" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showsAlpha" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSColorPicker" swt_gen="true">
    <method selector="attachColorList:" swt_gen="true">
      <arg name="colorList" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="buttonToolTip" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorPanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="detachColorList:" swt_gen="true">
      <arg name="colorList" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithPickerMask:colorPanel:" swt_gen="true">
      <arg name="mask" swt_gen="true"></arg>
      <arg name="owningColorPanel" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertNewButtonImage:in:" swt_gen="true">
      <arg name="newButtonImage" swt_gen="true"></arg>
      <arg name="buttonCell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minContentSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="provideNewButtonImage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMode:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="viewSizeChanged:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSColorSpace" swt_gen="true">
    <method selector="CGColorSpace" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ICCProfileData" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="adobeRGB1998ColorSpace" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorSpaceModel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorSyncProfile" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deviceCMYKColorSpace" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deviceGrayColorSpace" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deviceRGBColorSpace" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="genericCMYKColorSpace" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="genericGrayColorSpace" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="genericRGBColorSpace" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithCGColorSpace:" swt_gen="true">
      <arg name="cgColorSpace" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithColorSyncProfile:" swt_gen="true">
      <arg name="prof" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithICCProfileData:" swt_gen="true">
      <arg name="iccData" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfColorComponents" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sRGBColorSpace" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSColorWell" swt_gen="true" swt_superclass="NSControl">
    <method selector="activate:" swt_gen="true">
      <arg name="exclusive" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="color" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deactivate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawWellInside:" swt_gen="true">
      <arg name="insideRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isActive" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isBordered" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBordered:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="takeColorFrom:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSComboBox" swt_gen="true" swt_superclass="NSTextField">
    <method selector="addItemWithObjectValue:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addItemsWithObjectValues:" swt_gen="true">
      <arg name="objects" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="completes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataSource" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deselectItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasVerticalScroller" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfItemWithObjectValue:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfSelectedItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertItemWithObjectValue:atIndex:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="intercellSpacing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isButtonBordered" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemHeight" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemObjectValueAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="noteNumberOfItemsChanged" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfVisibleItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectValueOfSelectedItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectValues" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reloadData" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeAllItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeItemWithObjectValue:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollItemAtIndexToTop:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollItemAtIndexToVisible:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectItemWithObjectValue:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setButtonBordered:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCompletes:" swt_gen="true">
      <arg name="completes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDataSource:" swt_gen="true">
      <arg name="aSource" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHasVerticalScroller:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIntercellSpacing:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setItemHeight:" swt_gen="true">
      <arg name="itemHeight" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNumberOfVisibleItems:" swt_gen="true">
      <arg name="visibleItems" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUsesDataSource:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesDataSource" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSComboBoxCell" swt_gen="true" swt_superclass="NSTextFieldCell">
    <method selector="addItemWithObjectValue:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addItemsWithObjectValues:" swt_gen="true">
      <arg name="objects" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="completedString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="completes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataSource" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deselectItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasVerticalScroller" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfItemWithObjectValue:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfSelectedItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertItemWithObjectValue:atIndex:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="intercellSpacing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isButtonBordered" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemHeight" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemObjectValueAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="noteNumberOfItemsChanged" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfVisibleItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectValueOfSelectedItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectValues" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reloadData" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeAllItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeItemWithObjectValue:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollItemAtIndexToTop:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollItemAtIndexToVisible:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectItemWithObjectValue:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setButtonBordered:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCompletes:" swt_gen="true">
      <arg name="completes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDataSource:" swt_gen="true">
      <arg name="aSource" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHasVerticalScroller:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIntercellSpacing:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setItemHeight:" swt_gen="true">
      <arg name="itemHeight" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNumberOfVisibleItems:" swt_gen="true">
      <arg name="visibleItems" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUsesDataSource:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesDataSource" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSControl" swt_gen="true" swt_superclass="NSView">
    <method selector="abortEditing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="action" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alignment" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributedStringValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="baseWritingDirection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="calcSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cell" swt_gen="true">
      <retval swt_gen="true" swt_replace_return="NSCell"></retval>
    </method>
    <method selector="cellClass" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentEditor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doubleValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawCell:" swt_gen="true">
      <arg name="aCell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawCellInside:" swt_gen="true">
      <arg name="aCell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="floatValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="font" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="formatter" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ignoresMultiClick" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFrame:" swt_gen="true">
      <arg name="frameRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="intValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="integerValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isContinuous" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEnabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseDown:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performClick:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="refusesFirstResponder" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectCell:" swt_gen="true">
      <arg name="aCell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedCell" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedTag" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendAction:to:" swt_gen="true">
      <arg name="theAction" swt_gen="true"></arg>
      <arg name="theTarget" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendActionOn:" swt_gen="true">
      <arg name="mask" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAction:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlignment:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributedStringValue:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBaseWritingDirection:" swt_gen="true">
      <arg name="writingDirection" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCell:" swt_gen="true">
      <arg name="aCell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCellClass:" swt_gen="true">
      <arg name="factoryId" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContinuous:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDoubleValue:" swt_gen="true">
      <arg name="aDouble" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEnabled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFloatValue:" swt_gen="true">
      <arg name="aFloat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFloatingPointFormat:left:right:" swt_gen="true">
      <arg name="autoRange" swt_gen="true"></arg>
      <arg name="leftDigits" swt_gen="true"></arg>
      <arg name="rightDigits" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFont:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFormatter:" swt_gen="true">
      <arg name="newFormatter" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIgnoresMultiClick:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIntValue:" swt_gen="true">
      <arg name="anInt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIntegerValue:" swt_gen="true">
      <arg name="anInteger" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNeedsDisplay" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setObjectValue:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRefusesFirstResponder:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setStringValue:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTag:" swt_gen="true">
      <arg name="anInt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTarget:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sizeToFit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tag" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="takeDoubleValueFrom:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="takeFloatValueFrom:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="takeIntValueFrom:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="takeIntegerValueFrom:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="takeObjectValueFrom:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="takeStringValueFrom:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="target" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="updateCell:" swt_gen="true">
      <arg name="aCell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="updateCellInside:" swt_gen="true">
      <arg name="aCell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="validateEditing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSController" swt_gen="true">
    <method selector="commitEditing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="commitEditingWithDelegate:didCommitSelector:contextInfo:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didCommitSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="discardEditing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEditing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectDidBeginEditing:" swt_gen="true">
      <arg name="editor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectDidEndEditing:" swt_gen="true">
      <arg name="editor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSCursor" swt_gen="true">
    <method selector="IBeamCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="arrowCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="closedHandCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="crosshairCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="disappearingItemCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hide" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hotSpot" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="image" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithImage:foregroundColorHint:backgroundColorHint:hotSpot:" swt_gen="true">
      <arg name="newImage" swt_gen="true"></arg>
      <arg name="fg" swt_gen="true"></arg>
      <arg name="bg" swt_gen="true"></arg>
      <arg name="hotSpot" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithImage:hotSpot:" swt_gen="true">
      <arg name="newImage" swt_gen="true"></arg>
      <arg name="aPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSetOnMouseEntered" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSetOnMouseExited" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseEntered:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseExited:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="openHandCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pointingHandCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pop" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pop" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="push" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resizeDownCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resizeLeftCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resizeLeftRightCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resizeRightCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resizeUpCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resizeUpDownCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="set" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHiddenUntilMouseMoves:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setOnMouseEntered:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setOnMouseExited:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unhide" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSCustomImageRep" swt_gen="true">
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawSelector" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithDrawSelector:delegate:" swt_gen="true">
      <arg name="aMethod" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSDatePicker" swt_gen="true" swt_superclass="NSControl">
    <method selector="backgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="calendar" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="datePickerElements" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="datePickerMode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="datePickerStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dateValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawsBackground" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isBezeled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isBordered" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="locale" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maxDate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minDate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBezeled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBordered:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCalendar:" swt_gen="true">
      <arg name="newCalendar" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDatePickerElements:" swt_gen="true">
      <arg name="elementFlags" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDatePickerMode:" swt_gen="true">
      <arg name="newMode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDatePickerStyle:" swt_gen="true">
      <arg name="newStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDateValue:" swt_gen="true">
      <arg name="newStartDate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDrawsBackground:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLocale:" swt_gen="true">
      <arg name="newLocale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxDate:" swt_gen="true">
      <arg name="date" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinDate:" swt_gen="true">
      <arg name="date" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTimeInterval:" swt_gen="true">
      <arg name="newTimeInterval" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTimeZone:" swt_gen="true">
      <arg name="newTimeZone" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="timeInterval" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="timeZone" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSDatePickerCell" swt_gen="true" swt_superclass="NSActionCell">
    <method selector="backgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="calendar" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="datePickerElements" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="datePickerMode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="datePickerStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dateValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawsBackground" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="locale" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maxDate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minDate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCalendar:" swt_gen="true">
      <arg name="newCalendar" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDatePickerElements:" swt_gen="true">
      <arg name="elementFlags" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDatePickerMode:" swt_gen="true">
      <arg name="newMode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDatePickerStyle:" swt_gen="true">
      <arg name="newStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDateValue:" swt_gen="true">
      <arg name="newStartDate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDrawsBackground:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLocale:" swt_gen="true">
      <arg name="newLocale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxDate:" swt_gen="true">
      <arg name="date" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinDate:" swt_gen="true">
      <arg name="date" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTimeInterval:" swt_gen="true">
      <arg name="newTimeInterval" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTimeZone:" swt_gen="true">
      <arg name="newTimeZone" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="timeInterval" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="timeZone" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSDictionaryController" swt_gen="true" swt_superclass="NSArrayController">
    <method selector="excludedKeys" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="includedKeys" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initialKey" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initialValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedKeyDictionary" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedKeyTable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="newObject" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setExcludedKeys:" swt_gen="true">
      <arg name="keys" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIncludedKeys:" swt_gen="true">
      <arg name="keys" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setInitialKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setInitialValue:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLocalizedKeyDictionary:" swt_gen="true">
      <arg name="dictionary" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLocalizedKeyTable:" swt_gen="true">
      <arg name="stringsFileName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSDockTile" swt_gen="true">
    <method selector="badgeLabel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="display" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="owner" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBadgeLabel:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContentView:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShowsApplicationBadge:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showsApplicationBadge" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="size" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSDocument" swt_gen="true">
    <method selector="addWindowController:" swt_gen="true">
      <arg name="windowController" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autosaveDocumentWithDelegate:didAutosaveSelector:contextInfo:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didAutosaveSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autosavedContentsFileURL" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autosavingFileType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canCloseDocumentWithDelegate:shouldCloseSelector:contextInfo:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="shouldCloseSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="close" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataOfType:error:" swt_gen="true">
      <arg name="typeName" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataRepresentationOfType:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displayName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileAttributesToWriteToFile:ofType:saveOperation:" swt_gen="true">
      <arg name="fullDocumentPath" swt_gen="true"></arg>
      <arg name="documentTypeName" swt_gen="true"></arg>
      <arg name="saveOperationType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileAttributesToWriteToURL:ofType:forSaveOperation:originalContentsURL:error:" swt_gen="true">
      <arg name="absoluteURL" swt_gen="true"></arg>
      <arg name="typeName" swt_gen="true"></arg>
      <arg name="saveOperation" swt_gen="true"></arg>
      <arg name="absoluteOriginalContentsURL" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileModificationDate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileNameExtensionForType:saveOperation:" swt_gen="true">
      <arg name="typeName" swt_gen="true"></arg>
      <arg name="saveOperation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileNameExtensionWasHiddenInLastRunSavePanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileTypeFromLastRunSavePanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileURL" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileWrapperOfType:error:" swt_gen="true">
      <arg name="typeName" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileWrapperRepresentationOfType:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="handleCloseScriptCommand:" swt_gen="true">
      <arg name="command" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="handlePrintScriptCommand:" swt_gen="true">
      <arg name="command" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="handleSaveScriptCommand:" swt_gen="true">
      <arg name="command" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasUnautosavedChanges" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasUndoManager" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="init" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initForURL:withContentsOfURL:ofType:error:" swt_gen="true">
      <arg name="absoluteDocumentURL" swt_gen="true"></arg>
      <arg name="absoluteDocumentContentsURL" swt_gen="true"></arg>
      <arg name="typeName" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfFile:ofType:" swt_gen="true">
      <arg name="absolutePath" swt_gen="true"></arg>
      <arg name="typeName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfURL:ofType:" swt_gen="true">
      <arg name="absoluteURL" swt_gen="true"></arg>
      <arg name="typeName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfURL:ofType:error:" swt_gen="true">
      <arg name="absoluteURL" swt_gen="true"></arg>
      <arg name="typeName" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithType:error:" swt_gen="true">
      <arg name="typeName" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isDocumentEdited" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isNativeType:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keepBackupFile" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lastComponentOfFileName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="loadDataRepresentation:ofType:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="loadFileWrapperRepresentation:ofType:" swt_gen="true">
      <arg name="wrapper" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makeWindowControllers" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectSpecifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="preparePageLayout:" swt_gen="true">
      <arg name="pageLayout" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="prepareSavePanel:" swt_gen="true">
      <arg name="savePanel" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="presentError:" swt_gen="true">
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="presentError:modalForWindow:delegate:didPresentSelector:contextInfo:" swt_gen="true">
      <arg name="error" swt_gen="true"></arg>
      <arg name="window" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didPresentSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printDocument:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printDocumentWithSettings:showPrintPanel:delegate:didPrintSelector:contextInfo:" swt_gen="true">
      <arg name="printSettings" swt_gen="true"></arg>
      <arg name="showPrintPanel" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didPrintSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printInfo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printOperationWithSettings:error:" swt_gen="true">
      <arg name="printSettings" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printShowingPrintPanel:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readFromData:ofType:error:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <arg name="typeName" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readFromFile:ofType:" swt_gen="true">
      <arg name="fileName" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readFromFileWrapper:ofType:error:" swt_gen="true">
      <arg name="fileWrapper" swt_gen="true"></arg>
      <arg name="typeName" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readFromURL:ofType:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readFromURL:ofType:error:" swt_gen="true">
      <arg name="absoluteURL" swt_gen="true"></arg>
      <arg name="typeName" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readableTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeWindowController:" swt_gen="true">
      <arg name="windowController" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="revertDocumentToSaved:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="revertToContentsOfURL:ofType:error:" swt_gen="true">
      <arg name="absoluteURL" swt_gen="true"></arg>
      <arg name="typeName" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="revertToSavedFromFile:ofType:" swt_gen="true">
      <arg name="fileName" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="revertToSavedFromURL:ofType:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runModalPageLayoutWithPrintInfo:" swt_gen="true">
      <arg name="printInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runModalPageLayoutWithPrintInfo:delegate:didRunSelector:contextInfo:" swt_gen="true">
      <arg name="printInfo" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didRunSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runModalPrintOperation:delegate:didRunSelector:contextInfo:" swt_gen="true">
      <arg name="printOperation" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didRunSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:" swt_gen="true">
      <arg name="saveOperation" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didSaveSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runPageLayout:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="saveDocument:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="saveDocumentAs:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="saveDocumentTo:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="saveDocumentWithDelegate:didSaveSelector:contextInfo:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didSaveSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="saveToFile:saveOperation:delegate:didSaveSelector:contextInfo:" swt_gen="true">
      <arg name="fileName" swt_gen="true"></arg>
      <arg name="saveOperation" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didSaveSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:" swt_gen="true">
      <arg name="absoluteURL" swt_gen="true"></arg>
      <arg name="typeName" swt_gen="true"></arg>
      <arg name="saveOperation" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didSaveSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="saveToURL:ofType:forSaveOperation:error:" swt_gen="true">
      <arg name="absoluteURL" swt_gen="true"></arg>
      <arg name="typeName" swt_gen="true"></arg>
      <arg name="saveOperation" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutosavedContentsFileURL:" swt_gen="true">
      <arg name="absoluteURL" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFileModificationDate:" swt_gen="true">
      <arg name="modificationDate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFileName:" swt_gen="true">
      <arg name="fileName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFileType:" swt_gen="true">
      <arg name="typeName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFileURL:" swt_gen="true">
      <arg name="absoluteURL" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHasUndoManager:" swt_gen="true">
      <arg name="hasUndoManager" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLastComponentOfFileName:" swt_gen="true">
      <arg name="str" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPrintInfo:" swt_gen="true">
      <arg name="printInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUndoManager:" swt_gen="true">
      <arg name="undoManager" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWindow:" swt_gen="true">
      <arg name="window" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shouldChangePrintInfo:" swt_gen="true">
      <arg name="newPrintInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shouldCloseWindowController:delegate:shouldCloseSelector:contextInfo:" swt_gen="true">
      <arg name="windowController" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="shouldCloseSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shouldRunSavePanelWithAccessoryView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showWindows" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="undoManager" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="updateChangeCount:" swt_gen="true">
      <arg name="change" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="validateUserInterfaceItem:" swt_gen="true">
      <arg name="anItem" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="willPresentError:" swt_gen="true">
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowControllerDidLoadNib:" swt_gen="true">
      <arg name="windowController" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowControllerWillLoadNib:" swt_gen="true">
      <arg name="windowController" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowControllers" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowForSheet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowNibName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writableTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writableTypesForSaveOperation:" swt_gen="true">
      <arg name="saveOperation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeSafelyToURL:ofType:forSaveOperation:error:" swt_gen="true">
      <arg name="absoluteURL" swt_gen="true"></arg>
      <arg name="typeName" swt_gen="true"></arg>
      <arg name="saveOperation" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToFile:ofType:" swt_gen="true">
      <arg name="fileName" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToFile:ofType:originalFile:saveOperation:" swt_gen="true">
      <arg name="fullDocumentPath" swt_gen="true"></arg>
      <arg name="documentTypeName" swt_gen="true"></arg>
      <arg name="fullOriginalDocumentPath" swt_gen="true"></arg>
      <arg name="saveOperationType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToURL:ofType:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToURL:ofType:error:" swt_gen="true">
      <arg name="absoluteURL" swt_gen="true"></arg>
      <arg name="typeName" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToURL:ofType:forSaveOperation:originalContentsURL:error:" swt_gen="true">
      <arg name="absoluteURL" swt_gen="true"></arg>
      <arg name="typeName" swt_gen="true"></arg>
      <arg name="saveOperation" swt_gen="true"></arg>
      <arg name="absoluteOriginalContentsURL" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeWithBackupToFile:ofType:saveOperation:" swt_gen="true">
      <arg name="fullDocumentPath" swt_gen="true"></arg>
      <arg name="documentTypeName" swt_gen="true"></arg>
      <arg name="saveOperationType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSDocumentController" swt_gen="true">
    <method selector="URLsFromRunningOpenPanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addDocument:" swt_gen="true">
      <arg name="document" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autosavingDelay" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="clearRecentDocuments:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="closeAllDocumentsWithDelegate:didCloseAllSelector:contextInfo:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didCloseAllSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentDirectory" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentDocument" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displayNameForType:" swt_gen="true">
      <arg name="typeName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="documentClassForType:" swt_gen="true">
      <arg name="typeName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="documentClassNames" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="documentForFileName:" swt_gen="true">
      <arg name="fileName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="documentForURL:" swt_gen="true">
      <arg name="absoluteURL" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="documentForWindow:" swt_gen="true">
      <arg name="window" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="documents" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileExtensionsFromType:" swt_gen="true">
      <arg name="typeName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileNamesFromRunningOpenPanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasEditedDocuments" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="init" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makeDocumentForURL:withContentsOfURL:ofType:error:" swt_gen="true">
      <arg name="absoluteDocumentURL" swt_gen="true"></arg>
      <arg name="absoluteDocumentContentsURL" swt_gen="true"></arg>
      <arg name="typeName" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makeDocumentWithContentsOfFile:ofType:" swt_gen="true">
      <arg name="fileName" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makeDocumentWithContentsOfURL:ofType:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makeDocumentWithContentsOfURL:ofType:error:" swt_gen="true">
      <arg name="absoluteURL" swt_gen="true"></arg>
      <arg name="typeName" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makeUntitledDocumentOfType:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makeUntitledDocumentOfType:error:" swt_gen="true">
      <arg name="typeName" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maximumRecentDocumentCount" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="newDocument:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="noteNewRecentDocument:" swt_gen="true">
      <arg name="document" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="noteNewRecentDocumentURL:" swt_gen="true">
      <arg name="absoluteURL" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="openDocument:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="openDocumentWithContentsOfFile:display:" swt_gen="true">
      <arg name="fileName" swt_gen="true"></arg>
      <arg name="display" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="openDocumentWithContentsOfURL:display:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="display" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="openDocumentWithContentsOfURL:display:error:" swt_gen="true">
      <arg name="absoluteURL" swt_gen="true"></arg>
      <arg name="displayDocument" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="openUntitledDocumentAndDisplay:error:" swt_gen="true">
      <arg name="displayDocument" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="openUntitledDocumentOfType:display:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <arg name="display" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="presentError:" swt_gen="true">
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="presentError:modalForWindow:delegate:didPresentSelector:contextInfo:" swt_gen="true">
      <arg name="error" swt_gen="true"></arg>
      <arg name="window" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didPresentSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="recentDocumentURLs" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeDocument:" swt_gen="true">
      <arg name="document" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reopenDocumentForURL:withContentsOfURL:error:" swt_gen="true">
      <arg name="absoluteDocumentURL" swt_gen="true"></arg>
      <arg name="absoluteDocumentContentsURL" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reviewUnsavedDocumentsWithAlertTitle:cancellable:delegate:didReviewAllSelector:contextInfo:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <arg name="cancellable" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didReviewAllSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runModalOpenPanel:forTypes:" swt_gen="true">
      <arg name="openPanel" swt_gen="true"></arg>
      <arg name="types" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="saveAllDocuments:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutosavingDelay:" swt_gen="true">
      <arg name="autosavingDelay" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShouldCreateUI:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedDocumentController" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shouldCreateUI" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="typeForContentsOfURL:error:" swt_gen="true">
      <arg name="inAbsoluteURL" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="typeFromFileExtension:" swt_gen="true">
      <arg name="fileNameExtensionOrHFSFileType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="validateUserInterfaceItem:" swt_gen="true">
      <arg name="anItem" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="willPresentError:" swt_gen="true">
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSDrawer" swt_gen="true" swt_superclass="NSResponder">
    <method selector="close" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="close:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="edge" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentSize:preferredEdge:" swt_gen="true">
      <arg name="contentSize" swt_gen="true"></arg>
      <arg name="edge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="leadingOffset" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maxContentSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minContentSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="open" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="open:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="openOnEdge:" swt_gen="true">
      <arg name="edge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parentWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="preferredEdge" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContentSize:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContentView:" swt_gen="true">
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLeadingOffset:" swt_gen="true">
      <arg name="offset" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxContentSize:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinContentSize:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setParentWindow:" swt_gen="true">
      <arg name="parent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPreferredEdge:" swt_gen="true">
      <arg name="edge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTrailingOffset:" swt_gen="true">
      <arg name="offset" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="state" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toggle:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="trailingOffset" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSEPSImageRep" swt_gen="true" swt_superclass="NSImageRep">
    <method selector="EPSRepresentation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="boundingBox" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageRepWithData:" swt_gen="true">
      <arg name="epsData" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithData:" swt_gen="true">
      <arg name="epsData" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="prepareGState" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSEvent" swt_gen="true">
    <method selector="CGEvent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="absoluteX" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="absoluteY" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="absoluteZ" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="buttonMask" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="buttonNumber" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="capabilityMask" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="characters" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="charactersIgnoringModifiers" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="clickCount" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="context" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="data1" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="data2" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deltaX" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deltaY" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deltaZ" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deviceID" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="enterExitEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:trackingNumber:userData:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <arg name="flags" swt_gen="true"></arg>
      <arg name="time" swt_gen="true"></arg>
      <arg name="wNum" swt_gen="true"></arg>
      <arg name="context" swt_gen="true"></arg>
      <arg name="eNum" swt_gen="true"></arg>
      <arg name="tNum" swt_gen="true"></arg>
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="eventNumber" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="eventRef" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="eventWithCGEvent:" swt_gen="true">
      <arg name="cgEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="eventWithEventRef:" swt_gen="true">
      <arg name="eventRef" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isARepeat" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEnteringProximity" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isMouseCoalescingEnabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyCode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyEventWithType:location:modifierFlags:timestamp:windowNumber:context:characters:charactersIgnoringModifiers:isARepeat:keyCode:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <arg name="flags" swt_gen="true"></arg>
      <arg name="time" swt_gen="true"></arg>
      <arg name="wNum" swt_gen="true"></arg>
      <arg name="context" swt_gen="true"></arg>
      <arg name="keys" swt_gen="true"></arg>
      <arg name="ukeys" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <arg name="code" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="locationInWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="modifierFlags" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:clickCount:pressure:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <arg name="flags" swt_gen="true"></arg>
      <arg name="time" swt_gen="true"></arg>
      <arg name="wNum" swt_gen="true"></arg>
      <arg name="context" swt_gen="true"></arg>
      <arg name="eNum" swt_gen="true"></arg>
      <arg name="cNum" swt_gen="true"></arg>
      <arg name="pressure" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseLocation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <arg name="flags" swt_gen="true"></arg>
      <arg name="time" swt_gen="true"></arg>
      <arg name="wNum" swt_gen="true"></arg>
      <arg name="context" swt_gen="true"></arg>
      <arg name="subtype" swt_gen="true"></arg>
      <arg name="d1" swt_gen="true"></arg>
      <arg name="d2" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pointingDeviceID" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pointingDeviceSerialNumber" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pointingDeviceType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pressure" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rotation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMouseCoalescingEnabled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="startPeriodicEventsAfterDelay:withPeriod:" swt_gen="true">
      <arg name="delay" swt_gen="true"></arg>
      <arg name="period" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stopPeriodicEvents" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="subtype" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="systemTabletID" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tabletID" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tangentialPressure" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tilt" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="timestamp" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="trackingArea" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="trackingNumber" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="type" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="uniqueID" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="userData" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="vendorDefined" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="vendorID" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="vendorPointingDeviceType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="window" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowNumber" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSFileWrapper" swt_gen="true">
    <method selector="addFileWithPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addFileWrapper:" swt_gen="true">
      <arg name="doc" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addRegularFileWithContents:preferredFilename:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <arg name="filename" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addSymbolicLinkWithDestination:preferredFilename:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="filename" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileAttributes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileWrappers" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="filename" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="icon" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initDirectoryWithFileWrappers:" swt_gen="true">
      <arg name="docs" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initRegularFileWithContents:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initSymbolicLinkWithDestination:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithSerializedRepresentation:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isDirectory" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isRegularFile" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSymbolicLink" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyForFileWrapper:" swt_gen="true">
      <arg name="doc" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="needsToBeUpdatedFromPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="preferredFilename" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="regularFileContents" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeFileWrapper:" swt_gen="true">
      <arg name="doc" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="serializedRepresentation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFileAttributes:" swt_gen="true">
      <arg name="attributes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFilename:" swt_gen="true">
      <arg name="filename" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIcon:" swt_gen="true">
      <arg name="icon" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPreferredFilename:" swt_gen="true">
      <arg name="filename" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="symbolicLinkDestination" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="updateFromPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToFile:atomically:updateFilenames:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="atomicFlag" swt_gen="true"></arg>
      <arg name="updateFilenamesFlag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSFont" swt_gen="true">
    <method selector="advancementForGlyph:" swt_gen="true">
      <arg name="ag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="afmDictionary" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ascender" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="boldSystemFontOfSize:" swt_gen="true">
      <arg name="fontSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="boundingRectForFont" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="boundingRectForGlyph:" swt_gen="true">
      <arg name="aGlyph" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="capHeight" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlContentFontOfSize:" swt_gen="true">
      <arg name="fontSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="coveredCharacterSet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultLineHeightForFont" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descender" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displayName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodingScheme" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="familyName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontDescriptor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontWithDescriptor:size:" swt_gen="true">
      <arg name="fontDescriptor" swt_gen="true"></arg>
      <arg name="fontSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontWithDescriptor:textTransform:" swt_gen="true">
      <arg name="fontDescriptor" swt_gen="true"></arg>
      <arg name="textTransform" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontWithName:matrix:" swt_gen="true">
      <arg name="fontName" swt_gen="true"></arg>
      <arg name="fontMatrix" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontWithName:size:" swt_gen="true">
      <arg name="fontName" swt_gen="true"></arg>
      <arg name="fontSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getAdvancements:forGlyphs:count:" swt_gen="true">
      <arg name="advancements" swt_gen="true"></arg>
      <arg name="glyphs" swt_gen="true"></arg>
      <arg name="glyphCount" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getAdvancements:forPackedGlyphs:length:" swt_gen="true">
      <arg name="advancements" swt_gen="true"></arg>
      <arg name="packedGlyphs" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getBoundingRects:forGlyphs:count:" swt_gen="true">
      <arg name="bounds" swt_gen="true"></arg>
      <arg name="glyphs" swt_gen="true"></arg>
      <arg name="glyphCount" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="glyphIsEncoded:" swt_gen="true">
      <arg name="aGlyph" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="glyphPacking" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="glyphWithName:" swt_gen="true">
      <arg name="aName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isBaseFont" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isFixedPitch" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="italicAngle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="labelFontOfSize:" swt_gen="true">
      <arg name="fontSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="labelFontSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="leading" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="matrix" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maximumAdvancement" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menuBarFontOfSize:" swt_gen="true">
      <arg name="fontSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menuFontOfSize:" swt_gen="true">
      <arg name="fontSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="messageFontOfSize:" swt_gen="true">
      <arg name="fontSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mostCompatibleStringEncoding" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfGlyphs" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="paletteFontOfSize:" swt_gen="true">
      <arg name="fontSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pointSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="positionOfGlyph:forCharacter:struckOverRect:" swt_gen="true">
      <arg name="aGlyph" swt_gen="true"></arg>
      <arg name="aChar" swt_gen="true"></arg>
      <arg name="aRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="positionOfGlyph:precededByGlyph:isNominal:" swt_gen="true">
      <arg name="curGlyph" swt_gen="true"></arg>
      <arg name="prevGlyph" swt_gen="true"></arg>
      <arg name="nominal" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="positionOfGlyph:struckOverGlyph:metricsExist:" swt_gen="true">
      <arg name="curGlyph" swt_gen="true"></arg>
      <arg name="prevGlyph" swt_gen="true"></arg>
      <arg name="exist" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="positionOfGlyph:struckOverRect:metricsExist:" swt_gen="true">
      <arg name="aGlyph" swt_gen="true"></arg>
      <arg name="aRect" swt_gen="true"></arg>
      <arg name="exist" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="positionOfGlyph:withRelation:toBaseGlyph:totalAdvancement:metricsExist:" swt_gen="true">
      <arg name="thisGlyph" swt_gen="true"></arg>
      <arg name="rel" swt_gen="true"></arg>
      <arg name="baseGlyph" swt_gen="true"></arg>
      <arg name="adv" swt_gen="true"></arg>
      <arg name="exist" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="positionsForCompositeSequence:numberOfGlyphs:pointArray:" swt_gen="true">
      <arg name="someGlyphs" swt_gen="true"></arg>
      <arg name="numGlyphs" swt_gen="true"></arg>
      <arg name="points" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="preferredFontNames" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printerFont" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="renderingMode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="screenFont" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="screenFontWithRenderingMode:" swt_gen="true">
      <arg name="renderingMode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="set" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setInContext:" swt_gen="true">
      <arg name="graphicsContext" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPreferredFontNames:" swt_gen="true">
      <arg name="fontNameArray" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUserFixedPitchFont:" swt_gen="true">
      <arg name="aFont" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUserFont:" swt_gen="true">
      <arg name="aFont" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="smallSystemFontSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="systemFontOfSize:" swt_gen="true">
      <arg name="fontSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="systemFontSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="systemFontSizeForControlSize:" swt_gen="true">
      <arg name="controlSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textTransform" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleBarFontOfSize:" swt_gen="true">
      <arg name="fontSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toolTipsFontOfSize:" swt_gen="true">
      <arg name="fontSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="underlinePosition" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="underlineThickness" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="useFont:" swt_gen="true">
      <arg name="fontName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="userFixedPitchFontOfSize:" swt_gen="true">
      <arg name="fontSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="userFontOfSize:" swt_gen="true">
      <arg name="fontSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="widthOfString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="xHeight" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSFontDescriptor" swt_gen="true">
    <method selector="fontAttributes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontDescriptorByAddingAttributes:" swt_gen="true">
      <arg name="attributes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontDescriptorWithFace:" swt_gen="true">
      <arg name="newFace" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontDescriptorWithFamily:" swt_gen="true">
      <arg name="newFamily" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontDescriptorWithFontAttributes:" swt_gen="true">
      <arg name="attributes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontDescriptorWithMatrix:" swt_gen="true">
      <arg name="matrix" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontDescriptorWithName:matrix:" swt_gen="true">
      <arg name="fontName" swt_gen="true"></arg>
      <arg name="matrix" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontDescriptorWithName:size:" swt_gen="true">
      <arg name="fontName" swt_gen="true"></arg>
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontDescriptorWithSize:" swt_gen="true">
      <arg name="newPointSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontDescriptorWithSymbolicTraits:" swt_gen="true">
      <arg name="symbolicTraits" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFontAttributes:" swt_gen="true">
      <arg name="attributes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="matchingFontDescriptorWithMandatoryKeys:" swt_gen="true">
      <arg name="mandatoryKeys" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="matchingFontDescriptorsWithMandatoryKeys:" swt_gen="true">
      <arg name="mandatoryKeys" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="matrix" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectForKey:" swt_gen="true">
      <arg name="anAttribute" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pointSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="postscriptName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="symbolicTraits" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSFontManager" swt_gen="true">
    <method selector="action" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addCollection:options:" swt_gen="true">
      <arg name="collectionName" swt_gen="true"></arg>
      <arg name="collectionOptions" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addFontDescriptors:toCollection:" swt_gen="true">
      <arg name="descriptors" swt_gen="true"></arg>
      <arg name="collectionName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addFontTrait:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="availableFontFamilies" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="availableFontNamesMatchingFontDescriptor:" swt_gen="true">
      <arg name="descriptor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="availableFontNamesWithTraits:" swt_gen="true">
      <arg name="someTraits" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="availableFonts" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="availableMembersOfFontFamily:" swt_gen="true">
      <arg name="fam" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="collectionNames" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertAttributes:" swt_gen="true">
      <arg name="attributes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertFont:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertFont:toFace:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <arg name="typeface" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertFont:toFamily:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <arg name="family" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertFont:toHaveTrait:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <arg name="trait" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertFont:toNotHaveTrait:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <arg name="trait" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertFont:toSize:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertFontTraits:" swt_gen="true">
      <arg name="traits" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertWeight:ofFont:" swt_gen="true">
      <arg name="upFlag" swt_gen="true"></arg>
      <arg name="fontObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentFontAction" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontDescriptorsInCollection:" swt_gen="true">
      <arg name="collectionNames" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontMenu:" swt_gen="true">
      <arg name="create" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontNamed:hasTraits:" swt_gen="true">
      <arg name="fName" swt_gen="true"></arg>
      <arg name="someTraits" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontPanel:" swt_gen="true">
      <arg name="create" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontWithFamily:traits:weight:size:" swt_gen="true">
      <arg name="family" swt_gen="true"></arg>
      <arg name="traits" swt_gen="true"></arg>
      <arg name="weight" swt_gen="true"></arg>
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEnabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isMultiple" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedNameForFamily:face:" swt_gen="true">
      <arg name="family" swt_gen="true"></arg>
      <arg name="faceKey" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="modifyFont:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="modifyFontViaPanel:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderFrontFontPanel:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderFrontStylesPanel:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeCollection:" swt_gen="true">
      <arg name="collectionName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeFontDescriptor:fromCollection:" swt_gen="true">
      <arg name="descriptor" swt_gen="true"></arg>
      <arg name="collection" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeFontTrait:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedFont" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendAction" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAction:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEnabled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFontManagerFactory:" swt_gen="true">
      <arg name="factoryId" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFontMenu:" swt_gen="true">
      <arg name="newMenu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFontPanelFactory:" swt_gen="true">
      <arg name="factoryId" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectedAttributes:isMultiple:" swt_gen="true">
      <arg name="attributes" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectedFont:isMultiple:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTarget:" swt_gen="true">
      <arg name="aTarget" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedFontManager" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="target" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="traitsOfFont:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="weightOfFont:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSFontPanel" swt_gen="true" swt_superclass="NSPanel">
    <method selector="accessoryView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEnabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="panelConvertFont:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reloadDefaultFontFamilies" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAccessoryView:" swt_gen="true">
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEnabled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPanelFont:isMultiple:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedFontPanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedFontPanelExists" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="worksWhenModal" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSForm" swt_gen="true" swt_superclass="NSMatrix">
    <method selector="addEntry:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cellAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawCellAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfCellWithTag:" swt_gen="true">
      <arg name="aTag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfSelectedItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertEntry:atIndex:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeEntryAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectTextAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBezeled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBordered:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEntryWidth:" swt_gen="true">
      <arg name="width" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFrameSize:" swt_gen="true">
      <arg name="newSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setInterlineSpacing:" swt_gen="true">
      <arg name="spacing" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextAlignment:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextBaseWritingDirection:" swt_gen="true">
      <arg name="writingDirection" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextFont:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleAlignment:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleBaseWritingDirection:" swt_gen="true">
      <arg name="writingDirection" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleFont:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSFormCell" swt_gen="true" swt_superclass="NSActionCell">
    <method selector="attributedTitle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initTextCell:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isOpaque" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="placeholderAttributedString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="placeholderString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributedTitle:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPlaceholderAttributedString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPlaceholderString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitle:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleAlignment:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleBaseWritingDirection:" swt_gen="true">
      <arg name="writingDirection" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleFont:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleWidth:" swt_gen="true">
      <arg name="width" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleWithMnemonic:" swt_gen="true">
      <arg name="stringWithAmpersand" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="title" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleAlignment" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleBaseWritingDirection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleFont" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleWidth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleWidth:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSGlyphGenerator" swt_gen="true">
    <method selector="generateGlyphsForGlyphStorage:desiredNumberOfCharacters:glyphIndex:characterIndex:" swt_gen="true">
      <arg name="glyphStorage" swt_gen="true"></arg>
      <arg name="nChars" swt_gen="true"></arg>
      <arg name="glyphIndex" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedGlyphGenerator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSGlyphInfo" swt_gen="true">
    <method selector="characterCollection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="characterIdentifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="glyphInfoWithCharacterIdentifier:collection:baseString:" swt_gen="true">
      <arg name="cid" swt_gen="true"></arg>
      <arg name="characterCollection" swt_gen="true"></arg>
      <arg name="theString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="glyphInfoWithGlyph:forFont:baseString:" swt_gen="true">
      <arg name="glyph" swt_gen="true"></arg>
      <arg name="font" swt_gen="true"></arg>
      <arg name="theString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="glyphInfoWithGlyphName:forFont:baseString:" swt_gen="true">
      <arg name="glyphName" swt_gen="true"></arg>
      <arg name="font" swt_gen="true"></arg>
      <arg name="theString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="glyphName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSGradient" swt_gen="true">
    <method selector="colorSpace" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawFromCenter:radius:toCenter:radius:options:" swt_gen="true">
      <arg name="startCenter" swt_gen="true"></arg>
      <arg name="startRadius" swt_gen="true"></arg>
      <arg name="endCenter" swt_gen="true"></arg>
      <arg name="endRadius" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawFromPoint:toPoint:options:" swt_gen="true">
      <arg name="startingPoint" swt_gen="true"></arg>
      <arg name="endingPoint" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawInBezierPath:angle:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="angle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawInBezierPath:relativeCenterPosition:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="relativeCenterPosition" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawInRect:angle:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="angle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawInRect:relativeCenterPosition:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="relativeCenterPosition" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getColor:location:atIndex:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithColors:" swt_gen="true">
      <arg name="colorArray" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithColors:atLocations:colorSpace:" swt_gen="true">
      <arg name="colorArray" swt_gen="true"></arg>
      <arg name="locations" swt_gen="true"></arg>
      <arg name="colorSpace" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithColorsAndLocations:" swt_gen="true">
      <arg name="initWithColorsAndLocations" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithStartingColor:endingColor:" swt_gen="true">
      <arg name="startingColor" swt_gen="true"></arg>
      <arg name="endingColor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="interpolatedColorAtLocation:" swt_gen="true">
      <arg name="location" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfColorStops" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSGraphicsContext" swt_gen="true">
    <method selector="CIContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorRenderingIntent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="compositingOperation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentContextDrawingToScreen" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="flushGraphics" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="focusStack" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="graphicsContextWithAttributes:" swt_gen="true">
      <arg name="attributes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="graphicsContextWithBitmapImageRep:" swt_gen="true">
      <arg name="bitmapRep" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="graphicsContextWithGraphicsPort:flipped:" swt_gen="true">
      <arg name="graphicsPort" swt_gen="true"></arg>
      <arg name="initialFlippedState" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="graphicsContextWithWindow:" swt_gen="true">
      <arg name="window" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="graphicsPort" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageInterpolation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isDrawingToScreen" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isFlipped" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="patternPhase" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="restoreGraphicsState" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="restoreGraphicsState" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="saveGraphicsState" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="saveGraphicsState" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setColorRenderingIntent:" swt_gen="true">
      <arg name="renderingIntent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCompositingOperation:" swt_gen="true">
      <arg name="operation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCurrentContext:" swt_gen="true">
      <arg name="context" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFocusStack:" swt_gen="true">
      <arg name="stack" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setGraphicsState:" swt_gen="true">
      <arg name="gState" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImageInterpolation:" swt_gen="true">
      <arg name="interpolation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPatternPhase:" swt_gen="true">
      <arg name="phase" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShouldAntialias:" swt_gen="true">
      <arg name="antialias" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shouldAntialias" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSHelpManager" swt_gen="true">
    <method selector="contextHelpForObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="findString:inBook:" swt_gen="true">
      <arg name="query" swt_gen="true"></arg>
      <arg name="book" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isContextHelpModeActive" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="openHelpAnchor:inBook:" swt_gen="true">
      <arg name="anchor" swt_gen="true"></arg>
      <arg name="book" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeContextHelpForObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContextHelp:forObject:" swt_gen="true">
      <arg name="attrString" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContextHelpModeActive:" swt_gen="true">
      <arg name="active" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedHelpManager" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showContextHelpForObject:locationHint:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <arg name="pt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSImage" swt_gen="true">
    <method selector="TIFFRepresentation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="TIFFRepresentationUsingCompression:factor:" swt_gen="true">
      <arg name="comp" swt_gen="true"></arg>
      <arg name="aFloat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addRepresentation:" swt_gen="true">
      <arg name="imageRep" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addRepresentations:" swt_gen="true">
      <arg name="imageReps" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alignmentRect" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="backgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bestRepresentationForDevice:" swt_gen="true">
      <arg name="deviceDescription" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cacheDepthMatchesImageDepth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cacheMode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canInitWithPasteboard:" swt_gen="true">
      <arg name="pasteboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cancelIncrementalLoad" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="compositeToPoint:fromRect:operation:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="op" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="compositeToPoint:fromRect:operation:fraction:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="op" swt_gen="true"></arg>
      <arg name="delta" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="compositeToPoint:operation:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <arg name="op" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="compositeToPoint:operation:fraction:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <arg name="op" swt_gen="true"></arg>
      <arg name="delta" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dissolveToPoint:fraction:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <arg name="aFloat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dissolveToPoint:fromRect:fraction:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="aFloat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawAtPoint:fromRect:operation:fraction:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <arg name="fromRect" swt_gen="true"></arg>
      <arg name="op" swt_gen="true"></arg>
      <arg name="delta" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawInRect:fromRect:operation:fraction:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="fromRect" swt_gen="true"></arg>
      <arg name="op" swt_gen="true"></arg>
      <arg name="delta" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawRepresentation:inRect:" swt_gen="true">
      <arg name="imageRep" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageFileTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageNamed:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imagePasteboardTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageUnfilteredFileTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageUnfilteredPasteboardTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageUnfilteredTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initByReferencingFile:" swt_gen="true">
      <arg name="fileName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initByReferencingURL:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfFile:" swt_gen="true">
      <arg name="fileName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfURL:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithIconRef:" swt_gen="true">
      <arg name="iconRef" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithPasteboard:" swt_gen="true">
      <arg name="pasteboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithSize:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isCachedSeparately" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isDataRetained" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isFlipped" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isTemplate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isValid" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lockFocus" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lockFocusOnRepresentation:" swt_gen="true">
      <arg name="imageRepresentation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="matchesOnMultipleResolution" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="name" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="prefersColorMatch" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="recache" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeRepresentation:" swt_gen="true">
      <arg name="imageRep" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="representations" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scalesWhenResized" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlignmentRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="aColor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCacheDepthMatchesImageDepth:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCacheMode:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCachedSeparately:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDataRetained:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFlipped:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMatchesOnMultipleResolution:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setName:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPrefersColorMatch:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setScalesWhenResized:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSize:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTemplate:" swt_gen="true">
      <arg name="isTemplate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUsesEPSOnResolutionMismatch:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="size" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unlockFocus" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesEPSOnResolutionMismatch" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSImageCell" swt_gen="true" swt_superclass="NSCell">
    <method selector="imageAlignment" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageFrameStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageScaling" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImageAlignment:" swt_gen="true">
      <arg name="newAlign" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImageFrameStyle:" swt_gen="true">
      <arg name="newStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImageScaling:" swt_gen="true">
      <arg name="newScaling" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSImageRep" swt_gen="true">
    <method selector="bitsPerSample" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canInitWithData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canInitWithPasteboard:" swt_gen="true">
      <arg name="pasteboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorSpaceName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draw" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawAtPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawInRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasAlpha" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageFileTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imagePasteboardTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageRepClassForData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageRepClassForFileType:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageRepClassForPasteboardType:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageRepClassForType:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageRepWithContentsOfFile:" swt_gen="true">
      <arg name="filename" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageRepWithContentsOfURL:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageRepWithPasteboard:" swt_gen="true">
      <arg name="pasteboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageRepsWithContentsOfFile:" swt_gen="true">
      <arg name="filename" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageRepsWithContentsOfURL:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageRepsWithPasteboard:" swt_gen="true">
      <arg name="pasteboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageUnfilteredFileTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageUnfilteredPasteboardTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageUnfilteredTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isOpaque" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pixelsHigh" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pixelsWide" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registerImageRepClass:" swt_gen="true">
      <arg name="imageRepClass" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registeredImageRepClasses" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlpha:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBitsPerSample:" swt_gen="true">
      <arg name="anInt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setColorSpaceName:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setOpaque:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPixelsHigh:" swt_gen="true">
      <arg name="anInt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPixelsWide:" swt_gen="true">
      <arg name="anInt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSize:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="size" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unregisterImageRepClass:" swt_gen="true">
      <arg name="imageRepClass" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSImageView" swt_gen="true" swt_superclass="NSControl">
    <method selector="allowsCutCopyPaste" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="animates" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="image" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageAlignment" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageFrameStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageScaling" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEditable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsCutCopyPaste:" swt_gen="true">
      <arg name="allow" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAnimates:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEditable:" swt_gen="true">
      <arg name="yn" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImage:" swt_gen="true">
      <arg name="newImage" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImageAlignment:" swt_gen="true">
      <arg name="newAlign" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImageFrameStyle:" swt_gen="true">
      <arg name="newStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImageScaling:" swt_gen="true">
      <arg name="newScaling" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSInputManager" swt_gen="true">
    <method selector="currentInputManager" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cycleToNextInputLanguage:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cycleToNextInputServerInLanguage:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="handleMouseEvent:" swt_gen="true">
      <arg name="theMouseEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="image" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithName:host:" swt_gen="true">
      <arg name="inputServerName" swt_gen="true"></arg>
      <arg name="hostName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="language" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedInputManagerName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="markedTextAbandoned:" swt_gen="true">
      <arg name="cli" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="markedTextSelectionChanged:client:" swt_gen="true">
      <arg name="newSel" swt_gen="true"></arg>
      <arg name="cli" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="server" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="wantsToDelayTextChangeNotifications" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="wantsToHandleMouseEvents" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="wantsToInterpretAllKeystrokes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSInputServer" swt_gen="true">
    <method selector="initWithDelegate:name:" swt_gen="true">
      <arg name="aDelegate" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSLayoutManager" swt_gen="true">
    <method selector="addTemporaryAttribute:value:forCharacterRange:" swt_gen="true">
      <arg name="attrName" swt_gen="true"></arg>
      <arg name="value" swt_gen="true"></arg>
      <arg name="charRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addTemporaryAttributes:forCharacterRange:" swt_gen="true">
      <arg name="attrs" swt_gen="true"></arg>
      <arg name="charRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addTextContainer:" swt_gen="true">
      <arg name="container" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsNonContiguousLayout" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attachmentSizeForGlyphAtIndex:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributedString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="backgroundLayoutEnabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="boundingRectForGlyphRange:inTextContainer:" swt_gen="true">
      <arg name="glyphRange" swt_gen="true"></arg>
      <arg name="container" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="boundsRectForTextBlock:atIndex:effectiveRange:" swt_gen="true">
      <arg name="block" swt_gen="true"></arg>
      <arg name="glyphIndex" swt_gen="true"></arg>
      <arg name="effectiveGlyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="boundsRectForTextBlock:glyphRange:" swt_gen="true">
      <arg name="block" swt_gen="true"></arg>
      <arg name="glyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="characterIndexForGlyphAtIndex:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="characterRangeForGlyphRange:actualGlyphRange:" swt_gen="true">
      <arg name="glyphRange" swt_gen="true"></arg>
      <arg name="actualGlyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultAttachmentScaling" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultBaselineOffsetForFont:" swt_gen="true">
      <arg name="theFont" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultLineHeightForFont:" swt_gen="true">
      <arg name="theFont" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deleteGlyphsInRange:" swt_gen="true">
      <arg name="glyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawBackgroundForGlyphRange:atPoint:" swt_gen="true">
      <arg name="glyphsToShow" swt_gen="true"></arg>
      <arg name="origin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawGlyphsForGlyphRange:atPoint:" swt_gen="true">
      <arg name="glyphsToShow" swt_gen="true"></arg>
      <arg name="origin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:" swt_gen="true">
      <arg name="glyphRange" swt_gen="true"></arg>
      <arg name="strikethroughVal" swt_gen="true"></arg>
      <arg name="baselineOffset" swt_gen="true"></arg>
      <arg name="lineRect" swt_gen="true"></arg>
      <arg name="lineGlyphRange" swt_gen="true"></arg>
      <arg name="containerOrigin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:" swt_gen="true">
      <arg name="glyphRange" swt_gen="true"></arg>
      <arg name="underlineVal" swt_gen="true"></arg>
      <arg name="baselineOffset" swt_gen="true"></arg>
      <arg name="lineRect" swt_gen="true"></arg>
      <arg name="lineGlyphRange" swt_gen="true"></arg>
      <arg name="containerOrigin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawsOutsideLineFragmentForGlyphAtIndex:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ensureGlyphsForCharacterRange:" swt_gen="true">
      <arg name="charRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ensureGlyphsForGlyphRange:" swt_gen="true">
      <arg name="glyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ensureLayoutForBoundingRect:inTextContainer:" swt_gen="true">
      <arg name="bounds" swt_gen="true"></arg>
      <arg name="container" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ensureLayoutForCharacterRange:" swt_gen="true">
      <arg name="charRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ensureLayoutForGlyphRange:" swt_gen="true">
      <arg name="glyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ensureLayoutForTextContainer:" swt_gen="true">
      <arg name="container" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="extraLineFragmentRect" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="extraLineFragmentTextContainer" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="extraLineFragmentUsedRect" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="firstTextView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="firstUnlaidCharacterIndex" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="firstUnlaidGlyphIndex" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fractionOfDistanceThroughGlyphForPoint:inTextContainer:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <arg name="container" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getFirstUnlaidCharacterIndex:glyphIndex:" swt_gen="true">
      <arg name="charIndex" swt_gen="true"></arg>
      <arg name="glyphIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getGlyphs:range:" swt_gen="true">
      <arg name="glyphArray" swt_gen="true"></arg>
      <arg name="glyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:" swt_gen="true">
      <arg name="glyphRange" swt_gen="true"></arg>
      <arg name="glyphBuffer" swt_gen="true"></arg>
      <arg name="charIndexBuffer" swt_gen="true"></arg>
      <arg name="inscribeBuffer" swt_gen="true"></arg>
      <arg name="elasticBuffer" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:" swt_gen="true">
      <arg name="glyphRange" swt_gen="true"></arg>
      <arg name="glyphBuffer" swt_gen="true"></arg>
      <arg name="charIndexBuffer" swt_gen="true"></arg>
      <arg name="inscribeBuffer" swt_gen="true"></arg>
      <arg name="elasticBuffer" swt_gen="true"></arg>
      <arg name="bidiLevelBuffer" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:" swt_gen="true">
      <arg name="charIndex" swt_gen="true"></arg>
      <arg name="aFlag" swt_gen="true"></arg>
      <arg name="dFlag" swt_gen="true"></arg>
      <arg name="positions" swt_gen="true"></arg>
      <arg name="charIndexes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="glyphAtIndex:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="glyphAtIndex:isValidIndex:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <arg name="isValidIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="glyphGenerator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="glyphIndexForCharacterAtIndex:" swt_gen="true">
      <arg name="charIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="glyphIndexForPoint:inTextContainer:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <arg name="container" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <arg name="container" swt_gen="true"></arg>
      <arg name="partialFraction" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="glyphRangeForBoundingRect:inTextContainer:" swt_gen="true">
      <arg name="bounds" swt_gen="true"></arg>
      <arg name="container" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:" swt_gen="true">
      <arg name="bounds" swt_gen="true"></arg>
      <arg name="container" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="glyphRangeForCharacterRange:actualCharacterRange:" swt_gen="true">
      <arg name="charRange" swt_gen="true"></arg>
      <arg name="actualCharRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="glyphRangeForTextContainer:" swt_gen="true">
      <arg name="container" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasNonContiguousLayout" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hyphenationFactor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="init" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertGlyph:atGlyphIndex:characterIndex:" swt_gen="true">
      <arg name="glyph" swt_gen="true"></arg>
      <arg name="glyphIndex" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:" swt_gen="true">
      <arg name="glyphs" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
      <arg name="glyphIndex" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertTextContainer:atIndex:" swt_gen="true">
      <arg name="container" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="intAttribute:forGlyphAtIndex:" swt_gen="true">
      <arg name="attributeTag" swt_gen="true"></arg>
      <arg name="glyphIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invalidateDisplayForCharacterRange:" swt_gen="true">
      <arg name="charRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invalidateDisplayForGlyphRange:" swt_gen="true">
      <arg name="glyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:" swt_gen="true">
      <arg name="charRange" swt_gen="true"></arg>
      <arg name="delta" swt_gen="true"></arg>
      <arg name="actualCharRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invalidateGlyphsOnLayoutInvalidationForGlyphRange:" swt_gen="true">
      <arg name="glyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invalidateLayoutForCharacterRange:actualCharacterRange:" swt_gen="true">
      <arg name="charRange" swt_gen="true"></arg>
      <arg name="actualCharRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invalidateLayoutForCharacterRange:isSoft:actualCharacterRange:" swt_gen="true">
      <arg name="charRange" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <arg name="actualCharRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isValidGlyphIndex:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="layoutManagerOwnsFirstResponderInWindow:" swt_gen="true">
      <arg name="window" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="layoutOptions" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="layoutRectForTextBlock:atIndex:effectiveRange:" swt_gen="true">
      <arg name="block" swt_gen="true"></arg>
      <arg name="glyphIndex" swt_gen="true"></arg>
      <arg name="effectiveGlyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="layoutRectForTextBlock:glyphRange:" swt_gen="true">
      <arg name="block" swt_gen="true"></arg>
      <arg name="glyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineFragmentRectForGlyphAtIndex:effectiveRange:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <arg name="effectiveGlyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <arg name="effectiveGlyphRange" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineFragmentUsedRectForGlyphAtIndex:effectiveRange:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <arg name="effectiveGlyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <arg name="effectiveGlyphRange" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="locationForGlyphAtIndex:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="notShownAttributeForGlyphAtIndex:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfGlyphs" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeOfNominallySpacedGlyphsContainingIndex:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rectArrayForCharacterRange:withinSelectedCharacterRange:inTextContainer:rectCount:" swt_gen="true">
      <arg name="charRange" swt_gen="true"></arg>
      <arg name="selCharRange" swt_gen="true"></arg>
      <arg name="container" swt_gen="true"></arg>
      <arg name="rectCount" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rectArrayForGlyphRange:withinSelectedGlyphRange:inTextContainer:rectCount:" swt_gen="true">
      <arg name="glyphRange" swt_gen="true"></arg>
      <arg name="selGlyphRange" swt_gen="true"></arg>
      <arg name="container" swt_gen="true"></arg>
      <arg name="rectCount" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeTemporaryAttribute:forCharacterRange:" swt_gen="true">
      <arg name="attrName" swt_gen="true"></arg>
      <arg name="charRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeTextContainerAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceGlyphAtIndex:withGlyph:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <arg name="newGlyph" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceTextStorage:" swt_gen="true">
      <arg name="newTextStorage" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerAccessoryViewForTextView:paragraphStyle:ruler:enabled:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <arg name="style" swt_gen="true"></arg>
      <arg name="ruler" swt_gen="true"></arg>
      <arg name="isEnabled" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerMarkersForTextView:paragraphStyle:ruler:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <arg name="style" swt_gen="true"></arg>
      <arg name="ruler" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsNonContiguousLayout:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttachmentSize:forGlyphRange:" swt_gen="true">
      <arg name="attachmentSize" swt_gen="true"></arg>
      <arg name="glyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundLayoutEnabled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBoundsRect:forTextBlock:glyphRange:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="block" swt_gen="true"></arg>
      <arg name="glyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCharacterIndex:forGlyphAtIndex:" swt_gen="true">
      <arg name="charIndex" swt_gen="true"></arg>
      <arg name="glyphIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDefaultAttachmentScaling:" swt_gen="true">
      <arg name="scaling" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDrawsOutsideLineFragment:forGlyphAtIndex:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <arg name="glyphIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setExtraLineFragmentRect:usedRect:textContainer:" swt_gen="true">
      <arg name="fragmentRect" swt_gen="true"></arg>
      <arg name="usedRect" swt_gen="true"></arg>
      <arg name="container" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setGlyphGenerator:" swt_gen="true">
      <arg name="glyphGenerator" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHyphenationFactor:" swt_gen="true">
      <arg name="factor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIntAttribute:value:forGlyphAtIndex:" swt_gen="true">
      <arg name="attributeTag" swt_gen="true"></arg>
      <arg name="val" swt_gen="true"></arg>
      <arg name="glyphIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLayoutRect:forTextBlock:glyphRange:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="block" swt_gen="true"></arg>
      <arg name="glyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLineFragmentRect:forGlyphRange:usedRect:" swt_gen="true">
      <arg name="fragmentRect" swt_gen="true"></arg>
      <arg name="glyphRange" swt_gen="true"></arg>
      <arg name="usedRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLocation:forStartOfGlyphRange:" swt_gen="true">
      <arg name="location" swt_gen="true"></arg>
      <arg name="glyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLocations:startingGlyphIndexes:count:forGlyphRange:" swt_gen="true">
      <arg name="locations" swt_gen="true"></arg>
      <arg name="glyphIndexes" swt_gen="true"></arg>
      <arg name="count" swt_gen="true"></arg>
      <arg name="glyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNotShownAttribute:forGlyphAtIndex:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <arg name="glyphIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShowsControlCharacters:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShowsInvisibleCharacters:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTemporaryAttributes:forCharacterRange:" swt_gen="true">
      <arg name="attrs" swt_gen="true"></arg>
      <arg name="charRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextContainer:forGlyphRange:" swt_gen="true">
      <arg name="container" swt_gen="true"></arg>
      <arg name="glyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextStorage:" swt_gen="true">
      <arg name="textStorage" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTypesetter:" swt_gen="true">
      <arg name="typesetter" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTypesetterBehavior:" swt_gen="true">
      <arg name="theBehavior" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUsesFontLeading:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUsesScreenFonts:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showAttachmentCell:inRect:characterIndex:" swt_gen="true">
      <arg name="cell" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="attachmentIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showPackedGlyphs:length:glyphRange:atPoint:font:color:printingAdjustment:" swt_gen="true">
      <arg name="glyphs" swt_gen="true"></arg>
      <arg name="glyphLen" swt_gen="true"></arg>
      <arg name="glyphRange" swt_gen="true"></arg>
      <arg name="point" swt_gen="true"></arg>
      <arg name="font" swt_gen="true"></arg>
      <arg name="color" swt_gen="true"></arg>
      <arg name="printingAdjustment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showsControlCharacters" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showsInvisibleCharacters" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:" swt_gen="true">
      <arg name="glyphRange" swt_gen="true"></arg>
      <arg name="strikethroughVal" swt_gen="true"></arg>
      <arg name="lineRect" swt_gen="true"></arg>
      <arg name="lineGlyphRange" swt_gen="true"></arg>
      <arg name="containerOrigin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="substituteFontForFont:" swt_gen="true">
      <arg name="originalFont" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="temporaryAttribute:atCharacterIndex:effectiveRange:" swt_gen="true">
      <arg name="attrName" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="temporaryAttribute:atCharacterIndex:longestEffectiveRange:inRange:" swt_gen="true">
      <arg name="attrName" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <arg name="rangeLimit" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="temporaryAttributesAtCharacterIndex:effectiveRange:" swt_gen="true">
      <arg name="charIndex" swt_gen="true"></arg>
      <arg name="effectiveCharRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="temporaryAttributesAtCharacterIndex:longestEffectiveRange:inRange:" swt_gen="true">
      <arg name="location" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <arg name="rangeLimit" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textContainerChangedGeometry:" swt_gen="true">
      <arg name="container" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textContainerChangedTextView:" swt_gen="true">
      <arg name="container" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textContainerForGlyphAtIndex:effectiveRange:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <arg name="effectiveGlyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <arg name="effectiveGlyphRange" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textContainers" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textStorage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textStorage:edited:range:changeInLength:invalidatedRange:" swt_gen="true">
      <arg name="str" swt_gen="true"></arg>
      <arg name="editedMask" swt_gen="true"></arg>
      <arg name="newCharRange" swt_gen="true"></arg>
      <arg name="delta" swt_gen="true"></arg>
      <arg name="invalidatedCharRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textViewForBeginningOfSelection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="typesetter" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="typesetterBehavior" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:" swt_gen="true">
      <arg name="glyphRange" swt_gen="true"></arg>
      <arg name="underlineVal" swt_gen="true"></arg>
      <arg name="lineRect" swt_gen="true"></arg>
      <arg name="lineGlyphRange" swt_gen="true"></arg>
      <arg name="containerOrigin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usedRectForTextContainer:" swt_gen="true">
      <arg name="container" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesFontLeading" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesScreenFonts" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSLevelIndicator" swt_gen="true" swt_superclass="NSControl">
    <method selector="criticalValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maxValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfMajorTickMarks" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfTickMarks" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rectOfTickMarkAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCriticalValue:" swt_gen="true">
      <arg name="criticalValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxValue:" swt_gen="true">
      <arg name="maxValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinValue:" swt_gen="true">
      <arg name="minValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNumberOfMajorTickMarks:" swt_gen="true">
      <arg name="count" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNumberOfTickMarks:" swt_gen="true">
      <arg name="count" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTickMarkPosition:" swt_gen="true">
      <arg name="position" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWarningValue:" swt_gen="true">
      <arg name="warningValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tickMarkPosition" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tickMarkValueAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="warningValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSLevelIndicatorCell" swt_gen="true" swt_superclass="NSActionCell">
    <method selector="criticalValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithLevelIndicatorStyle:" swt_gen="true">
      <arg name="levelIndicatorStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="levelIndicatorStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maxValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfMajorTickMarks" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfTickMarks" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rectOfTickMarkAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCriticalValue:" swt_gen="true">
      <arg name="criticalValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLevelIndicatorStyle:" swt_gen="true">
      <arg name="levelIndicatorStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxValue:" swt_gen="true">
      <arg name="maxValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinValue:" swt_gen="true">
      <arg name="minValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNumberOfMajorTickMarks:" swt_gen="true">
      <arg name="count" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNumberOfTickMarks:" swt_gen="true">
      <arg name="count" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTickMarkPosition:" swt_gen="true">
      <arg name="position" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWarningValue:" swt_gen="true">
      <arg name="warningValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tickMarkPosition" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tickMarkValueAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="warningValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMatrix" swt_gen="true" swt_superclass="NSControl">
    <method selector="acceptsFirstMouse:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addColumn" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addColumnWithCells:" swt_gen="true">
      <arg name="newCells" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addRow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addRowWithCells:" swt_gen="true">
      <arg name="newCells" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsEmptySelection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autosizesCells" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="backgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cellAtRow:column:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <arg name="col" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cellBackgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cellClass" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cellFrameAtRow:column:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <arg name="col" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cellSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cellWithTag:" swt_gen="true">
      <arg name="anInt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cells" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deselectAllCells" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deselectSelectedCell" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doubleAction" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawCellAtRow:column:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <arg name="col" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawsBackground" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawsCellBackground" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getNumberOfRows:columns:" swt_gen="true">
      <arg name="rowCount" swt_gen="true"></arg>
      <arg name="colCount" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getRow:column:forPoint:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <arg name="col" swt_gen="true"></arg>
      <arg name="aPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getRow:column:ofCell:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <arg name="col" swt_gen="true"></arg>
      <arg name="aCell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="highlightCell:atRow:column:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="col" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFrame:" swt_gen="true">
      <arg name="frameRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFrame:mode:cellClass:numberOfRows:numberOfColumns:" swt_gen="true">
      <arg name="frameRect" swt_gen="true"></arg>
      <arg name="aMode" swt_gen="true"></arg>
      <arg name="factoryId" swt_gen="true"></arg>
      <arg name="rowsHigh" swt_gen="true"></arg>
      <arg name="colsWide" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFrame:mode:prototype:numberOfRows:numberOfColumns:" swt_gen="true">
      <arg name="frameRect" swt_gen="true"></arg>
      <arg name="aMode" swt_gen="true"></arg>
      <arg name="aCell" swt_gen="true"></arg>
      <arg name="rowsHigh" swt_gen="true"></arg>
      <arg name="colsWide" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertColumn:withCells:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <arg name="newCells" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertRow:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertRow:withCells:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <arg name="newCells" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="intercellSpacing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isAutoscroll" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSelectionByRect" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyCell" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makeCellAtRow:column:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <arg name="col" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseDown:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseDownFlags" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfColumns" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfRows" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performKeyEquivalent:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="prototype" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="putCell:atRow:column:" swt_gen="true">
      <arg name="newCell" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="col" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeColumn:" swt_gen="true">
      <arg name="col" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeRow:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="renewRows:columns:" swt_gen="true">
      <arg name="newRows" swt_gen="true"></arg>
      <arg name="newCols" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resetCursorRects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollCellToVisibleAtRow:column:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <arg name="col" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectAll:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectCellAtRow:column:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <arg name="col" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectCellWithTag:" swt_gen="true">
      <arg name="anInt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectText:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectTextAtRow:column:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <arg name="col" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedCell" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedCells" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedColumn" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedRow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendAction" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendAction:to:forAllCells:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendDoubleAction" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsEmptySelection:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutoscroll:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutosizesCells:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCellBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCellClass:" swt_gen="true">
      <arg name="factoryId" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCellSize:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDoubleAction:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDrawsBackground:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDrawsCellBackground:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIntercellSpacing:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setKeyCell:" swt_gen="true">
      <arg name="keyCell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMode:" swt_gen="true">
      <arg name="aMode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPrototype:" swt_gen="true">
      <arg name="aCell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setScrollable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectionByRect:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectionFrom:to:anchor:highlight:" swt_gen="true">
      <arg name="startPos" swt_gen="true"></arg>
      <arg name="endPos" swt_gen="true"></arg>
      <arg name="anchorPos" swt_gen="true"></arg>
      <arg name="lit" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setState:atRow:column:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="col" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTabKeyTraversesCells:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setToolTip:forCell:" swt_gen="true">
      <arg name="toolTipString" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setValidateSize:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sizeToCells" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sortUsingFunction:context:" swt_gen="true">
      <arg name="compare" swt_gen="true">
        <arg swt_gen="true"></arg>
        <arg swt_gen="true"></arg>
        <arg swt_gen="true"></arg>
        <retval swt_gen="true"></retval>
      </arg>
      <arg name="context" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sortUsingSelector:" swt_gen="true">
      <arg name="comparator" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tabKeyTraversesCells" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textDidBeginEditing:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textDidChange:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textDidEndEditing:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textShouldBeginEditing:" swt_gen="true">
      <arg name="textObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textShouldEndEditing:" swt_gen="true">
      <arg name="textObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toolTipForCell:" swt_gen="true">
      <arg name="cell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMenu" swt_gen="true">
    <method selector="addItem:" swt_gen="true">
      <arg name="newItem" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addItemWithTitle:action:keyEquivalent:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="charCode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attachedMenu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autoenablesItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cancelTracking" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contextMenuRepresentation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="helpRequested:" swt_gen="true">
      <arg name="eventPtr" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="highlightedItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfItem:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfItemWithRepresentedObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfItemWithSubmenu:" swt_gen="true">
      <arg name="submenu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfItemWithTag:" swt_gen="true">
      <arg name="aTag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfItemWithTarget:andAction:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <arg name="actionSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfItemWithTitle:" swt_gen="true">
      <arg name="aTitle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithTitle:" swt_gen="true">
      <arg name="aTitle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertItem:atIndex:" swt_gen="true">
      <arg name="newItem" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertItemWithTitle:action:keyEquivalent:atIndex:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="charCode" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isAttached" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isTornOff" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemArray" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemChanged:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemWithTag:" swt_gen="true">
      <arg name="tag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemWithTitle:" swt_gen="true">
      <arg name="aTitle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="locationForSubmenu:" swt_gen="true">
      <arg name="aSubmenu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menuBarHeight" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menuBarVisible" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menuChangedMessagesEnabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menuRepresentation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menuZone" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performActionForItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performKeyEquivalent:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="popUpContextMenu:withEvent:forView:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="popUpContextMenu:withEvent:forView:withFont:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="view" swt_gen="true"></arg>
      <arg name="font" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeItem:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutoenablesItems:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContextMenuRepresentation:" swt_gen="true">
      <arg name="menuRep" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMenuBarVisible:" swt_gen="true">
      <arg name="visible" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMenuChangedMessagesEnabled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMenuRepresentation:" swt_gen="true">
      <arg name="menuRep" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMenuZone:" swt_gen="true">
      <arg name="aZone" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShowsStateColumn:" swt_gen="true">
      <arg name="showsState" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSubmenu:forItem:" swt_gen="true">
      <arg name="aMenu" swt_gen="true"></arg>
      <arg name="anItem" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSupermenu:" swt_gen="true">
      <arg name="supermenu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTearOffMenuRepresentation:" swt_gen="true">
      <arg name="menuRep" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitle:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showsStateColumn" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sizeToFit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="submenuAction:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="supermenu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tearOffMenuRepresentation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="title" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="update" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMenuItem" swt_gen="true">
    <method selector="action" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributedTitle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasSubmenu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="image" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indentationLevel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithTitle:action:keyEquivalent:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="charCode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isAlternate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEnabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isHidden" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isHiddenOrHasHiddenAncestor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isHighlighted" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSeparatorItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyEquivalent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyEquivalentModifierMask" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mixedStateImage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mnemonic" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mnemonicLocation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="offStateImage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="onStateImage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="representedObject" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="separatorItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAction:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlternate:" swt_gen="true">
      <arg name="isAlternate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributedTitle:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEnabled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHidden:" swt_gen="true">
      <arg name="hidden" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImage:" swt_gen="true">
      <arg name="menuImage" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIndentationLevel:" swt_gen="true">
      <arg name="indentationLevel" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setKeyEquivalent:" swt_gen="true">
      <arg name="aKeyEquivalent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setKeyEquivalentModifierMask:" swt_gen="true">
      <arg name="mask" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMenu:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMixedStateImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMnemonicLocation:" swt_gen="true">
      <arg name="location" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setOffStateImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setOnStateImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRepresentedObject:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setState:" swt_gen="true">
      <arg name="state" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSubmenu:" swt_gen="true">
      <arg name="submenu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTag:" swt_gen="true">
      <arg name="anInt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTarget:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitle:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleWithMnemonic:" swt_gen="true">
      <arg name="stringWithAmpersand" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setToolTip:" swt_gen="true">
      <arg name="toolTip" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUsesUserKeyEquivalents:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setView:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="state" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="submenu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tag" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="target" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="title" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toolTip" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="userKeyEquivalent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesUserKeyEquivalents" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="view" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMenuItemCell" swt_gen="true" swt_superclass="NSButtonCell">
    <method selector="calcSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawBorderAndBackgroundWithFrame:inView:" swt_gen="true">
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawImageWithFrame:inView:" swt_gen="true">
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawKeyEquivalentWithFrame:inView:" swt_gen="true">
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawSeparatorItemWithFrame:inView:" swt_gen="true">
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawStateImageWithFrame:inView:" swt_gen="true">
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawTitleWithFrame:inView:" swt_gen="true">
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageWidth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyEquivalentRectForBounds:" swt_gen="true">
      <arg name="cellFrame" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyEquivalentWidth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menuItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menuView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="needsDisplay" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="needsSizing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMenuItem:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMenuView:" swt_gen="true">
      <arg name="menuView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNeedsDisplay:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNeedsSizing:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stateImageRectForBounds:" swt_gen="true">
      <arg name="cellFrame" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stateImageWidth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tag" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleRectForBounds:" swt_gen="true">
      <arg name="cellFrame" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleWidth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMenuView" swt_gen="true" swt_superclass="NSView">
    <method selector="attachSubmenuForItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attachedMenu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attachedMenuView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="detachSubmenu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="font" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="highlightedItemIndex" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="horizontalEdgePadding" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageAndTitleOffset" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageAndTitleWidth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfItemAtPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initAsTearOff" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFrame:" swt_gen="true">
      <arg name="frame" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="innerRect" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isAttached" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isHorizontal" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isTornOff" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemAdded:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemChanged:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemRemoved:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyEquivalentOffset" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyEquivalentWidth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="locationForSubmenu:" swt_gen="true">
      <arg name="aSubmenu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menuBarHeight" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menuItemCellForItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="needsSizing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performActionWithHighlightingForItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rectOfItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFont:" swt_gen="true">
      <arg name="font" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHighlightedItemIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHorizontal:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHorizontalEdgePadding:" swt_gen="true">
      <arg name="pad" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMenu:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMenuItemCell:forItemAtIndex:" swt_gen="true">
      <arg name="cell" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNeedsDisplayForItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNeedsSizing:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWindowFrameForAttachingToRect:onScreen:preferredEdge:popUpSelectedItem:" swt_gen="true">
      <arg name="screenRect" swt_gen="true"></arg>
      <arg name="screen" swt_gen="true"></arg>
      <arg name="edge" swt_gen="true"></arg>
      <arg name="selectedItemIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sizeToFit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stateImageOffset" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stateImageWidth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="trackWithEvent:" swt_gen="true">
      <arg name="event" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="update" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMovie" swt_gen="true">
    <method selector="QTMovie" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="URL" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canInitWithPasteboard:" swt_gen="true">
      <arg name="pasteboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithMovie:" swt_gen="true">
      <arg name="movie" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithPasteboard:" swt_gen="true">
      <arg name="pasteboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithURL:byReference:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="byRef" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="movieUnfilteredFileTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="movieUnfilteredPasteboardTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMovieView" swt_gen="true" swt_superclass="NSView">
    <method selector="clear:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="copy:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cut:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delete:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="gotoBeginning:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="gotoEnd:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="gotoPosterFrame:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isControllerVisible" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEditable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isMuted" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isPlaying" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="loopMode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="movie" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="movieController" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="movieRect" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="paste:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="playsEveryFrame" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="playsSelectionOnly" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resizeWithMagnification:" swt_gen="true">
      <arg name="magnification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectAll:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEditable:" swt_gen="true">
      <arg name="editable" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLoopMode:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMovie:" swt_gen="true">
      <arg name="movie" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMuted:" swt_gen="true">
      <arg name="mute" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPlaysEveryFrame:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPlaysSelectionOnly:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRate:" swt_gen="true">
      <arg name="rate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVolume:" swt_gen="true">
      <arg name="volume" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showController:adjustingSize:" swt_gen="true">
      <arg name="show" swt_gen="true"></arg>
      <arg name="adjustSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sizeForMagnification:" swt_gen="true">
      <arg name="magnification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="start:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stepBack:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stepForward:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stop:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="volume" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMutableAttributedString" swt_gen="true" swt_superclass="NSAttributedString">
    <method selector="addAttribute:value:range:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="value" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addAttributes:range:" swt_gen="true">
      <arg name="attrs" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appendAttributedString:" swt_gen="true">
      <arg name="attrString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applyFontTraits:range:" swt_gen="true">
      <arg name="traitMask" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="beginEditing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deleteCharactersInRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="endEditing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fixAttachmentAttributeInRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fixAttributesInRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fixFontAttributeInRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fixParagraphStyleAttributeInRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertAttributedString:atIndex:" swt_gen="true">
      <arg name="attrString" swt_gen="true"></arg>
      <arg name="loc" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mutableString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readFromData:options:documentAttributes:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readFromData:options:documentAttributes:error:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <arg name="opts" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readFromURL:options:documentAttributes:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readFromURL:options:documentAttributes:error:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="opts" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeAttribute:range:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceCharactersInRange:withAttributedString:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <arg name="attrString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceCharactersInRange:withString:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <arg name="str" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlignment:range:" swt_gen="true">
      <arg name="alignment" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributedString:" swt_gen="true">
      <arg name="attrString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributes:range:" swt_gen="true">
      <arg name="attrs" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBaseWritingDirection:range:" swt_gen="true">
      <arg name="writingDirection" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="subscriptRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="superscriptRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unscriptRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="updateAttachmentsFromPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMutableParagraphStyle" swt_gen="true" swt_superclass="NSParagraphStyle">
    <method selector="addTabStop:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeTabStop:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlignment:" swt_gen="true">
      <arg name="alignment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBaseWritingDirection:" swt_gen="true">
      <arg name="writingDirection" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDefaultTabInterval:" swt_gen="true">
      <arg name="aFloat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFirstLineHeadIndent:" swt_gen="true">
      <arg name="aFloat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHeadIndent:" swt_gen="true">
      <arg name="aFloat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHeaderLevel:" swt_gen="true">
      <arg name="level" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHyphenationFactor:" swt_gen="true">
      <arg name="aFactor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLineBreakMode:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLineHeightMultiple:" swt_gen="true">
      <arg name="aFloat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLineSpacing:" swt_gen="true">
      <arg name="aFloat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaximumLineHeight:" swt_gen="true">
      <arg name="aFloat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinimumLineHeight:" swt_gen="true">
      <arg name="aFloat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setParagraphSpacing:" swt_gen="true">
      <arg name="aFloat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setParagraphSpacingBefore:" swt_gen="true">
      <arg name="aFloat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setParagraphStyle:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTabStops:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTailIndent:" swt_gen="true">
      <arg name="aFloat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextBlocks:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextLists:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTighteningFactorForTruncation:" swt_gen="true">
      <arg name="aFactor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSNib" swt_gen="true">
    <method selector="initWithContentsOfURL:" swt_gen="true">
      <arg name="nibFileURL" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithNibNamed:bundle:" swt_gen="true">
      <arg name="nibName" swt_gen="true"></arg>
      <arg name="bundle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="instantiateNibWithExternalNameTable:" swt_gen="true">
      <arg name="externalNameTable" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="instantiateNibWithOwner:topLevelObjects:" swt_gen="true">
      <arg name="owner" swt_gen="true"></arg>
      <arg name="topLevelObjects" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSNibConnector" swt_gen="true">
    <method selector="destination" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="establishConnection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="label" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceObject:withObject:" swt_gen="true">
      <arg name="oldObject" swt_gen="true"></arg>
      <arg name="newObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDestination:" swt_gen="true">
      <arg name="destination" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLabel:" swt_gen="true">
      <arg name="label" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSource:" swt_gen="true">
      <arg name="source" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="source" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSNibControlConnector" swt_gen="true">
    <method selector="establishConnection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSNibOutletConnector" swt_gen="true" swt_superclass="NSNibConnector">
    <method selector="establishConnection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSObject" swt_gen="true">
    <method selector="accessibilityActionDescription:" swt_gen="true">
      <arg name="action" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="accessibilityActionNames" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="accessibilityAttributeNames" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="accessibilityAttributeValue:" swt_gen="true">
      <arg name="attribute" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="accessibilityAttributeValue:forParameter:" swt_gen="true">
      <arg name="attribute" swt_gen="true"></arg>
      <arg name="parameter" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="accessibilityFocusedUIElement" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="accessibilityHitTest:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="accessibilityIsAttributeSettable:" swt_gen="true">
      <arg name="attribute" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="accessibilityIsIgnored" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="accessibilityParameterizedAttributeNames" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="accessibilityPerformAction:" swt_gen="true">
      <arg name="action" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="accessibilitySetOverrideValue:forAttribute:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="attribute" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="accessibilitySetValue:forAttribute:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="attribute" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="action" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="activeConversationChanged:toNewConversation:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="newConversation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="activeConversationWillChange:fromOldConversation:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="oldConversation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alertShowHelp:" swt_gen="true">
      <arg name="alert" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alphaControlAddedOrRemoved:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="animation:didReachProgressMark:" swt_gen="true">
      <arg name="animation" swt_gen="true"></arg>
      <arg name="progress" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="animation:valueForProgress:" swt_gen="true">
      <arg name="animation" swt_gen="true"></arg>
      <arg name="progress" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="animationDidEnd:" swt_gen="true">
      <arg name="animation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="animationDidStop:" swt_gen="true">
      <arg name="animation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="animationForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="animationShouldStart:" swt_gen="true">
      <arg name="animation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="animations" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="animator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="application:delegateHandlesKey:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="application:openFile:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="filename" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="application:openFileWithoutUI:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="filename" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="application:openFiles:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="filenames" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="application:openTempFile:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="filename" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="application:printFile:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="filename" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="application:printFiles:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="filenames" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="application:printFiles:withSettings:showPrintPanels:" swt_gen="true">
      <arg name="application" swt_gen="true"></arg>
      <arg name="fileNames" swt_gen="true"></arg>
      <arg name="printSettings" swt_gen="true"></arg>
      <arg name="showPrintPanels" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="application:willPresentError:" swt_gen="true">
      <arg name="application" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applicationDidBecomeActive:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applicationDidChangeScreenParameters:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applicationDidFinishLaunching:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applicationDidHide:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applicationDidResignActive:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applicationDidUnhide:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applicationDidUpdate:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applicationDockMenu:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applicationOpenUntitledFile:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applicationShouldHandleReopen:hasVisibleWindows:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applicationShouldOpenUntitledFile:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applicationShouldTerminate:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applicationShouldTerminateAfterLastWindowClosed:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applicationWillBecomeActive:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applicationWillFinishLaunching:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applicationWillHide:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applicationWillResignActive:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applicationWillTerminate:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applicationWillUnhide:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applicationWillUpdate:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attachColorList:" swt_gen="true">
      <arg name="colorList" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attachment" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributedString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributedString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributedSubstringForProposedRange:actualRange:" swt_gen="true">
      <arg name="aRange" swt_gen="true"></arg>
      <arg name="actualRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributedSubstringFromRange:" swt_gen="true">
      <arg name="theRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="awakeFromNib" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="baselineDeltaForCharacterAtIndex:" swt_gen="true">
      <arg name="anIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bind:toObject:withKeyPath:options:" swt_gen="true">
      <arg name="binding" swt_gen="true"></arg>
      <arg name="observable" swt_gen="true"></arg>
      <arg name="keyPath" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="browser:acceptDrop:atRow:column:dropOperation:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="info" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <arg name="dropOperation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="browser:canDragRowsWithIndexes:inColumn:withEvent:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="rowIndexes" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="browser:createRowsForColumn:inMatrix:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <arg name="matrix" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="rowIndexes" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="dragImageOffset" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="browser:isColumnValid:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="dropDestination" swt_gen="true"></arg>
      <arg name="rowIndexes" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="startRow" swt_gen="true"></arg>
      <arg name="endRow" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <arg name="searchString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="browser:numberOfRowsInColumn:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="browser:selectCellWithString:inColumn:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="title" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="browser:selectRow:inColumn:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="browser:shouldShowCellExpansionForRow:column:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="browser:shouldSizeColumn:forUserResize:toWidth:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="columnIndex" swt_gen="true"></arg>
      <arg name="forUserResize" swt_gen="true"></arg>
      <arg name="suggestedWidth" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="browser:shouldTypeSelectForEvent:withCurrentSearchString:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="searchString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="browser:sizeToFitWidthOfColumn:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="columnIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="browser:titleOfColumn:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="browser:typeSelectStringForRow:inColumn:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="browser:validateDrop:proposedRow:column:dropOperation:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="info" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <arg name="dropOperation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="browser:willDisplayCell:atRow:column:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="browser:writeRowsWithIndexes:inColumn:toPasteboard:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="rowIndexes" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <arg name="pasteboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="browserColumnConfigurationDidChange:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="browserDidScroll:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="browserWillScroll:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="buttonToolTip" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canBeDisabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cellBaselineOffset" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:" swt_gen="true">
      <arg name="textContainer" swt_gen="true"></arg>
      <arg name="lineFrag" swt_gen="true"></arg>
      <arg name="position" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cellSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="changeColor:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="changeFont:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="changeSpelling:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="characterIndexForPoint:" swt_gen="true">
      <arg name="thePoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="characterIndexForPoint:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="comboBox:completedString:" swt_gen="true">
      <arg name="aComboBox" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="comboBox:indexOfItemWithStringValue:" swt_gen="true">
      <arg name="aComboBox" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="comboBox:objectValueForItemAtIndex:" swt_gen="true">
      <arg name="aComboBox" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="comboBoxCell:completedString:" swt_gen="true">
      <arg name="aComboBoxCell" swt_gen="true"></arg>
      <arg name="uncompletedString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="comboBoxCell:indexOfItemWithStringValue:" swt_gen="true">
      <arg name="aComboBoxCell" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="comboBoxCell:objectValueForItemAtIndex:" swt_gen="true">
      <arg name="aComboBoxCell" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="comboBoxSelectionDidChange:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="comboBoxSelectionIsChanging:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="comboBoxWillDismiss:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="comboBoxWillPopUp:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="commitEditing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="commitEditingWithDelegate:didCommitSelector:contextInfo:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didCommitSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="concludeDragOperation:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="control:didFailToFormatString:errorDescription:" swt_gen="true">
      <arg name="control" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="control:didFailToValidatePartialString:errorDescription:" swt_gen="true">
      <arg name="control" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="control:isValidObject:" swt_gen="true">
      <arg name="control" swt_gen="true"></arg>
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="control:textShouldBeginEditing:" swt_gen="true">
      <arg name="control" swt_gen="true"></arg>
      <arg name="fieldEditor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="control:textShouldEndEditing:" swt_gen="true">
      <arg name="control" swt_gen="true"></arg>
      <arg name="fieldEditor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="control:textView:completions:forPartialWordRange:indexOfSelectedItem:" swt_gen="true">
      <arg name="control" swt_gen="true"></arg>
      <arg name="textView" swt_gen="true"></arg>
      <arg name="words" swt_gen="true"></arg>
      <arg name="charRange" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="control:textView:doCommandBySelector:" swt_gen="true">
      <arg name="control" swt_gen="true"></arg>
      <arg name="textView" swt_gen="true"></arg>
      <arg name="commandSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlTextDidBeginEditing:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlTextDidChange:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlTextDidEndEditing:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="conversationIdentifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentMode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="datePickerCell:validateProposedDateValue:timeInterval:" swt_gen="true">
      <arg name="aDatePickerCell" swt_gen="true"></arg>
      <arg name="proposedDateValue" swt_gen="true"></arg>
      <arg name="proposedTimeInterval" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultAnimationForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultPlaceholderForMarker:withBinding:" swt_gen="true">
      <arg name="marker" swt_gen="true"></arg>
      <arg name="binding" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="detachColorList:" swt_gen="true">
      <arg name="colorList" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="discardEditing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doCommandBySelector:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doCommandBySelector:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doCommandBySelector:client:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggedImage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggedImage:beganAt:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="screenPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggedImage:endedAt:deposited:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="screenPoint" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggedImage:endedAt:operation:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="screenPoint" swt_gen="true"></arg>
      <arg name="operation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggedImage:movedTo:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="screenPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggedImageLocation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggingDestinationWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggingEnded:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggingEntered:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggingExited:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggingLocation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggingPasteboard" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggingSequenceNumber" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggingSource" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggingSourceOperationMask" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggingSourceOperationMaskForLocal:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggingUpdated:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawWithFrame:inView:" swt_gen="true">
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawWithFrame:inView:characterIndex:" swt_gen="true">
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawWithFrame:inView:characterIndex:layoutManager:" swt_gen="true">
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
      <arg name="layoutManager" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawerDidClose:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawerDidOpen:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawerShouldClose:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawerShouldOpen:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawerWillClose:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawerWillOpen:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawerWillResizeContents:toSize:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="contentSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="exposeBinding:" swt_gen="true">
      <arg name="binding" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="exposedBindings" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="firstRectForCharacterRange:" swt_gen="true">
      <arg name="theRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="firstRectForCharacterRange:actualRange:" swt_gen="true">
      <arg name="aRange" swt_gen="true"></arg>
      <arg name="actualRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontManager:willIncludeFont:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="fontName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fractionOfDistanceThroughGlyphForPoint:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasMarkedText" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasMarkedText" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="highlight:withFrame:inView:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ignoreModifierKeysWhileDragging" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ignoreSpelling:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="image:didLoadPartOfRepresentation:withValidRows:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="rep" swt_gen="true"></arg>
      <arg name="rows" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="image:didLoadRepresentation:withStatus:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="rep" swt_gen="true"></arg>
      <arg name="status" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="image:didLoadRepresentationHeader:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="rep" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="image:willLoadRepresentation:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="rep" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageDidNotDraw:inRect:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="aRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="infoForBinding:" swt_gen="true">
      <arg name="binding" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithPickerMask:colorPanel:" swt_gen="true">
      <arg name="mask" swt_gen="true"></arg>
      <arg name="owningColorPanel" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="inputClientBecomeActive:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="inputClientDisabled:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="inputClientEnabled:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="inputClientResignActive:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:" swt_gen="true">
      <arg name="glyphs" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
      <arg name="glyphIndex" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertNewButtonImage:in:" swt_gen="true">
      <arg name="newButtonImage" swt_gen="true"></arg>
      <arg name="buttonCell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertText:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertText:client:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertText:replacementRange:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <arg name="replacementRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isExplicitlyIncluded" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="key" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyPathsForValuesAffectingPreview" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="layoutManager:didCompleteLayoutForTextContainer:atEnd:" swt_gen="true">
      <arg name="layoutManager" swt_gen="true"></arg>
      <arg name="textContainer" swt_gen="true"></arg>
      <arg name="layoutFinishedFlag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:" swt_gen="true">
      <arg name="layoutManager" swt_gen="true"></arg>
      <arg name="attrs" swt_gen="true"></arg>
      <arg name="toScreen" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
      <arg name="effectiveCharRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="layoutManagerDidInvalidateLayout:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="layoutOptions" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedKey" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedSummaryItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="markedRange" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="markedRange" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="markedTextAbandoned:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="markedTextSelectionChanged:client:" swt_gen="true">
      <arg name="newSel" swt_gen="true"></arg>
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menu:updateItem:atIndex:shouldCancel:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <arg name="shouldCancel" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menu:willHighlightItem:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menuDidClose:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menuHasKeyEquivalent:forEvent:target:action:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="target" swt_gen="true"></arg>
      <arg name="action" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menuNeedsUpdate:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menuWillOpen:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minContentSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseDownOnCharacterIndex:atCoordinate:withModifier:client:" swt_gen="true">
      <arg name="theIndex" swt_gen="true"></arg>
      <arg name="thePoint" swt_gen="true"></arg>
      <arg name="theFlags" swt_gen="true"></arg>
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:" swt_gen="true">
      <arg name="theIndex" swt_gen="true"></arg>
      <arg name="thePoint" swt_gen="true"></arg>
      <arg name="theFlags" swt_gen="true"></arg>
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseUpOnCharacterIndex:atCoordinate:withModifier:client:" swt_gen="true">
      <arg name="theIndex" swt_gen="true"></arg>
      <arg name="thePoint" swt_gen="true"></arg>
      <arg name="theFlags" swt_gen="true"></arg>
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="namesOfPromisedFilesDroppedAtDestination:" swt_gen="true">
      <arg name="dropDestination" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="namesOfPromisedFilesDroppedAtDestination:" swt_gen="true">
      <arg name="dropDestination" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfItemsInComboBox:" swt_gen="true">
      <arg name="aComboBox" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfItemsInComboBoxCell:" swt_gen="true">
      <arg name="comboBoxCell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfItemsInMenu:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfRowsInTableView:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectDidBeginEditing:" swt_gen="true">
      <arg name="editor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectDidEndEditing:" swt_gen="true">
      <arg name="editor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="optionDescriptionsForBinding:" swt_gen="true">
      <arg name="aBinding" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:acceptDrop:item:childIndex:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="info" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:child:ofItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:dataCellForTableColumn:item:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:didClickTableColumn:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:didDragTableColumn:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:heightOfRowByItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:isGroupItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:isItemExpandable:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:itemForPersistentObject:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:mouseDownInHeaderOfTableColumn:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="dropDestination" swt_gen="true"></arg>
      <arg name="items" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:nextTypeSelectMatchFromItem:toItem:forString:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="startItem" swt_gen="true"></arg>
      <arg name="endItem" swt_gen="true"></arg>
      <arg name="searchString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:numberOfChildrenOfItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:objectValueForTableColumn:byItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:persistentObjectForItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:selectionIndexesForProposedSelection:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="proposedSelectionIndexes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:setObjectValue:forTableColumn:byItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:shouldCollapseItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:shouldEditTableColumn:item:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:shouldExpandItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:shouldSelectItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:shouldSelectTableColumn:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:shouldShowCellExpansionForTableColumn:item:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:shouldTrackCell:forTableColumn:item:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:shouldTypeSelectForEvent:withCurrentSearchString:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="searchString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:sortDescriptorsDidChange:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="oldDescriptors" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <arg name="mouseLocation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:typeSelectStringForTableColumn:item:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:validateDrop:proposedItem:proposedChildIndex:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="info" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:willDisplayCell:forTableColumn:item:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:willDisplayOutlineCell:forTableColumn:item:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:writeItems:toPasteboard:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="items" swt_gen="true"></arg>
      <arg name="pasteboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineViewColumnDidMove:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineViewColumnDidResize:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineViewItemDidCollapse:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineViewItemDidExpand:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineViewItemWillCollapse:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineViewItemWillExpand:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineViewSelectionDidChange:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineViewSelectionIsChanging:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="panel:compareFilename:with:caseSensitive:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="name1" swt_gen="true"></arg>
      <arg name="name2" swt_gen="true"></arg>
      <arg name="caseSensitive" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="panel:directoryDidChange:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="panel:isValidFilename:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="filename" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="panel:shouldShowFilename:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="filename" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="panel:userEnteredFilename:confirmed:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="filename" swt_gen="true"></arg>
      <arg name="okFlag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="panel:willExpand:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="expanding" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="panelSelectionDidChange:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pasteboard:provideDataForType:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pasteboardChangedOwner:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathCell:willDisplayOpenPanel:" swt_gen="true">
      <arg name="pathCell" swt_gen="true"></arg>
      <arg name="openPanel" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathCell:willPopUpMenu:" swt_gen="true">
      <arg name="pathCell" swt_gen="true"></arg>
      <arg name="menu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathControl:acceptDrop:" swt_gen="true">
      <arg name="pathControl" swt_gen="true"></arg>
      <arg name="info" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathControl:shouldDragPathComponentCell:withPasteboard:" swt_gen="true">
      <arg name="pathControl" swt_gen="true"></arg>
      <arg name="pathComponentCell" swt_gen="true"></arg>
      <arg name="pasteboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathControl:validateDrop:" swt_gen="true">
      <arg name="pathControl" swt_gen="true"></arg>
      <arg name="info" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathControl:willDisplayOpenPanel:" swt_gen="true">
      <arg name="pathControl" swt_gen="true"></arg>
      <arg name="openPanel" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathControl:willPopUpMenu:" swt_gen="true">
      <arg name="pathControl" swt_gen="true"></arg>
      <arg name="menu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performDragOperation:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="prepareForDragOperation:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="provideNewButtonImage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="provideNewView:" swt_gen="true">
      <arg name="initialRequest" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readSelectionFromPasteboard:" swt_gen="true">
      <arg name="pboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ruleEditor:child:forCriterion:withRowType:" swt_gen="true">
      <arg name="editor" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <arg name="criterion" swt_gen="true"></arg>
      <arg name="rowType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ruleEditor:displayValueForCriterion:inRow:" swt_gen="true">
      <arg name="editor" swt_gen="true"></arg>
      <arg name="criterion" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ruleEditor:numberOfChildrenForCriterion:withRowType:" swt_gen="true">
      <arg name="editor" swt_gen="true"></arg>
      <arg name="criterion" swt_gen="true"></arg>
      <arg name="rowType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:" swt_gen="true">
      <arg name="editor" swt_gen="true"></arg>
      <arg name="criterion" swt_gen="true"></arg>
      <arg name="value" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ruleEditorRowsDidChange:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedRange" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedRange" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectionShouldChangeInOutlineView:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectionShouldChangeInTableView:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAnimations:" swt_gen="true">
      <arg name="dict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttachment:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setColor:" swt_gen="true">
      <arg name="newColor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDefaultPlaceholder:forMarker:withBinding:" swt_gen="true">
      <arg name="placeholder" swt_gen="true"></arg>
      <arg name="marker" swt_gen="true"></arg>
      <arg name="binding" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIntAttribute:value:forGlyphAtIndex:" swt_gen="true">
      <arg name="attributeTag" swt_gen="true"></arg>
      <arg name="val" swt_gen="true"></arg>
      <arg name="glyphIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLocalizedKey:" swt_gen="true">
      <arg name="localizedKey" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMarkedText:selectedRange:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <arg name="selRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMarkedText:selectedRange:replacementRange:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <arg name="selectedRange" swt_gen="true"></arg>
      <arg name="replacementRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMode:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setValue:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="slideDraggedImageTo:" swt_gen="true">
      <arg name="screenPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sound:didFinishPlaying:" swt_gen="true">
      <arg name="sound" swt_gen="true"></arg>
      <arg name="aBool" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="speechRecognizer:didRecognizeCommand:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="command" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="speechSynthesizer:didEncounterErrorAtIndex:ofString:message:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="characterIndex" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
      <arg name="message" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="speechSynthesizer:didEncounterSyncMessage:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="message" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="speechSynthesizer:didFinishSpeaking:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="finishedSpeaking" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="speechSynthesizer:willSpeakPhoneme:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="phonemeOpcode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="speechSynthesizer:willSpeakWord:ofString:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="characterRange" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="splitView:additionalEffectiveRectOfDividerAtIndex:" swt_gen="true">
      <arg name="splitView" swt_gen="true"></arg>
      <arg name="dividerIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="splitView:canCollapseSubview:" swt_gen="true">
      <arg name="splitView" swt_gen="true"></arg>
      <arg name="subview" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="splitView:constrainMaxCoordinate:ofSubviewAt:" swt_gen="true">
      <arg name="splitView" swt_gen="true"></arg>
      <arg name="proposedMaximumPosition" swt_gen="true"></arg>
      <arg name="dividerIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="splitView:constrainMinCoordinate:ofSubviewAt:" swt_gen="true">
      <arg name="splitView" swt_gen="true"></arg>
      <arg name="proposedMinimumPosition" swt_gen="true"></arg>
      <arg name="dividerIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="splitView:constrainSplitPosition:ofSubviewAt:" swt_gen="true">
      <arg name="splitView" swt_gen="true"></arg>
      <arg name="proposedPosition" swt_gen="true"></arg>
      <arg name="dividerIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:" swt_gen="true">
      <arg name="splitView" swt_gen="true"></arg>
      <arg name="proposedEffectiveRect" swt_gen="true"></arg>
      <arg name="drawnRect" swt_gen="true"></arg>
      <arg name="dividerIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="splitView:resizeSubviewsWithOldSize:" swt_gen="true">
      <arg name="splitView" swt_gen="true"></arg>
      <arg name="oldSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:" swt_gen="true">
      <arg name="splitView" swt_gen="true"></arg>
      <arg name="subview" swt_gen="true"></arg>
      <arg name="dividerIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="splitView:shouldHideDividerAtIndex:" swt_gen="true">
      <arg name="splitView" swt_gen="true"></arg>
      <arg name="dividerIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="splitViewDidResizeSubviews:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="splitViewWillResizeSubviews:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="supportsMode:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tabView:didSelectTabViewItem:" swt_gen="true">
      <arg name="tabView" swt_gen="true"></arg>
      <arg name="tabViewItem" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tabView:shouldSelectTabViewItem:" swt_gen="true">
      <arg name="tabView" swt_gen="true"></arg>
      <arg name="tabViewItem" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tabView:willSelectTabViewItem:" swt_gen="true">
      <arg name="tabView" swt_gen="true"></arg>
      <arg name="tabViewItem" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tabViewDidChangeNumberOfTabViewItems:" swt_gen="true">
      <arg name="TabView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:acceptDrop:row:dropOperation:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="info" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="dropOperation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:dataCellForTableColumn:row:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:didClickTableColumn:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:didDragTableColumn:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:heightOfRow:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:isGroupRow:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:mouseDownInHeaderOfTableColumn:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="dropDestination" swt_gen="true"></arg>
      <arg name="indexSet" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:nextTypeSelectMatchFromRow:toRow:forString:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="startRow" swt_gen="true"></arg>
      <arg name="endRow" swt_gen="true"></arg>
      <arg name="searchString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:objectValueForTableColumn:row:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:selectionIndexesForProposedSelection:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="proposedSelectionIndexes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:setObjectValue:forTableColumn:row:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:shouldEditTableColumn:row:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:shouldSelectRow:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:shouldSelectTableColumn:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:shouldShowCellExpansionForTableColumn:row:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:shouldTrackCell:forTableColumn:row:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:shouldTypeSelectForEvent:withCurrentSearchString:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="searchString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:sortDescriptorsDidChange:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="oldDescriptors" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="mouseLocation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:typeSelectStringForTableColumn:row:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:validateDrop:proposedRow:proposedDropOperation:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="info" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="dropOperation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:willDisplayCell:forTableColumn:row:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:writeRows:toPasteboard:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="rows" swt_gen="true"></arg>
      <arg name="pboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:writeRowsWithIndexes:toPasteboard:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="rowIndexes" swt_gen="true"></arg>
      <arg name="pboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableViewColumnDidMove:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableViewColumnDidResize:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableViewSelectionDidChange:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableViewSelectionIsChanging:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tag" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="terminate:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textDidBeginEditing:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textDidChange:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textDidEndEditing:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textShouldBeginEditing:" swt_gen="true">
      <arg name="textObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textShouldEndEditing:" swt_gen="true">
      <arg name="textObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textStorageDidProcessEditing:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textStorageWillProcessEditing:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textView:clickedOnCell:inRect:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="cellFrame" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textView:clickedOnCell:inRect:atIndex:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textView:clickedOnLink:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="link" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textView:clickedOnLink:atIndex:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="link" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textView:completions:forPartialWordRange:indexOfSelectedItem:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="words" swt_gen="true"></arg>
      <arg name="charRange" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textView:doCommandBySelector:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="commandSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textView:doubleClickedOnCell:inRect:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="cellFrame" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textView:doubleClickedOnCell:inRect:atIndex:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textView:draggedCell:inRect:event:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textView:draggedCell:inRect:event:atIndex:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textView:menu:forEvent:atIndex:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <arg name="menu" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textView:shouldChangeTextInRange:replacementString:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="affectedCharRange" swt_gen="true"></arg>
      <arg name="replacementString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textView:shouldChangeTextInRanges:replacementStrings:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="affectedRanges" swt_gen="true"></arg>
      <arg name="replacementStrings" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textView:shouldChangeTypingAttributes:toAttributes:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="oldTypingAttributes" swt_gen="true"></arg>
      <arg name="newTypingAttributes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textView:shouldSetSpellingState:range:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="value" swt_gen="true"></arg>
      <arg name="affectedCharRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textView:willChangeSelectionFromCharacterRange:toCharacterRange:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="oldSelectedCharRange" swt_gen="true"></arg>
      <arg name="newSelectedCharRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="oldSelectedCharRanges" swt_gen="true"></arg>
      <arg name="newSelectedCharRanges" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textView:willDisplayToolTip:forCharacterAtIndex:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="tooltip" swt_gen="true"></arg>
      <arg name="characterIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textView:writablePasteboardTypesForCell:atIndex:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textView:writeCell:atIndex:toPasteboard:type:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
      <arg name="pboard" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textViewDidChangeSelection:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textViewDidChangeTypingAttributes:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:" swt_gen="true">
      <arg name="tokenField" swt_gen="true"></arg>
      <arg name="substring" swt_gen="true"></arg>
      <arg name="tokenIndex" swt_gen="true"></arg>
      <arg name="selectedIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenField:displayStringForRepresentedObject:" swt_gen="true">
      <arg name="tokenField" swt_gen="true"></arg>
      <arg name="representedObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenField:editingStringForRepresentedObject:" swt_gen="true">
      <arg name="tokenField" swt_gen="true"></arg>
      <arg name="representedObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenField:hasMenuForRepresentedObject:" swt_gen="true">
      <arg name="tokenField" swt_gen="true"></arg>
      <arg name="representedObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenField:menuForRepresentedObject:" swt_gen="true">
      <arg name="tokenField" swt_gen="true"></arg>
      <arg name="representedObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenField:readFromPasteboard:" swt_gen="true">
      <arg name="tokenField" swt_gen="true"></arg>
      <arg name="pboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenField:representedObjectForEditingString:" swt_gen="true">
      <arg name="tokenField" swt_gen="true"></arg>
      <arg name="editingString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenField:shouldAddObjects:atIndex:" swt_gen="true">
      <arg name="tokenField" swt_gen="true"></arg>
      <arg name="tokens" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenField:styleForRepresentedObject:" swt_gen="true">
      <arg name="tokenField" swt_gen="true"></arg>
      <arg name="representedObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenField:writeRepresentedObjects:toPasteboard:" swt_gen="true">
      <arg name="tokenField" swt_gen="true"></arg>
      <arg name="objects" swt_gen="true"></arg>
      <arg name="pboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:" swt_gen="true">
      <arg name="tokenFieldCell" swt_gen="true"></arg>
      <arg name="substring" swt_gen="true"></arg>
      <arg name="tokenIndex" swt_gen="true"></arg>
      <arg name="selectedIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenFieldCell:displayStringForRepresentedObject:" swt_gen="true">
      <arg name="tokenFieldCell" swt_gen="true"></arg>
      <arg name="representedObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenFieldCell:editingStringForRepresentedObject:" swt_gen="true">
      <arg name="tokenFieldCell" swt_gen="true"></arg>
      <arg name="representedObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenFieldCell:hasMenuForRepresentedObject:" swt_gen="true">
      <arg name="tokenFieldCell" swt_gen="true"></arg>
      <arg name="representedObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenFieldCell:menuForRepresentedObject:" swt_gen="true">
      <arg name="tokenFieldCell" swt_gen="true"></arg>
      <arg name="representedObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenFieldCell:readFromPasteboard:" swt_gen="true">
      <arg name="tokenFieldCell" swt_gen="true"></arg>
      <arg name="pboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenFieldCell:representedObjectForEditingString:" swt_gen="true">
      <arg name="tokenFieldCell" swt_gen="true"></arg>
      <arg name="editingString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenFieldCell:shouldAddObjects:atIndex:" swt_gen="true">
      <arg name="tokenFieldCell" swt_gen="true"></arg>
      <arg name="tokens" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenFieldCell:styleForRepresentedObject:" swt_gen="true">
      <arg name="tokenFieldCell" swt_gen="true"></arg>
      <arg name="representedObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenFieldCell:writeRepresentedObjects:toPasteboard:" swt_gen="true">
      <arg name="tokenFieldCell" swt_gen="true"></arg>
      <arg name="objects" swt_gen="true"></arg>
      <arg name="pboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:" swt_gen="true">
      <arg name="toolbar" swt_gen="true"></arg>
      <arg name="itemIdentifier" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toolbarAllowedItemIdentifiers:" swt_gen="true">
      <arg name="toolbar" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toolbarDefaultItemIdentifiers:" swt_gen="true">
      <arg name="toolbar" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toolbarDidRemoveItem:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toolbarSelectableItemIdentifiers:" swt_gen="true">
      <arg name="toolbar" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toolbarWillAddItem:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="trackMouse:inRect:ofView:untilMouseUp:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unbind:" swt_gen="true">
      <arg name="binding" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="undoManagerForTextView:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unmarkText" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unmarkText" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="validAttributesForMarkedText" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="validAttributesForMarkedText" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="validModesForFontPanel:" swt_gen="true">
      <arg name="fontPanel" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="validateMenuItem:" swt_gen="true">
      <arg name="menuItem" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="validateToolbarItem:" swt_gen="true">
      <arg name="theItem" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="validateUserInterfaceItem:" swt_gen="true">
      <arg name="anItem" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="value" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueClassForBinding:" swt_gen="true">
      <arg name="binding" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="view:stringForToolTip:point:userData:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <arg name="tag" swt_gen="true"></arg>
      <arg name="point" swt_gen="true"></arg>
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="viewSizeChanged:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="wantsPeriodicDraggingUpdates" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="wantsToDelayTextChangeNotifications" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="wantsToHandleMouseEvents" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="wantsToInterpretAllKeystrokes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="wantsToTrackMouse" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="window:shouldDragDocumentWithEvent:from:withPasteboard:" swt_gen="true">
      <arg name="window" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="dragImageLocation" swt_gen="true"></arg>
      <arg name="pasteboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="window:shouldPopUpDocumentPathMenu:" swt_gen="true">
      <arg name="window" swt_gen="true"></arg>
      <arg name="menu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="window:willPositionSheet:usingRect:" swt_gen="true">
      <arg name="window" swt_gen="true"></arg>
      <arg name="sheet" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowDidBecomeKey:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowDidBecomeMain:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowDidChangeScreen:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowDidChangeScreenProfile:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowDidDeminiaturize:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowDidEndSheet:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowDidExpose:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowDidMiniaturize:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowDidMove:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowDidResignKey:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowDidResignMain:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowDidResize:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowDidUpdate:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowLevel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowShouldClose:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowShouldZoom:toFrame:" swt_gen="true">
      <arg name="window" swt_gen="true"></arg>
      <arg name="newFrame" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowWillBeginSheet:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowWillClose:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowWillMiniaturize:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowWillMove:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowWillResize:toSize:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="frameSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowWillReturnFieldEditor:toObject:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="client" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowWillReturnUndoManager:" swt_gen="true">
      <arg name="window" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowWillUseStandardFrame:defaultFrame:" swt_gen="true">
      <arg name="window" swt_gen="true"></arg>
      <arg name="newFrame" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeSelectionToPasteboard:types:" swt_gen="true">
      <arg name="pboard" swt_gen="true"></arg>
      <arg name="types" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSObjectController" swt_gen="true" swt_superclass="NSController">
    <method selector="add:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="automaticallyPreparesContent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canAdd" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canRemove" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="content" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultFetchRequest" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="entityName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fetch:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fetchPredicate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fetchWithRequest:merge:error:" swt_gen="true">
      <arg name="fetchRequest" swt_gen="true"></arg>
      <arg name="merge" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContent:" swt_gen="true">
      <arg name="content" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEditable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="managedObjectContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="newObject" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectClass" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="prepareContent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="remove:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutomaticallyPreparesContent:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContent:" swt_gen="true">
      <arg name="content" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEditable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEntityName:" swt_gen="true">
      <arg name="entityName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFetchPredicate:" swt_gen="true">
      <arg name="predicate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setManagedObjectContext:" swt_gen="true">
      <arg name="managedObjectContext" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setObjectClass:" swt_gen="true">
      <arg name="objectClass" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUsesLazyFetching:" swt_gen="true">
      <arg name="enabled" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesLazyFetching" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="validateUserInterfaceItem:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSOpenGLContext" swt_gen="true">
    <method selector="CGLContextObj" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="clearCurrentContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="clearDrawable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="copyAttributesFromContext:withMask:" swt_gen="true">
      <arg name="context" swt_gen="true"></arg>
      <arg name="mask" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="createTexture:fromView:internalFormat:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <arg name="view" swt_gen="true"></arg>
      <arg name="format" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentVirtualScreen" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="flushBuffer" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getValues:forParameter:" swt_gen="true">
      <arg name="vals" swt_gen="true"></arg>
      <arg name="param" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFormat:shareContext:" swt_gen="true">
      <arg name="format" swt_gen="true"></arg>
      <arg name="share" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makeCurrentContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pixelBuffer" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pixelBufferCubeMapFace" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pixelBufferMipMapLevel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCurrentVirtualScreen:" swt_gen="true">
      <arg name="screen" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFullScreen" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setOffScreen:width:height:rowbytes:" swt_gen="true">
      <arg name="baseaddr" swt_gen="true"></arg>
      <arg name="width" swt_gen="true"></arg>
      <arg name="height" swt_gen="true"></arg>
      <arg name="rowbytes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPixelBuffer:cubeMapFace:mipMapLevel:currentVirtualScreen:" swt_gen="true">
      <arg name="pixelBuffer" swt_gen="true"></arg>
      <arg name="face" swt_gen="true"></arg>
      <arg name="level" swt_gen="true"></arg>
      <arg name="screen" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextureImageToPixelBuffer:colorBuffer:" swt_gen="true">
      <arg name="pixelBuffer" swt_gen="true"></arg>
      <arg name="source" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setValues:forParameter:" swt_gen="true">
      <arg name="vals" swt_gen="true"></arg>
      <arg name="param" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setView:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="update" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="view" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSOpenGLPixelBuffer" swt_gen="true">
    <method selector="initWithTextureTarget:textureInternalFormat:textureMaxMipMapLevel:pixelsWide:pixelsHigh:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <arg name="format" swt_gen="true"></arg>
      <arg name="maxLevel" swt_gen="true"></arg>
      <arg name="pixelsWide" swt_gen="true"></arg>
      <arg name="pixelsHigh" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pixelsHigh" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pixelsWide" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textureInternalFormat" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textureMaxMipMapLevel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textureTarget" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSOpenGLPixelFormat" swt_gen="true">
    <method selector="CGLPixelFormatObj" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getValues:forAttribute:forVirtualScreen:" swt_gen="true">
      <arg name="vals" swt_gen="true"></arg>
      <arg name="attrib" swt_gen="true"></arg>
      <arg name="screen" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithAttributes:" swt_gen="true">
      <arg name="attribs" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithData:" swt_gen="true">
      <arg name="attribs" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfVirtualScreens" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributes:" swt_gen="true">
      <arg name="attribs" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSOpenGLView" swt_gen="true" swt_superclass="NSView">
    <method selector="clearGLContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultPixelFormat" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFrame:pixelFormat:" swt_gen="true">
      <arg name="frameRect" swt_gen="true"></arg>
      <arg name="format" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="openGLContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pixelFormat" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="prepareOpenGL" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reshape" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setOpenGLContext:" swt_gen="true">
      <arg name="context" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPixelFormat:" swt_gen="true">
      <arg name="pixelFormat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="update" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSOpenPanel" swt_gen="true" swt_superclass="NSSavePanel">
    <method selector="URLs" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsMultipleSelection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="beginForDirectory:file:types:modelessDelegate:didEndSelector:contextInfo:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <arg name="fileTypes" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didEndSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="beginSheetForDirectory:file:types:modalForWindow:modalDelegate:didEndSelector:contextInfo:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <arg name="fileTypes" swt_gen="true"></arg>
      <arg name="docWindow" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didEndSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canChooseDirectories" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canChooseFiles" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="filenames" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="openPanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resolvesAliases" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runModalForDirectory:file:types:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <arg name="fileTypes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runModalForTypes:" swt_gen="true">
      <arg name="fileTypes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsMultipleSelection:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCanChooseDirectories:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCanChooseFiles:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setResolvesAliases:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSOutlineView" swt_gen="true" swt_superclass="NSTableView">
    <method selector="autoresizesOutlineColumn" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autosaveExpandedItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="collapseItem:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="collapseItem:collapseChildren:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <arg name="collapseChildren" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="expandItem:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="expandItem:expandChildren:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <arg name="expandChildren" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="frameOfOutlineCellAtRow:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indentationMarkerFollowsCell" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indentationPerLevel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isExpandable:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isItemExpanded:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemAtRow:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="levelForItem:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="levelForRow:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineTableColumn" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parentForItem:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reloadItem:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reloadItem:reloadChildren:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <arg name="reloadChildren" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rowForItem:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutoresizesOutlineColumn:" swt_gen="true">
      <arg name="resize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutosaveExpandedItems:" swt_gen="true">
      <arg name="save" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDropItem:dropChildIndex:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIndentationMarkerFollowsCell:" swt_gen="true">
      <arg name="drawInCell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIndentationPerLevel:" swt_gen="true">
      <arg name="indentationPerLevel" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setOutlineTableColumn:" swt_gen="true">
      <arg name="outlineTableColumn" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shouldCollapseAutoExpandedItemsForDeposited:" swt_gen="true">
      <arg name="deposited" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPDFImageRep" swt_gen="true" swt_superclass="NSImageRep">
    <method selector="PDFRepresentation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bounds" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentPage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageRepWithData:" swt_gen="true">
      <arg name="pdfData" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithData:" swt_gen="true">
      <arg name="pdfData" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pageCount" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCurrentPage:" swt_gen="true">
      <arg name="page" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPICTImageRep" swt_gen="true" swt_superclass="NSImageRep">
    <method selector="PICTRepresentation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="boundingBox" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageRepWithData:" swt_gen="true">
      <arg name="pictData" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithData:" swt_gen="true">
      <arg name="pictData" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPageLayout" swt_gen="true">
    <method selector="accessoryControllers" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="accessoryView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addAccessoryController:" swt_gen="true">
      <arg name="accessoryController" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:" swt_gen="true">
      <arg name="printInfo" swt_gen="true"></arg>
      <arg name="docWindow" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didEndSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pageLayout" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printInfo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readPrintInfo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeAccessoryController:" swt_gen="true">
      <arg name="accessoryController" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runModal" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runModalWithPrintInfo:" swt_gen="true">
      <arg name="printInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAccessoryView:" swt_gen="true">
      <arg name="accessoryView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writePrintInfo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPanel" swt_gen="true" swt_superclass="NSWindow">
    <method selector="becomesKeyOnlyIfNeeded" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isFloatingPanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBecomesKeyOnlyIfNeeded:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFloatingPanel:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWorksWhenModal:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="worksWhenModal" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSParagraphStyle" swt_gen="true">
    <method selector="alignment" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="baseWritingDirection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultParagraphStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultTabInterval" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultWritingDirectionForLanguage:" swt_gen="true">
      <arg name="languageName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="firstLineHeadIndent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="headIndent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="headerLevel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hyphenationFactor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineBreakMode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineHeightMultiple" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineSpacing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maximumLineHeight" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minimumLineHeight" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="paragraphSpacing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="paragraphSpacingBefore" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tabStops" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tailIndent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textBlocks" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textLists" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tighteningFactorForTruncation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPasteboard" swt_gen="true">
    <method selector="addTypes:owner:" swt_gen="true">
      <arg name="newTypes" swt_gen="true"></arg>
      <arg name="newOwner" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="availableTypeFromArray:" swt_gen="true">
      <arg name="types" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="changeCount" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataForType:" swt_gen="true">
      <arg name="dataType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="declareTypes:owner:" swt_gen="true">
      <arg name="newTypes" swt_gen="true"></arg>
      <arg name="newOwner" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="generalPasteboard" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="name" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pasteboardByFilteringData:ofType:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pasteboardByFilteringFile:" swt_gen="true">
      <arg name="filename" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pasteboardByFilteringTypesInPasteboard:" swt_gen="true">
      <arg name="pboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pasteboardWithName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pasteboardWithUniqueName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="propertyListForType:" swt_gen="true">
      <arg name="dataType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readFileContentsType:toFile:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <arg name="filename" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readFileWrapper" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="releaseGlobally" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setData:forType:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <arg name="dataType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPropertyList:forType:" swt_gen="true">
      <arg name="plist" swt_gen="true"></arg>
      <arg name="dataType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setString:forType:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <arg name="dataType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringForType:" swt_gen="true">
      <arg name="dataType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="types" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="typesFilterableTo:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeFileContents:" swt_gen="true">
      <arg name="filename" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeFileWrapper:" swt_gen="true">
      <arg name="wrapper" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPathCell" swt_gen="true" swt_superclass="NSActionCell">
    <method selector="URL" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowedTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="backgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="clickedPathComponentCell" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doubleAction" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseEntered:withFrame:inView:" swt_gen="true">
      <arg name="event" swt_gen="true"></arg>
      <arg name="frame" swt_gen="true"></arg>
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseExited:withFrame:inView:" swt_gen="true">
      <arg name="event" swt_gen="true"></arg>
      <arg name="frame" swt_gen="true"></arg>
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathComponentCellAtPoint:withFrame:inView:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <arg name="frame" swt_gen="true"></arg>
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathComponentCellClass" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathComponentCells" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="placeholderAttributedString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="placeholderString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rectOfPathComponentCell:withFrame:inView:" swt_gen="true">
      <arg name="cell" swt_gen="true"></arg>
      <arg name="frame" swt_gen="true"></arg>
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowedTypes:" swt_gen="true">
      <arg name="allowedTypes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setControlSize:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDoubleAction:" swt_gen="true">
      <arg name="action" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setObjectValue:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPathComponentCells:" swt_gen="true">
      <arg name="cells" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPathStyle:" swt_gen="true">
      <arg name="style" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPlaceholderAttributedString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPlaceholderString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setURL:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPathComponentCell" swt_gen="true" swt_superclass="NSTextFieldCell">
    <method selector="URL" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="image" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImage:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setURL:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPathControl" swt_gen="true" swt_superclass="NSControl">
    <method selector="URL" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="backgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="clickedPathComponentCell" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doubleAction" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathComponentCells" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDoubleAction:" swt_gen="true">
      <arg name="action" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDraggingSourceOperationMask:forLocal:" swt_gen="true">
      <arg name="mask" swt_gen="true"></arg>
      <arg name="isLocal" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPathComponentCells:" swt_gen="true">
      <arg name="cells" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPathStyle:" swt_gen="true">
      <arg name="style" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setURL:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPersistentDocument" swt_gen="true" swt_superclass="NSDocument">
    <method selector="configurePersistentStoreCoordinatorForURL:ofType:error:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="fileType" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="fileType" swt_gen="true"></arg>
      <arg name="configuration" swt_gen="true"></arg>
      <arg name="storeOptions" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="managedObjectContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="managedObjectModel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="persistentStoreTypeForFileType:" swt_gen="true">
      <arg name="fileType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readFromURL:ofType:error:" swt_gen="true">
      <arg name="absoluteURL" swt_gen="true"></arg>
      <arg name="typeName" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="revertToContentsOfURL:ofType:error:" swt_gen="true">
      <arg name="inAbsoluteURL" swt_gen="true"></arg>
      <arg name="inTypeName" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setManagedObjectContext:" swt_gen="true">
      <arg name="managedObjectContext" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToURL:ofType:forSaveOperation:originalContentsURL:error:" swt_gen="true">
      <arg name="absoluteURL" swt_gen="true"></arg>
      <arg name="typeName" swt_gen="true"></arg>
      <arg name="saveOperation" swt_gen="true"></arg>
      <arg name="absoluteOriginalContentsURL" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPopUpButton" swt_gen="true" swt_superclass="NSButton">
    <method selector="addItemWithTitle:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addItemsWithTitles:" swt_gen="true">
      <arg name="itemTitles" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autoenablesItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfItem:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfItemWithRepresentedObject:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfItemWithTag:" swt_gen="true">
      <arg name="tag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfItemWithTarget:andAction:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <arg name="actionSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfItemWithTitle:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfSelectedItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFrame:pullsDown:" swt_gen="true">
      <arg name="buttonFrame" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertItemWithTitle:atIndex:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemArray" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemTitleAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemTitles" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemWithTitle:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lastItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="preferredEdge" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pullsDown" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeAllItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeItemWithTitle:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectItem:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectItemWithTag:" swt_gen="true">
      <arg name="tag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectItemWithTitle:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutoenablesItems:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMenu:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPreferredEdge:" swt_gen="true">
      <arg name="edge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPullsDown:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitle:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="synchronizeTitleAndSelectedItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleOfSelectedItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPopUpButtonCell" swt_gen="true" swt_superclass="NSMenuItemCell">
    <method selector="addItemWithTitle:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addItemsWithTitles:" swt_gen="true">
      <arg name="itemTitles" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="altersStateOfSelectedItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="arrowPosition" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attachPopUpWithFrame:inView:" swt_gen="true">
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autoenablesItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dismissPopUp" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfItem:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfItemWithRepresentedObject:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfItemWithTag:" swt_gen="true">
      <arg name="tag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfItemWithTarget:andAction:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <arg name="actionSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfItemWithTitle:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfSelectedItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initTextCell:pullsDown:" swt_gen="true">
      <arg name="stringValue" swt_gen="true"></arg>
      <arg name="pullDown" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertItemWithTitle:atIndex:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemArray" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemTitleAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemTitles" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemWithTitle:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lastItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performClickWithFrame:inView:" swt_gen="true">
      <arg name="frame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="preferredEdge" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pullsDown" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeAllItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeItemWithTitle:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectItem:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectItemWithTag:" swt_gen="true">
      <arg name="tag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectItemWithTitle:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAltersStateOfSelectedItem:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setArrowPosition:" swt_gen="true">
      <arg name="position" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutoenablesItems:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMenu:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setObjectValue:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPreferredEdge:" swt_gen="true">
      <arg name="edge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPullsDown:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitle:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUsesItemFromMenu:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="synchronizeTitleAndSelectedItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleOfSelectedItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesItemFromMenu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPredicateEditor" swt_gen="true" swt_superclass="NSRuleEditor">
    <method selector="rowTemplates" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRowTemplates:" swt_gen="true">
      <arg name="rowTemplates" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPredicateEditorRowTemplate" swt_gen="true">
    <method selector="compoundTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displayableSubpredicatesOfPredicate:" swt_gen="true">
      <arg name="predicate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithCompoundTypes:" swt_gen="true">
      <arg name="compoundTypes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithLeftExpressions:rightExpressionAttributeType:modifier:operators:options:" swt_gen="true">
      <arg name="leftExpressions" swt_gen="true"></arg>
      <arg name="attributeType" swt_gen="true"></arg>
      <arg name="modifier" swt_gen="true"></arg>
      <arg name="operators" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithLeftExpressions:rightExpressions:modifier:operators:options:" swt_gen="true">
      <arg name="leftExpressions" swt_gen="true"></arg>
      <arg name="rightExpressions" swt_gen="true"></arg>
      <arg name="modifier" swt_gen="true"></arg>
      <arg name="operators" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="leftExpressions" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="matchForPredicate:" swt_gen="true">
      <arg name="predicate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="modifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="operators" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="options" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="predicateWithSubpredicates:" swt_gen="true">
      <arg name="subpredicates" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rightExpressionAttributeType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rightExpressions" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPredicate:" swt_gen="true">
      <arg name="predicate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="templateViews" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="templatesWithAttributeKeyPaths:inEntityDescription:" swt_gen="true">
      <arg name="keyPaths" swt_gen="true"></arg>
      <arg name="entityDescription" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPrintInfo" swt_gen="true">
    <method selector="PMPageFormat" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="PMPrintSession" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="PMPrintSettings" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bottomMargin" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultPrinter" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dictionary" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="horizontalPagination" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageablePageBounds" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithDictionary:" swt_gen="true">
      <arg name="attributes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isHorizontallyCentered" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isVerticallyCentered" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="jobDisposition" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="leftMargin" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedPaperName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orientation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="paperName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="paperSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printSettings" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printer" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rightMargin" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBottomMargin:" swt_gen="true">
      <arg name="margin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDefaultPrinter:" swt_gen="true">
      <arg name="printer" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHorizontalPagination:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHorizontallyCentered:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setJobDisposition:" swt_gen="true">
      <arg name="disposition" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLeftMargin:" swt_gen="true">
      <arg name="margin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setOrientation:" swt_gen="true">
      <arg name="orientation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPaperName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPaperSize:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPrinter:" swt_gen="true">
      <arg name="printer" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRightMargin:" swt_gen="true">
      <arg name="margin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSharedPrintInfo:" swt_gen="true">
      <arg name="printInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTopMargin:" swt_gen="true">
      <arg name="margin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUpPrintOperationDefaultValues" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVerticalPagination:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVerticallyCentered:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedPrintInfo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sizeForPaperName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="topMargin" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="updateFromPMPageFormat" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="updateFromPMPrintSettings" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="verticalPagination" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPrintOperation" swt_gen="true">
    <method selector="EPSOperationWithView:insideRect:toData:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="EPSOperationWithView:insideRect:toData:printInfo:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="data" swt_gen="true"></arg>
      <arg name="printInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="EPSOperationWithView:insideRect:toPath:printInfo:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="path" swt_gen="true"></arg>
      <arg name="printInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="PDFOperationWithView:insideRect:toData:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="PDFOperationWithView:insideRect:toData:printInfo:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="data" swt_gen="true"></arg>
      <arg name="printInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="PDFOperationWithView:insideRect:toPath:printInfo:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="path" swt_gen="true"></arg>
      <arg name="printInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="accessoryView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canSpawnSeparateThread" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cleanUpOperation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="context" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="createContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentOperation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentPage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deliverResult" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="destroyContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isCopyingOperation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="jobStyleHint" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="jobTitle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pageOrder" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pageRange" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printInfo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printOperationWithView:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printOperationWithView:printInfo:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <arg name="printInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printPanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runOperation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runOperationModalForWindow:delegate:didRunSelector:contextInfo:" swt_gen="true">
      <arg name="docWindow" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didRunSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAccessoryView:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCanSpawnSeparateThread:" swt_gen="true">
      <arg name="canSpawnSeparateThread" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCurrentOperation:" swt_gen="true">
      <arg name="operation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setJobStyleHint:" swt_gen="true">
      <arg name="hint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setJobTitle:" swt_gen="true">
      <arg name="jobTitle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPageOrder:" swt_gen="true">
      <arg name="pageOrder" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPrintInfo:" swt_gen="true">
      <arg name="printInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPrintPanel:" swt_gen="true">
      <arg name="panel" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShowPanels:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShowsPrintPanel:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShowsProgressPanel:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showPanels" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showsPrintPanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showsProgressPanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="view" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPrintPanel" swt_gen="true">
    <method selector="accessoryControllers" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="accessoryView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addAccessoryController:" swt_gen="true">
      <arg name="accessoryController" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:" swt_gen="true">
      <arg name="printInfo" swt_gen="true"></arg>
      <arg name="docWindow" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didEndSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultButtonTitle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="finalWritePrintInfo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="helpAnchor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="jobStyleHint" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="options" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printInfo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printPanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeAccessoryController:" swt_gen="true">
      <arg name="accessoryController" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runModal" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runModalWithPrintInfo:" swt_gen="true">
      <arg name="printInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAccessoryView:" swt_gen="true">
      <arg name="accessoryView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDefaultButtonTitle:" swt_gen="true">
      <arg name="defaultButtonTitle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHelpAnchor:" swt_gen="true">
      <arg name="helpAnchor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setJobStyleHint:" swt_gen="true">
      <arg name="hint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setOptions:" swt_gen="true">
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="updateFromPrintInfo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPrinter" swt_gen="true">
    <method selector="acceptsBinary" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="booleanForKey:inTable:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <arg name="table" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deviceDescription" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="domain" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="floatForKey:inTable:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <arg name="table" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="host" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageRectForPaper:" swt_gen="true">
      <arg name="paperName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="intForKey:inTable:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <arg name="table" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isFontAvailable:" swt_gen="true">
      <arg name="faceName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isKey:inTable:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <arg name="table" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isOutputStackInReverseOrder" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="languageLevel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="name" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="note" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pageSizeForPaper:" swt_gen="true">
      <arg name="paperName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printerNames" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printerTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printerWithName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printerWithName:domain:includeUnavailable:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="domain" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printerWithType:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rectForKey:inTable:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <arg name="table" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sizeForKey:inTable:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <arg name="table" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="statusForTable:" swt_gen="true">
      <arg name="tableName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringForKey:inTable:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <arg name="table" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringListForKey:inTable:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <arg name="table" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="type" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSProgressIndicator" swt_gen="true" swt_superclass="NSView">
    <method selector="animate:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="animationDelay" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlTint" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doubleValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="incrementBy:" swt_gen="true">
      <arg name="delta" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isBezeled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isDisplayedWhenStopped" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isIndeterminate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maxValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAnimationDelay:" swt_gen="true">
      <arg name="delay" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBezeled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setControlSize:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setControlTint:" swt_gen="true">
      <arg name="tint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDisplayedWhenStopped:" swt_gen="true">
      <arg name="isDisplayed" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDoubleValue:" swt_gen="true">
      <arg name="doubleValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIndeterminate:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxValue:" swt_gen="true">
      <arg name="newMaximum" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinValue:" swt_gen="true">
      <arg name="newMinimum" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setStyle:" swt_gen="true">
      <arg name="style" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUsesThreadedAnimation:" swt_gen="true">
      <arg name="threadedAnimation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sizeToFit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="startAnimation:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stopAnimation:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="style" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesThreadedAnimation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSQuickDrawView" swt_gen="true" swt_superclass="NSView">
    <method selector="qdPort" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSResponder" swt_gen="true">
    <method selector="acceptsFirstResponder" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="becomeFirstResponder" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cancelOperation:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="capitalizeWord:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="centerSelectionInVisibleArea:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="changeCaseOfLetter:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="complete:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cursorUpdate:" swt_gen="true">
      <arg name="event" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deleteBackward:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deleteBackwardByDecomposingPreviousCharacter:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deleteForward:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deleteToBeginningOfLine:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deleteToBeginningOfParagraph:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deleteToEndOfLine:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deleteToEndOfParagraph:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deleteToMark:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deleteWordBackward:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deleteWordForward:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doCommandBySelector:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="flagsChanged:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="flushBufferedKeyEvents" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="helpRequested:" swt_gen="true">
      <arg name="eventPtr" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indent:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertBacktab:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertContainerBreak:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertLineBreak:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertNewline:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertNewlineIgnoringFieldEditor:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertParagraphSeparator:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertTab:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertTabIgnoringFieldEditor:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertText:" swt_gen="true">
      <arg name="insertString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="interfaceStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="interpretKeyEvents:" swt_gen="true">
      <arg name="eventArray" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyDown:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyUp:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lowercaseWord:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseDown:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseDragged:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseEntered:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseExited:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseMoved:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseUp:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveBackward:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveBackwardAndModifySelection:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveDown:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveDownAndModifySelection:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveForward:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveForwardAndModifySelection:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveLeft:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveLeftAndModifySelection:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveRight:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveRightAndModifySelection:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveToBeginningOfDocument:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveToBeginningOfLine:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveToBeginningOfParagraph:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveToEndOfDocument:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveToEndOfLine:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveToEndOfParagraph:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveUp:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveUpAndModifySelection:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveWordBackward:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveWordBackwardAndModifySelection:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveWordForward:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveWordForwardAndModifySelection:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveWordLeft:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveWordLeftAndModifySelection:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveWordRight:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveWordRightAndModifySelection:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nextResponder" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="noResponderFor:" swt_gen="true">
      <arg name="eventSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="otherMouseDown:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="otherMouseDragged:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="otherMouseUp:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pageDown:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pageUp:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performKeyEquivalent:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performMnemonic:" swt_gen="true">
      <arg name="theString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="presentError:" swt_gen="true">
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="presentError:modalForWindow:delegate:didPresentSelector:contextInfo:" swt_gen="true">
      <arg name="error" swt_gen="true"></arg>
      <arg name="window" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didPresentSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resignFirstResponder" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rightMouseDown:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rightMouseDragged:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rightMouseUp:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollLineDown:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollLineUp:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollPageDown:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollPageUp:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollWheel:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectAll:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectLine:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectParagraph:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectToMark:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectWord:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setInterfaceStyle:" swt_gen="true">
      <arg name="interfaceStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMark:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMenu:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNextResponder:" swt_gen="true">
      <arg name="aResponder" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shouldBeTreatedAsInkEvent:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showContextHelp:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="swapWithMark:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tabletPoint:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tabletProximity:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="transpose:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="transposeWords:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tryToPerform:with:" swt_gen="true">
      <arg name="anAction" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="undoManager" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="uppercaseWord:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="validRequestorForSendType:returnType:" swt_gen="true">
      <arg name="sendType" swt_gen="true"></arg>
      <arg name="returnType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="willPresentError:" swt_gen="true">
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="yank:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSRuleEditor" swt_gen="true" swt_superclass="NSControl">
    <method selector="addRow:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canRemoveAllRows" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="criteriaForRow:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="criteriaKeyPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displayValuesForRow:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displayValuesKeyPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="formattingDictionary" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="formattingStringsFilename" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertRowAtIndex:withType:asSubrowOfRow:animate:" swt_gen="true">
      <arg name="rowIndex" swt_gen="true"></arg>
      <arg name="rowType" swt_gen="true"></arg>
      <arg name="parentRow" swt_gen="true"></arg>
      <arg name="shouldAnimate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEditable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nestingMode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfRows" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parentRowForRow:" swt_gen="true">
      <arg name="rowIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="predicate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="predicateForRow:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reloadCriteria" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reloadPredicate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeRowAtIndex:" swt_gen="true">
      <arg name="rowIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeRowsAtIndexes:includeSubrows:" swt_gen="true">
      <arg name="rowIndexes" swt_gen="true"></arg>
      <arg name="includeSubrows" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rowClass" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rowForDisplayValue:" swt_gen="true">
      <arg name="displayValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rowHeight" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rowTypeForRow:" swt_gen="true">
      <arg name="rowIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rowTypeKeyPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectRowIndexes:byExtendingSelection:" swt_gen="true">
      <arg name="indexes" swt_gen="true"></arg>
      <arg name="extend" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedRowIndexes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCanRemoveAllRows:" swt_gen="true">
      <arg name="val" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCriteria:andDisplayValues:forRowAtIndex:" swt_gen="true">
      <arg name="criteria" swt_gen="true"></arg>
      <arg name="values" swt_gen="true"></arg>
      <arg name="rowIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCriteriaKeyPath:" swt_gen="true">
      <arg name="keyPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDisplayValuesKeyPath:" swt_gen="true">
      <arg name="keyPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEditable:" swt_gen="true">
      <arg name="editable" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFormattingDictionary:" swt_gen="true">
      <arg name="dictionary" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFormattingStringsFilename:" swt_gen="true">
      <arg name="stringsFilename" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNestingMode:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRowClass:" swt_gen="true">
      <arg name="rowClass" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRowHeight:" swt_gen="true">
      <arg name="height" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRowTypeKeyPath:" swt_gen="true">
      <arg name="keyPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSubrowsKeyPath:" swt_gen="true">
      <arg name="keyPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="subrowIndexesForRow:" swt_gen="true">
      <arg name="rowIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="subrowsKeyPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSRulerMarker" swt_gen="true">
    <method selector="drawRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="image" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageOrigin" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageRectInRuler" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithRulerView:markerLocation:image:imageOrigin:" swt_gen="true">
      <arg name="ruler" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <arg name="image" swt_gen="true"></arg>
      <arg name="imageOrigin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isDragging" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isMovable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isRemovable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="markerLocation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="representedObject" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ruler" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImageOrigin:" swt_gen="true">
      <arg name="imageOrigin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMarkerLocation:" swt_gen="true">
      <arg name="location" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMovable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRemovable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRepresentedObject:" swt_gen="true">
      <arg name="representedObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="thicknessRequiredInRuler" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="trackMouse:adding:" swt_gen="true">
      <arg name="mouseDownEvent" swt_gen="true"></arg>
      <arg name="isAdding" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSRulerView" swt_gen="true" swt_superclass="NSView">
    <method selector="accessoryView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addMarker:" swt_gen="true">
      <arg name="marker" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="baselineLocation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="clientView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawHashMarksAndLabelsInRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawMarkersInRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithScrollView:orientation:" swt_gen="true">
      <arg name="scrollView" swt_gen="true"></arg>
      <arg name="orientation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invalidateHashMarks" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isFlipped" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="markers" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="measurementUnits" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveRulerlineFromLocation:toLocation:" swt_gen="true">
      <arg name="oldLocation" swt_gen="true"></arg>
      <arg name="newLocation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orientation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="originOffset" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registerUnitWithName:abbreviation:unitToPointsConversionFactor:stepUpCycle:stepDownCycle:" swt_gen="true">
      <arg name="unitName" swt_gen="true"></arg>
      <arg name="abbreviation" swt_gen="true"></arg>
      <arg name="conversionFactor" swt_gen="true"></arg>
      <arg name="stepUpCycle" swt_gen="true"></arg>
      <arg name="stepDownCycle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeMarker:" swt_gen="true">
      <arg name="marker" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="requiredThickness" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reservedThicknessForAccessoryView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reservedThicknessForMarkers" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ruleThickness" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAccessoryView:" swt_gen="true">
      <arg name="accessory" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setClientView:" swt_gen="true">
      <arg name="client" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMarkers:" swt_gen="true">
      <arg name="markers" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMeasurementUnits:" swt_gen="true">
      <arg name="unitName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setOrientation:" swt_gen="true">
      <arg name="orientation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setOriginOffset:" swt_gen="true">
      <arg name="offset" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setReservedThicknessForAccessoryView:" swt_gen="true">
      <arg name="thickness" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setReservedThicknessForMarkers:" swt_gen="true">
      <arg name="thickness" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRuleThickness:" swt_gen="true">
      <arg name="thickness" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setScrollView:" swt_gen="true">
      <arg name="scrollView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="trackMarker:withMouseEvent:" swt_gen="true">
      <arg name="marker" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSSavePanel" swt_gen="true" swt_superclass="NSPanel">
    <method selector="URL" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="accessoryView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowedFileTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsOtherFileTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:contextInfo:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <arg name="docWindow" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didEndSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canCreateDirectories" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canSelectHiddenExtension" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cancel:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="directory" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="filename" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isExpanded" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isExtensionHidden" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="message" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nameFieldLabel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ok:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="prompt" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="requiredFileType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runModal" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runModalForDirectory:file:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="savePanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectText:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAccessoryView:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowedFileTypes:" swt_gen="true">
      <arg name="types" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsOtherFileTypes:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCanCreateDirectories:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCanSelectHiddenExtension:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDirectory:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setExtensionHidden:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMessage:" swt_gen="true">
      <arg name="message" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNameFieldLabel:" swt_gen="true">
      <arg name="label" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPrompt:" swt_gen="true">
      <arg name="prompt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRequiredFileType:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitle:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTreatsFilePackagesAsDirectories:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="title" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="treatsFilePackagesAsDirectories" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="validateVisibleColumns" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSScreen" swt_gen="true">
    <method selector="deepestScreen" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="depth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deviceDescription" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="frame" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mainScreen" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="screens" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="supportedWindowDepths" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="userSpaceScaleFactor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="visibleFrame" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSScrollView" swt_gen="true" swt_superclass="NSView">
    <method selector="autohidesScrollers" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="backgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="borderType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentSizeForFrameSize:hasHorizontalScroller:hasVerticalScroller:borderType:" swt_gen="true">
      <arg name="fSize" swt_gen="true"></arg>
      <arg name="hFlag" swt_gen="true"></arg>
      <arg name="vFlag" swt_gen="true"></arg>
      <arg name="aType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="documentCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="documentView" swt_gen="true">
      <retval swt_gen="true" swt_replace_return="NSView"></retval>
    </method>
    <method selector="documentVisibleRect" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawsBackground" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="frameSizeForContentSize:hasHorizontalScroller:hasVerticalScroller:borderType:" swt_gen="true">
      <arg name="cSize" swt_gen="true"></arg>
      <arg name="hFlag" swt_gen="true"></arg>
      <arg name="vFlag" swt_gen="true"></arg>
      <arg name="aType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasHorizontalRuler" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasHorizontalScroller" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasVerticalRuler" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasVerticalScroller" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="horizontalLineScroll" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="horizontalPageScroll" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="horizontalRulerView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="horizontalScroller" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineScroll" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pageScroll" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reflectScrolledClipView:" swt_gen="true">
      <arg name="cView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerViewClass" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulersVisible" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollWheel:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollsDynamically" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutohidesScrollers:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBorderType:" swt_gen="true">
      <arg name="aType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContentView:" swt_gen="true">
      <arg name="contentView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDocumentCursor:" swt_gen="true">
      <arg name="anObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDocumentView:" swt_gen="true">
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDrawsBackground:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHasHorizontalRuler:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHasHorizontalScroller:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHasVerticalRuler:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHasVerticalScroller:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHorizontalLineScroll:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHorizontalPageScroll:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHorizontalRulerView:" swt_gen="true">
      <arg name="ruler" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHorizontalScroller:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLineScroll:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPageScroll:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRulerViewClass:" swt_gen="true">
      <arg name="rulerViewClass" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRulersVisible:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setScrollsDynamically:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVerticalLineScroll:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVerticalPageScroll:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVerticalRulerView:" swt_gen="true">
      <arg name="ruler" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVerticalScroller:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tile" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="verticalLineScroll" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="verticalPageScroll" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="verticalRulerView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="verticalScroller" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSScroller" swt_gen="true" swt_superclass="NSControl">
    <method selector="arrowsPosition" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="checkSpaceForParts" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlTint" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawArrow:highlight:" swt_gen="true">
      <arg name="whichArrow" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawKnob" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawKnobSlotInRect:highlight:" swt_gen="true">
      <arg name="slotRect" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawParts" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="highlight:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hitPart" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="knobProportion" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rectForPart:" swt_gen="true">
      <arg name="partCode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollerWidth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollerWidthForControlSize:" swt_gen="true">
      <arg name="controlSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setArrowsPosition:" swt_gen="true">
      <arg name="where" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setControlSize:" swt_gen="true">
      <arg name="controlSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setControlTint:" swt_gen="true">
      <arg name="controlTint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFloatValue:knobProportion:" swt_gen="true">
      <arg name="aFloat" swt_gen="true"></arg>
      <arg name="proportion" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setKnobProportion:" swt_gen="true">
      <arg name="proportion" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="testPart:" swt_gen="true">
      <arg name="thePoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="trackKnob:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="trackScrollButtons:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usableParts" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSSearchField" swt_gen="true" swt_superclass="NSTextField">
    <method selector="recentSearches" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="recentsAutosaveName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRecentSearches:" swt_gen="true">
      <arg name="searches" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRecentsAutosaveName:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSSearchFieldCell" swt_gen="true" swt_superclass="NSTextFieldCell">
    <method selector="cancelButtonCell" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cancelButtonRectForBounds:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maximumRecents" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="recentSearches" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="recentsAutosaveName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resetCancelButtonCell" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resetSearchButtonCell" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="searchButtonCell" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="searchButtonRectForBounds:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="searchMenuTemplate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="searchTextRectForBounds:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendsSearchStringImmediately" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendsWholeSearchString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCancelButtonCell:" swt_gen="true">
      <arg name="cell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaximumRecents:" swt_gen="true">
      <arg name="maxRecents" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRecentSearches:" swt_gen="true">
      <arg name="searches" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRecentsAutosaveName:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSearchButtonCell:" swt_gen="true">
      <arg name="cell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSearchMenuTemplate:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSendsSearchStringImmediately:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSendsWholeSearchString:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSSecureTextFieldCell" swt_gen="true" swt_superclass="NSTextFieldCell">
    <method selector="echosBullets" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEchosBullets:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSSegmentedCell" swt_gen="true" swt_superclass="NSActionCell">
    <method selector="drawSegment:inFrame:withView:" swt_gen="true">
      <arg name="segment" swt_gen="true"></arg>
      <arg name="frame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageForSegment:" swt_gen="true">
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageScalingForSegment:" swt_gen="true">
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="interiorBackgroundStyleForSegment:" swt_gen="true">
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEnabledForSegment:" swt_gen="true">
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSelectedForSegment:" swt_gen="true">
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="labelForSegment:" swt_gen="true">
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makeNextSegmentKey" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makePreviousSegmentKey" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menuForSegment:" swt_gen="true">
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="segmentCount" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="segmentStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectSegmentWithTag:" swt_gen="true">
      <arg name="tag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedSegment" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEnabled:forSegment:" swt_gen="true">
      <arg name="enabled" swt_gen="true"></arg>
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImage:forSegment:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImageScaling:forSegment:" swt_gen="true">
      <arg name="scaling" swt_gen="true"></arg>
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLabel:forSegment:" swt_gen="true">
      <arg name="label" swt_gen="true"></arg>
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMenu:forSegment:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSegmentCount:" swt_gen="true">
      <arg name="count" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSegmentStyle:" swt_gen="true">
      <arg name="segmentStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelected:forSegment:" swt_gen="true">
      <arg name="selected" swt_gen="true"></arg>
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectedSegment:" swt_gen="true">
      <arg name="selectedSegment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTag:forSegment:" swt_gen="true">
      <arg name="tag" swt_gen="true"></arg>
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setToolTip:forSegment:" swt_gen="true">
      <arg name="toolTip" swt_gen="true"></arg>
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTrackingMode:" swt_gen="true">
      <arg name="trackingMode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWidth:forSegment:" swt_gen="true">
      <arg name="width" swt_gen="true"></arg>
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tagForSegment:" swt_gen="true">
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toolTipForSegment:" swt_gen="true">
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="trackingMode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="widthForSegment:" swt_gen="true">
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSSegmentedControl" swt_gen="true" swt_superclass="NSControl">
    <method selector="imageForSegment:" swt_gen="true">
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageScalingForSegment:" swt_gen="true">
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEnabledForSegment:" swt_gen="true">
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSelectedForSegment:" swt_gen="true">
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="labelForSegment:" swt_gen="true">
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menuForSegment:" swt_gen="true">
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="segmentCount" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="segmentStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectSegmentWithTag:" swt_gen="true">
      <arg name="tag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedSegment" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEnabled:forSegment:" swt_gen="true">
      <arg name="enabled" swt_gen="true"></arg>
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImage:forSegment:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImageScaling:forSegment:" swt_gen="true">
      <arg name="scaling" swt_gen="true"></arg>
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLabel:forSegment:" swt_gen="true">
      <arg name="label" swt_gen="true"></arg>
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMenu:forSegment:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSegmentCount:" swt_gen="true">
      <arg name="count" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSegmentStyle:" swt_gen="true">
      <arg name="segmentStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelected:forSegment:" swt_gen="true">
      <arg name="selected" swt_gen="true"></arg>
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectedSegment:" swt_gen="true">
      <arg name="selectedSegment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWidth:forSegment:" swt_gen="true">
      <arg name="width" swt_gen="true"></arg>
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="widthForSegment:" swt_gen="true">
      <arg name="segment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSShadow" swt_gen="true">
    <method selector="init" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="set" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShadowBlurRadius:" swt_gen="true">
      <arg name="val" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShadowColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShadowOffset:" swt_gen="true">
      <arg name="offset" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shadowBlurRadius" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shadowColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shadowOffset" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSSlider" swt_gen="true" swt_superclass="NSControl">
    <method selector="acceptsFirstMouse:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsTickMarkValuesOnly" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="altIncrementValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="closestTickMarkValueToValue:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="image" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfTickMarkAtPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isVertical" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="knobThickness" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maxValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfTickMarks" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rectOfTickMarkAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsTickMarkValuesOnly:" swt_gen="true">
      <arg name="yorn" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAltIncrementValue:" swt_gen="true">
      <arg name="incValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImage:" swt_gen="true">
      <arg name="backgroundImage" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setKnobThickness:" swt_gen="true">
      <arg name="aFloat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxValue:" swt_gen="true">
      <arg name="aDouble" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinValue:" swt_gen="true">
      <arg name="aDouble" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNumberOfTickMarks:" swt_gen="true">
      <arg name="count" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTickMarkPosition:" swt_gen="true">
      <arg name="position" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitle:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleCell:" swt_gen="true">
      <arg name="aCell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleColor:" swt_gen="true">
      <arg name="newColor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleFont:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tickMarkPosition" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tickMarkValueAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="title" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleCell" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleFont" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSSliderCell" swt_gen="true" swt_superclass="NSActionCell">
    <method selector="allowsTickMarkValuesOnly" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="altIncrementValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="closestTickMarkValueToValue:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawBarInside:flipped:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <arg name="flipped" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawKnob" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawKnob:" swt_gen="true">
      <arg name="knobRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfTickMarkAtPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isVertical" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="knobRectFlipped:" swt_gen="true">
      <arg name="flipped" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="knobThickness" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maxValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfTickMarks" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="prefersTrackingUntilMouseUp" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rectOfTickMarkAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsTickMarkValuesOnly:" swt_gen="true">
      <arg name="yorn" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAltIncrementValue:" swt_gen="true">
      <arg name="incValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setKnobThickness:" swt_gen="true">
      <arg name="aFloat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxValue:" swt_gen="true">
      <arg name="aDouble" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinValue:" swt_gen="true">
      <arg name="aDouble" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNumberOfTickMarks:" swt_gen="true">
      <arg name="count" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSliderType:" swt_gen="true">
      <arg name="sliderType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTickMarkPosition:" swt_gen="true">
      <arg name="position" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitle:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleCell:" swt_gen="true">
      <arg name="aCell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleColor:" swt_gen="true">
      <arg name="newColor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleFont:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sliderType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tickMarkPosition" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tickMarkValueAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="title" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleCell" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleFont" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="trackRect" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSSound" swt_gen="true">
    <method selector="canInitWithPasteboard:" swt_gen="true">
      <arg name="pasteboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="channelMapping" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentTime" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="duration" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfFile:byReference:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="byRef" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfURL:byReference:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="byRef" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithPasteboard:" swt_gen="true">
      <arg name="pasteboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isPlaying" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="loops" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="name" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pause" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="play" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="playbackDeviceIdentifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resume" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setChannelMapping:" swt_gen="true">
      <arg name="channelMapping" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCurrentTime:" swt_gen="true">
      <arg name="seconds" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="aDelegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLoops:" swt_gen="true">
      <arg name="val" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setName:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPlaybackDeviceIdentifier:" swt_gen="true">
      <arg name="deviceUID" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVolume:" swt_gen="true">
      <arg name="volume" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="soundNamed:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="soundUnfilteredFileTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="soundUnfilteredPasteboardTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="soundUnfilteredTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stop" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="volume" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToPasteboard:" swt_gen="true">
      <arg name="pasteboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSSpeechRecognizer" swt_gen="true">
    <method selector="blocksOtherRecognizers" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="commands" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displayedCommandsTitle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="init" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="listensInForegroundOnly" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBlocksOtherRecognizers:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCommands:" swt_gen="true">
      <arg name="commands" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDisplayedCommandsTitle:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setListensInForegroundOnly:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="startListening" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stopListening" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSSpeechSynthesizer" swt_gen="true">
    <method selector="addSpeechDictionary:" swt_gen="true">
      <arg name="speechDictionary" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributesForVoice:" swt_gen="true">
      <arg name="voice" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="availableVoices" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="continueSpeaking" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultVoice" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithVoice:" swt_gen="true">
      <arg name="voice" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isAnyApplicationSpeaking" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSpeaking" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectForProperty:error:" swt_gen="true">
      <arg name="property" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pauseSpeakingAtBoundary:" swt_gen="true">
      <arg name="boundary" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="phonemesFromText:" swt_gen="true">
      <arg name="text" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setObject:forProperty:error:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <arg name="property" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRate:" swt_gen="true">
      <arg name="rate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUsesFeedbackWindow:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVoice:" swt_gen="true">
      <arg name="voice" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVolume:" swt_gen="true">
      <arg name="volume" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="startSpeakingString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="startSpeakingString:toURL:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <arg name="url" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stopSpeaking" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stopSpeakingAtBoundary:" swt_gen="true">
      <arg name="boundary" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesFeedbackWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="voice" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="volume" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSSpellChecker" swt_gen="true">
    <method selector="accessoryView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="availableLanguages" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="checkGrammarOfString:startingAt:language:wrap:inSpellDocumentWithTag:details:" swt_gen="true">
      <arg name="stringToCheck" swt_gen="true"></arg>
      <arg name="startingOffset" swt_gen="true"></arg>
      <arg name="language" swt_gen="true"></arg>
      <arg name="wrapFlag" swt_gen="true"></arg>
      <arg name="tag" swt_gen="true"></arg>
      <arg name="details" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="checkSpellingOfString:startingAt:" swt_gen="true">
      <arg name="stringToCheck" swt_gen="true"></arg>
      <arg name="startingOffset" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="checkSpellingOfString:startingAt:language:wrap:inSpellDocumentWithTag:wordCount:" swt_gen="true">
      <arg name="stringToCheck" swt_gen="true"></arg>
      <arg name="startingOffset" swt_gen="true"></arg>
      <arg name="language" swt_gen="true"></arg>
      <arg name="wrapFlag" swt_gen="true"></arg>
      <arg name="tag" swt_gen="true"></arg>
      <arg name="wordCount" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="closeSpellDocumentWithTag:" swt_gen="true">
      <arg name="tag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="completionsForPartialWordRange:inString:language:inSpellDocumentWithTag:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
      <arg name="language" swt_gen="true"></arg>
      <arg name="tag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="countWordsInString:language:" swt_gen="true">
      <arg name="stringToCount" swt_gen="true"></arg>
      <arg name="language" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="forgetWord:" swt_gen="true">
      <arg name="word" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="guessesForWord:" swt_gen="true">
      <arg name="word" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasLearnedWord:" swt_gen="true">
      <arg name="word" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ignoreWord:inSpellDocumentWithTag:" swt_gen="true">
      <arg name="wordToIgnore" swt_gen="true"></arg>
      <arg name="tag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ignoredWordsInSpellDocumentWithTag:" swt_gen="true">
      <arg name="tag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="language" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="learnWord:" swt_gen="true">
      <arg name="word" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAccessoryView:" swt_gen="true">
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIgnoredWords:inSpellDocumentWithTag:" swt_gen="true">
      <arg name="words" swt_gen="true"></arg>
      <arg name="tag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLanguage:" swt_gen="true">
      <arg name="language" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWordFieldStringValue:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedSpellChecker" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedSpellCheckerExists" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="spellingPanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="uniqueSpellDocumentTag" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unlearnWord:" swt_gen="true">
      <arg name="word" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="updateSpellingPanelWithGrammarString:detail:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <arg name="detail" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="updateSpellingPanelWithMisspelledWord:" swt_gen="true">
      <arg name="word" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSSplitView" swt_gen="true" swt_superclass="NSView">
    <method selector="adjustSubviews" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autosaveName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dividerColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dividerStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dividerThickness" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawDividerInRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isPaneSplitter" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSubviewCollapsed:" swt_gen="true">
      <arg name="subview" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isVertical" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maxPossiblePositionOfDividerAtIndex:" swt_gen="true">
      <arg name="dividerIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minPossiblePositionOfDividerAtIndex:" swt_gen="true">
      <arg name="dividerIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutosaveName:" swt_gen="true">
      <arg name="autosaveName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDividerStyle:" swt_gen="true">
      <arg name="dividerStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIsPaneSplitter:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPosition:ofDividerAtIndex:" swt_gen="true">
      <arg name="position" swt_gen="true"></arg>
      <arg name="dividerIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVertical:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSStatusBar" swt_gen="true">
    <method selector="isVertical" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeStatusItem:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="statusItemWithLength:" swt_gen="true">
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="systemStatusBar" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="thickness" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSStatusItem" swt_gen="true">
    <method selector="action" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alternateImage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributedTitle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doubleAction" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawStatusBarBackgroundInRect:withHighlight:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="highlight" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="highlightMode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="image" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEnabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="length" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="popUpStatusItemMenu:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendActionOn:" swt_gen="true">
      <arg name="mask" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAction:" swt_gen="true">
      <arg name="action" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlternateImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributedTitle:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDoubleAction:" swt_gen="true">
      <arg name="action" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEnabled:" swt_gen="true">
      <arg name="enabled" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHighlightMode:" swt_gen="true">
      <arg name="highlightMode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLength:" swt_gen="true">
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMenu:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTarget:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitle:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setToolTip:" swt_gen="true">
      <arg name="toolTip" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setView:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="statusBar" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="target" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="title" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toolTip" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="view" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSStepper" swt_gen="true" swt_superclass="NSControl">
    <method selector="autorepeat" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="increment" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maxValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutorepeat:" swt_gen="true">
      <arg name="autorepeat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIncrement:" swt_gen="true">
      <arg name="increment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxValue:" swt_gen="true">
      <arg name="maxValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinValue:" swt_gen="true">
      <arg name="minValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setValueWraps:" swt_gen="true">
      <arg name="valueWraps" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueWraps" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSStepperCell" swt_gen="true" swt_superclass="NSActionCell">
    <method selector="autorepeat" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="increment" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maxValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutorepeat:" swt_gen="true">
      <arg name="autorepeat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIncrement:" swt_gen="true">
      <arg name="increment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxValue:" swt_gen="true">
      <arg name="maxValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinValue:" swt_gen="true">
      <arg name="minValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setValueWraps:" swt_gen="true">
      <arg name="valueWraps" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueWraps" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSString" swt_gen="true">
    <method selector="boundingRectWithSize:options:attributes:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <arg name="attributes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawAtPoint:withAttributes:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <arg name="attrs" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawInRect:withAttributes:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="attrs" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawWithRect:options:attributes:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <arg name="attributes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sizeWithAttributes:" swt_gen="true">
      <arg name="attrs" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTabView" swt_gen="true" swt_superclass="NSView">
    <method selector="addTabViewItem:" swt_gen="true">
      <arg name="tabViewItem" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsTruncatedLabels" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentRect" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlTint" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawsBackground" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="font" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfTabViewItem:" swt_gen="true">
      <arg name="tabViewItem" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfTabViewItemWithIdentifier:" swt_gen="true">
      <arg name="identifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertTabViewItem:atIndex:" swt_gen="true">
      <arg name="tabViewItem" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minimumSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfTabViewItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeTabViewItem:" swt_gen="true">
      <arg name="tabViewItem" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectFirstTabViewItem:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectLastTabViewItem:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectNextTabViewItem:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectPreviousTabViewItem:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectTabViewItem:" swt_gen="true">
      <arg name="tabViewItem" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectTabViewItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectTabViewItemWithIdentifier:" swt_gen="true">
      <arg name="identifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedTabViewItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsTruncatedLabels:" swt_gen="true">
      <arg name="allowTruncatedLabels" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setControlSize:" swt_gen="true">
      <arg name="controlSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setControlTint:" swt_gen="true">
      <arg name="controlTint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDrawsBackground:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFont:" swt_gen="true">
      <arg name="font" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTabViewType:" swt_gen="true">
      <arg name="tabViewType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tabViewItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tabViewItemAtPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tabViewItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tabViewType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="takeSelectedTabViewItemFromSender:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTabViewItem" swt_gen="true">
    <method selector="color" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawLabel:inRect:" swt_gen="true">
      <arg name="shouldTruncateLabel" swt_gen="true"></arg>
      <arg name="labelRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="identifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithIdentifier:" swt_gen="true">
      <arg name="identifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initialFirstResponder" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="label" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIdentifier:" swt_gen="true">
      <arg name="identifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setInitialFirstResponder:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLabel:" swt_gen="true">
      <arg name="label" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setView:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sizeOfLabel:" swt_gen="true">
      <arg name="computeMin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tabState" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tabView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="view" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTableColumn" swt_gen="true">
    <method selector="dataCell" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataCellForRow:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="headerCell" swt_gen="true">
      <retval swt_gen="true" swt_replace_return="NSTableHeaderCell"></retval>
    </method>
    <method selector="headerToolTip" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="identifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithIdentifier:" swt_gen="true">
      <arg name="identifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEditable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isHidden" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isResizable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maxWidth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minWidth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resizingMask" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDataCell:" swt_gen="true">
      <arg name="cell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEditable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHeaderCell:" swt_gen="true">
      <arg name="cell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHeaderToolTip:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHidden:" swt_gen="true">
      <arg name="hidden" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIdentifier:" swt_gen="true">
      <arg name="identifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxWidth:" swt_gen="true">
      <arg name="maxWidth" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinWidth:" swt_gen="true">
      <arg name="minWidth" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setResizable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setResizingMask:" swt_gen="true">
      <arg name="resizingMask" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSortDescriptorPrototype:" swt_gen="true">
      <arg name="sortDescriptor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTableView:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWidth:" swt_gen="true">
      <arg name="width" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sizeToFit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sortDescriptorPrototype" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="width" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTableHeaderCell" swt_gen="true" swt_superclass="NSTextFieldCell">
    <method selector="drawSortIndicatorWithFrame:inView:ascending:priority:" swt_gen="true">
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <arg name="ascending" swt_gen="true"></arg>
      <arg name="priority" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sortIndicatorRectForBounds:" swt_gen="true">
      <arg name="theRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTableHeaderView" swt_gen="true" swt_superclass="NSView">
    <method selector="columnAtPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggedColumn" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggedDistance" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="headerRectOfColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resizedColumn" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTableView:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTableView" swt_gen="true" swt_superclass="NSControl">
    <method selector="addTableColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsColumnReordering" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsColumnResizing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsColumnSelection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsEmptySelection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsMultipleSelection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsTypeSelect" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autoresizesAllColumnsToFit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autosaveName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autosaveTableColumns" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="backgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canDragRowsWithIndexes:atPoint:" swt_gen="true">
      <arg name="rowIndexes" swt_gen="true"></arg>
      <arg name="mouseDownPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="clickedColumn" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="clickedRow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="columnAtPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="columnAutoresizingStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="columnIndexesInRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="columnWithIdentifier:" swt_gen="true">
      <arg name="identifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="columnsInRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cornerView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataSource" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deselectAll:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deselectColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deselectRow:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doubleAction" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dragImageForRows:event:dragImageOffset:" swt_gen="true">
      <arg name="dragRows" swt_gen="true"></arg>
      <arg name="dragEvent" swt_gen="true"></arg>
      <arg name="dragImageOffset" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dragImageForRowsWithIndexes:tableColumns:event:offset:" swt_gen="true">
      <arg name="dragRows" swt_gen="true"></arg>
      <arg name="tableColumns" swt_gen="true"></arg>
      <arg name="dragEvent" swt_gen="true"></arg>
      <arg name="dragImageOffset" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawBackgroundInClipRect:" swt_gen="true">
      <arg name="clipRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawGridInClipRect:" swt_gen="true">
      <arg name="clipRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawRow:clipRect:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <arg name="clipRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawsGrid" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="editColumn:row:withEvent:select:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="theEvent" swt_gen="true"></arg>
      <arg name="select" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="editedColumn" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="editedRow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="frameOfCellAtColumn:row:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="gridColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="gridStyleMask" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="headerView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="highlightSelectionInClipRect:" swt_gen="true">
      <arg name="clipRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="highlightedTableColumn" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indicatorImageInTableColumn:" swt_gen="true">
      <arg name="tc" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="intercellSpacing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isColumnSelected:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isRowSelected:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveColumn:toColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <arg name="newIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="noteHeightOfRowsWithIndexesChanged:" swt_gen="true">
      <arg name="indexSet" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="noteNumberOfRowsChanged" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfColumns" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfRows" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfSelectedColumns" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfSelectedRows" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="preparedCellAtColumn:row:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rectOfColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rectOfRow:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reloadData" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeTableColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rowAtPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rowHeight" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rowsInRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollColumnToVisible:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollRowToVisible:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectAll:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectColumn:byExtendingSelection:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <arg name="extend" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectColumnIndexes:byExtendingSelection:" swt_gen="true">
      <arg name="indexes" swt_gen="true"></arg>
      <arg name="extend" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectRow:byExtendingSelection:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <arg name="extend" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectRowIndexes:byExtendingSelection:" swt_gen="true">
      <arg name="indexes" swt_gen="true"></arg>
      <arg name="extend" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedColumn" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedColumnEnumerator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedColumnIndexes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedRow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedRowEnumerator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedRowIndexes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectionHighlightStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsColumnReordering:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsColumnResizing:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsColumnSelection:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsEmptySelection:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsMultipleSelection:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsTypeSelect:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutoresizesAllColumnsToFit:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutosaveName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutosaveTableColumns:" swt_gen="true">
      <arg name="save" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setColumnAutoresizingStyle:" swt_gen="true">
      <arg name="style" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCornerView:" swt_gen="true">
      <arg name="cornerView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDataSource:" swt_gen="true">
      <arg name="aSource" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDoubleAction:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDraggingSourceOperationMask:forLocal:" swt_gen="true">
      <arg name="mask" swt_gen="true"></arg>
      <arg name="isLocal" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDrawsGrid:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDropRow:dropOperation:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <arg name="op" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setGridColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setGridStyleMask:" swt_gen="true">
      <arg name="gridType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHeaderView:" swt_gen="true">
      <arg name="headerView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHighlightedTableColumn:" swt_gen="true">
      <arg name="tc" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIndicatorImage:inTableColumn:" swt_gen="true">
      <arg name="anImage" swt_gen="true"></arg>
      <arg name="tc" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIntercellSpacing:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRowHeight:" swt_gen="true">
      <arg name="rowHeight" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectionHighlightStyle:" swt_gen="true">
      <arg name="selectionHighlightStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSortDescriptors:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUsesAlternatingRowBackgroundColors:" swt_gen="true">
      <arg name="useAlternatingRowColors" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVerticalMotionCanBeginDrag:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sizeLastColumnToFit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sizeToFit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sortDescriptors" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableColumnWithIdentifier:" swt_gen="true">
      <arg name="identifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableColumns" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textDidBeginEditing:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textDidChange:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textDidEndEditing:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textShouldBeginEditing:" swt_gen="true">
      <arg name="textObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textShouldEndEditing:" swt_gen="true">
      <arg name="textObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tile" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesAlternatingRowBackgroundColors" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="verticalMotionCanBeginDrag" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSText" swt_gen="true" swt_superclass="NSView">
    <method selector="RTFDFromRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="RTFFromRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alignCenter:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alignLeft:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alignRight:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alignment" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="backgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="baseWritingDirection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="changeFont:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="checkSpelling:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="copy:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="copyFont:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="copyRuler:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cut:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delete:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawsBackground" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="font" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="importsGraphics" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEditable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isFieldEditor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isHorizontallyResizable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isRichText" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isRulerVisible" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSelectable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isVerticallyResizable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maxSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="paste:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pasteFont:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pasteRuler:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readRTFDFromFile:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceCharactersInRange:withRTF:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <arg name="rtfData" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceCharactersInRange:withRTFD:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <arg name="rtfdData" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceCharactersInRange:withString:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollRangeToVisible:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectAll:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedRange" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlignment:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBaseWritingDirection:" swt_gen="true">
      <arg name="writingDirection" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDrawsBackground:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEditable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFieldEditor:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFont:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFont:range:" swt_gen="true">
      <arg name="font" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHorizontallyResizable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImportsGraphics:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxSize:" swt_gen="true">
      <arg name="newMaxSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinSize:" swt_gen="true">
      <arg name="newMinSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRichText:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectedRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextColor:range:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUsesFontPanel:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVerticallyResizable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showGuessPanel:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sizeToFit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="string" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="subscript:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="superscript:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toggleRuler:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="underline:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unscript:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesFontPanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeRTFDToFile:atomically:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTextAttachment" swt_gen="true">
    <method selector="attachmentCell" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileWrapper" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFileWrapper:" swt_gen="true">
      <arg name="fileWrapper" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttachmentCell:" swt_gen="true">
      <arg name="cell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFileWrapper:" swt_gen="true">
      <arg name="fileWrapper" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTextBlock" swt_gen="true">
    <method selector="backgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="borderColorForEdge:" swt_gen="true">
      <arg name="edge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="boundsRectForContentRect:inRect:textContainer:characterRange:" swt_gen="true">
      <arg name="contentRect" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="textContainer" swt_gen="true"></arg>
      <arg name="charRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentWidth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentWidthValueType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawBackgroundWithFrame:inView:characterRange:layoutManager:" swt_gen="true">
      <arg name="frameRect" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <arg name="charRange" swt_gen="true"></arg>
      <arg name="layoutManager" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="init" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rectForLayoutAtPoint:inRect:textContainer:characterRange:" swt_gen="true">
      <arg name="startingPoint" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="textContainer" swt_gen="true"></arg>
      <arg name="charRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBorderColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBorderColor:forEdge:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <arg name="edge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContentWidth:type:" swt_gen="true">
      <arg name="val" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setValue:type:forDimension:" swt_gen="true">
      <arg name="val" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <arg name="dimension" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVerticalAlignment:" swt_gen="true">
      <arg name="alignment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWidth:type:forLayer:" swt_gen="true">
      <arg name="val" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <arg name="layer" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWidth:type:forLayer:edge:" swt_gen="true">
      <arg name="val" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <arg name="layer" swt_gen="true"></arg>
      <arg name="edge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueForDimension:" swt_gen="true">
      <arg name="dimension" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueTypeForDimension:" swt_gen="true">
      <arg name="dimension" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="verticalAlignment" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="widthForLayer:edge:" swt_gen="true">
      <arg name="layer" swt_gen="true"></arg>
      <arg name="edge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="widthValueTypeForLayer:edge:" swt_gen="true">
      <arg name="layer" swt_gen="true"></arg>
      <arg name="edge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTextContainer" swt_gen="true">
    <method selector="containerSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="containsPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="heightTracksTextView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContainerSize:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSimpleRectangularTextContainer" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="layoutManager" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineFragmentPadding" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineFragmentRectForProposedRect:sweepDirection:movementDirection:remainingRect:" swt_gen="true">
      <arg name="proposedRect" swt_gen="true"></arg>
      <arg name="sweepDirection" swt_gen="true"></arg>
      <arg name="movementDirection" swt_gen="true"></arg>
      <arg name="remainingRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceLayoutManager:" swt_gen="true">
      <arg name="newLayoutManager" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContainerSize:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHeightTracksTextView:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLayoutManager:" swt_gen="true">
      <arg name="layoutManager" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLineFragmentPadding:" swt_gen="true">
      <arg name="pad" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextView:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWidthTracksTextView:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="widthTracksTextView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTextField" swt_gen="true" swt_superclass="NSControl">
    <method selector="acceptsFirstResponder" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsEditingTextAttributes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="backgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bezelStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawsBackground" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="importsGraphics" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isBezeled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isBordered" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEditable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSelectable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectText:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsEditingTextAttributes:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBezelStyle:" swt_gen="true">
      <arg name="style" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBezeled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBordered:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDrawsBackground:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEditable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImportsGraphics:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleWithMnemonic:" swt_gen="true">
      <arg name="stringWithAmpersand" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textDidBeginEditing:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textDidChange:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textDidEndEditing:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textShouldBeginEditing:" swt_gen="true">
      <arg name="textObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textShouldEndEditing:" swt_gen="true">
      <arg name="textObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTextFieldCell" swt_gen="true" swt_superclass="NSActionCell">
    <method selector="allowedInputSourceLocales" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="backgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bezelStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawsBackground" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="placeholderAttributedString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="placeholderString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowedInputSourceLocales:" swt_gen="true">
      <arg name="localeIdentifiers" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBezelStyle:" swt_gen="true">
      <arg name="style" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDrawsBackground:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPlaceholderAttributedString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPlaceholderString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUpFieldEditorAttributes:" swt_gen="true">
      <arg name="textObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWantsNotificationForMarkedText:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTextList" swt_gen="true">
    <method selector="initWithMarkerFormat:options:" swt_gen="true">
      <arg name="format" swt_gen="true"></arg>
      <arg name="mask" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="listOptions" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="markerForItemNumber:" swt_gen="true">
      <arg name="itemNum" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="markerFormat" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTextStorage" swt_gen="true" swt_superclass="NSMutableAttributedString">
    <method selector="addLayoutManager:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributeRuns" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="changeInLength" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="characters" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="edited:range:changeInLength:" swt_gen="true">
      <arg name="editedMask" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <arg name="delta" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="editedMask" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="editedRange" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ensureAttributesAreFixedInRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fixesAttributesLazily" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="font" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="foregroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invalidateAttributesInRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="layoutManagers" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="paragraphs" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="processEditing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeLayoutManager:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributeRuns:" swt_gen="true">
      <arg name="attributeRuns" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCharacters:" swt_gen="true">
      <arg name="characters" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFont:" swt_gen="true">
      <arg name="font" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setForegroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setParagraphs:" swt_gen="true">
      <arg name="paragraphs" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWords:" swt_gen="true">
      <arg name="words" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="words" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTextTab" swt_gen="true">
    <method selector="alignment" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithTextAlignment:location:options:" swt_gen="true">
      <arg name="alignment" swt_gen="true"></arg>
      <arg name="loc" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithType:location:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <arg name="loc" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="location" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="options" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tabStopType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTextTable" swt_gen="true" swt_superclass="NSTextBlock">
    <method selector="boundsRectForBlock:contentRect:inRect:textContainer:characterRange:" swt_gen="true">
      <arg name="block" swt_gen="true"></arg>
      <arg name="contentRect" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="textContainer" swt_gen="true"></arg>
      <arg name="charRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="collapsesBorders" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawBackgroundForBlock:withFrame:inView:characterRange:layoutManager:" swt_gen="true">
      <arg name="block" swt_gen="true"></arg>
      <arg name="frameRect" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <arg name="charRange" swt_gen="true"></arg>
      <arg name="layoutManager" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hidesEmptyCells" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="layoutAlgorithm" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfColumns" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rectForBlock:layoutAtPoint:inRect:textContainer:characterRange:" swt_gen="true">
      <arg name="block" swt_gen="true"></arg>
      <arg name="startingPoint" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="textContainer" swt_gen="true"></arg>
      <arg name="charRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCollapsesBorders:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHidesEmptyCells:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLayoutAlgorithm:" swt_gen="true">
      <arg name="algorithm" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNumberOfColumns:" swt_gen="true">
      <arg name="numCols" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTextTableBlock" swt_gen="true" swt_superclass="NSTextBlock">
    <method selector="columnSpan" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithTable:startingRow:rowSpan:startingColumn:columnSpan:" swt_gen="true">
      <arg name="table" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="rowSpan" swt_gen="true"></arg>
      <arg name="col" swt_gen="true"></arg>
      <arg name="colSpan" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rowSpan" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="startingColumn" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="startingRow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="table" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTextView" swt_gen="true" swt_superclass="NSText">
    <method selector="acceptableDragTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="acceptsGlyphInfo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alignJustified:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowedInputSourceLocales" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsDocumentBackgroundColorChange" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsImageEditing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsUndo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="backgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="breakUndoCoalescing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="changeAttributes:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="changeColor:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="changeDocumentBackgroundColor:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="characterIndexForInsertionAtPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cleanUpAfterDragOperation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="clickedOnLink:atIndex:" swt_gen="true">
      <arg name="link" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="complete:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="completionsForPartialWordRange:indexOfSelectedItem:" swt_gen="true">
      <arg name="charRange" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultParagraphStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="didChangeText" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displaysLinkToolTips" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dragImageForSelectionWithEvent:origin:" swt_gen="true">
      <arg name="event" swt_gen="true"></arg>
      <arg name="origin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dragOperationForDraggingInfo:type:" swt_gen="true">
      <arg name="dragInfo" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dragSelectionWithEvent:offset:slideBack:" swt_gen="true">
      <arg name="event" swt_gen="true"></arg>
      <arg name="mouseOffset" swt_gen="true"></arg>
      <arg name="slideBack" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawInsertionPointInRect:color:turnedOn:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="color" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawViewBackgroundInRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawsBackground" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="importsGraphics" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFrame:" swt_gen="true">
      <arg name="frameRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFrame:textContainer:" swt_gen="true">
      <arg name="frameRect" swt_gen="true"></arg>
      <arg name="container" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertCompletion:forPartialWordRange:movement:isFinal:" swt_gen="true">
      <arg name="word" swt_gen="true"></arg>
      <arg name="charRange" swt_gen="true"></arg>
      <arg name="movement" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertText:" swt_gen="true">
      <arg name="insertString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertionPointColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invalidateTextContainerOrigin" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isAutomaticLinkDetectionEnabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isAutomaticQuoteSubstitutionEnabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isContinuousSpellCheckingEnabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEditable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isFieldEditor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isGrammarCheckingEnabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isRichText" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isRulerVisible" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSelectable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="layoutManager" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="linkTextAttributes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="loosenKerning:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lowerBaseline:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="markedTextAttributes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderFrontLinkPanel:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderFrontListPanel:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderFrontSpacingPanel:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderFrontTablePanel:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outline:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pasteAsPlainText:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pasteAsRichText:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performFindPanelAction:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="preferredPasteboardTypeFromArray:restrictedToTypesFromArray:" swt_gen="true">
      <arg name="availableTypes" swt_gen="true"></arg>
      <arg name="allowedTypes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="raiseBaseline:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeForUserCharacterAttributeChange" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeForUserCompletion" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeForUserParagraphAttributeChange" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeForUserTextChange" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangesForUserCharacterAttributeChange" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangesForUserParagraphAttributeChange" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangesForUserTextChange" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readSelectionFromPasteboard:" swt_gen="true">
      <arg name="pboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readSelectionFromPasteboard:type:" swt_gen="true">
      <arg name="pboard" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readablePasteboardTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registerForServices" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceTextContainer:" swt_gen="true">
      <arg name="newContainer" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerView:didAddMarker:" swt_gen="true">
      <arg name="ruler" swt_gen="true"></arg>
      <arg name="marker" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerView:didMoveMarker:" swt_gen="true">
      <arg name="ruler" swt_gen="true"></arg>
      <arg name="marker" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerView:didRemoveMarker:" swt_gen="true">
      <arg name="ruler" swt_gen="true"></arg>
      <arg name="marker" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerView:handleMouseDown:" swt_gen="true">
      <arg name="ruler" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerView:shouldAddMarker:" swt_gen="true">
      <arg name="ruler" swt_gen="true"></arg>
      <arg name="marker" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerView:shouldMoveMarker:" swt_gen="true">
      <arg name="ruler" swt_gen="true"></arg>
      <arg name="marker" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerView:shouldRemoveMarker:" swt_gen="true">
      <arg name="ruler" swt_gen="true"></arg>
      <arg name="marker" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerView:willAddMarker:atLocation:" swt_gen="true">
      <arg name="ruler" swt_gen="true"></arg>
      <arg name="marker" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerView:willMoveMarker:toLocation:" swt_gen="true">
      <arg name="ruler" swt_gen="true"></arg>
      <arg name="marker" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedRanges" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedTextAttributes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectionAffinity" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectionGranularity" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectionRangeForProposedRange:granularity:" swt_gen="true">
      <arg name="proposedCharRange" swt_gen="true"></arg>
      <arg name="granularity" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAcceptsGlyphInfo:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlignment:range:" swt_gen="true">
      <arg name="alignment" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowedInputSourceLocales:" swt_gen="true">
      <arg name="localeIdentifiers" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsDocumentBackgroundColorChange:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsImageEditing:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsUndo:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutomaticLinkDetectionEnabled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutomaticQuoteSubstitutionEnabled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBaseWritingDirection:range:" swt_gen="true">
      <arg name="writingDirection" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setConstrainedFrameSize:" swt_gen="true">
      <arg name="desiredSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContinuousSpellCheckingEnabled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDefaultParagraphStyle:" swt_gen="true">
      <arg name="paragraphStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDisplaysLinkToolTips:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDrawsBackground:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEditable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFieldEditor:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setGrammarCheckingEnabled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImportsGraphics:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setInsertionPointColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLinkTextAttributes:" swt_gen="true">
      <arg name="attributeDictionary" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMarkedTextAttributes:" swt_gen="true">
      <arg name="attributeDictionary" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNeedsDisplayInRect:avoidAdditionalLayout:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRichText:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRulerVisible:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectedRange:" swt_gen="true">
      <arg name="charRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectedRange:affinity:stillSelecting:" swt_gen="true">
      <arg name="charRange" swt_gen="true"></arg>
      <arg name="affinity" swt_gen="true"></arg>
      <arg name="stillSelectingFlag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectedRanges:" swt_gen="true">
      <arg name="ranges" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectedRanges:affinity:stillSelecting:" swt_gen="true">
      <arg name="ranges" swt_gen="true"></arg>
      <arg name="affinity" swt_gen="true"></arg>
      <arg name="stillSelectingFlag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectedTextAttributes:" swt_gen="true">
      <arg name="attributeDictionary" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectionGranularity:" swt_gen="true">
      <arg name="granularity" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSmartInsertDeleteEnabled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSpellingState:range:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="charRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextContainer:" swt_gen="true">
      <arg name="container" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextContainerInset:" swt_gen="true">
      <arg name="inset" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTypingAttributes:" swt_gen="true">
      <arg name="attrs" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUsesFindPanel:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUsesFontPanel:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUsesRuler:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shouldChangeTextInRange:replacementString:" swt_gen="true">
      <arg name="affectedCharRange" swt_gen="true"></arg>
      <arg name="replacementString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shouldChangeTextInRanges:replacementStrings:" swt_gen="true">
      <arg name="affectedRanges" swt_gen="true"></arg>
      <arg name="replacementStrings" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shouldDrawInsertionPoint" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showFindIndicatorForRange:" swt_gen="true">
      <arg name="charRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="smartDeleteRangeForProposedRange:" swt_gen="true">
      <arg name="proposedCharRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="smartInsertAfterStringForString:replacingRange:" swt_gen="true">
      <arg name="pasteString" swt_gen="true"></arg>
      <arg name="charRangeToReplace" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="smartInsertBeforeStringForString:replacingRange:" swt_gen="true">
      <arg name="pasteString" swt_gen="true"></arg>
      <arg name="charRangeToReplace" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="smartInsertDeleteEnabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="smartInsertForString:replacingRange:beforeString:afterString:" swt_gen="true">
      <arg name="pasteString" swt_gen="true"></arg>
      <arg name="charRangeToReplace" swt_gen="true"></arg>
      <arg name="beforeString" swt_gen="true"></arg>
      <arg name="afterString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="spellCheckerDocumentTag" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="startSpeaking:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stopSpeaking:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textContainer" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textContainerInset" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textContainerOrigin" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textStorage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tightenKerning:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toggleAutomaticLinkDetection:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toggleAutomaticQuoteSubstitution:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toggleBaseWritingDirection:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toggleContinuousSpellChecking:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toggleGrammarChecking:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toggleSmartInsertDelete:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toggleTraditionalCharacterShape:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="turnOffKerning:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="turnOffLigatures:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="typingAttributes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="updateDragTypeRegistration" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="updateFontPanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="updateInsertionPointStateAndRestartTimer:" swt_gen="true">
      <arg name="restartFlag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="updateRuler" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="useAllLigatures:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="useStandardKerning:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="useStandardLigatures:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesFindPanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesFontPanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesRuler" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="validRequestorForSendType:returnType:" swt_gen="true">
      <arg name="sendType" swt_gen="true"></arg>
      <arg name="returnType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writablePasteboardTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeSelectionToPasteboard:type:" swt_gen="true">
      <arg name="pboard" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeSelectionToPasteboard:types:" swt_gen="true">
      <arg name="pboard" swt_gen="true"></arg>
      <arg name="types" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTokenField" swt_gen="true" swt_superclass="NSTextField">
    <method selector="completionDelay" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultCompletionDelay" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultTokenizingCharacterSet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCompletionDelay:" swt_gen="true">
      <arg name="delay" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTokenStyle:" swt_gen="true">
      <arg name="style" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTokenizingCharacterSet:" swt_gen="true">
      <arg name="characterSet" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenizingCharacterSet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTokenFieldCell" swt_gen="true" swt_superclass="NSTextFieldCell">
    <method selector="completionDelay" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultCompletionDelay" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultTokenizingCharacterSet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCompletionDelay:" swt_gen="true">
      <arg name="delay" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTokenStyle:" swt_gen="true">
      <arg name="style" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTokenizingCharacterSet:" swt_gen="true">
      <arg name="characterSet" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tokenizingCharacterSet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSToolbar" swt_gen="true">
    <method selector="allowsUserCustomization" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autosavesConfiguration" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="configurationDictionary" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="customizationPaletteIsRunning" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displayMode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="identifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithIdentifier:" swt_gen="true">
      <arg name="identifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertItemWithItemIdentifier:atIndex:" swt_gen="true">
      <arg name="itemIdentifier" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isVisible" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="items" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runCustomizationPalette:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedItemIdentifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsUserCustomization:" swt_gen="true">
      <arg name="allowCustomization" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutosavesConfiguration:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setConfigurationFromDictionary:" swt_gen="true">
      <arg name="configDict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDisplayMode:" swt_gen="true">
      <arg name="displayMode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectedItemIdentifier:" swt_gen="true">
      <arg name="itemIdentifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShowsBaselineSeparator:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSizeMode:" swt_gen="true">
      <arg name="sizeMode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVisible:" swt_gen="true">
      <arg name="shown" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showsBaselineSeparator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sizeMode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="validateVisibleItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="visibleItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSToolbarItem" swt_gen="true">
    <method selector="action" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsDuplicatesInToolbar" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autovalidates" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="image" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithItemIdentifier:" swt_gen="true">
      <arg name="itemIdentifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEnabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemIdentifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="label" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maxSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menuFormRepresentation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="paletteLabel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAction:" swt_gen="true">
      <arg name="action" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutovalidates:" swt_gen="true">
      <arg name="resistance" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEnabled:" swt_gen="true">
      <arg name="enabled" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLabel:" swt_gen="true">
      <arg name="label" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxSize:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMenuFormRepresentation:" swt_gen="true">
      <arg name="menuItem" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinSize:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPaletteLabel:" swt_gen="true">
      <arg name="paletteLabel" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTag:" swt_gen="true">
      <arg name="tag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTarget:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setToolTip:" swt_gen="true">
      <arg name="toolTip" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setView:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVisibilityPriority:" swt_gen="true">
      <arg name="visibilityPriority" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tag" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="target" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toolTip" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toolbar" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="validate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="view" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="visibilityPriority" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSToolbarItemGroup" swt_gen="true" swt_superclass="NSToolbarItem">
    <method selector="setSubitems:" swt_gen="true">
      <arg name="subitems" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="subitems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTrackingArea" swt_gen="true">
    <method selector="initWithRect:options:owner:userInfo:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <arg name="owner" swt_gen="true"></arg>
      <arg name="userInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="options" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="owner" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rect" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="userInfo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTreeController" swt_gen="true" swt_superclass="NSObjectController">
    <method selector="add:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addChild:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addSelectionIndexPaths:" swt_gen="true">
      <arg name="indexPaths" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alwaysUsesMultipleValuesMarker" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="arrangedObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="avoidsEmptySelection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canAddChild" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canInsert" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canInsertChild" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="childrenKeyPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="childrenKeyPathForNode:" swt_gen="true">
      <arg name="node" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="content" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="countKeyPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="countKeyPathForNode:" swt_gen="true">
      <arg name="node" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insert:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertChild:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertObject:atArrangedObjectIndexPath:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <arg name="indexPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertObjects:atArrangedObjectIndexPaths:" swt_gen="true">
      <arg name="objects" swt_gen="true"></arg>
      <arg name="indexPaths" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="leafKeyPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="leafKeyPathForNode:" swt_gen="true">
      <arg name="node" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveNode:toIndexPath:" swt_gen="true">
      <arg name="node" swt_gen="true"></arg>
      <arg name="indexPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveNodes:toIndexPath:" swt_gen="true">
      <arg name="nodes" swt_gen="true"></arg>
      <arg name="startingIndexPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="preservesSelection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rearrangeObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="remove:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObjectAtArrangedObjectIndexPath:" swt_gen="true">
      <arg name="indexPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObjectsAtArrangedObjectIndexPaths:" swt_gen="true">
      <arg name="indexPaths" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeSelectionIndexPaths:" swt_gen="true">
      <arg name="indexPaths" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedNodes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectionIndexPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectionIndexPaths" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectsInsertedObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlwaysUsesMultipleValuesMarker:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAvoidsEmptySelection:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setChildrenKeyPath:" swt_gen="true">
      <arg name="keyPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContent:" swt_gen="true">
      <arg name="content" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCountKeyPath:" swt_gen="true">
      <arg name="keyPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLeafKeyPath:" swt_gen="true">
      <arg name="keyPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPreservesSelection:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectionIndexPath:" swt_gen="true">
      <arg name="indexPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectionIndexPaths:" swt_gen="true">
      <arg name="indexPaths" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectsInsertedObjects:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSortDescriptors:" swt_gen="true">
      <arg name="sortDescriptors" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sortDescriptors" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTreeNode" swt_gen="true">
    <method selector="childNodes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descendantNodeAtIndexPath:" swt_gen="true">
      <arg name="indexPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithRepresentedObject:" swt_gen="true">
      <arg name="modelObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isLeaf" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mutableChildNodes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parentNode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="representedObject" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sortWithSortDescriptors:recursively:" swt_gen="true">
      <arg name="sortDescriptors" swt_gen="true"></arg>
      <arg name="recursively" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="treeNodeWithRepresentedObject:" swt_gen="true">
      <arg name="modelObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTypesetter" swt_gen="true">
    <method selector="actionForControlCharacterAtIndex:" swt_gen="true">
      <arg name="charIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributedString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributesForExtraLineFragment" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="baselineOffsetInLayoutManager:glyphIndex:" swt_gen="true">
      <arg name="layoutMgr" swt_gen="true"></arg>
      <arg name="glyphIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="beginLineWithGlyphAtIndex:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="beginParagraph" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bidiProcessingEnabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <arg name="textContainer" swt_gen="true"></arg>
      <arg name="proposedRect" swt_gen="true"></arg>
      <arg name="glyphPosition" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="characterRangeForGlyphRange:actualGlyphRange:" swt_gen="true">
      <arg name="glyphRange" swt_gen="true"></arg>
      <arg name="actualGlyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentParagraphStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentTextContainer" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultTypesetterBehavior" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deleteGlyphsInRange:" swt_gen="true">
      <arg name="glyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="endLineWithGlyphRange:" swt_gen="true">
      <arg name="lineGlyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="endParagraph" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:" swt_gen="true">
      <arg name="glyphsRange" swt_gen="true"></arg>
      <arg name="glyphBuffer" swt_gen="true"></arg>
      <arg name="charIndexBuffer" swt_gen="true"></arg>
      <arg name="inscribeBuffer" swt_gen="true"></arg>
      <arg name="elasticBuffer" swt_gen="true"></arg>
      <arg name="bidiLevelBuffer" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:" swt_gen="true">
      <arg name="lineFragmentRect" swt_gen="true"></arg>
      <arg name="lineFragmentUsedRect" swt_gen="true"></arg>
      <arg name="paragraphSeparatorGlyphRange" swt_gen="true"></arg>
      <arg name="lineOrigin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getLineFragmentRect:usedRect:remainingRect:forStartingGlyphAtIndex:proposedRect:lineSpacing:paragraphSpacingBefore:paragraphSpacingAfter:" swt_gen="true">
      <arg name="lineFragmentRect" swt_gen="true"></arg>
      <arg name="lineFragmentUsedRect" swt_gen="true"></arg>
      <arg name="remainingRect" swt_gen="true"></arg>
      <arg name="startingGlyphIndex" swt_gen="true"></arg>
      <arg name="proposedRect" swt_gen="true"></arg>
      <arg name="lineSpacing" swt_gen="true"></arg>
      <arg name="paragraphSpacingBefore" swt_gen="true"></arg>
      <arg name="paragraphSpacingAfter" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="glyphRangeForCharacterRange:actualCharacterRange:" swt_gen="true">
      <arg name="charRange" swt_gen="true"></arg>
      <arg name="actualCharRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hyphenCharacterForGlyphAtIndex:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hyphenationFactor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hyphenationFactorForGlyphAtIndex:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertGlyph:atGlyphIndex:characterIndex:" swt_gen="true">
      <arg name="glyph" swt_gen="true"></arg>
      <arg name="glyphIndex" swt_gen="true"></arg>
      <arg name="characterIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="layoutCharactersInRange:forLayoutManager:maximumNumberOfLineFragments:" swt_gen="true">
      <arg name="characterRange" swt_gen="true"></arg>
      <arg name="layoutManager" swt_gen="true"></arg>
      <arg name="maxNumLines" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:" swt_gen="true">
      <arg name="layoutManager" swt_gen="true"></arg>
      <arg name="startGlyphIndex" swt_gen="true"></arg>
      <arg name="maxNumLines" swt_gen="true"></arg>
      <arg name="nextGlyph" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="layoutManager" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="layoutParagraphAtPoint:" swt_gen="true">
      <arg name="lineFragmentOrigin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineFragmentPadding" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="paragraphCharacterRange" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="paragraphGlyphRange" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="paragraphSeparatorCharacterRange" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="paragraphSeparatorGlyphRange" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printingAdjustmentInLayoutManager:forNominallySpacedGlyphRange:packedGlyphs:count:" swt_gen="true">
      <arg name="layoutMgr" swt_gen="true"></arg>
      <arg name="nominallySpacedGlyphsRange" swt_gen="true"></arg>
      <arg name="packedGlyphs" swt_gen="true"></arg>
      <arg name="packedGlyphsCount" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttachmentSize:forGlyphRange:" swt_gen="true">
      <arg name="attachmentSize" swt_gen="true"></arg>
      <arg name="glyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributedString:" swt_gen="true">
      <arg name="attrString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBidiLevels:forGlyphRange:" swt_gen="true">
      <arg name="levels" swt_gen="true"></arg>
      <arg name="glyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBidiProcessingEnabled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDrawsOutsideLineFragment:forGlyphRange:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <arg name="glyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHardInvalidation:forGlyphRange:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <arg name="glyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHyphenationFactor:" swt_gen="true">
      <arg name="factor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLineFragmentPadding:" swt_gen="true">
      <arg name="padding" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:" swt_gen="true">
      <arg name="fragmentRect" swt_gen="true"></arg>
      <arg name="glyphRange" swt_gen="true"></arg>
      <arg name="usedRect" swt_gen="true"></arg>
      <arg name="baselineOffset" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLocation:withAdvancements:forStartOfGlyphRange:" swt_gen="true">
      <arg name="location" swt_gen="true"></arg>
      <arg name="advancements" swt_gen="true"></arg>
      <arg name="glyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNotShownAttribute:forGlyphRange:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <arg name="glyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setParagraphGlyphRange:separatorGlyphRange:" swt_gen="true">
      <arg name="paragraphRange" swt_gen="true"></arg>
      <arg name="paragraphSeparatorRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTypesetterBehavior:" swt_gen="true">
      <arg name="behavior" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUsesFontLeading:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedSystemTypesetter" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedSystemTypesetterForBehavior:" swt_gen="true">
      <arg name="theBehavior" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shouldBreakLineByHyphenatingBeforeCharacterAtIndex:" swt_gen="true">
      <arg name="charIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shouldBreakLineByWordBeforeCharacterAtIndex:" swt_gen="true">
      <arg name="charIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="substituteFontForFont:" swt_gen="true">
      <arg name="originalFont" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="substituteGlyphsInRange:withGlyphs:" swt_gen="true">
      <arg name="glyphRange" swt_gen="true"></arg>
      <arg name="glyphs" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textContainers" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textTabForGlyphLocation:writingDirection:maxLocation:" swt_gen="true">
      <arg name="glyphLocation" swt_gen="true"></arg>
      <arg name="direction" swt_gen="true"></arg>
      <arg name="maxLocation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="typesetterBehavior" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesFontLeading" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:" swt_gen="true">
      <arg name="lineRect" swt_gen="true"></arg>
      <arg name="glyphRange" swt_gen="true"></arg>
      <arg name="usedRect" swt_gen="true"></arg>
      <arg name="baselineOffset" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSURL" swt_gen="true">
    <method selector="URLFromPasteboard:" swt_gen="true">
      <arg name="pasteBoard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToPasteboard:" swt_gen="true">
      <arg name="pasteBoard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSUserDefaultsController" swt_gen="true" swt_superclass="NSController">
    <method selector="appliesImmediately" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaults" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasUnappliedChanges" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithDefaults:initialValues:" swt_gen="true">
      <arg name="defaults" swt_gen="true"></arg>
      <arg name="initialValues" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initialValues" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="revert:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="revertToInitialValues:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="save:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAppliesImmediately:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setInitialValues:" swt_gen="true">
      <arg name="initialValues" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedUserDefaultsController" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="values" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSView" swt_gen="true" swt_superclass="NSResponder">
    <method selector="acceptsFirstMouse:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addCursorRect:cursor:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <arg name="anObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addSubview:" swt_gen="true">
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addSubview:positioned:relativeTo:" swt_gen="true">
      <arg name="aView" swt_gen="true"></arg>
      <arg name="place" swt_gen="true"></arg>
      <arg name="otherView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addToolTipRect:owner:userData:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addTrackingArea:" swt_gen="true">
      <arg name="trackingArea" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addTrackingRect:owner:userData:assumeInside:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <arg name="data" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="adjustPageHeightNew:top:bottom:limit:" swt_gen="true">
      <arg name="newBottom" swt_gen="true"></arg>
      <arg name="oldTop" swt_gen="true"></arg>
      <arg name="oldBottom" swt_gen="true"></arg>
      <arg name="bottomLimit" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="adjustPageWidthNew:left:right:limit:" swt_gen="true">
      <arg name="newRight" swt_gen="true"></arg>
      <arg name="oldLeft" swt_gen="true"></arg>
      <arg name="oldRight" swt_gen="true"></arg>
      <arg name="rightLimit" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="adjustScroll:" swt_gen="true">
      <arg name="newVisible" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allocateGState" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alphaValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ancestorSharedWithView:" swt_gen="true">
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autoresizesSubviews" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autoresizingMask" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autoscroll:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="backgroundFilters" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="beginDocument" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="beginPageInRect:atPlacement:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bitmapImageRepForCachingDisplayInRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bounds" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="boundsRotation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cacheDisplayInRect:toBitmapImageRep:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="bitmapImageRep" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canBecomeKeyView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canDraw" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="centerScanRect:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="compositingFilter" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentFilters" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertPoint:fromView:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertPoint:toView:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertPointFromBase:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertPointToBase:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertRect:fromView:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertRect:toView:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertRectFromBase:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertRectToBase:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertSize:fromView:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertSize:toView:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertSizeFromBase:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertSizeToBase:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataWithEPSInsideRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataWithPDFInsideRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultFocusRingType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultMenu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="didAddSubview:" swt_gen="true">
      <arg name="subview" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="discardCursorRects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="display" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displayIfNeeded" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displayIfNeededIgnoringOpacity" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displayIfNeededInRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displayIfNeededInRectIgnoringOpacity:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displayRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displayRectIgnoringOpacity:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displayRectIgnoringOpacity:inContext:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <arg name="context" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dragFile:fromRect:slideBack:event:" swt_gen="true">
      <arg name="filename" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="aFlag" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dragImage:at:offset:event:pasteboard:source:slideBack:" swt_gen="true">
      <arg name="anImage" swt_gen="true"></arg>
      <arg name="viewLocation" swt_gen="true"></arg>
      <arg name="initialOffset" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="pboard" swt_gen="true"></arg>
      <arg name="sourceObj" swt_gen="true"></arg>
      <arg name="slideFlag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dragPromisedFilesOfTypes:fromRect:source:slideBack:event:" swt_gen="true">
      <arg name="typeArray" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="sourceObject" swt_gen="true"></arg>
      <arg name="aFlag" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawPageBorderWithSize:" swt_gen="true">
      <arg name="borderSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawSheetBorderWithSize:" swt_gen="true">
      <arg name="borderSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="enclosingMenuItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="enclosingScrollView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="endDocument" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="endPage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="enterFullScreenMode:withOptions:" swt_gen="true">
      <arg name="screen" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="exitFullScreenModeWithOptions:" swt_gen="true">
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="focusRingType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="focusView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="frame" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="frameCenterRotation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="frameRotation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="gState" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getRectsBeingDrawn:count:" swt_gen="true">
      <arg name="rects" swt_gen="true"></arg>
      <arg name="count" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getRectsExposedDuringLiveResize:count:" swt_gen="true">
      <arg name="exposedRects" swt_gen="true"></arg>
      <arg name="count" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="heightAdjustLimit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hitTest:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="inLiveResize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFrame:" swt_gen="true">
      <arg name="frameRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isDescendantOf:" swt_gen="true">
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isFlipped" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isHidden" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isHiddenOrHasHiddenAncestor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isInFullScreenMode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isOpaque" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isRotatedFromBase" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isRotatedOrScaledFromBase" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="knowsPageRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="layer" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="locationOfPrintRect:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lockFocus" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lockFocusIfCanDraw" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lockFocusIfCanDrawInContext:" swt_gen="true">
      <arg name="context" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menuForEvent:" swt_gen="true">
      <arg name="event" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouse:inRect:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <arg name="aRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseDownCanMoveWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="needsDisplay" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="needsPanelToBecomeKey" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="needsToDrawRect:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nextKeyView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nextValidKeyView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="opaqueAncestor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pageFooter" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pageHeader" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performKeyEquivalent:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performMnemonic:" swt_gen="true">
      <arg name="theString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="postsBoundsChangedNotifications" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="postsFrameChangedNotifications" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="preservesContentDuringLiveResize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="previousKeyView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="previousValidKeyView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="print:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printJobTitle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rectForPage:" swt_gen="true">
      <arg name="page" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rectPreservedDuringLiveResize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reflectScrolledClipView:" swt_gen="true">
      <arg name="aClipView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registerForDraggedTypes:" swt_gen="true">
      <arg name="newTypes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registeredDraggedTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="releaseGState" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeAllToolTips" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeCursorRect:cursor:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <arg name="anObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeFromSuperview" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeFromSuperviewWithoutNeedingDisplay" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeToolTip:" swt_gen="true">
      <arg name="tag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeTrackingArea:" swt_gen="true">
      <arg name="trackingArea" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeTrackingRect:" swt_gen="true">
      <arg name="tag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="renewGState" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceSubview:with:" swt_gen="true">
      <arg name="oldView" swt_gen="true"></arg>
      <arg name="newView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resetCursorRects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resizeSubviewsWithOldSize:" swt_gen="true">
      <arg name="oldSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resizeWithOldSuperviewSize:" swt_gen="true">
      <arg name="oldSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rotateByAngle:" swt_gen="true">
      <arg name="angle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerView:didAddMarker:" swt_gen="true">
      <arg name="ruler" swt_gen="true"></arg>
      <arg name="marker" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerView:didMoveMarker:" swt_gen="true">
      <arg name="ruler" swt_gen="true"></arg>
      <arg name="marker" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerView:didRemoveMarker:" swt_gen="true">
      <arg name="ruler" swt_gen="true"></arg>
      <arg name="marker" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerView:handleMouseDown:" swt_gen="true">
      <arg name="ruler" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerView:shouldAddMarker:" swt_gen="true">
      <arg name="ruler" swt_gen="true"></arg>
      <arg name="marker" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerView:shouldMoveMarker:" swt_gen="true">
      <arg name="ruler" swt_gen="true"></arg>
      <arg name="marker" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerView:shouldRemoveMarker:" swt_gen="true">
      <arg name="ruler" swt_gen="true"></arg>
      <arg name="marker" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerView:willAddMarker:atLocation:" swt_gen="true">
      <arg name="ruler" swt_gen="true"></arg>
      <arg name="marker" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerView:willMoveMarker:toLocation:" swt_gen="true">
      <arg name="ruler" swt_gen="true"></arg>
      <arg name="marker" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rulerView:willSetClientView:" swt_gen="true">
      <arg name="ruler" swt_gen="true"></arg>
      <arg name="newClient" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scaleUnitSquareToSize:" swt_gen="true">
      <arg name="newUnitSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollClipView:toPoint:" swt_gen="true">
      <arg name="aClipView" swt_gen="true"></arg>
      <arg name="aPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollPoint:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollRect:by:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <arg name="delta" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollRectToVisible:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlphaValue:" swt_gen="true">
      <arg name="viewAlpha" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutoresizesSubviews:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutoresizingMask:" swt_gen="true">
      <arg name="mask" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundFilters:" swt_gen="true">
      <arg name="filters" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBounds:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBoundsOrigin:" swt_gen="true">
      <arg name="newOrigin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBoundsRotation:" swt_gen="true">
      <arg name="angle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBoundsSize:" swt_gen="true">
      <arg name="newSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCompositingFilter:" swt_gen="true">
      <arg name="filter" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContentFilters:" swt_gen="true">
      <arg name="filters" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFocusRingType:" swt_gen="true">
      <arg name="focusRingType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFrame:" swt_gen="true">
      <arg name="frameRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFrameCenterRotation:" swt_gen="true">
      <arg name="angle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFrameOrigin:" swt_gen="true">
      <arg name="newOrigin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFrameRotation:" swt_gen="true">
      <arg name="angle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFrameSize:" swt_gen="true">
      <arg name="newSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHidden:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setKeyboardFocusRingNeedsDisplayInRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLayer:" swt_gen="true">
      <arg name="newLayer" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNeedsDisplay:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNeedsDisplayInRect:" swt_gen="true">
      <arg name="invalidRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNextKeyView:" swt_gen="true">
      <arg name="next" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPostsBoundsChangedNotifications:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPostsFrameChangedNotifications:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShadow:" swt_gen="true">
      <arg name="shadow" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSubviews:" swt_gen="true">
      <arg name="newSubviews" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setToolTip:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUpGState" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWantsLayer:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shadow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shouldDelayWindowOrderingForEvent:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shouldDrawColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sortSubviewsUsingFunction:context:" swt_gen="true">
      <arg name="compare" swt_gen="true">
        <arg swt_gen="true"></arg>
        <arg swt_gen="true"></arg>
        <arg swt_gen="true"></arg>
        <retval swt_gen="true"></retval>
      </arg>
      <arg name="context" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="subviews" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="superview" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tag" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toolTip" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="trackingAreas" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="translateOriginToPoint:" swt_gen="true">
      <arg name="translation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="translateRectsNeedingDisplayInRect:by:" swt_gen="true">
      <arg name="clipRect" swt_gen="true"></arg>
      <arg name="delta" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unlockFocus" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unregisterDraggedTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="updateTrackingAreas" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="viewDidEndLiveResize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="viewDidHide" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="viewDidMoveToSuperview" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="viewDidMoveToWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="viewDidUnhide" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="viewWillDraw" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="viewWillMoveToSuperview:" swt_gen="true">
      <arg name="newSuperview" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="viewWillMoveToWindow:" swt_gen="true">
      <arg name="newWindow" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="viewWillStartLiveResize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="viewWithTag:" swt_gen="true">
      <arg name="aTag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="visibleRect" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="wantsDefaultClipping" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="wantsLayer" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="widthAdjustLimit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="willRemoveSubview:" swt_gen="true">
      <arg name="subview" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="window" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeEPSInsideRect:toPasteboard:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="pasteboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writePDFInsideRect:toPasteboard:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="pasteboard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSViewAnimation" swt_gen="true" swt_superclass="NSAnimation">
    <method selector="initWithViewAnimations:" swt_gen="true">
      <arg name="viewAnimations" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setViewAnimations:" swt_gen="true">
      <arg name="viewAnimations" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="viewAnimations" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSViewController" swt_gen="true" swt_superclass="NSResponder">
    <method selector="commitEditing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="commitEditingWithDelegate:didCommitSelector:contextInfo:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didCommitSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="discardEditing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithNibName:bundle:" swt_gen="true">
      <arg name="nibNameOrNil" swt_gen="true"></arg>
      <arg name="nibBundleOrNil" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="loadView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nibBundle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nibName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="representedObject" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRepresentedObject:" swt_gen="true">
      <arg name="representedObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitle:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setView:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="title" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="view" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSWindow" swt_gen="true" swt_superclass="NSResponder">
    <method selector="acceptsMouseMovedEvents" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addChildWindow:ordered:" swt_gen="true">
      <arg name="childWin" swt_gen="true"></arg>
      <arg name="place" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsToolTipsWhenApplicationIsInactive" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alphaValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="animationResizeTime:" swt_gen="true">
      <arg name="newFrame" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="areCursorRectsEnabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="aspectRatio" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attachedSheet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autorecalculatesContentBorderThicknessForEdge:" swt_gen="true">
      <arg name="edge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autorecalculatesKeyViewLoop" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="backgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="backingLocation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="backingType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="becomeKeyWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="becomeMainWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cacheImageInRect:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canBeVisibleOnAllSpaces" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canBecomeKeyWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canBecomeMainWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canBecomeVisibleWithoutLogin" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canHide" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canStoreColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cascadeTopLeftFromPoint:" swt_gen="true">
      <arg name="topLeftPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="center" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="childWindows" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="close" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="collectionBehavior" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="constrainFrameRect:toScreen:" swt_gen="true">
      <arg name="frameRect" swt_gen="true"></arg>
      <arg name="screen" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentAspectRatio" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentBorderThicknessForEdge:" swt_gen="true">
      <arg name="edge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentMaxSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentMinSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentRectForFrameRect:" swt_gen="true">
      <arg name="frameRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentRectForFrameRect:styleMask:" swt_gen="true">
      <arg name="fRect" swt_gen="true"></arg>
      <arg name="aStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentResizeIncrements" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentView" swt_gen="true">
      <retval swt_gen="true" swt_replace_return="NSView"></retval>
    </method>
    <method selector="convertBaseToScreen:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertScreenToBase:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentEvent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataWithEPSInsideRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataWithPDFInsideRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deepestScreen" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultButtonCell" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultDepthLimit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deminiaturize:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="depthLimit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deviceDescription" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="disableCursorRects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="disableFlushWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="disableKeyEquivalentForDefaultButtonCell" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="disableScreenUpdatesUntilFlush" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="discardCachedImage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="discardCursorRects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="discardEventsMatchingMask:beforeEvent:" swt_gen="true">
      <arg name="mask" swt_gen="true"></arg>
      <arg name="lastEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="display" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displayIfNeeded" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displaysWhenScreenProfileChanges" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dockTile" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dragImage:at:offset:event:pasteboard:source:slideBack:" swt_gen="true">
      <arg name="anImage" swt_gen="true"></arg>
      <arg name="baseLocation" swt_gen="true"></arg>
      <arg name="initialOffset" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="pboard" swt_gen="true"></arg>
      <arg name="sourceObj" swt_gen="true"></arg>
      <arg name="slideFlag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawers" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="enableCursorRects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="enableFlushWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="enableKeyEquivalentForDefaultButtonCell" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="endEditingFor:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fieldEditor:forObject:" swt_gen="true">
      <arg name="createFlag" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="firstResponder" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="flushWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="flushWindowIfNeeded" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="frame" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="frameAutosaveName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="frameRectForContentRect:" swt_gen="true">
      <arg name="contentRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="frameRectForContentRect:styleMask:" swt_gen="true">
      <arg name="cRect" swt_gen="true"></arg>
      <arg name="aStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="gState" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="graphicsContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="handleCloseScriptCommand:" swt_gen="true">
      <arg name="command" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="handlePrintScriptCommand:" swt_gen="true">
      <arg name="command" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="handleSaveScriptCommand:" swt_gen="true">
      <arg name="command" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasCloseBox" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasDynamicDepthLimit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasShadow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasTitleBar" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hidesOnDeactivate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ignoresMouseEvents" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentRect:styleMask:backing:defer:" swt_gen="true">
      <arg name="contentRect" swt_gen="true"></arg>
      <arg name="aStyle" swt_gen="true"></arg>
      <arg name="bufferingType" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentRect:styleMask:backing:defer:screen:" swt_gen="true">
      <arg name="contentRect" swt_gen="true"></arg>
      <arg name="aStyle" swt_gen="true"></arg>
      <arg name="bufferingType" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <arg name="screen" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithWindowRef:" swt_gen="true">
      <arg name="windowRef" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initialFirstResponder" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invalidateCursorRectsForView:" swt_gen="true">
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invalidateShadow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isAutodisplay" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isDocumentEdited" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isExcludedFromWindowsMenu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isFloatingPanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isFlushWindowDisabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isKeyWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isMainWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isMiniaturizable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isMiniaturized" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isModalPanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isMovableByWindowBackground" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isOneShot" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isOpaque" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isReleasedWhenClosed" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isResizable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSheet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isVisible" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isZoomable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isZoomed" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyDown:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyViewSelectionDirection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="level" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makeFirstResponder:" swt_gen="true">
      <arg name="aResponder" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makeKeyAndOrderFront:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makeKeyWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makeMainWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maxSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menuChanged:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minFrameWidthWithTitle:styleMask:" swt_gen="true">
      <arg name="aTitle" swt_gen="true"></arg>
      <arg name="aStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="miniaturize:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="miniwindowImage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="miniwindowTitle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseLocationOutsideOfEventStream" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nextEventMatchingMask:" swt_gen="true">
      <arg name="mask" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nextEventMatchingMask:untilDate:inMode:dequeue:" swt_gen="true">
      <arg name="mask" swt_gen="true"></arg>
      <arg name="expiration" swt_gen="true"></arg>
      <arg name="mode" swt_gen="true"></arg>
      <arg name="deqFlag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderBack:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderFront:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderFrontRegardless" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderOut:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderWindow:relativeTo:" swt_gen="true">
      <arg name="place" swt_gen="true"></arg>
      <arg name="otherWin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderedIndex" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parentWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performClose:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performMiniaturize:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performZoom:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="postEvent:atStart:" swt_gen="true">
      <arg name="event" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="preferredBackingLocation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="preservesContentDuringLiveResize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="print:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="recalculateKeyViewLoop" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registerForDraggedTypes:" swt_gen="true">
      <arg name="newTypes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeChildWindow:" swt_gen="true">
      <arg name="childWin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeFrameUsingName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="representedFilename" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="representedURL" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resetCursorRects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resignKeyWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resignMainWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resizeFlags" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resizeIncrements" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="restoreCachedImage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runToolbarCustomizationPalette:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="saveFrameUsingName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="screen" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectKeyViewFollowingView:" swt_gen="true">
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectKeyViewPrecedingView:" swt_gen="true">
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectNextKeyView:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectPreviousKeyView:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendEvent:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAcceptsMouseMovedEvents:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsToolTipsWhenApplicationIsInactive:" swt_gen="true">
      <arg name="allowWhenInactive" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlphaValue:" swt_gen="true">
      <arg name="windowAlpha" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAspectRatio:" swt_gen="true">
      <arg name="ratio" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutodisplay:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutorecalculatesContentBorderThickness:forEdge:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <arg name="edge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutorecalculatesKeyViewLoop:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackingType:" swt_gen="true">
      <arg name="bufferingType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCanBeVisibleOnAllSpaces:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCanBecomeVisibleWithoutLogin:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCanHide:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCollectionBehavior:" swt_gen="true">
      <arg name="behavior" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContentAspectRatio:" swt_gen="true">
      <arg name="ratio" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContentBorderThickness:forEdge:" swt_gen="true">
      <arg name="thickness" swt_gen="true"></arg>
      <arg name="edge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContentMaxSize:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContentMinSize:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContentResizeIncrements:" swt_gen="true">
      <arg name="increments" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContentSize:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContentView:" swt_gen="true">
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDefaultButtonCell:" swt_gen="true">
      <arg name="defButt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDepthLimit:" swt_gen="true">
      <arg name="limit" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDisplaysWhenScreenProfileChanges:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDocumentEdited:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDynamicDepthLimit:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setExcludedFromWindowsMenu:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFrame:display:" swt_gen="true">
      <arg name="frameRect" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFrame:display:animate:" swt_gen="true">
      <arg name="frameRect" swt_gen="true"></arg>
      <arg name="displayFlag" swt_gen="true"></arg>
      <arg name="animateFlag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFrameAutosaveName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFrameFromString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFrameOrigin:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFrameTopLeftPoint:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFrameUsingName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFrameUsingName:force:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="force" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHasShadow:" swt_gen="true">
      <arg name="hasShadow" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHidesOnDeactivate:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIgnoresMouseEvents:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setInitialFirstResponder:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIsMiniaturized:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIsVisible:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIsZoomed:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLevel:" swt_gen="true">
      <arg name="newLevel" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxSize:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinSize:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMiniwindowImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMiniwindowTitle:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMovableByWindowBackground:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setOneShot:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setOpaque:" swt_gen="true">
      <arg name="isOpaque" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setOrderedIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setParentWindow:" swt_gen="true">
      <arg name="window" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPreferredBackingLocation:" swt_gen="true">
      <arg name="backingLocation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPreservesContentDuringLiveResize:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setReleasedWhenClosed:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRepresentedFilename:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRepresentedURL:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setResizeIncrements:" swt_gen="true">
      <arg name="increments" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSharingType:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShowsResizeIndicator:" swt_gen="true">
      <arg name="show" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShowsToolbarButton:" swt_gen="true">
      <arg name="show" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitle:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleWithRepresentedFilename:" swt_gen="true">
      <arg name="filename" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setToolbar:" swt_gen="true">
      <arg name="toolbar" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setViewsNeedDisplay:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWindowController:" swt_gen="true">
      <arg name="windowController" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharingType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showsResizeIndicator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showsToolbarButton" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="standardWindowButton:" swt_gen="true">
      <arg name="b" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="standardWindowButton:forStyleMask:" swt_gen="true">
      <arg name="b" swt_gen="true"></arg>
      <arg name="styleMask" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringWithSavedFrame" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="styleMask" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="title" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toggleToolbarShown:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toolbar" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tryToPerform:with:" swt_gen="true">
      <arg name="anAction" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unregisterDraggedTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="update" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="useOptimizedDrawing:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="userSpaceScaleFactor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="validRequestorForSendType:returnType:" swt_gen="true">
      <arg name="sendType" swt_gen="true"></arg>
      <arg name="returnType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="viewsNeedDisplay" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowController" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowNumber" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowRef" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="worksWhenModal" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="zoom:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSWindowController" swt_gen="true" swt_superclass="NSResponder">
    <method selector="close" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="document" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithWindow:" swt_gen="true">
      <arg name="window" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithWindowNibName:" swt_gen="true">
      <arg name="windowNibName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithWindowNibName:owner:" swt_gen="true">
      <arg name="windowNibName" swt_gen="true"></arg>
      <arg name="owner" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithWindowNibPath:owner:" swt_gen="true">
      <arg name="windowNibPath" swt_gen="true"></arg>
      <arg name="owner" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isWindowLoaded" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="loadWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="owner" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDocument:" swt_gen="true">
      <arg name="document" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDocumentEdited:" swt_gen="true">
      <arg name="dirtyFlag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShouldCascadeWindows:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShouldCloseDocument:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWindow:" swt_gen="true">
      <arg name="window" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWindowFrameAutosaveName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shouldCascadeWindows" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shouldCloseDocument" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showWindow:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="synchronizeWindowTitleWithDocumentName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="window" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowDidLoad" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowFrameAutosaveName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowNibName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowNibPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowTitleForDocumentDisplayName:" swt_gen="true">
      <arg name="displayName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowWillLoad" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSWorkspace" swt_gen="true">
    <method selector="absolutePathForAppBundleWithIdentifier:" swt_gen="true">
      <arg name="bundleIdentifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="activeApplication" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="checkForRemovableMedia" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="extendPowerOffBy:" swt_gen="true">
      <arg name="requested" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileSystemChanged" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="filenameExtension:isValidForType:" swt_gen="true">
      <arg name="filenameExtension" swt_gen="true"></arg>
      <arg name="typeName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="findApplications" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fullPathForApplication:" swt_gen="true">
      <arg name="appName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getFileSystemInfoForPath:isRemovable:isWritable:isUnmountable:description:type:" swt_gen="true">
      <arg name="fullPath" swt_gen="true"></arg>
      <arg name="removableFlag" swt_gen="true"></arg>
      <arg name="writableFlag" swt_gen="true"></arg>
      <arg name="unmountableFlag" swt_gen="true"></arg>
      <arg name="description" swt_gen="true"></arg>
      <arg name="fileSystemType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getInfoForFile:application:type:" swt_gen="true">
      <arg name="fullPath" swt_gen="true"></arg>
      <arg name="appName" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hideOtherApplications" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="iconForFile:" swt_gen="true">
      <arg name="fullPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="iconForFileType:" swt_gen="true">
      <arg name="fileType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="iconForFiles:" swt_gen="true">
      <arg name="fullPaths" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isFilePackageAtPath:" swt_gen="true">
      <arg name="fullPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="launchAppWithBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifier:" swt_gen="true">
      <arg name="bundleIdentifier" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <arg name="descriptor" swt_gen="true"></arg>
      <arg name="identifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="launchApplication:" swt_gen="true">
      <arg name="appName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="launchApplication:showIcon:autolaunch:" swt_gen="true">
      <arg name="appName" swt_gen="true"></arg>
      <arg name="showIcon" swt_gen="true"></arg>
      <arg name="autolaunch" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="launchedApplications" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedDescriptionForType:" swt_gen="true">
      <arg name="typeName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mountNewRemovableMedia" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mountedLocalVolumePaths" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mountedRemovableMedia" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="noteFileSystemChanged" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="noteFileSystemChanged:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="noteUserDefaultsChanged" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="notificationCenter" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="openFile:" swt_gen="true">
      <arg name="fullPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="openFile:fromImage:at:inView:" swt_gen="true">
      <arg name="fullPath" swt_gen="true"></arg>
      <arg name="anImage" swt_gen="true"></arg>
      <arg name="point" swt_gen="true"></arg>
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="openFile:withApplication:" swt_gen="true">
      <arg name="fullPath" swt_gen="true"></arg>
      <arg name="appName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="openFile:withApplication:andDeactivate:" swt_gen="true">
      <arg name="fullPath" swt_gen="true"></arg>
      <arg name="appName" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="openTempFile:" swt_gen="true">
      <arg name="fullPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="openURL:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="openURLs:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:" swt_gen="true">
      <arg name="urls" swt_gen="true"></arg>
      <arg name="bundleIdentifier" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <arg name="descriptor" swt_gen="true"></arg>
      <arg name="identifiers" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performFileOperation:source:destination:files:tag:" swt_gen="true">
      <arg name="operation" swt_gen="true"></arg>
      <arg name="source" swt_gen="true"></arg>
      <arg name="destination" swt_gen="true"></arg>
      <arg name="files" swt_gen="true"></arg>
      <arg name="tag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="preferredFilenameExtensionForType:" swt_gen="true">
      <arg name="typeName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectFile:inFileViewerRootedAtPath:" swt_gen="true">
      <arg name="fullPath" swt_gen="true"></arg>
      <arg name="rootFullpath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIcon:forFile:options:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="fullPath" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedWorkspace" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="slideImage:from:to:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="fromPoint" swt_gen="true"></arg>
      <arg name="toPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="type:conformsToType:" swt_gen="true">
      <arg name="firstTypeName" swt_gen="true"></arg>
      <arg name="secondTypeName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="typeOfFile:error:" swt_gen="true">
      <arg name="absoluteFilePath" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unmountAndEjectDeviceAtPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="userDefaultsChanged" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <informal_protocol name="NSAccessibility" swt_gen="true">
    <method selector="accessibilityActionDescription:" swt_gen="true">
      <arg name="action" swt_gen="true"></arg>
    </method>
    <method selector="accessibilityActionNames" swt_gen="true"></method>
    <method selector="accessibilityAttributeNames" swt_gen="true"></method>
    <method selector="accessibilityAttributeValue:" swt_gen="true">
      <arg name="attribute" swt_gen="true"></arg>
    </method>
    <method selector="accessibilityAttributeValue:forParameter:" swt_gen="true">
      <arg name="attribute" swt_gen="true"></arg>
      <arg name="parameter" swt_gen="true"></arg>
    </method>
    <method selector="accessibilityFocusedUIElement" swt_gen="true"></method>
    <method selector="accessibilityHitTest:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
    </method>
    <method selector="accessibilityIsAttributeSettable:" swt_gen="true">
      <arg name="attribute" swt_gen="true"></arg>
    </method>
    <method selector="accessibilityIsIgnored" swt_gen="true"></method>
    <method selector="accessibilityParameterizedAttributeNames" swt_gen="true"></method>
    <method selector="accessibilityPerformAction:" swt_gen="true">
      <arg name="action" swt_gen="true"></arg>
    </method>
    <method selector="accessibilitySetValue:forAttribute:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="attribute" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSAccessibilityAdditions" swt_gen="true">
    <method selector="accessibilitySetOverrideValue:forAttribute:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="attribute" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSAlertDelegate" swt_gen="true">
    <method selector="alertShowHelp:" swt_gen="true">
      <arg name="alert" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSAnimationDelegate" swt_gen="true">
    <method selector="animation:didReachProgressMark:" swt_gen="true">
      <arg name="animation" swt_gen="true"></arg>
      <arg name="progress" swt_gen="true"></arg>
    </method>
    <method selector="animation:valueForProgress:" swt_gen="true">
      <arg name="animation" swt_gen="true"></arg>
      <arg name="progress" swt_gen="true"></arg>
    </method>
    <method selector="animationDidEnd:" swt_gen="true">
      <arg name="animation" swt_gen="true"></arg>
    </method>
    <method selector="animationDidStop:" swt_gen="true">
      <arg name="animation" swt_gen="true"></arg>
    </method>
    <method selector="animationShouldStart:" swt_gen="true">
      <arg name="animation" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSApplicationDelegate" swt_gen="true">
    <method selector="application:openFile:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="filename" swt_gen="true"></arg>
    </method>
    <method selector="application:openFileWithoutUI:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="filename" swt_gen="true"></arg>
    </method>
    <method selector="application:openFiles:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="filenames" swt_gen="true"></arg>
    </method>
    <method selector="application:openTempFile:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="filename" swt_gen="true"></arg>
    </method>
    <method selector="application:printFile:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="filename" swt_gen="true"></arg>
    </method>
    <method selector="application:printFiles:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="filenames" swt_gen="true"></arg>
    </method>
    <method selector="application:printFiles:withSettings:showPrintPanels:" swt_gen="true">
      <arg name="application" swt_gen="true"></arg>
      <arg name="fileNames" swt_gen="true"></arg>
      <arg name="printSettings" swt_gen="true"></arg>
      <arg name="showPrintPanels" swt_gen="true"></arg>
    </method>
    <method selector="application:willPresentError:" swt_gen="true">
      <arg name="application" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
    </method>
    <method selector="applicationDockMenu:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="applicationOpenUntitledFile:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="applicationShouldHandleReopen:hasVisibleWindows:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
    </method>
    <method selector="applicationShouldOpenUntitledFile:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="applicationShouldTerminate:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="applicationShouldTerminateAfterLastWindowClosed:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSApplicationNotifications" swt_gen="true">
    <method selector="applicationDidBecomeActive:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="applicationDidChangeScreenParameters:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="applicationDidFinishLaunching:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="applicationDidHide:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="applicationDidResignActive:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="applicationDidUnhide:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="applicationDidUpdate:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="applicationWillBecomeActive:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="applicationWillFinishLaunching:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="applicationWillHide:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="applicationWillResignActive:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="applicationWillTerminate:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="applicationWillUnhide:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="applicationWillUpdate:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSApplicationScriptingDelegation" swt_gen="true">
    <method selector="application:delegateHandlesKey:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSBrowserDelegate" swt_gen="true">
    <method selector="browser:acceptDrop:atRow:column:dropOperation:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="info" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <arg name="dropOperation" swt_gen="true"></arg>
    </method>
    <method selector="browser:canDragRowsWithIndexes:inColumn:withEvent:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="rowIndexes" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
    </method>
    <method selector="browser:createRowsForColumn:inMatrix:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <arg name="matrix" swt_gen="true"></arg>
    </method>
    <method selector="browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="rowIndexes" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="dragImageOffset" swt_gen="true"></arg>
    </method>
    <method selector="browser:isColumnValid:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
    </method>
    <method selector="browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="dropDestination" swt_gen="true"></arg>
      <arg name="rowIndexes" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
    </method>
    <method selector="browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="startRow" swt_gen="true"></arg>
      <arg name="endRow" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <arg name="searchString" swt_gen="true"></arg>
    </method>
    <method selector="browser:numberOfRowsInColumn:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
    </method>
    <method selector="browser:selectCellWithString:inColumn:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="title" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
    </method>
    <method selector="browser:selectRow:inColumn:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
    </method>
    <method selector="browser:shouldShowCellExpansionForRow:column:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
    </method>
    <method selector="browser:shouldSizeColumn:forUserResize:toWidth:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="columnIndex" swt_gen="true"></arg>
      <arg name="forUserResize" swt_gen="true"></arg>
      <arg name="suggestedWidth" swt_gen="true"></arg>
    </method>
    <method selector="browser:shouldTypeSelectForEvent:withCurrentSearchString:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="searchString" swt_gen="true"></arg>
    </method>
    <method selector="browser:sizeToFitWidthOfColumn:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="columnIndex" swt_gen="true"></arg>
    </method>
    <method selector="browser:titleOfColumn:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
    </method>
    <method selector="browser:typeSelectStringForRow:inColumn:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
    </method>
    <method selector="browser:validateDrop:proposedRow:column:dropOperation:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="info" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <arg name="dropOperation" swt_gen="true"></arg>
    </method>
    <method selector="browser:willDisplayCell:atRow:column:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
    </method>
    <method selector="browser:writeRowsWithIndexes:inColumn:toPasteboard:" swt_gen="true">
      <arg name="browser" swt_gen="true"></arg>
      <arg name="rowIndexes" swt_gen="true"></arg>
      <arg name="column" swt_gen="true"></arg>
      <arg name="pasteboard" swt_gen="true"></arg>
    </method>
    <method selector="browserColumnConfigurationDidChange:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="browserDidScroll:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="browserWillScroll:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSColorPanelResponderMethod" swt_gen="true">
    <method selector="changeColor:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSComboBoxCellDataSource" swt_gen="true">
    <method selector="comboBoxCell:completedString:" swt_gen="true">
      <arg name="aComboBoxCell" swt_gen="true"></arg>
      <arg name="uncompletedString" swt_gen="true"></arg>
    </method>
    <method selector="comboBoxCell:indexOfItemWithStringValue:" swt_gen="true">
      <arg name="aComboBoxCell" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
    </method>
    <method selector="comboBoxCell:objectValueForItemAtIndex:" swt_gen="true">
      <arg name="aComboBoxCell" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
    </method>
    <method selector="numberOfItemsInComboBoxCell:" swt_gen="true">
      <arg name="comboBoxCell" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSComboBoxDataSource" swt_gen="true">
    <method selector="comboBox:completedString:" swt_gen="true">
      <arg name="aComboBox" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
    </method>
    <method selector="comboBox:indexOfItemWithStringValue:" swt_gen="true">
      <arg name="aComboBox" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
    </method>
    <method selector="comboBox:objectValueForItemAtIndex:" swt_gen="true">
      <arg name="aComboBox" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
    </method>
    <method selector="numberOfItemsInComboBox:" swt_gen="true">
      <arg name="aComboBox" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSComboBoxNotifications" swt_gen="true">
    <method selector="comboBoxSelectionDidChange:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="comboBoxSelectionIsChanging:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="comboBoxWillDismiss:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="comboBoxWillPopUp:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSControlSubclassDelegate" swt_gen="true">
    <method selector="control:didFailToFormatString:errorDescription:" swt_gen="true">
      <arg name="control" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
    </method>
    <method selector="control:didFailToValidatePartialString:errorDescription:" swt_gen="true">
      <arg name="control" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
    </method>
    <method selector="control:isValidObject:" swt_gen="true">
      <arg name="control" swt_gen="true"></arg>
      <arg name="obj" swt_gen="true"></arg>
    </method>
    <method selector="control:textShouldBeginEditing:" swt_gen="true">
      <arg name="control" swt_gen="true"></arg>
      <arg name="fieldEditor" swt_gen="true"></arg>
    </method>
    <method selector="control:textShouldEndEditing:" swt_gen="true">
      <arg name="control" swt_gen="true"></arg>
      <arg name="fieldEditor" swt_gen="true"></arg>
    </method>
    <method selector="control:textView:completions:forPartialWordRange:indexOfSelectedItem:" swt_gen="true">
      <arg name="control" swt_gen="true"></arg>
      <arg name="textView" swt_gen="true"></arg>
      <arg name="words" swt_gen="true"></arg>
      <arg name="charRange" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
    </method>
    <method selector="control:textView:doCommandBySelector:" swt_gen="true">
      <arg name="control" swt_gen="true"></arg>
      <arg name="textView" swt_gen="true"></arg>
      <arg name="commandSelector" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSControlSubclassNotifications" swt_gen="true">
    <method selector="controlTextDidBeginEditing:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
    </method>
    <method selector="controlTextDidChange:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
    </method>
    <method selector="controlTextDidEndEditing:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSDatePickerCellDelegate" swt_gen="true">
    <method selector="datePickerCell:validateProposedDateValue:timeInterval:" swt_gen="true">
      <arg name="aDatePickerCell" swt_gen="true"></arg>
      <arg name="proposedDateValue" swt_gen="true"></arg>
      <arg name="proposedTimeInterval" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSDictionaryControllerKeyValuePair" swt_gen="true">
    <method selector="isExplicitlyIncluded" swt_gen="true"></method>
    <method selector="key" swt_gen="true"></method>
    <method selector="localizedKey" swt_gen="true"></method>
    <method selector="setKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="setLocalizedKey:" swt_gen="true">
      <arg name="localizedKey" swt_gen="true"></arg>
    </method>
    <method selector="setValue:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
    </method>
    <method selector="value" swt_gen="true"></method>
  </informal_protocol>
  <informal_protocol name="NSDraggingDestination" swt_gen="true">
    <method selector="concludeDragOperation:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="draggingEnded:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="draggingEntered:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="draggingExited:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="draggingUpdated:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="performDragOperation:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="prepareForDragOperation:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="wantsPeriodicDraggingUpdates" swt_gen="true"></method>
  </informal_protocol>
  <informal_protocol name="NSDraggingSource" swt_gen="true">
    <method selector="draggedImage:beganAt:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="screenPoint" swt_gen="true"></arg>
    </method>
    <method selector="draggedImage:endedAt:deposited:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="screenPoint" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
    </method>
    <method selector="draggedImage:endedAt:operation:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="screenPoint" swt_gen="true"></arg>
      <arg name="operation" swt_gen="true"></arg>
    </method>
    <method selector="draggedImage:movedTo:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="screenPoint" swt_gen="true"></arg>
    </method>
    <method selector="draggingSourceOperationMaskForLocal:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
    </method>
    <method selector="ignoreModifierKeysWhileDragging" swt_gen="true"></method>
    <method selector="namesOfPromisedFilesDroppedAtDestination:" swt_gen="true">
      <arg name="dropDestination" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSDrawerDelegate" swt_gen="true">
    <method selector="drawerShouldClose:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="drawerShouldOpen:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="drawerWillResizeContents:toSize:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="contentSize" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSDrawerNotifications" swt_gen="true">
    <method selector="drawerDidClose:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="drawerDidOpen:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="drawerWillClose:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="drawerWillOpen:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSEditor" swt_gen="true">
    <method selector="commitEditing" swt_gen="true"></method>
    <method selector="commitEditingWithDelegate:didCommitSelector:contextInfo:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didCommitSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
    </method>
    <method selector="discardEditing" swt_gen="true"></method>
  </informal_protocol>
  <informal_protocol name="NSEditorRegistration" swt_gen="true">
    <method selector="objectDidBeginEditing:" swt_gen="true">
      <arg name="editor" swt_gen="true"></arg>
    </method>
    <method selector="objectDidEndEditing:" swt_gen="true">
      <arg name="editor" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSFontManagerDelegate" swt_gen="true">
    <method selector="fontManager:willIncludeFont:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="fontName" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSFontManagerResponderMethod" swt_gen="true">
    <method selector="changeFont:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSFontPanelValidationAdditions" swt_gen="true">
    <method selector="validModesForFontPanel:" swt_gen="true">
      <arg name="fontPanel" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSImageDelegate" swt_gen="true">
    <method selector="image:didLoadPartOfRepresentation:withValidRows:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="rep" swt_gen="true"></arg>
      <arg name="rows" swt_gen="true"></arg>
    </method>
    <method selector="image:didLoadRepresentation:withStatus:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="rep" swt_gen="true"></arg>
      <arg name="status" swt_gen="true"></arg>
    </method>
    <method selector="image:didLoadRepresentationHeader:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="rep" swt_gen="true"></arg>
    </method>
    <method selector="image:willLoadRepresentation:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="rep" swt_gen="true"></arg>
    </method>
    <method selector="imageDidNotDraw:inRect:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="aRect" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSKeyValueBindingCreation" swt_gen="true">
    <method selector="bind:toObject:withKeyPath:options:" swt_gen="true">
      <arg name="binding" swt_gen="true"></arg>
      <arg name="observable" swt_gen="true"></arg>
      <arg name="keyPath" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
    </method>
    <method selector="exposeBinding:" swt_gen="true">
      <arg name="binding" swt_gen="true"></arg>
    </method>
    <method selector="exposedBindings" swt_gen="true"></method>
    <method selector="infoForBinding:" swt_gen="true">
      <arg name="binding" swt_gen="true"></arg>
    </method>
    <method selector="optionDescriptionsForBinding:" swt_gen="true">
      <arg name="aBinding" swt_gen="true"></arg>
    </method>
    <method selector="unbind:" swt_gen="true">
      <arg name="binding" swt_gen="true"></arg>
    </method>
    <method selector="valueClassForBinding:" swt_gen="true">
      <arg name="binding" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSLayoutManagerDelegate" swt_gen="true">
    <method selector="layoutManager:didCompleteLayoutForTextContainer:atEnd:" swt_gen="true">
      <arg name="layoutManager" swt_gen="true"></arg>
      <arg name="textContainer" swt_gen="true"></arg>
      <arg name="layoutFinishedFlag" swt_gen="true"></arg>
    </method>
    <method selector="layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:" swt_gen="true">
      <arg name="layoutManager" swt_gen="true"></arg>
      <arg name="attrs" swt_gen="true"></arg>
      <arg name="toScreen" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
      <arg name="effectiveCharRange" swt_gen="true"></arg>
    </method>
    <method selector="layoutManagerDidInvalidateLayout:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSMenuDelegate" swt_gen="true">
    <method selector="menu:updateItem:atIndex:shouldCancel:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <arg name="shouldCancel" swt_gen="true"></arg>
    </method>
    <method selector="menu:willHighlightItem:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="menuDidClose:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
    </method>
    <method selector="menuHasKeyEquivalent:forEvent:target:action:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="target" swt_gen="true"></arg>
      <arg name="action" swt_gen="true"></arg>
    </method>
    <method selector="menuNeedsUpdate:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
    </method>
    <method selector="menuWillOpen:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
    </method>
    <method selector="numberOfItemsInMenu:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSMenuValidation" swt_gen="true">
    <method selector="validateMenuItem:" swt_gen="true">
      <arg name="menuItem" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSNibAwaking" swt_gen="true">
    <method selector="awakeFromNib" swt_gen="true"></method>
  </informal_protocol>
  <informal_protocol name="NSOutlineViewDataSource" swt_gen="true">
    <method selector="outlineView:acceptDrop:item:childIndex:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="info" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:child:ofItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:isItemExpandable:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:itemForPersistentObject:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="dropDestination" swt_gen="true"></arg>
      <arg name="items" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:numberOfChildrenOfItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:objectValueForTableColumn:byItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:persistentObjectForItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:setObjectValue:forTableColumn:byItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:sortDescriptorsDidChange:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="oldDescriptors" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:validateDrop:proposedItem:proposedChildIndex:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="info" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:writeItems:toPasteboard:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="items" swt_gen="true"></arg>
      <arg name="pasteboard" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSOutlineViewDelegate" swt_gen="true">
    <method selector="outlineView:dataCellForTableColumn:item:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:didClickTableColumn:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:didDragTableColumn:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:heightOfRowByItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:isGroupItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:mouseDownInHeaderOfTableColumn:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:nextTypeSelectMatchFromItem:toItem:forString:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="startItem" swt_gen="true"></arg>
      <arg name="endItem" swt_gen="true"></arg>
      <arg name="searchString" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:selectionIndexesForProposedSelection:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="proposedSelectionIndexes" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:shouldCollapseItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:shouldEditTableColumn:item:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:shouldExpandItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:shouldSelectItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:shouldSelectTableColumn:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:shouldShowCellExpansionForTableColumn:item:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:shouldTrackCell:forTableColumn:item:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:shouldTypeSelectForEvent:withCurrentSearchString:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="searchString" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <arg name="mouseLocation" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:typeSelectStringForTableColumn:item:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:willDisplayCell:forTableColumn:item:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:willDisplayOutlineCell:forTableColumn:item:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="selectionShouldChangeInOutlineView:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSOutlineViewNotifications" swt_gen="true">
    <method selector="outlineViewColumnDidMove:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="outlineViewColumnDidResize:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="outlineViewItemDidCollapse:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="outlineViewItemDidExpand:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="outlineViewItemWillCollapse:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="outlineViewItemWillExpand:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="outlineViewSelectionDidChange:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="outlineViewSelectionIsChanging:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSPasteboardOwner" swt_gen="true">
    <method selector="pasteboard:provideDataForType:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
    </method>
    <method selector="pasteboardChangedOwner:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSPlaceholders" swt_gen="true">
    <method selector="defaultPlaceholderForMarker:withBinding:" swt_gen="true">
      <arg name="marker" swt_gen="true"></arg>
      <arg name="binding" swt_gen="true"></arg>
    </method>
    <method selector="setDefaultPlaceholder:forMarker:withBinding:" swt_gen="true">
      <arg name="placeholder" swt_gen="true"></arg>
      <arg name="marker" swt_gen="true"></arg>
      <arg name="binding" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSRuleEditorDelegateMethods" swt_gen="true">
    <method selector="ruleEditor:child:forCriterion:withRowType:" swt_gen="true">
      <arg name="editor" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <arg name="criterion" swt_gen="true"></arg>
      <arg name="rowType" swt_gen="true"></arg>
    </method>
    <method selector="ruleEditor:displayValueForCriterion:inRow:" swt_gen="true">
      <arg name="editor" swt_gen="true"></arg>
      <arg name="criterion" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
    </method>
    <method selector="ruleEditor:numberOfChildrenForCriterion:withRowType:" swt_gen="true">
      <arg name="editor" swt_gen="true"></arg>
      <arg name="criterion" swt_gen="true"></arg>
      <arg name="rowType" swt_gen="true"></arg>
    </method>
    <method selector="ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:" swt_gen="true">
      <arg name="editor" swt_gen="true"></arg>
      <arg name="criterion" swt_gen="true"></arg>
      <arg name="value" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
    </method>
    <method selector="ruleEditorRowsDidChange:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSSavePanelDelegate" swt_gen="true">
    <method selector="panel:compareFilename:with:caseSensitive:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="name1" swt_gen="true"></arg>
      <arg name="name2" swt_gen="true"></arg>
      <arg name="caseSensitive" swt_gen="true"></arg>
    </method>
    <method selector="panel:directoryDidChange:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="path" swt_gen="true"></arg>
    </method>
    <method selector="panel:isValidFilename:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="filename" swt_gen="true"></arg>
    </method>
    <method selector="panel:shouldShowFilename:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="filename" swt_gen="true"></arg>
    </method>
    <method selector="panel:userEnteredFilename:confirmed:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="filename" swt_gen="true"></arg>
      <arg name="okFlag" swt_gen="true"></arg>
    </method>
    <method selector="panel:willExpand:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="expanding" swt_gen="true"></arg>
    </method>
    <method selector="panelSelectionDidChange:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSServicesRequests" swt_gen="true">
    <method selector="readSelectionFromPasteboard:" swt_gen="true">
      <arg name="pboard" swt_gen="true"></arg>
    </method>
    <method selector="writeSelectionToPasteboard:types:" swt_gen="true">
      <arg name="pboard" swt_gen="true"></arg>
      <arg name="types" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSSoundDelegateMethods" swt_gen="true">
    <method selector="sound:didFinishPlaying:" swt_gen="true">
      <arg name="sound" swt_gen="true"></arg>
      <arg name="aBool" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSSpeechRecognizerDelegate" swt_gen="true">
    <method selector="speechRecognizer:didRecognizeCommand:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="command" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSSpeechSynthesizerDelegate" swt_gen="true">
    <method selector="speechSynthesizer:didEncounterErrorAtIndex:ofString:message:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="characterIndex" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
      <arg name="message" swt_gen="true"></arg>
    </method>
    <method selector="speechSynthesizer:didEncounterSyncMessage:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="message" swt_gen="true"></arg>
    </method>
    <method selector="speechSynthesizer:didFinishSpeaking:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="finishedSpeaking" swt_gen="true"></arg>
    </method>
    <method selector="speechSynthesizer:willSpeakPhoneme:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="phonemeOpcode" swt_gen="true"></arg>
    </method>
    <method selector="speechSynthesizer:willSpeakWord:ofString:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="characterRange" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSSplitViewDelegate" swt_gen="true">
    <method selector="splitView:additionalEffectiveRectOfDividerAtIndex:" swt_gen="true">
      <arg name="splitView" swt_gen="true"></arg>
      <arg name="dividerIndex" swt_gen="true"></arg>
    </method>
    <method selector="splitView:canCollapseSubview:" swt_gen="true">
      <arg name="splitView" swt_gen="true"></arg>
      <arg name="subview" swt_gen="true"></arg>
    </method>
    <method selector="splitView:constrainMaxCoordinate:ofSubviewAt:" swt_gen="true">
      <arg name="splitView" swt_gen="true"></arg>
      <arg name="proposedMaximumPosition" swt_gen="true"></arg>
      <arg name="dividerIndex" swt_gen="true"></arg>
    </method>
    <method selector="splitView:constrainMinCoordinate:ofSubviewAt:" swt_gen="true">
      <arg name="splitView" swt_gen="true"></arg>
      <arg name="proposedMinimumPosition" swt_gen="true"></arg>
      <arg name="dividerIndex" swt_gen="true"></arg>
    </method>
    <method selector="splitView:constrainSplitPosition:ofSubviewAt:" swt_gen="true">
      <arg name="splitView" swt_gen="true"></arg>
      <arg name="proposedPosition" swt_gen="true"></arg>
      <arg name="dividerIndex" swt_gen="true"></arg>
    </method>
    <method selector="splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:" swt_gen="true">
      <arg name="splitView" swt_gen="true"></arg>
      <arg name="proposedEffectiveRect" swt_gen="true"></arg>
      <arg name="drawnRect" swt_gen="true"></arg>
      <arg name="dividerIndex" swt_gen="true"></arg>
    </method>
    <method selector="splitView:resizeSubviewsWithOldSize:" swt_gen="true">
      <arg name="splitView" swt_gen="true"></arg>
      <arg name="oldSize" swt_gen="true"></arg>
    </method>
    <method selector="splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:" swt_gen="true">
      <arg name="splitView" swt_gen="true"></arg>
      <arg name="subview" swt_gen="true"></arg>
      <arg name="dividerIndex" swt_gen="true"></arg>
    </method>
    <method selector="splitView:shouldHideDividerAtIndex:" swt_gen="true">
      <arg name="splitView" swt_gen="true"></arg>
      <arg name="dividerIndex" swt_gen="true"></arg>
    </method>
    <method selector="splitViewDidResizeSubviews:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="splitViewWillResizeSubviews:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSTabViewDelegate" swt_gen="true">
    <method selector="tabView:didSelectTabViewItem:" swt_gen="true">
      <arg name="tabView" swt_gen="true"></arg>
      <arg name="tabViewItem" swt_gen="true"></arg>
    </method>
    <method selector="tabView:shouldSelectTabViewItem:" swt_gen="true">
      <arg name="tabView" swt_gen="true"></arg>
      <arg name="tabViewItem" swt_gen="true"></arg>
    </method>
    <method selector="tabView:willSelectTabViewItem:" swt_gen="true">
      <arg name="tabView" swt_gen="true"></arg>
      <arg name="tabViewItem" swt_gen="true"></arg>
    </method>
    <method selector="tabViewDidChangeNumberOfTabViewItems:" swt_gen="true">
      <arg name="TabView" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSTableDataSource" swt_gen="true">
    <method selector="numberOfRowsInTableView:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
    </method>
    <method selector="tableView:acceptDrop:row:dropOperation:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="info" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="dropOperation" swt_gen="true"></arg>
    </method>
    <method selector="tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="dropDestination" swt_gen="true"></arg>
      <arg name="indexSet" swt_gen="true"></arg>
    </method>
    <method selector="tableView:objectValueForTableColumn:row:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
    </method>
    <method selector="tableView:setObjectValue:forTableColumn:row:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
    </method>
    <method selector="tableView:sortDescriptorsDidChange:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="oldDescriptors" swt_gen="true"></arg>
    </method>
    <method selector="tableView:validateDrop:proposedRow:proposedDropOperation:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="info" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="dropOperation" swt_gen="true"></arg>
    </method>
    <method selector="tableView:writeRows:toPasteboard:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="rows" swt_gen="true"></arg>
      <arg name="pboard" swt_gen="true"></arg>
    </method>
    <method selector="tableView:writeRowsWithIndexes:toPasteboard:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="rowIndexes" swt_gen="true"></arg>
      <arg name="pboard" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSTableViewDelegate" swt_gen="true">
    <method selector="selectionShouldChangeInTableView:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
    </method>
    <method selector="tableView:dataCellForTableColumn:row:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
    </method>
    <method selector="tableView:didClickTableColumn:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
    </method>
    <method selector="tableView:didDragTableColumn:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
    </method>
    <method selector="tableView:heightOfRow:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
    </method>
    <method selector="tableView:isGroupRow:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
    </method>
    <method selector="tableView:mouseDownInHeaderOfTableColumn:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
    </method>
    <method selector="tableView:nextTypeSelectMatchFromRow:toRow:forString:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="startRow" swt_gen="true"></arg>
      <arg name="endRow" swt_gen="true"></arg>
      <arg name="searchString" swt_gen="true"></arg>
    </method>
    <method selector="tableView:selectionIndexesForProposedSelection:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="proposedSelectionIndexes" swt_gen="true"></arg>
    </method>
    <method selector="tableView:shouldEditTableColumn:row:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
    </method>
    <method selector="tableView:shouldSelectRow:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
    </method>
    <method selector="tableView:shouldSelectTableColumn:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
    </method>
    <method selector="tableView:shouldShowCellExpansionForTableColumn:row:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
    </method>
    <method selector="tableView:shouldTrackCell:forTableColumn:row:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
    </method>
    <method selector="tableView:shouldTypeSelectForEvent:withCurrentSearchString:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="searchString" swt_gen="true"></arg>
    </method>
    <method selector="tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <arg name="mouseLocation" swt_gen="true"></arg>
    </method>
    <method selector="tableView:typeSelectStringForTableColumn:row:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
    </method>
    <method selector="tableView:willDisplayCell:forTableColumn:row:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSTableViewNotifications" swt_gen="true">
    <method selector="tableViewColumnDidMove:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="tableViewColumnDidResize:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="tableViewSelectionDidChange:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="tableViewSelectionIsChanging:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSTextDelegate" swt_gen="true">
    <method selector="textDidBeginEditing:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="textDidChange:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="textDidEndEditing:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="textShouldBeginEditing:" swt_gen="true">
      <arg name="textObject" swt_gen="true"></arg>
    </method>
    <method selector="textShouldEndEditing:" swt_gen="true">
      <arg name="textObject" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSTextStorageDelegate" swt_gen="true">
    <method selector="textStorageDidProcessEditing:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="textStorageWillProcessEditing:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSTextViewDelegate" swt_gen="true">
    <method selector="textView:clickedOnCell:inRect:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="cellFrame" swt_gen="true"></arg>
    </method>
    <method selector="textView:clickedOnCell:inRect:atIndex:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
    </method>
    <method selector="textView:clickedOnLink:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="link" swt_gen="true"></arg>
    </method>
    <method selector="textView:clickedOnLink:atIndex:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="link" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
    </method>
    <method selector="textView:completions:forPartialWordRange:indexOfSelectedItem:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="words" swt_gen="true"></arg>
      <arg name="charRange" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
    </method>
    <method selector="textView:doCommandBySelector:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="commandSelector" swt_gen="true"></arg>
    </method>
    <method selector="textView:doubleClickedOnCell:inRect:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="cellFrame" swt_gen="true"></arg>
    </method>
    <method selector="textView:doubleClickedOnCell:inRect:atIndex:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
    </method>
    <method selector="textView:draggedCell:inRect:event:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
    </method>
    <method selector="textView:draggedCell:inRect:event:atIndex:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
    </method>
    <method selector="textView:menu:forEvent:atIndex:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <arg name="menu" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
    </method>
    <method selector="textView:shouldChangeTextInRange:replacementString:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="affectedCharRange" swt_gen="true"></arg>
      <arg name="replacementString" swt_gen="true"></arg>
    </method>
    <method selector="textView:shouldChangeTextInRanges:replacementStrings:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="affectedRanges" swt_gen="true"></arg>
      <arg name="replacementStrings" swt_gen="true"></arg>
    </method>
    <method selector="textView:shouldChangeTypingAttributes:toAttributes:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="oldTypingAttributes" swt_gen="true"></arg>
      <arg name="newTypingAttributes" swt_gen="true"></arg>
    </method>
    <method selector="textView:shouldSetSpellingState:range:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="value" swt_gen="true"></arg>
      <arg name="affectedCharRange" swt_gen="true"></arg>
    </method>
    <method selector="textView:willChangeSelectionFromCharacterRange:toCharacterRange:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="oldSelectedCharRange" swt_gen="true"></arg>
      <arg name="newSelectedCharRange" swt_gen="true"></arg>
    </method>
    <method selector="textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="oldSelectedCharRanges" swt_gen="true"></arg>
      <arg name="newSelectedCharRanges" swt_gen="true"></arg>
    </method>
    <method selector="textView:willDisplayToolTip:forCharacterAtIndex:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="tooltip" swt_gen="true"></arg>
      <arg name="characterIndex" swt_gen="true"></arg>
    </method>
    <method selector="textView:writablePasteboardTypesForCell:atIndex:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
    </method>
    <method selector="textView:writeCell:atIndex:toPasteboard:type:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
      <arg name="pboard" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
    </method>
    <method selector="textViewDidChangeSelection:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="textViewDidChangeTypingAttributes:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="undoManagerForTextView:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSTokenFieldCellDelegate" swt_gen="true">
    <method selector="tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:" swt_gen="true">
      <arg name="tokenFieldCell" swt_gen="true"></arg>
      <arg name="substring" swt_gen="true"></arg>
      <arg name="tokenIndex" swt_gen="true"></arg>
      <arg name="selectedIndex" swt_gen="true"></arg>
    </method>
    <method selector="tokenFieldCell:displayStringForRepresentedObject:" swt_gen="true">
      <arg name="tokenFieldCell" swt_gen="true"></arg>
      <arg name="representedObject" swt_gen="true"></arg>
    </method>
    <method selector="tokenFieldCell:editingStringForRepresentedObject:" swt_gen="true">
      <arg name="tokenFieldCell" swt_gen="true"></arg>
      <arg name="representedObject" swt_gen="true"></arg>
    </method>
    <method selector="tokenFieldCell:hasMenuForRepresentedObject:" swt_gen="true">
      <arg name="tokenFieldCell" swt_gen="true"></arg>
      <arg name="representedObject" swt_gen="true"></arg>
    </method>
    <method selector="tokenFieldCell:menuForRepresentedObject:" swt_gen="true">
      <arg name="tokenFieldCell" swt_gen="true"></arg>
      <arg name="representedObject" swt_gen="true"></arg>
    </method>
    <method selector="tokenFieldCell:readFromPasteboard:" swt_gen="true">
      <arg name="tokenFieldCell" swt_gen="true"></arg>
      <arg name="pboard" swt_gen="true"></arg>
    </method>
    <method selector="tokenFieldCell:representedObjectForEditingString:" swt_gen="true">
      <arg name="tokenFieldCell" swt_gen="true"></arg>
      <arg name="editingString" swt_gen="true"></arg>
    </method>
    <method selector="tokenFieldCell:shouldAddObjects:atIndex:" swt_gen="true">
      <arg name="tokenFieldCell" swt_gen="true"></arg>
      <arg name="tokens" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
    </method>
    <method selector="tokenFieldCell:styleForRepresentedObject:" swt_gen="true">
      <arg name="tokenFieldCell" swt_gen="true"></arg>
      <arg name="representedObject" swt_gen="true"></arg>
    </method>
    <method selector="tokenFieldCell:writeRepresentedObjects:toPasteboard:" swt_gen="true">
      <arg name="tokenFieldCell" swt_gen="true"></arg>
      <arg name="objects" swt_gen="true"></arg>
      <arg name="pboard" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSTokenFieldDelegate" swt_gen="true">
    <method selector="tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:" swt_gen="true">
      <arg name="tokenField" swt_gen="true"></arg>
      <arg name="substring" swt_gen="true"></arg>
      <arg name="tokenIndex" swt_gen="true"></arg>
      <arg name="selectedIndex" swt_gen="true"></arg>
    </method>
    <method selector="tokenField:displayStringForRepresentedObject:" swt_gen="true">
      <arg name="tokenField" swt_gen="true"></arg>
      <arg name="representedObject" swt_gen="true"></arg>
    </method>
    <method selector="tokenField:editingStringForRepresentedObject:" swt_gen="true">
      <arg name="tokenField" swt_gen="true"></arg>
      <arg name="representedObject" swt_gen="true"></arg>
    </method>
    <method selector="tokenField:hasMenuForRepresentedObject:" swt_gen="true">
      <arg name="tokenField" swt_gen="true"></arg>
      <arg name="representedObject" swt_gen="true"></arg>
    </method>
    <method selector="tokenField:menuForRepresentedObject:" swt_gen="true">
      <arg name="tokenField" swt_gen="true"></arg>
      <arg name="representedObject" swt_gen="true"></arg>
    </method>
    <method selector="tokenField:readFromPasteboard:" swt_gen="true">
      <arg name="tokenField" swt_gen="true"></arg>
      <arg name="pboard" swt_gen="true"></arg>
    </method>
    <method selector="tokenField:representedObjectForEditingString:" swt_gen="true">
      <arg name="tokenField" swt_gen="true"></arg>
      <arg name="editingString" swt_gen="true"></arg>
    </method>
    <method selector="tokenField:shouldAddObjects:atIndex:" swt_gen="true">
      <arg name="tokenField" swt_gen="true"></arg>
      <arg name="tokens" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
    </method>
    <method selector="tokenField:styleForRepresentedObject:" swt_gen="true">
      <arg name="tokenField" swt_gen="true"></arg>
      <arg name="representedObject" swt_gen="true"></arg>
    </method>
    <method selector="tokenField:writeRepresentedObjects:toPasteboard:" swt_gen="true">
      <arg name="tokenField" swt_gen="true"></arg>
      <arg name="objects" swt_gen="true"></arg>
      <arg name="pboard" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSToolTipOwner" swt_gen="true">
    <method selector="view:stringForToolTip:point:userData:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <arg name="tag" swt_gen="true"></arg>
      <arg name="point" swt_gen="true"></arg>
      <arg name="data" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSToolbarDelegate" swt_gen="true">
    <method selector="toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:" swt_gen="true">
      <arg name="toolbar" swt_gen="true"></arg>
      <arg name="itemIdentifier" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
    </method>
    <method selector="toolbarAllowedItemIdentifiers:" swt_gen="true">
      <arg name="toolbar" swt_gen="true"></arg>
    </method>
    <method selector="toolbarDefaultItemIdentifiers:" swt_gen="true">
      <arg name="toolbar" swt_gen="true"></arg>
    </method>
    <method selector="toolbarSelectableItemIdentifiers:" swt_gen="true">
      <arg name="toolbar" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSToolbarItemValidation" swt_gen="true">
    <method selector="validateToolbarItem:" swt_gen="true">
      <arg name="theItem" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSToolbarNotifications" swt_gen="true">
    <method selector="toolbarDidRemoveItem:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="toolbarWillAddItem:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSWindowDelegate" swt_gen="true">
    <method selector="window:shouldDragDocumentWithEvent:from:withPasteboard:" swt_gen="true">
      <arg name="window" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="dragImageLocation" swt_gen="true"></arg>
      <arg name="pasteboard" swt_gen="true"></arg>
    </method>
    <method selector="window:shouldPopUpDocumentPathMenu:" swt_gen="true">
      <arg name="window" swt_gen="true"></arg>
      <arg name="menu" swt_gen="true"></arg>
    </method>
    <method selector="window:willPositionSheet:usingRect:" swt_gen="true">
      <arg name="window" swt_gen="true"></arg>
      <arg name="sheet" swt_gen="true"></arg>
      <arg name="rect" swt_gen="true"></arg>
    </method>
    <method selector="windowShouldClose:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="windowShouldZoom:toFrame:" swt_gen="true">
      <arg name="window" swt_gen="true"></arg>
      <arg name="newFrame" swt_gen="true"></arg>
    </method>
    <method selector="windowWillResize:toSize:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="frameSize" swt_gen="true"></arg>
    </method>
    <method selector="windowWillReturnFieldEditor:toObject:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="client" swt_gen="true"></arg>
    </method>
    <method selector="windowWillReturnUndoManager:" swt_gen="true">
      <arg name="window" swt_gen="true"></arg>
    </method>
    <method selector="windowWillUseStandardFrame:defaultFrame:" swt_gen="true">
      <arg name="window" swt_gen="true"></arg>
      <arg name="newFrame" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSWindowNotifications" swt_gen="true">
    <method selector="windowDidBecomeKey:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="windowDidBecomeMain:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="windowDidChangeScreen:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="windowDidChangeScreenProfile:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="windowDidDeminiaturize:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="windowDidEndSheet:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="windowDidExpose:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="windowDidMiniaturize:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="windowDidMove:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="windowDidResignKey:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="windowDidResignMain:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="windowDidResize:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="windowDidUpdate:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="windowWillBeginSheet:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="windowWillClose:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="windowWillMiniaturize:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="windowWillMove:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
  </informal_protocol>
</signatures>