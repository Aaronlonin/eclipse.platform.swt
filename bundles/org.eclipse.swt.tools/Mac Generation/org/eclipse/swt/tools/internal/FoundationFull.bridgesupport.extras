<?xml version="1.0" encoding="UTF8"?>
<signatures swt_gen="mixed">
  <depends_on path="/System/Library/Frameworks/CoreFoundation.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CFNetwork.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/SystemConfiguration.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/CoreServices.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/Security.framework"></depends_on>
  <struct name="NSAffineTransformStruct">
    <field name="m11"></field>
    <field name="m12"></field>
    <field name="m21"></field>
    <field name="m22"></field>
    <field name="tX"></field>
    <field name="tY"></field>
  </struct>
  <struct name="NSDecimal">
    <field name="_exponent"></field>
    <field name="_length"></field>
    <field name="_isNegative"></field>
    <field name="_isCompact"></field>
    <field name="_reserved"></field>
    <field name="_mantissa"></field>
  </struct>
  <struct name="NSFastEnumerationState">
    <field name="state"></field>
    <field name="itemsPtr"></field>
    <field name="mutationsPtr"></field>
    <field name="extra"></field>
  </struct>
  <struct name="NSHashEnumerator">
    <field name="_pi"></field>
    <field name="_si"></field>
    <field name="_bs"></field>
  </struct>
  <struct name="NSHashTableCallBacks">
    <field name="hash"></field>
    <field name="isEqual"></field>
    <field name="retain"></field>
    <field name="release"></field>
    <field name="describe"></field>
  </struct>
  <struct name="NSMapEnumerator">
    <field name="_pi"></field>
    <field name="_si"></field>
    <field name="_bs"></field>
  </struct>
  <struct name="NSMapTableKeyCallBacks">
    <field name="hash"></field>
    <field name="isEqual"></field>
    <field name="retain"></field>
    <field name="release"></field>
    <field name="describe"></field>
    <field name="notAKeyMarker"></field>
  </struct>
  <struct name="NSMapTableValueCallBacks">
    <field name="retain"></field>
    <field name="release"></field>
    <field name="describe"></field>
  </struct>
  <struct name="NSPoint">
    <field name="x"></field>
    <field name="y"></field>
  </struct>
  <struct name="NSRange">
    <field name="location"></field>
    <field name="length"></field>
  </struct>
  <struct name="NSRect">
    <field name="origin"></field>
    <field name="size"></field>
  </struct>
  <struct name="NSSize">
    <field name="width"></field>
    <field name="height"></field>
  </struct>
  <struct name="NSSwappedDouble">
    <field name="v"></field>
  </struct>
  <struct name="NSSwappedFloat">
    <field name="v"></field>
  </struct>
  <opaque name="NSZone"></opaque>
  <constant name="NSAppleEventManagerWillProcessFirstEventNotification"></constant>
  <constant name="NSAppleEventTimeOutDefault"></constant>
  <constant name="NSAppleEventTimeOutNone"></constant>
  <constant name="NSAppleScriptErrorAppName"></constant>
  <constant name="NSAppleScriptErrorBriefMessage"></constant>
  <constant name="NSAppleScriptErrorMessage"></constant>
  <constant name="NSAppleScriptErrorNumber"></constant>
  <constant name="NSAppleScriptErrorRange"></constant>
  <constant name="NSArgumentDomain"></constant>
  <constant name="NSAverageKeyValueOperator"></constant>
  <constant name="NSBuddhistCalendar"></constant>
  <constant name="NSBundleDidLoadNotification"></constant>
  <constant name="NSCharacterConversionException"></constant>
  <constant name="NSChineseCalendar"></constant>
  <constant name="NSClassDescriptionNeededForClassNotification"></constant>
  <constant name="NSCocoaErrorDomain"></constant>
  <constant name="NSConnectionDidDieNotification"></constant>
  <constant name="NSConnectionDidInitializeNotification"></constant>
  <constant name="NSConnectionReplyMode"></constant>
  <constant name="NSCountKeyValueOperator"></constant>
  <constant name="NSCurrentLocaleDidChangeNotification"></constant>
  <constant name="NSDeallocateZombies"></constant>
  <constant name="NSDebugEnabled"></constant>
  <constant name="NSDecimalNumberDivideByZeroException"></constant>
  <constant name="NSDecimalNumberExactnessException"></constant>
  <constant name="NSDecimalNumberOverflowException"></constant>
  <constant name="NSDecimalNumberUnderflowException"></constant>
  <constant name="NSDefaultRunLoopMode" swt_gen="true"></constant>
  <constant name="NSDestinationInvalidException"></constant>
  <constant name="NSDidBecomeSingleThreadedNotification"></constant>
  <constant name="NSDistinctUnionOfArraysKeyValueOperator"></constant>
  <constant name="NSDistinctUnionOfObjectsKeyValueOperator"></constant>
  <constant name="NSDistinctUnionOfSetsKeyValueOperator"></constant>
  <constant name="NSErrorFailingURLStringKey" swt_gen="true"></constant>
  <constant name="NSFailedAuthenticationException"></constant>
  <constant name="NSFileAppendOnly"></constant>
  <constant name="NSFileBusy"></constant>
  <constant name="NSFileCreationDate"></constant>
  <constant name="NSFileDeviceIdentifier"></constant>
  <constant name="NSFileExtensionHidden"></constant>
  <constant name="NSFileGroupOwnerAccountID"></constant>
  <constant name="NSFileGroupOwnerAccountName"></constant>
  <constant name="NSFileHFSCreatorCode"></constant>
  <constant name="NSFileHFSTypeCode"></constant>
  <constant name="NSFileHandleConnectionAcceptedNotification"></constant>
  <constant name="NSFileHandleDataAvailableNotification"></constant>
  <constant name="NSFileHandleNotificationDataItem"></constant>
  <constant name="NSFileHandleNotificationFileHandleItem"></constant>
  <constant name="NSFileHandleNotificationMonitorModes"></constant>
  <constant name="NSFileHandleOperationException"></constant>
  <constant name="NSFileHandleReadCompletionNotification"></constant>
  <constant name="NSFileHandleReadToEndOfFileCompletionNotification"></constant>
  <constant name="NSFileImmutable"></constant>
  <constant name="NSFileModificationDate"></constant>
  <constant name="NSFileOwnerAccountID"></constant>
  <constant name="NSFileOwnerAccountName"></constant>
  <constant name="NSFilePathErrorKey"></constant>
  <constant name="NSFilePosixPermissions"></constant>
  <constant name="NSFileReferenceCount"></constant>
  <constant name="NSFileSize"></constant>
  <constant name="NSFileSystemFileNumber"></constant>
  <constant name="NSFileSystemFreeNodes"></constant>
  <constant name="NSFileSystemFreeSize"></constant>
  <constant name="NSFileSystemNodes"></constant>
  <constant name="NSFileSystemNumber"></constant>
  <constant name="NSFileSystemSize"></constant>
  <constant name="NSFileType"></constant>
  <constant name="NSFileTypeBlockSpecial"></constant>
  <constant name="NSFileTypeCharacterSpecial"></constant>
  <constant name="NSFileTypeDirectory"></constant>
  <constant name="NSFileTypeRegular"></constant>
  <constant name="NSFileTypeSocket"></constant>
  <constant name="NSFileTypeSymbolicLink"></constant>
  <constant name="NSFileTypeUnknown"></constant>
  <constant name="NSFoundationVersionNumber"></constant>
  <constant name="NSGenericException"></constant>
  <constant name="NSGlobalDomain"></constant>
  <constant name="NSGrammarCorrections"></constant>
  <constant name="NSGrammarRange"></constant>
  <constant name="NSGrammarUserDescription"></constant>
  <constant name="NSGregorianCalendar"></constant>
  <constant name="NSHTTPCookieComment"></constant>
  <constant name="NSHTTPCookieCommentURL"></constant>
  <constant name="NSHTTPCookieDiscard"></constant>
  <constant name="NSHTTPCookieDomain"></constant>
  <constant name="NSHTTPCookieExpires"></constant>
  <constant name="NSHTTPCookieManagerAcceptPolicyChangedNotification"></constant>
  <constant name="NSHTTPCookieManagerCookiesChangedNotification"></constant>
  <constant name="NSHTTPCookieMaximumAge"></constant>
  <constant name="NSHTTPCookieName"></constant>
  <constant name="NSHTTPCookieOriginURL"></constant>
  <constant name="NSHTTPCookiePath"></constant>
  <constant name="NSHTTPCookiePort"></constant>
  <constant name="NSHTTPCookieSecure"></constant>
  <constant name="NSHTTPCookieValue"></constant>
  <constant name="NSHTTPCookieVersion"></constant>
  <constant name="NSHangOnUncaughtException"></constant>
  <constant name="NSHebrewCalendar"></constant>
  <constant name="NSInconsistentArchiveException"></constant>
  <constant name="NSIntegerHashCallBacks"></constant>
  <constant name="NSIntegerMapKeyCallBacks"></constant>
  <constant name="NSIntegerMapValueCallBacks"></constant>
  <constant name="NSInternalInconsistencyException"></constant>
  <constant name="NSInvalidArchiveOperationException"></constant>
  <constant name="NSInvalidArgumentException"></constant>
  <constant name="NSInvalidReceivePortException"></constant>
  <constant name="NSInvalidSendPortException"></constant>
  <constant name="NSInvalidUnarchiveOperationException"></constant>
  <constant name="NSInvocationOperationCancelledException"></constant>
  <constant name="NSInvocationOperationVoidResultException"></constant>
  <constant name="NSIsNilTransformerName"></constant>
  <constant name="NSIsNotNilTransformerName"></constant>
  <constant name="NSIslamicCalendar"></constant>
  <constant name="NSIslamicCivilCalendar"></constant>
  <constant name="NSJapaneseCalendar"></constant>
  <constant name="NSKeepAllocationStatistics"></constant>
  <constant name="NSKeyValueChangeIndexesKey"></constant>
  <constant name="NSKeyValueChangeKindKey"></constant>
  <constant name="NSKeyValueChangeNewKey"></constant>
  <constant name="NSKeyValueChangeNotificationIsPriorKey"></constant>
  <constant name="NSKeyValueChangeOldKey"></constant>
  <constant name="NSKeyedUnarchiveFromDataTransformerName"></constant>
  <constant name="NSLoadedClasses"></constant>
  <constant name="NSLocalNotificationCenterType"></constant>
  <constant name="NSLocaleCalendar"></constant>
  <constant name="NSLocaleCollationIdentifier"></constant>
  <constant name="NSLocaleCountryCode"></constant>
  <constant name="NSLocaleCurrencyCode"></constant>
  <constant name="NSLocaleCurrencySymbol"></constant>
  <constant name="NSLocaleDecimalSeparator"></constant>
  <constant name="NSLocaleExemplarCharacterSet"></constant>
  <constant name="NSLocaleGroupingSeparator"></constant>
  <constant name="NSLocaleIdentifier"></constant>
  <constant name="NSLocaleLanguageCode"></constant>
  <constant name="NSLocaleMeasurementSystem"></constant>
  <constant name="NSLocaleScriptCode"></constant>
  <constant name="NSLocaleUsesMetricSystem"></constant>
  <constant name="NSLocaleVariantCode"></constant>
  <constant name="NSLocalizedDescriptionKey"></constant>
  <constant name="NSLocalizedFailureReasonErrorKey"></constant>
  <constant name="NSLocalizedRecoveryOptionsErrorKey"></constant>
  <constant name="NSLocalizedRecoverySuggestionErrorKey"></constant>
  <constant name="NSMachErrorDomain"></constant>
  <constant name="NSMallocException"></constant>
  <constant name="NSMaximumKeyValueOperator"></constant>
  <constant name="NSMetadataQueryDidFinishGatheringNotification"></constant>
  <constant name="NSMetadataQueryDidStartGatheringNotification"></constant>
  <constant name="NSMetadataQueryDidUpdateNotification"></constant>
  <constant name="NSMetadataQueryGatheringProgressNotification"></constant>
  <constant name="NSMetadataQueryLocalComputerScope"></constant>
  <constant name="NSMetadataQueryNetworkScope"></constant>
  <constant name="NSMetadataQueryResultContentRelevanceAttribute"></constant>
  <constant name="NSMetadataQueryUserHomeScope"></constant>
  <constant name="NSMinimumKeyValueOperator"></constant>
  <constant name="NSNegateBooleanTransformerName"></constant>
  <constant name="NSNetServicesErrorCode"></constant>
  <constant name="NSNetServicesErrorDomain"></constant>
  <constant name="NSNonOwnedPointerHashCallBacks"></constant>
  <constant name="NSNonOwnedPointerMapKeyCallBacks"></constant>
  <constant name="NSNonOwnedPointerMapValueCallBacks"></constant>
  <constant name="NSNonOwnedPointerOrNullMapKeyCallBacks"></constant>
  <constant name="NSNonRetainedObjectHashCallBacks"></constant>
  <constant name="NSNonRetainedObjectMapKeyCallBacks"></constant>
  <constant name="NSNonRetainedObjectMapValueCallBacks"></constant>
  <constant name="NSOSStatusErrorDomain"></constant>
  <constant name="NSObjectHashCallBacks"></constant>
  <constant name="NSObjectInaccessibleException"></constant>
  <constant name="NSObjectMapKeyCallBacks"></constant>
  <constant name="NSObjectMapValueCallBacks"></constant>
  <constant name="NSObjectNotAvailableException"></constant>
  <constant name="NSOldStyleException"></constant>
  <constant name="NSOperationNotSupportedForKeyException"></constant>
  <constant name="NSOwnedObjectIdentityHashCallBacks"></constant>
  <constant name="NSOwnedPointerHashCallBacks"></constant>
  <constant name="NSOwnedPointerMapKeyCallBacks"></constant>
  <constant name="NSOwnedPointerMapValueCallBacks"></constant>
  <constant name="NSPOSIXErrorDomain"></constant>
  <constant name="NSParseErrorException"></constant>
  <constant name="NSPointerToStructHashCallBacks"></constant>
  <constant name="NSPortDidBecomeInvalidNotification"></constant>
  <constant name="NSPortReceiveException"></constant>
  <constant name="NSPortSendException"></constant>
  <constant name="NSPortTimeoutException"></constant>
  <constant name="NSRangeException"></constant>
  <constant name="NSRecoveryAttempterErrorKey"></constant>
  <constant name="NSRegistrationDomain"></constant>
  <constant name="NSRunLoopCommonModes"></constant>
  <constant name="NSStreamDataWrittenToMemoryStreamKey"></constant>
  <constant name="NSStreamFileCurrentOffsetKey"></constant>
  <constant name="NSStreamSOCKSErrorDomain"></constant>
  <constant name="NSStreamSOCKSProxyConfigurationKey"></constant>
  <constant name="NSStreamSOCKSProxyHostKey"></constant>
  <constant name="NSStreamSOCKSProxyPasswordKey"></constant>
  <constant name="NSStreamSOCKSProxyPortKey"></constant>
  <constant name="NSStreamSOCKSProxyUserKey"></constant>
  <constant name="NSStreamSOCKSProxyVersion4"></constant>
  <constant name="NSStreamSOCKSProxyVersion5"></constant>
  <constant name="NSStreamSOCKSProxyVersionKey"></constant>
  <constant name="NSStreamSocketSSLErrorDomain"></constant>
  <constant name="NSStreamSocketSecurityLevelKey"></constant>
  <constant name="NSStreamSocketSecurityLevelNegotiatedSSL"></constant>
  <constant name="NSStreamSocketSecurityLevelNone"></constant>
  <constant name="NSStreamSocketSecurityLevelSSLv2"></constant>
  <constant name="NSStreamSocketSecurityLevelSSLv3"></constant>
  <constant name="NSStreamSocketSecurityLevelTLSv1"></constant>
  <constant name="NSStringEncodingErrorKey"></constant>
  <constant name="NSSumKeyValueOperator"></constant>
  <constant name="NSSystemTimeZoneDidChangeNotification"></constant>
  <constant name="NSTaskDidTerminateNotification"></constant>
  <constant name="NSThreadWillExitNotification"></constant>
  <constant name="NSURLAuthenticationMethodDefault"></constant>
  <constant name="NSURLAuthenticationMethodHTMLForm"></constant>
  <constant name="NSURLAuthenticationMethodHTTPBasic"></constant>
  <constant name="NSURLAuthenticationMethodHTTPDigest"></constant>
  <constant name="NSURLCredentialStorageChangedNotification"></constant>
  <constant name="NSURLErrorDomain"></constant>
  <constant name="NSURLErrorKey"></constant>
  <constant name="NSURLFileScheme"></constant>
  <constant name="NSURLProtectionSpaceFTPProxy"></constant>
  <constant name="NSURLProtectionSpaceHTTPProxy"></constant>
  <constant name="NSURLProtectionSpaceHTTPSProxy"></constant>
  <constant name="NSURLProtectionSpaceSOCKSProxy"></constant>
  <constant name="NSUnarchiveFromDataTransformerName"></constant>
  <constant name="NSUndefinedKeyException"></constant>
  <constant name="NSUnderlyingErrorKey"></constant>
  <constant name="NSUndoManagerCheckpointNotification"></constant>
  <constant name="NSUndoManagerDidOpenUndoGroupNotification"></constant>
  <constant name="NSUndoManagerDidRedoChangeNotification"></constant>
  <constant name="NSUndoManagerDidUndoChangeNotification"></constant>
  <constant name="NSUndoManagerWillCloseUndoGroupNotification"></constant>
  <constant name="NSUndoManagerWillRedoChangeNotification"></constant>
  <constant name="NSUndoManagerWillUndoChangeNotification"></constant>
  <constant name="NSUnionOfArraysKeyValueOperator"></constant>
  <constant name="NSUnionOfObjectsKeyValueOperator"></constant>
  <constant name="NSUnionOfSetsKeyValueOperator"></constant>
  <constant name="NSUserDefaultsDidChangeNotification"></constant>
  <constant name="NSWillBecomeMultiThreadedNotification"></constant>
  <constant name="NSXMLParserErrorDomain"></constant>
  <constant name="NSZeroPoint"></constant>
  <constant name="NSZeroRect"></constant>
  <constant name="NSZeroSize"></constant>
  <constant name="NSZombieEnabled"></constant>
  <enum name="NSASCIIStringEncoding" swt_gen="true"></enum>
  <enum name="NSAdminApplicationDirectory" swt_gen="true"></enum>
  <enum name="NSAggregateExpressionType" swt_gen="true"></enum>
  <enum name="NSAllApplicationsDirectory" swt_gen="true"></enum>
  <enum name="NSAllDomainsMask" swt_gen="true"></enum>
  <enum name="NSAllLibrariesDirectory" swt_gen="true"></enum>
  <enum name="NSAllPredicateModifier" swt_gen="true"></enum>
  <enum name="NSAnchoredSearch" swt_gen="true"></enum>
  <enum name="NSAndPredicateType" swt_gen="true"></enum>
  <enum name="NSAnyPredicateModifier" swt_gen="true"></enum>
  <enum name="NSApplicationDirectory" swt_gen="true"></enum>
  <enum name="NSApplicationSupportDirectory" swt_gen="true"></enum>
  <enum name="NSArgumentEvaluationScriptError" swt_gen="true"></enum>
  <enum name="NSArgumentsWrongScriptError" swt_gen="true"></enum>
  <enum name="NSAtomicWrite" swt_gen="true"></enum>
  <enum name="NSBackwardsSearch" swt_gen="true"></enum>
  <enum name="NSBeginsWithComparison" swt_gen="true"></enum>
  <enum name="NSBeginsWithPredicateOperatorType" swt_gen="true"></enum>
  <enum name="NSBetweenPredicateOperatorType" swt_gen="true"></enum>
  <enum name="NSBundleExecutableArchitectureI386" swt_gen="true"></enum>
  <enum name="NSBundleExecutableArchitecturePPC" swt_gen="true"></enum>
  <enum name="NSBundleExecutableArchitecturePPC64" swt_gen="true"></enum>
  <enum name="NSBundleExecutableArchitectureX86_64" swt_gen="true"></enum>
  <enum name="NSCachesDirectory" swt_gen="true"></enum>
  <enum name="NSCalculationDivideByZero" swt_gen="true"></enum>
  <enum name="NSCalculationLossOfPrecision" swt_gen="true"></enum>
  <enum name="NSCalculationNoError" swt_gen="true"></enum>
  <enum name="NSCalculationOverflow" swt_gen="true"></enum>
  <enum name="NSCalculationUnderflow" swt_gen="true"></enum>
  <enum name="NSCannotCreateScriptCommandError" swt_gen="true"></enum>
  <enum name="NSCaseInsensitivePredicateOption" swt_gen="true"></enum>
  <enum name="NSCaseInsensitiveSearch" swt_gen="true"></enum>
  <enum name="NSCollectorDisabledOption" swt_gen="true"></enum>
  <enum name="NSConstantValueExpressionType" swt_gen="true"></enum>
  <enum name="NSContainerSpecifierError" swt_gen="true"></enum>
  <enum name="NSContainsComparison" swt_gen="true"></enum>
  <enum name="NSContainsPredicateOperatorType" swt_gen="true"></enum>
  <enum name="NSCoreServiceDirectory" swt_gen="true"></enum>
  <enum name="NSCustomSelectorPredicateOperatorType" swt_gen="true"></enum>
  <enum name="NSDateFormatterBehavior10_0" swt_gen="true"></enum>
  <enum name="NSDateFormatterBehavior10_4" swt_gen="true"></enum>
  <enum name="NSDateFormatterBehaviorDefault" swt_gen="true"></enum>
  <enum name="NSDateFormatterFullStyle" swt_gen="true"></enum>
  <enum name="NSDateFormatterLongStyle" swt_gen="true"></enum>
  <enum name="NSDateFormatterMediumStyle" swt_gen="true"></enum>
  <enum name="NSDateFormatterNoStyle" swt_gen="true"></enum>
  <enum name="NSDateFormatterShortStyle" swt_gen="true"></enum>
  <enum name="NSDayCalendarUnit" swt_gen="true"></enum>
  <enum name="NSDecimalMaxSize" swt_gen="true"></enum>
  <enum name="NSDecimalNoScale" swt_gen="true"></enum>
  <enum name="NSDemoApplicationDirectory" swt_gen="true"></enum>
  <enum name="NSDesktopDirectory" swt_gen="true"></enum>
  <enum name="NSDeveloperApplicationDirectory" swt_gen="true"></enum>
  <enum name="NSDeveloperDirectory" swt_gen="true"></enum>
  <enum name="NSDiacriticInsensitivePredicateOption" swt_gen="true"></enum>
  <enum name="NSDiacriticInsensitiveSearch" swt_gen="true"></enum>
  <enum name="NSDirectPredicateModifier" swt_gen="true"></enum>
  <enum name="NSDocumentDirectory" swt_gen="true"></enum>
  <enum name="NSDocumentationDirectory" swt_gen="true"></enum>
  <enum name="NSDownloadsDirectory" swt_gen="true"></enum>
  <enum name="NSEndsWithComparison" swt_gen="true"></enum>
  <enum name="NSEndsWithPredicateOperatorType" swt_gen="true"></enum>
  <enum name="NSEqualToComparison" swt_gen="true"></enum>
  <enum name="NSEqualToPredicateOperatorType" swt_gen="true"></enum>
  <enum name="NSEraCalendarUnit" swt_gen="true"></enum>
  <enum name="NSEvaluatedObjectExpressionType" swt_gen="true"></enum>
  <enum name="NSEverySubelement" swt_gen="true"></enum>
  <enum name="NSExecutableArchitectureMismatchError" swt_gen="true"></enum>
  <enum name="NSExecutableErrorMaximum" swt_gen="true"></enum>
  <enum name="NSExecutableErrorMinimum" swt_gen="true"></enum>
  <enum name="NSExecutableLinkError" swt_gen="true"></enum>
  <enum name="NSExecutableLoadError" swt_gen="true"></enum>
  <enum name="NSExecutableNotLoadableError" swt_gen="true"></enum>
  <enum name="NSExecutableRuntimeMismatchError" swt_gen="true"></enum>
  <enum name="NSFileErrorMaximum" swt_gen="true"></enum>
  <enum name="NSFileErrorMinimum" swt_gen="true"></enum>
  <enum name="NSFileLockingError" swt_gen="true"></enum>
  <enum name="NSFileNoSuchFileError" swt_gen="true"></enum>
  <enum name="NSFileReadCorruptFileError" swt_gen="true"></enum>
  <enum name="NSFileReadInapplicableStringEncodingError" swt_gen="true"></enum>
  <enum name="NSFileReadInvalidFileNameError" swt_gen="true"></enum>
  <enum name="NSFileReadNoPermissionError" swt_gen="true"></enum>
  <enum name="NSFileReadNoSuchFileError" swt_gen="true"></enum>
  <enum name="NSFileReadTooLargeError" swt_gen="true"></enum>
  <enum name="NSFileReadUnknownError" swt_gen="true"></enum>
  <enum name="NSFileReadUnknownStringEncodingError" swt_gen="true"></enum>
  <enum name="NSFileReadUnsupportedSchemeError" swt_gen="true"></enum>
  <enum name="NSFileWriteInapplicableStringEncodingError" swt_gen="true"></enum>
  <enum name="NSFileWriteInvalidFileNameError" swt_gen="true"></enum>
  <enum name="NSFileWriteNoPermissionError" swt_gen="true"></enum>
  <enum name="NSFileWriteOutOfSpaceError" swt_gen="true"></enum>
  <enum name="NSFileWriteUnknownError" swt_gen="true"></enum>
  <enum name="NSFileWriteUnsupportedSchemeError" swt_gen="true"></enum>
  <enum name="NSForcedOrderingSearch" swt_gen="true"></enum>
  <enum name="NSFormattingError" swt_gen="true"></enum>
  <enum name="NSFormattingErrorMaximum" swt_gen="true"></enum>
  <enum name="NSFormattingErrorMinimum" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_0" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_1" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_1_1" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_1_2" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_1_3" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_1_4" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_2" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_2_1" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_2_2" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_2_3" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_2_4" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_2_5" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_2_6" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_2_7" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_2_8" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_3" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_3_1" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_3_2" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_3_3" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_3_4" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_3_5" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_3_6" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_3_7" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_3_8" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_3_9" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_4" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_4_1" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_4_10" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_4_11" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_4_2" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_4_3" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_4_4_Intel" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_4_4_PowerPC" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_4_5" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_4_6" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_4_7" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_4_8" swt_gen="true"></enum>
  <enum name="NSFoundationVersionNumber10_4_9" swt_gen="true"></enum>
  <enum name="NSFoundationVersionWithFileManagerResourceForkSupport" swt_gen="true"></enum>
  <enum name="NSFunctionExpressionType" swt_gen="true"></enum>
  <enum name="NSGEOMETRY_TYPES_SAME_AS_CGGEOMETRY_TYPES" swt_gen="true"></enum>
  <enum name="NSGreaterThanComparison" swt_gen="true"></enum>
  <enum name="NSGreaterThanOrEqualToComparison" swt_gen="true"></enum>
  <enum name="NSGreaterThanOrEqualToPredicateOperatorType" swt_gen="true"></enum>
  <enum name="NSGreaterThanPredicateOperatorType" swt_gen="true"></enum>
  <enum name="NSHPUXOperatingSystem" swt_gen="true"></enum>
  <enum name="NSHTTPCookieAcceptPolicyAlways" swt_gen="true"></enum>
  <enum name="NSHTTPCookieAcceptPolicyNever" swt_gen="true"></enum>
  <enum name="NSHTTPCookieAcceptPolicyOnlyFromMainDocumentDomain" swt_gen="true"></enum>
  <enum name="NSHashTableCopyIn" swt_gen="true"></enum>
  <enum name="NSHashTableObjectPointerPersonality" swt_gen="true"></enum>
  <enum name="NSHashTableStrongMemory" swt_gen="true"></enum>
  <enum name="NSHashTableZeroingWeakMemory" swt_gen="true"></enum>
  <enum name="NSHourCalendarUnit" swt_gen="true"></enum>
  <enum name="NSINTEGER_DEFINED" swt_gen="true"></enum>
  <enum name="NSISO2022JPStringEncoding" swt_gen="true"></enum>
  <enum name="NSISOLatin1StringEncoding" swt_gen="true"></enum>
  <enum name="NSISOLatin2StringEncoding" swt_gen="true"></enum>
  <enum name="NSInPredicateOperatorType" swt_gen="true"></enum>
  <enum name="NSIndexSubelement" swt_gen="true"></enum>
  <enum name="NSIntegerMax" swt_gen="true"></enum>
  <enum name="NSIntegerMin" swt_gen="true"></enum>
  <enum name="NSInternalScriptError" swt_gen="true"></enum>
  <enum name="NSInternalSpecifierError" swt_gen="true"></enum>
  <enum name="NSIntersectSetExpressionType" swt_gen="true"></enum>
  <enum name="NSInvalidIndexSpecifierError" swt_gen="true"></enum>
  <enum name="NSJapaneseEUCStringEncoding" swt_gen="true"></enum>
  <enum name="NSKeyPathExpressionType" swt_gen="true"></enum>
  <enum name="NSKeySpecifierEvaluationScriptError" swt_gen="true"></enum>
  <enum name="NSKeyValueChangeInsertion" swt_gen="true"></enum>
  <enum name="NSKeyValueChangeRemoval" swt_gen="true"></enum>
  <enum name="NSKeyValueChangeReplacement" swt_gen="true"></enum>
  <enum name="NSKeyValueChangeSetting" swt_gen="true"></enum>
  <enum name="NSKeyValueIntersectSetMutation" swt_gen="true"></enum>
  <enum name="NSKeyValueMinusSetMutation" swt_gen="true"></enum>
  <enum name="NSKeyValueObservingOptionInitial" swt_gen="true"></enum>
  <enum name="NSKeyValueObservingOptionNew" swt_gen="true"></enum>
  <enum name="NSKeyValueObservingOptionOld" swt_gen="true"></enum>
  <enum name="NSKeyValueObservingOptionPrior" swt_gen="true"></enum>
  <enum name="NSKeyValueSetSetMutation" swt_gen="true"></enum>
  <enum name="NSKeyValueUnionSetMutation" swt_gen="true"></enum>
  <enum name="NSKeyValueValidationError" swt_gen="true"></enum>
  <enum name="NSLessThanComparison" swt_gen="true"></enum>
  <enum name="NSLessThanOrEqualToComparison" swt_gen="true"></enum>
  <enum name="NSLessThanOrEqualToPredicateOperatorType" swt_gen="true"></enum>
  <enum name="NSLessThanPredicateOperatorType" swt_gen="true"></enum>
  <enum name="NSLibraryDirectory" swt_gen="true"></enum>
  <enum name="NSLikePredicateOperatorType" swt_gen="true"></enum>
  <enum name="NSLiteralSearch" swt_gen="true"></enum>
  <enum name="NSLocalDomainMask" swt_gen="true"></enum>
  <enum name="NSMACHOperatingSystem" swt_gen="true"></enum>
  <enum name="NSMacOSRomanStringEncoding" swt_gen="true"></enum>
  <enum name="NSMachPortDeallocateNone" swt_gen="true"></enum>
  <enum name="NSMachPortDeallocateReceiveRight" swt_gen="true"></enum>
  <enum name="NSMachPortDeallocateSendRight" swt_gen="true"></enum>
  <enum name="NSMapTableCopyIn" swt_gen="true"></enum>
  <enum name="NSMapTableObjectPointerPersonality" swt_gen="true"></enum>
  <enum name="NSMapTableStrongMemory" swt_gen="true"></enum>
  <enum name="NSMapTableZeroingWeakMemory" swt_gen="true"></enum>
  <enum name="NSMappedRead" swt_gen="true"></enum>
  <enum name="NSMatchesPredicateOperatorType" swt_gen="true"></enum>
  <enum name="NSMaxXEdge" swt_gen="true"></enum>
  <enum name="NSMaxYEdge" swt_gen="true"></enum>
  <enum name="NSMiddleSubelement" swt_gen="true"></enum>
  <enum name="NSMinXEdge" swt_gen="true"></enum>
  <enum name="NSMinYEdge" swt_gen="true"></enum>
  <enum name="NSMinusSetExpressionType" swt_gen="true"></enum>
  <enum name="NSMinuteCalendarUnit" swt_gen="true"></enum>
  <enum name="NSMonthCalendarUnit" swt_gen="true"></enum>
  <enum name="NSNEXTSTEPStringEncoding" swt_gen="true"></enum>
  <enum name="NSNetServiceNoAutoRename" swt_gen="true"></enum>
  <enum name="NSNetServicesActivityInProgress" swt_gen="true"></enum>
  <enum name="NSNetServicesBadArgumentError" swt_gen="true"></enum>
  <enum name="NSNetServicesCancelledError" swt_gen="true"></enum>
  <enum name="NSNetServicesCollisionError" swt_gen="true"></enum>
  <enum name="NSNetServicesInvalidError" swt_gen="true"></enum>
  <enum name="NSNetServicesNotFoundError" swt_gen="true"></enum>
  <enum name="NSNetServicesTimeoutError" swt_gen="true"></enum>
  <enum name="NSNetServicesUnknownError" swt_gen="true"></enum>
  <enum name="NSNetworkDomainMask" swt_gen="true"></enum>
  <enum name="NSNoScriptError" swt_gen="true"></enum>
  <enum name="NSNoSpecifierError" swt_gen="true"></enum>
  <enum name="NSNoSubelement" swt_gen="true"></enum>
  <enum name="NSNoTopLevelContainersSpecifierError" swt_gen="true"></enum>
  <enum name="NSNonLossyASCIIStringEncoding" swt_gen="true"></enum>
  <enum name="NSNotEqualToPredicateOperatorType" swt_gen="true"></enum>
  <enum name="NSNotFound" swt_gen="true"></enum>
  <enum name="NSNotPredicateType" swt_gen="true"></enum>
  <enum name="NSNotificationCoalescingOnName" swt_gen="true"></enum>
  <enum name="NSNotificationCoalescingOnSender" swt_gen="true"></enum>
  <enum name="NSNotificationDeliverImmediately" swt_gen="true"></enum>
  <enum name="NSNotificationNoCoalescing" swt_gen="true"></enum>
  <enum name="NSNotificationPostToAllSessions" swt_gen="true"></enum>
  <enum name="NSNotificationSuspensionBehaviorCoalesce" swt_gen="true"></enum>
  <enum name="NSNotificationSuspensionBehaviorDeliverImmediately" swt_gen="true"></enum>
  <enum name="NSNotificationSuspensionBehaviorDrop" swt_gen="true"></enum>
  <enum name="NSNotificationSuspensionBehaviorHold" swt_gen="true"></enum>
  <enum name="NSNumberFormatterBehavior10_0" swt_gen="true"></enum>
  <enum name="NSNumberFormatterBehavior10_4" swt_gen="true"></enum>
  <enum name="NSNumberFormatterBehaviorDefault" swt_gen="true"></enum>
  <enum name="NSNumberFormatterCurrencyStyle" swt_gen="true"></enum>
  <enum name="NSNumberFormatterDecimalStyle" swt_gen="true"></enum>
  <enum name="NSNumberFormatterNoStyle" swt_gen="true"></enum>
  <enum name="NSNumberFormatterPadAfterPrefix" swt_gen="true"></enum>
  <enum name="NSNumberFormatterPadAfterSuffix" swt_gen="true"></enum>
  <enum name="NSNumberFormatterPadBeforePrefix" swt_gen="true"></enum>
  <enum name="NSNumberFormatterPadBeforeSuffix" swt_gen="true"></enum>
  <enum name="NSNumberFormatterPercentStyle" swt_gen="true"></enum>
  <enum name="NSNumberFormatterRoundCeiling" swt_gen="true"></enum>
  <enum name="NSNumberFormatterRoundDown" swt_gen="true"></enum>
  <enum name="NSNumberFormatterRoundFloor" swt_gen="true"></enum>
  <enum name="NSNumberFormatterRoundHalfDown" swt_gen="true"></enum>
  <enum name="NSNumberFormatterRoundHalfEven" swt_gen="true"></enum>
  <enum name="NSNumberFormatterRoundHalfUp" swt_gen="true"></enum>
  <enum name="NSNumberFormatterRoundUp" swt_gen="true"></enum>
  <enum name="NSNumberFormatterScientificStyle" swt_gen="true"></enum>
  <enum name="NSNumberFormatterSpellOutStyle" swt_gen="true"></enum>
  <enum name="NSNumericSearch" swt_gen="true"></enum>
  <enum name="NSOSF1OperatingSystem" swt_gen="true"></enum>
  <enum name="NSObjCArrayType" swt_gen="true"></enum>
  <enum name="NSObjCBitfield" swt_gen="true"></enum>
  <enum name="NSObjCBoolType" swt_gen="true"></enum>
  <enum name="NSObjCCharType" swt_gen="true"></enum>
  <enum name="NSObjCDoubleType" swt_gen="true"></enum>
  <enum name="NSObjCFloatType" swt_gen="true"></enum>
  <enum name="NSObjCLongType" swt_gen="true"></enum>
  <enum name="NSObjCLonglongType" swt_gen="true"></enum>
  <enum name="NSObjCNoType" swt_gen="true"></enum>
  <enum name="NSObjCObjectType" swt_gen="true"></enum>
  <enum name="NSObjCPointerType" swt_gen="true"></enum>
  <enum name="NSObjCSelectorType" swt_gen="true"></enum>
  <enum name="NSObjCShortType" swt_gen="true"></enum>
  <enum name="NSObjCStringType" swt_gen="true"></enum>
  <enum name="NSObjCStructType" swt_gen="true"></enum>
  <enum name="NSObjCUnionType" swt_gen="true"></enum>
  <enum name="NSObjCVoidType" swt_gen="true"></enum>
  <enum name="NSObjectAutoreleasedEvent" swt_gen="true"></enum>
  <enum name="NSObjectExtraRefDecrementedEvent" swt_gen="true"></enum>
  <enum name="NSObjectExtraRefIncrementedEvent" swt_gen="true"></enum>
  <enum name="NSObjectInternalRefDecrementedEvent" swt_gen="true"></enum>
  <enum name="NSObjectInternalRefIncrementedEvent" swt_gen="true"></enum>
  <enum name="NSOpenStepUnicodeReservedBase" swt_gen="true"></enum>
  <enum name="NSOperationNotSupportedForKeyScriptError" swt_gen="true"></enum>
  <enum name="NSOperationNotSupportedForKeySpecifierError" swt_gen="true"></enum>
  <enum name="NSOperationQueueDefaultMaxConcurrentOperationCount" swt_gen="true"></enum>
  <enum name="NSOperationQueuePriorityHigh" swt_gen="true"></enum>
  <enum name="NSOperationQueuePriorityLow" swt_gen="true"></enum>
  <enum name="NSOperationQueuePriorityNormal" swt_gen="true"></enum>
  <enum name="NSOperationQueuePriorityVeryHigh" swt_gen="true"></enum>
  <enum name="NSOperationQueuePriorityVeryLow" swt_gen="true"></enum>
  <enum name="NSOrPredicateType" swt_gen="true"></enum>
  <enum name="NSOrderedAscending" swt_gen="true"></enum>
  <enum name="NSOrderedDescending" swt_gen="true"></enum>
  <enum name="NSOrderedSame" swt_gen="true"></enum>
  <enum name="NSPointerFunctionsCStringPersonality" swt_gen="true"></enum>
  <enum name="NSPointerFunctionsCopyIn" swt_gen="true"></enum>
  <enum name="NSPointerFunctionsIntegerPersonality" swt_gen="true"></enum>
  <enum name="NSPointerFunctionsMachVirtualMemory" swt_gen="true"></enum>
  <enum name="NSPointerFunctionsMallocMemory" swt_gen="true"></enum>
  <enum name="NSPointerFunctionsObjectPersonality" swt_gen="true"></enum>
  <enum name="NSPointerFunctionsObjectPointerPersonality" swt_gen="true"></enum>
  <enum name="NSPointerFunctionsOpaqueMemory" swt_gen="true"></enum>
  <enum name="NSPointerFunctionsOpaquePersonality" swt_gen="true"></enum>
  <enum name="NSPointerFunctionsStrongMemory" swt_gen="true"></enum>
  <enum name="NSPointerFunctionsStructPersonality" swt_gen="true"></enum>
  <enum name="NSPointerFunctionsZeroingWeakMemory" swt_gen="true"></enum>
  <enum name="NSPositionAfter" swt_gen="true"></enum>
  <enum name="NSPositionBefore" swt_gen="true"></enum>
  <enum name="NSPositionBeginning" swt_gen="true"></enum>
  <enum name="NSPositionEnd" swt_gen="true"></enum>
  <enum name="NSPositionReplace" swt_gen="true"></enum>
  <enum name="NSPostASAP" swt_gen="true"></enum>
  <enum name="NSPostNow" swt_gen="true"></enum>
  <enum name="NSPostWhenIdle" swt_gen="true"></enum>
  <enum name="NSPropertyListBinaryFormat_v1_0" swt_gen="true"></enum>
  <enum name="NSPropertyListImmutable" swt_gen="true"></enum>
  <enum name="NSPropertyListMutableContainers" swt_gen="true"></enum>
  <enum name="NSPropertyListMutableContainersAndLeaves" swt_gen="true"></enum>
  <enum name="NSPropertyListOpenStepFormat" swt_gen="true"></enum>
  <enum name="NSPropertyListXMLFormat_v1_0" swt_gen="true"></enum>
  <enum name="NSRandomSubelement" swt_gen="true"></enum>
  <enum name="NSReceiverEvaluationScriptError" swt_gen="true"></enum>
  <enum name="NSReceiversCantHandleCommandScriptError" swt_gen="true"></enum>
  <enum name="NSRelativeAfter" swt_gen="true"></enum>
  <enum name="NSRelativeBefore" swt_gen="true"></enum>
  <enum name="NSRequiredArgumentsMissingScriptError" swt_gen="true"></enum>
  <enum name="NSRoundBankers" swt_gen="true"></enum>
  <enum name="NSRoundDown" swt_gen="true"></enum>
  <enum name="NSRoundPlain" swt_gen="true"></enum>
  <enum name="NSRoundUp" swt_gen="true"></enum>
  <enum name="NSSaveOptionsAsk" swt_gen="true"></enum>
  <enum name="NSSaveOptionsNo" swt_gen="true"></enum>
  <enum name="NSSaveOptionsYes" swt_gen="true"></enum>
  <enum name="NSScannedOption" swt_gen="true"></enum>
  <enum name="NSSecondCalendarUnit" swt_gen="true"></enum>
  <enum name="NSShiftJISStringEncoding" swt_gen="true"></enum>
  <enum name="NSSolarisOperatingSystem" swt_gen="true"></enum>
  <enum name="NSStreamEventEndEncountered" swt_gen="true"></enum>
  <enum name="NSStreamEventErrorOccurred" swt_gen="true"></enum>
  <enum name="NSStreamEventHasBytesAvailable" swt_gen="true"></enum>
  <enum name="NSStreamEventHasSpaceAvailable" swt_gen="true"></enum>
  <enum name="NSStreamEventNone" swt_gen="true"></enum>
  <enum name="NSStreamEventOpenCompleted" swt_gen="true"></enum>
  <enum name="NSStreamStatusAtEnd" swt_gen="true"></enum>
  <enum name="NSStreamStatusClosed" swt_gen="true"></enum>
  <enum name="NSStreamStatusError" swt_gen="true"></enum>
  <enum name="NSStreamStatusNotOpen" swt_gen="true"></enum>
  <enum name="NSStreamStatusOpen" swt_gen="true"></enum>
  <enum name="NSStreamStatusOpening" swt_gen="true"></enum>
  <enum name="NSStreamStatusReading" swt_gen="true"></enum>
  <enum name="NSStreamStatusWriting" swt_gen="true"></enum>
  <enum name="NSStringEncodingConversionAllowLossy" swt_gen="true"></enum>
  <enum name="NSStringEncodingConversionExternalRepresentation" swt_gen="true"></enum>
  <enum name="NSSubqueryExpressionType" swt_gen="true"></enum>
  <enum name="NSSunOSOperatingSystem" swt_gen="true"></enum>
  <enum name="NSSymbolStringEncoding" swt_gen="true"></enum>
  <enum name="NSSystemDomainMask" swt_gen="true"></enum>
  <enum name="NSTimeIntervalSince1970" swt_gen="true"></enum>
  <enum name="NSTimeZoneNameStyleDaylightSaving" swt_gen="true"></enum>
  <enum name="NSTimeZoneNameStyleShortDaylightSaving" swt_gen="true"></enum>
  <enum name="NSTimeZoneNameStyleShortStandard" swt_gen="true"></enum>
  <enum name="NSTimeZoneNameStyleStandard" swt_gen="true"></enum>
  <enum name="NSUIntegerMax" swt_gen="true"></enum>
  <enum name="NSURLCacheStorageAllowed" swt_gen="true"></enum>
  <enum name="NSURLCacheStorageAllowedInMemoryOnly" swt_gen="true"></enum>
  <enum name="NSURLCacheStorageNotAllowed" swt_gen="true"></enum>
  <enum name="NSURLCredentialPersistenceForSession" swt_gen="true"></enum>
  <enum name="NSURLCredentialPersistenceNone" swt_gen="true"></enum>
  <enum name="NSURLCredentialPersistencePermanent" swt_gen="true"></enum>
  <enum name="NSURLErrorBadServerResponse" swt_gen="true"></enum>
  <enum name="NSURLErrorBadURL" swt_gen="true"></enum>
  <enum name="NSURLErrorCancelled" swt_gen="true"></enum>
  <enum name="NSURLErrorCannotCloseFile" swt_gen="true"></enum>
  <enum name="NSURLErrorCannotConnectToHost" swt_gen="true"></enum>
  <enum name="NSURLErrorCannotCreateFile" swt_gen="true"></enum>
  <enum name="NSURLErrorCannotDecodeContentData" swt_gen="true"></enum>
  <enum name="NSURLErrorCannotDecodeRawData" swt_gen="true"></enum>
  <enum name="NSURLErrorCannotFindHost" swt_gen="true"></enum>
  <enum name="NSURLErrorCannotLoadFromNetwork" swt_gen="true"></enum>
  <enum name="NSURLErrorCannotMoveFile" swt_gen="true"></enum>
  <enum name="NSURLErrorCannotOpenFile" swt_gen="true"></enum>
  <enum name="NSURLErrorCannotParseResponse" swt_gen="true"></enum>
  <enum name="NSURLErrorCannotRemoveFile" swt_gen="true"></enum>
  <enum name="NSURLErrorCannotWriteToFile" swt_gen="true"></enum>
  <enum name="NSURLErrorClientCertificateRejected" swt_gen="true"></enum>
  <enum name="NSURLErrorDNSLookupFailed" swt_gen="true"></enum>
  <enum name="NSURLErrorDataLengthExceedsMaximum" swt_gen="true"></enum>
  <enum name="NSURLErrorDownloadDecodingFailedMidStream" swt_gen="true"></enum>
  <enum name="NSURLErrorDownloadDecodingFailedToComplete" swt_gen="true"></enum>
  <enum name="NSURLErrorFileDoesNotExist" swt_gen="true"></enum>
  <enum name="NSURLErrorFileIsDirectory" swt_gen="true"></enum>
  <enum name="NSURLErrorHTTPTooManyRedirects" swt_gen="true"></enum>
  <enum name="NSURLErrorNetworkConnectionLost" swt_gen="true"></enum>
  <enum name="NSURLErrorNoPermissionsToReadFile" swt_gen="true"></enum>
  <enum name="NSURLErrorNotConnectedToInternet" swt_gen="true"></enum>
  <enum name="NSURLErrorRedirectToNonExistentLocation" swt_gen="true"></enum>
  <enum name="NSURLErrorResourceUnavailable" swt_gen="true"></enum>
  <enum name="NSURLErrorSecureConnectionFailed" swt_gen="true"></enum>
  <enum name="NSURLErrorServerCertificateHasBadDate" swt_gen="true"></enum>
  <enum name="NSURLErrorServerCertificateHasUnknownRoot" swt_gen="true"></enum>
  <enum name="NSURLErrorServerCertificateNotYetValid" swt_gen="true"></enum>
  <enum name="NSURLErrorServerCertificateUntrusted" swt_gen="true"></enum>
  <enum name="NSURLErrorTimedOut" swt_gen="true"></enum>
  <enum name="NSURLErrorUnknown" swt_gen="true"></enum>
  <enum name="NSURLErrorUnsupportedURL" swt_gen="true"></enum>
  <enum name="NSURLErrorUserAuthenticationRequired" swt_gen="true"></enum>
  <enum name="NSURLErrorUserCancelledAuthentication" swt_gen="true"></enum>
  <enum name="NSURLErrorZeroByteResource" swt_gen="true"></enum>
  <enum name="NSURLHandleLoadFailed" swt_gen="true"></enum>
  <enum name="NSURLHandleLoadInProgress" swt_gen="true"></enum>
  <enum name="NSURLHandleLoadSucceeded" swt_gen="true"></enum>
  <enum name="NSURLHandleNotLoaded" swt_gen="true"></enum>
  <enum name="NSURLRequestReloadIgnoringCacheData" swt_gen="true"></enum>
  <enum name="NSURLRequestReloadIgnoringLocalAndRemoteCacheData" swt_gen="true"></enum>
  <enum name="NSURLRequestReloadIgnoringLocalCacheData" swt_gen="true"></enum>
  <enum name="NSURLRequestReloadRevalidatingCacheData" swt_gen="true"></enum>
  <enum name="NSURLRequestReturnCacheDataDontLoad" swt_gen="true"></enum>
  <enum name="NSURLRequestReturnCacheDataElseLoad" swt_gen="true"></enum>
  <enum name="NSURLRequestUseProtocolCachePolicy" swt_gen="true"></enum>
  <enum name="NSUTF16BigEndianStringEncoding" swt_gen="true"></enum>
  <enum name="NSUTF16LittleEndianStringEncoding" swt_gen="true"></enum>
  <enum name="NSUTF16StringEncoding" swt_gen="true"></enum>
  <enum name="NSUTF32BigEndianStringEncoding" swt_gen="true"></enum>
  <enum name="NSUTF32LittleEndianStringEncoding" swt_gen="true"></enum>
  <enum name="NSUTF32StringEncoding" swt_gen="true"></enum>
  <enum name="NSUTF8StringEncoding" swt_gen="true"></enum>
  <enum name="NSUncachedRead" swt_gen="true"></enum>
  <enum name="NSUndefinedDateComponent" swt_gen="true"></enum>
  <enum name="NSUndoCloseGroupingRunLoopOrdering" swt_gen="true"></enum>
  <enum name="NSUnicodeStringEncoding" swt_gen="true"></enum>
  <enum name="NSUnionSetExpressionType" swt_gen="true"></enum>
  <enum name="NSUnknownKeyScriptError" swt_gen="true"></enum>
  <enum name="NSUnknownKeySpecifierError" swt_gen="true"></enum>
  <enum name="NSUserCancelledError" swt_gen="true"></enum>
  <enum name="NSUserDirectory" swt_gen="true"></enum>
  <enum name="NSUserDomainMask" swt_gen="true"></enum>
  <enum name="NSValidationErrorMaximum" swt_gen="true"></enum>
  <enum name="NSValidationErrorMinimum" swt_gen="true"></enum>
  <enum name="NSVariableExpressionType" swt_gen="true"></enum>
  <enum name="NSWeekCalendarUnit" swt_gen="true"></enum>
  <enum name="NSWeekdayCalendarUnit" swt_gen="true"></enum>
  <enum name="NSWeekdayOrdinalCalendarUnit" swt_gen="true"></enum>
  <enum name="NSWidthInsensitiveSearch" swt_gen="true"></enum>
  <enum name="NSWindows95OperatingSystem" swt_gen="true"></enum>
  <enum name="NSWindowsCP1250StringEncoding" swt_gen="true"></enum>
  <enum name="NSWindowsCP1251StringEncoding" swt_gen="true"></enum>
  <enum name="NSWindowsCP1252StringEncoding" swt_gen="true"></enum>
  <enum name="NSWindowsCP1253StringEncoding" swt_gen="true"></enum>
  <enum name="NSWindowsCP1254StringEncoding" swt_gen="true"></enum>
  <enum name="NSWindowsNTOperatingSystem" swt_gen="true"></enum>
  <enum name="NSWrapCalendarComponents" swt_gen="true"></enum>
  <enum name="NSXMLAttributeCDATAKind" swt_gen="true"></enum>
  <enum name="NSXMLAttributeDeclarationKind" swt_gen="true"></enum>
  <enum name="NSXMLAttributeEntitiesKind" swt_gen="true"></enum>
  <enum name="NSXMLAttributeEntityKind" swt_gen="true"></enum>
  <enum name="NSXMLAttributeEnumerationKind" swt_gen="true"></enum>
  <enum name="NSXMLAttributeIDKind" swt_gen="true"></enum>
  <enum name="NSXMLAttributeIDRefKind" swt_gen="true"></enum>
  <enum name="NSXMLAttributeIDRefsKind" swt_gen="true"></enum>
  <enum name="NSXMLAttributeKind" swt_gen="true"></enum>
  <enum name="NSXMLAttributeNMTokenKind" swt_gen="true"></enum>
  <enum name="NSXMLAttributeNMTokensKind" swt_gen="true"></enum>
  <enum name="NSXMLAttributeNotationKind" swt_gen="true"></enum>
  <enum name="NSXMLCommentKind" swt_gen="true"></enum>
  <enum name="NSXMLDTDKind" swt_gen="true"></enum>
  <enum name="NSXMLDocumentHTMLKind" swt_gen="true"></enum>
  <enum name="NSXMLDocumentIncludeContentTypeDeclaration" swt_gen="true"></enum>
  <enum name="NSXMLDocumentKind" swt_gen="true"></enum>
  <enum name="NSXMLDocumentTextKind" swt_gen="true"></enum>
  <enum name="NSXMLDocumentTidyHTML" swt_gen="true"></enum>
  <enum name="NSXMLDocumentTidyXML" swt_gen="true"></enum>
  <enum name="NSXMLDocumentValidate" swt_gen="true"></enum>
  <enum name="NSXMLDocumentXHTMLKind" swt_gen="true"></enum>
  <enum name="NSXMLDocumentXInclude" swt_gen="true"></enum>
  <enum name="NSXMLDocumentXMLKind" swt_gen="true"></enum>
  <enum name="NSXMLElementDeclarationAnyKind" swt_gen="true"></enum>
  <enum name="NSXMLElementDeclarationElementKind" swt_gen="true"></enum>
  <enum name="NSXMLElementDeclarationEmptyKind" swt_gen="true"></enum>
  <enum name="NSXMLElementDeclarationKind" swt_gen="true"></enum>
  <enum name="NSXMLElementDeclarationMixedKind" swt_gen="true"></enum>
  <enum name="NSXMLElementDeclarationUndefinedKind" swt_gen="true"></enum>
  <enum name="NSXMLElementKind" swt_gen="true"></enum>
  <enum name="NSXMLEntityDeclarationKind" swt_gen="true"></enum>
  <enum name="NSXMLEntityGeneralKind" swt_gen="true"></enum>
  <enum name="NSXMLEntityParameterKind" swt_gen="true"></enum>
  <enum name="NSXMLEntityParsedKind" swt_gen="true"></enum>
  <enum name="NSXMLEntityPredefined" swt_gen="true"></enum>
  <enum name="NSXMLEntityUnparsedKind" swt_gen="true"></enum>
  <enum name="NSXMLInvalidKind" swt_gen="true"></enum>
  <enum name="NSXMLNamespaceKind" swt_gen="true"></enum>
  <enum name="NSXMLNodeCompactEmptyElement" swt_gen="true"></enum>
  <enum name="NSXMLNodeExpandEmptyElement" swt_gen="true"></enum>
  <enum name="NSXMLNodeIsCDATA" swt_gen="true"></enum>
  <enum name="NSXMLNodeOptionsNone" swt_gen="true"></enum>
  <enum name="NSXMLNodePreserveAll" swt_gen="true"></enum>
  <enum name="NSXMLNodePreserveAttributeOrder" swt_gen="true"></enum>
  <enum name="NSXMLNodePreserveCDATA" swt_gen="true"></enum>
  <enum name="NSXMLNodePreserveCharacterReferences" swt_gen="true"></enum>
  <enum name="NSXMLNodePreserveDTD" swt_gen="true"></enum>
  <enum name="NSXMLNodePreserveEmptyElements" swt_gen="true"></enum>
  <enum name="NSXMLNodePreserveEntities" swt_gen="true"></enum>
  <enum name="NSXMLNodePreserveNamespaceOrder" swt_gen="true"></enum>
  <enum name="NSXMLNodePreservePrefixes" swt_gen="true"></enum>
  <enum name="NSXMLNodePreserveQuotes" swt_gen="true"></enum>
  <enum name="NSXMLNodePreserveWhitespace" swt_gen="true"></enum>
  <enum name="NSXMLNodePrettyPrint" swt_gen="true"></enum>
  <enum name="NSXMLNodeUseDoubleQuotes" swt_gen="true"></enum>
  <enum name="NSXMLNodeUseSingleQuotes" swt_gen="true"></enum>
  <enum name="NSXMLNotationDeclarationKind" swt_gen="true"></enum>
  <enum name="NSXMLParserAttributeHasNoValueError" swt_gen="true"></enum>
  <enum name="NSXMLParserAttributeListNotFinishedError" swt_gen="true"></enum>
  <enum name="NSXMLParserAttributeListNotStartedError" swt_gen="true"></enum>
  <enum name="NSXMLParserAttributeNotFinishedError" swt_gen="true"></enum>
  <enum name="NSXMLParserAttributeNotStartedError" swt_gen="true"></enum>
  <enum name="NSXMLParserAttributeRedefinedError" swt_gen="true"></enum>
  <enum name="NSXMLParserCDATANotFinishedError" swt_gen="true"></enum>
  <enum name="NSXMLParserCharacterRefAtEOFError" swt_gen="true"></enum>
  <enum name="NSXMLParserCharacterRefInDTDError" swt_gen="true"></enum>
  <enum name="NSXMLParserCharacterRefInEpilogError" swt_gen="true"></enum>
  <enum name="NSXMLParserCharacterRefInPrologError" swt_gen="true"></enum>
  <enum name="NSXMLParserCommentContainsDoubleHyphenError" swt_gen="true"></enum>
  <enum name="NSXMLParserCommentNotFinishedError" swt_gen="true"></enum>
  <enum name="NSXMLParserConditionalSectionNotFinishedError" swt_gen="true"></enum>
  <enum name="NSXMLParserConditionalSectionNotStartedError" swt_gen="true"></enum>
  <enum name="NSXMLParserDOCTYPEDeclNotFinishedError" swt_gen="true"></enum>
  <enum name="NSXMLParserDelegateAbortedParseError" swt_gen="true"></enum>
  <enum name="NSXMLParserDocumentStartError" swt_gen="true"></enum>
  <enum name="NSXMLParserElementContentDeclNotFinishedError" swt_gen="true"></enum>
  <enum name="NSXMLParserElementContentDeclNotStartedError" swt_gen="true"></enum>
  <enum name="NSXMLParserEmptyDocumentError" swt_gen="true"></enum>
  <enum name="NSXMLParserEncodingNotSupportedError" swt_gen="true"></enum>
  <enum name="NSXMLParserEntityBoundaryError" swt_gen="true"></enum>
  <enum name="NSXMLParserEntityIsExternalError" swt_gen="true"></enum>
  <enum name="NSXMLParserEntityIsParameterError" swt_gen="true"></enum>
  <enum name="NSXMLParserEntityNotFinishedError" swt_gen="true"></enum>
  <enum name="NSXMLParserEntityNotStartedError" swt_gen="true"></enum>
  <enum name="NSXMLParserEntityRefAtEOFError" swt_gen="true"></enum>
  <enum name="NSXMLParserEntityRefInDTDError" swt_gen="true"></enum>
  <enum name="NSXMLParserEntityRefInEpilogError" swt_gen="true"></enum>
  <enum name="NSXMLParserEntityRefInPrologError" swt_gen="true"></enum>
  <enum name="NSXMLParserEntityRefLoopError" swt_gen="true"></enum>
  <enum name="NSXMLParserEntityReferenceMissingSemiError" swt_gen="true"></enum>
  <enum name="NSXMLParserEntityReferenceWithoutNameError" swt_gen="true"></enum>
  <enum name="NSXMLParserEntityValueRequiredError" swt_gen="true"></enum>
  <enum name="NSXMLParserEqualExpectedError" swt_gen="true"></enum>
  <enum name="NSXMLParserExternalStandaloneEntityError" swt_gen="true"></enum>
  <enum name="NSXMLParserExternalSubsetNotFinishedError" swt_gen="true"></enum>
  <enum name="NSXMLParserExtraContentError" swt_gen="true"></enum>
  <enum name="NSXMLParserGTRequiredError" swt_gen="true"></enum>
  <enum name="NSXMLParserInternalError" swt_gen="true"></enum>
  <enum name="NSXMLParserInvalidCharacterError" swt_gen="true"></enum>
  <enum name="NSXMLParserInvalidCharacterInEntityError" swt_gen="true"></enum>
  <enum name="NSXMLParserInvalidCharacterRefError" swt_gen="true"></enum>
  <enum name="NSXMLParserInvalidConditionalSectionError" swt_gen="true"></enum>
  <enum name="NSXMLParserInvalidDecimalCharacterRefError" swt_gen="true"></enum>
  <enum name="NSXMLParserInvalidEncodingError" swt_gen="true"></enum>
  <enum name="NSXMLParserInvalidEncodingNameError" swt_gen="true"></enum>
  <enum name="NSXMLParserInvalidHexCharacterRefError" swt_gen="true"></enum>
  <enum name="NSXMLParserInvalidURIError" swt_gen="true"></enum>
  <enum name="NSXMLParserLTRequiredError" swt_gen="true"></enum>
  <enum name="NSXMLParserLTSlashRequiredError" swt_gen="true"></enum>
  <enum name="NSXMLParserLessThanSymbolInAttributeError" swt_gen="true"></enum>
  <enum name="NSXMLParserLiteralNotFinishedError" swt_gen="true"></enum>
  <enum name="NSXMLParserLiteralNotStartedError" swt_gen="true"></enum>
  <enum name="NSXMLParserMisplacedCDATAEndStringError" swt_gen="true"></enum>
  <enum name="NSXMLParserMisplacedXMLDeclarationError" swt_gen="true"></enum>
  <enum name="NSXMLParserMixedContentDeclNotFinishedError" swt_gen="true"></enum>
  <enum name="NSXMLParserMixedContentDeclNotStartedError" swt_gen="true"></enum>
  <enum name="NSXMLParserNAMERequiredError" swt_gen="true"></enum>
  <enum name="NSXMLParserNMTOKENRequiredError" swt_gen="true"></enum>
  <enum name="NSXMLParserNamespaceDeclarationError" swt_gen="true"></enum>
  <enum name="NSXMLParserNoDTDError" swt_gen="true"></enum>
  <enum name="NSXMLParserNotWellBalancedError" swt_gen="true"></enum>
  <enum name="NSXMLParserNotationNotFinishedError" swt_gen="true"></enum>
  <enum name="NSXMLParserNotationNotStartedError" swt_gen="true"></enum>
  <enum name="NSXMLParserOutOfMemoryError" swt_gen="true"></enum>
  <enum name="NSXMLParserPCDATARequiredError" swt_gen="true"></enum>
  <enum name="NSXMLParserParsedEntityRefAtEOFError" swt_gen="true"></enum>
  <enum name="NSXMLParserParsedEntityRefInEpilogError" swt_gen="true"></enum>
  <enum name="NSXMLParserParsedEntityRefInInternalError" swt_gen="true"></enum>
  <enum name="NSXMLParserParsedEntityRefInInternalSubsetError" swt_gen="true"></enum>
  <enum name="NSXMLParserParsedEntityRefInPrologError" swt_gen="true"></enum>
  <enum name="NSXMLParserParsedEntityRefMissingSemiError" swt_gen="true"></enum>
  <enum name="NSXMLParserParsedEntityRefNoNameError" swt_gen="true"></enum>
  <enum name="NSXMLParserPrematureDocumentEndError" swt_gen="true"></enum>
  <enum name="NSXMLParserProcessingInstructionNotFinishedError" swt_gen="true"></enum>
  <enum name="NSXMLParserProcessingInstructionNotStartedError" swt_gen="true"></enum>
  <enum name="NSXMLParserPublicIdentifierRequiredError" swt_gen="true"></enum>
  <enum name="NSXMLParserSeparatorRequiredError" swt_gen="true"></enum>
  <enum name="NSXMLParserSpaceRequiredError" swt_gen="true"></enum>
  <enum name="NSXMLParserStandaloneValueError" swt_gen="true"></enum>
  <enum name="NSXMLParserStringNotClosedError" swt_gen="true"></enum>
  <enum name="NSXMLParserStringNotStartedError" swt_gen="true"></enum>
  <enum name="NSXMLParserTagNameMismatchError" swt_gen="true"></enum>
  <enum name="NSXMLParserURIFragmentError" swt_gen="true"></enum>
  <enum name="NSXMLParserURIRequiredError" swt_gen="true"></enum>
  <enum name="NSXMLParserUndeclaredEntityError" swt_gen="true"></enum>
  <enum name="NSXMLParserUnfinishedTagError" swt_gen="true"></enum>
  <enum name="NSXMLParserUnknownEncodingError" swt_gen="true"></enum>
  <enum name="NSXMLParserUnparsedEntityError" swt_gen="true"></enum>
  <enum name="NSXMLParserXMLDeclNotFinishedError" swt_gen="true"></enum>
  <enum name="NSXMLParserXMLDeclNotStartedError" swt_gen="true"></enum>
  <enum name="NSXMLProcessingInstructionKind" swt_gen="true"></enum>
  <enum name="NSXMLTextKind" swt_gen="true"></enum>
  <enum name="NSYearCalendarUnit" swt_gen="true"></enum>
  <enum name="NS_BigEndian" swt_gen="true"></enum>
  <enum name="NS_LittleEndian" swt_gen="true"></enum>
  <enum name="NS_UNICHAR_IS_EIGHT_BIT" swt_gen="true"></enum>
  <enum name="NS_UnknownByteOrder" swt_gen="true"></enum>
  <function name="NSAllHashTableObjects">
    <arg name="table"></arg>
    <retval></retval>
  </function>
  <function name="NSAllMapTableKeys">
    <arg name="table"></arg>
    <retval></retval>
  </function>
  <function name="NSAllMapTableValues">
    <arg name="table"></arg>
    <retval></retval>
  </function>
  <function name="NSAllocateCollectable">
    <arg name="size"></arg>
    <arg name="options"></arg>
    <retval></retval>
  </function>
  <function name="NSAllocateMemoryPages">
    <arg name="bytes"></arg>
    <retval></retval>
  </function>
  <function name="NSAllocateObject">
    <arg name="aClass"></arg>
    <arg name="extraBytes"></arg>
    <arg name="zone"></arg>
    <retval></retval>
  </function>
  <function name="NSClassFromString">
    <arg name="aClassName"></arg>
    <retval></retval>
  </function>
  <function name="NSCompareHashTables">
    <arg name="table1"></arg>
    <arg name="table2"></arg>
    <retval></retval>
  </function>
  <function name="NSCompareMapTables">
    <arg name="table1"></arg>
    <arg name="table2"></arg>
    <retval></retval>
  </function>
  <function name="NSContainsRect">
    <arg name="aRect"></arg>
    <arg name="bRect"></arg>
    <retval></retval>
  </function>
  <function name="NSConvertHostDoubleToSwapped">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSConvertHostFloatToSwapped">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSConvertSwappedDoubleToHost">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSConvertSwappedFloatToHost">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSCopyHashTableWithZone">
    <arg name="table"></arg>
    <arg name="zone"></arg>
    <retval></retval>
  </function>
  <function name="NSCopyMapTableWithZone">
    <arg name="table"></arg>
    <arg name="zone"></arg>
    <retval></retval>
  </function>
  <function name="NSCopyMemoryPages">
    <arg name="source"></arg>
    <arg name="dest"></arg>
    <arg name="bytes"></arg>
  </function>
  <function name="NSCopyObject">
    <arg name="object"></arg>
    <arg name="extraBytes"></arg>
    <arg name="zone"></arg>
    <retval></retval>
  </function>
  <function name="NSCountFrames">
    <retval></retval>
  </function>
  <function name="NSCountHashTable">
    <arg name="table"></arg>
    <retval></retval>
  </function>
  <function name="NSCountMapTable">
    <arg name="table"></arg>
    <retval></retval>
  </function>
  <function name="NSCreateHashTable">
    <arg name="callBacks"></arg>
    <arg name="capacity"></arg>
    <retval></retval>
  </function>
  <function name="NSCreateHashTableWithZone">
    <arg name="callBacks"></arg>
    <arg name="capacity"></arg>
    <arg name="zone"></arg>
    <retval></retval>
  </function>
  <function name="NSCreateMapTable">
    <arg name="keyCallBacks"></arg>
    <arg name="valueCallBacks"></arg>
    <arg name="capacity"></arg>
    <retval></retval>
  </function>
  <function name="NSCreateMapTableWithZone">
    <arg name="keyCallBacks"></arg>
    <arg name="valueCallBacks"></arg>
    <arg name="capacity"></arg>
    <arg name="zone"></arg>
    <retval></retval>
  </function>
  <function name="NSCreateZone">
    <arg name="startSize"></arg>
    <arg name="granularity"></arg>
    <arg name="canFree"></arg>
    <retval></retval>
  </function>
  <function name="NSDeallocateMemoryPages">
    <arg name="ptr"></arg>
    <arg name="bytes"></arg>
  </function>
  <function name="NSDeallocateObject">
    <arg name="object"></arg>
  </function>
  <function name="NSDecimalAdd">
    <arg name="result"></arg>
    <arg name="leftOperand"></arg>
    <arg name="rightOperand"></arg>
    <arg name="roundingMode"></arg>
    <retval></retval>
  </function>
  <function name="NSDecimalCompact">
    <arg name="number"></arg>
  </function>
  <function name="NSDecimalCompare">
    <arg name="leftOperand"></arg>
    <arg name="rightOperand"></arg>
    <retval></retval>
  </function>
  <function name="NSDecimalCopy">
    <arg name="destination"></arg>
    <arg name="source"></arg>
  </function>
  <function name="NSDecimalDivide">
    <arg name="result"></arg>
    <arg name="leftOperand"></arg>
    <arg name="rightOperand"></arg>
    <arg name="roundingMode"></arg>
    <retval></retval>
  </function>
  <function name="NSDecimalIsNotANumber">
    <arg name="dcm"></arg>
    <retval></retval>
  </function>
  <function name="NSDecimalMultiply">
    <arg name="result"></arg>
    <arg name="leftOperand"></arg>
    <arg name="rightOperand"></arg>
    <arg name="roundingMode"></arg>
    <retval></retval>
  </function>
  <function name="NSDecimalMultiplyByPowerOf10">
    <arg name="result"></arg>
    <arg name="number"></arg>
    <arg name="power"></arg>
    <arg name="roundingMode"></arg>
    <retval></retval>
  </function>
  <function name="NSDecimalNormalize">
    <arg name="number1"></arg>
    <arg name="number2"></arg>
    <arg name="roundingMode"></arg>
    <retval></retval>
  </function>
  <function name="NSDecimalPower">
    <arg name="result"></arg>
    <arg name="number"></arg>
    <arg name="power"></arg>
    <arg name="roundingMode"></arg>
    <retval></retval>
  </function>
  <function name="NSDecimalRound">
    <arg name="result"></arg>
    <arg name="number"></arg>
    <arg name="scale"></arg>
    <arg name="roundingMode"></arg>
  </function>
  <function name="NSDecimalString">
    <arg name="dcm"></arg>
    <arg name="locale"></arg>
    <retval></retval>
  </function>
  <function name="NSDecimalSubtract">
    <arg name="result"></arg>
    <arg name="leftOperand"></arg>
    <arg name="rightOperand"></arg>
    <arg name="roundingMode"></arg>
    <retval></retval>
  </function>
  <function name="NSDecrementExtraRefCountWasZero">
    <arg name="object"></arg>
    <retval></retval>
  </function>
  <function name="NSDefaultMallocZone">
    <retval></retval>
  </function>
  <function name="NSDivideRect">
    <arg name="inRect"></arg>
    <arg name="slice"></arg>
    <arg name="rem"></arg>
    <arg name="amount"></arg>
    <arg name="edge"></arg>
  </function>
  <function name="NSEndHashTableEnumeration">
    <arg name="enumerator"></arg>
  </function>
  <function name="NSEndMapTableEnumeration">
    <arg name="enumerator"></arg>
  </function>
  <function name="NSEnumerateHashTable">
    <arg name="table"></arg>
    <retval></retval>
  </function>
  <function name="NSEnumerateMapTable">
    <arg name="table"></arg>
    <retval></retval>
  </function>
  <function name="NSEqualPoints">
    <arg name="aPoint"></arg>
    <arg name="bPoint"></arg>
    <retval></retval>
  </function>
  <function name="NSEqualRanges">
    <arg name="range1"></arg>
    <arg name="range2"></arg>
    <retval></retval>
  </function>
  <function name="NSEqualRects">
    <arg name="aRect"></arg>
    <arg name="bRect"></arg>
    <retval></retval>
  </function>
  <function name="NSEqualSizes">
    <arg name="aSize"></arg>
    <arg name="bSize"></arg>
    <retval></retval>
  </function>
  <function name="NSExtraRefCount">
    <arg name="object"></arg>
    <retval></retval>
  </function>
  <function name="NSFileTypeForHFSTypeCode" swt_gen="true">
    <arg name="hfsFileTypeCode" swt_gen="true"></arg>
    <retval swt_gen="true"></retval>
  </function>
  <function name="NSFrameAddress">
    <arg name="frame"></arg>
    <retval></retval>
  </function>
  <function name="NSFreeHashTable">
    <arg name="table"></arg>
  </function>
  <function name="NSFreeMapTable">
    <arg name="table"></arg>
  </function>
  <function name="NSFullUserName">
    <retval></retval>
  </function>
  <function name="NSGetSizeAndAlignment">
    <arg name="typePtr"></arg>
    <arg name="sizep"></arg>
    <arg name="alignp"></arg>
    <retval></retval>
  </function>
  <function name="NSGetUncaughtExceptionHandler">
    <retval>
      <arg></arg>
      <retval></retval>
    </retval>
  </function>
  <function name="NSHFSTypeCodeFromFileType">
    <arg name="fileTypeString"></arg>
    <retval></retval>
  </function>
  <function name="NSHFSTypeOfFile">
    <arg name="fullFilePath"></arg>
    <retval></retval>
  </function>
  <function name="NSHashGet">
    <arg name="table"></arg>
    <arg name="pointer"></arg>
    <retval></retval>
  </function>
  <function name="NSHashInsert">
    <arg name="table"></arg>
    <arg name="pointer"></arg>
  </function>
  <function name="NSHashInsertIfAbsent">
    <arg name="table"></arg>
    <arg name="pointer"></arg>
    <retval></retval>
  </function>
  <function name="NSHashInsertKnownAbsent">
    <arg name="table"></arg>
    <arg name="pointer"></arg>
  </function>
  <function name="NSHashRemove">
    <arg name="table"></arg>
    <arg name="pointer"></arg>
  </function>
  <function name="NSHeight">
    <arg name="aRect"></arg>
    <retval></retval>
  </function>
  <function name="NSHomeDirectory">
    <retval></retval>
  </function>
  <function name="NSHomeDirectoryForUser">
    <arg name="userName"></arg>
    <retval></retval>
  </function>
  <function name="NSHostByteOrder">
    <retval></retval>
  </function>
  <function name="NSIncrementExtraRefCount">
    <arg name="object"></arg>
  </function>
  <function name="NSInsetRect">
    <arg name="aRect"></arg>
    <arg name="dX"></arg>
    <arg name="dY"></arg>
    <retval></retval>
  </function>
  <function name="NSIntegralRect">
    <arg name="aRect"></arg>
    <retval></retval>
  </function>
  <function name="NSIntersectionRange">
    <arg name="range1"></arg>
    <arg name="range2"></arg>
    <retval></retval>
  </function>
  <function name="NSIntersectionRect">
    <arg name="aRect"></arg>
    <arg name="bRect"></arg>
    <retval></retval>
  </function>
  <function name="NSIntersectsRect">
    <arg name="aRect"></arg>
    <arg name="bRect"></arg>
    <retval></retval>
  </function>
  <function name="NSIsEmptyRect">
    <arg name="aRect"></arg>
    <retval></retval>
  </function>
  <function name="NSIsFreedObject">
    <arg name="anObject"></arg>
    <retval></retval>
  </function>
  <function name="NSLocationInRange">
    <arg name="loc"></arg>
    <arg name="range"></arg>
    <retval></retval>
  </function>
  <function name="NSLog">
    <arg name="format"></arg>
  </function>
  <function name="NSLogPageSize">
    <retval></retval>
  </function>
  <function name="NSLogv">
    <arg name="format"></arg>
    <arg name="args"></arg>
  </function>
  <function name="NSMakeCollectable">
    <arg name="cf"></arg>
    <retval></retval>
  </function>
  <function name="NSMakePoint">
    <arg name="x"></arg>
    <arg name="y"></arg>
    <retval></retval>
  </function>
  <function name="NSMakeRange">
    <arg name="loc"></arg>
    <arg name="len"></arg>
    <retval></retval>
  </function>
  <function name="NSMakeRect">
    <arg name="x"></arg>
    <arg name="y"></arg>
    <arg name="w"></arg>
    <arg name="h"></arg>
    <retval></retval>
  </function>
  <function name="NSMakeSize">
    <arg name="w"></arg>
    <arg name="h"></arg>
    <retval></retval>
  </function>
  <function name="NSMapGet">
    <arg name="table"></arg>
    <arg name="key"></arg>
    <retval></retval>
  </function>
  <function name="NSMapInsert">
    <arg name="table"></arg>
    <arg name="key"></arg>
    <arg name="value"></arg>
  </function>
  <function name="NSMapInsertIfAbsent">
    <arg name="table"></arg>
    <arg name="key"></arg>
    <arg name="value"></arg>
    <retval></retval>
  </function>
  <function name="NSMapInsertKnownAbsent">
    <arg name="table"></arg>
    <arg name="key"></arg>
    <arg name="value"></arg>
  </function>
  <function name="NSMapMember">
    <arg name="table"></arg>
    <arg name="key"></arg>
    <arg name="originalKey"></arg>
    <arg name="value"></arg>
    <retval></retval>
  </function>
  <function name="NSMapRemove">
    <arg name="table"></arg>
    <arg name="key"></arg>
  </function>
  <function name="NSMaxRange">
    <arg name="range"></arg>
    <retval></retval>
  </function>
  <function name="NSMaxX">
    <arg name="aRect"></arg>
    <retval></retval>
  </function>
  <function name="NSMaxY">
    <arg name="aRect"></arg>
    <retval></retval>
  </function>
  <function name="NSMidX">
    <arg name="aRect"></arg>
    <retval></retval>
  </function>
  <function name="NSMidY">
    <arg name="aRect"></arg>
    <retval></retval>
  </function>
  <function name="NSMinX">
    <arg name="aRect"></arg>
    <retval></retval>
  </function>
  <function name="NSMinY">
    <arg name="aRect"></arg>
    <retval></retval>
  </function>
  <function name="NSMouseInRect">
    <arg name="aPoint"></arg>
    <arg name="aRect"></arg>
    <arg name="flipped"></arg>
    <retval></retval>
  </function>
  <function name="NSNextHashEnumeratorItem">
    <arg name="enumerator"></arg>
    <retval></retval>
  </function>
  <function name="NSNextMapEnumeratorPair">
    <arg name="enumerator"></arg>
    <arg name="key"></arg>
    <arg name="value"></arg>
    <retval></retval>
  </function>
  <function name="NSOffsetRect">
    <arg name="aRect"></arg>
    <arg name="dX"></arg>
    <arg name="dY"></arg>
    <retval></retval>
  </function>
  <function name="NSOpenStepRootDirectory">
    <retval></retval>
  </function>
  <function name="NSPageSize">
    <retval></retval>
  </function>
  <function name="NSPointFromCGPoint">
    <arg name="cgpoint"></arg>
    <retval></retval>
  </function>
  <function name="NSPointFromString">
    <arg name="aString"></arg>
    <retval></retval>
  </function>
  <function name="NSPointInRect">
    <arg name="aPoint"></arg>
    <arg name="aRect"></arg>
    <retval></retval>
  </function>
  <function name="NSPointToCGPoint">
    <arg name="nspoint"></arg>
    <retval></retval>
  </function>
  <function name="NSProtocolFromString">
    <arg name="namestr"></arg>
    <retval></retval>
  </function>
  <function name="NSRangeFromString">
    <arg name="aString"></arg>
    <retval></retval>
  </function>
  <function name="NSRealMemoryAvailable">
    <retval></retval>
  </function>
  <function name="NSReallocateCollectable">
    <arg name="ptr"></arg>
    <arg name="size"></arg>
    <arg name="options"></arg>
    <retval></retval>
  </function>
  <function name="NSRecordAllocationEvent">
    <arg name="eventType"></arg>
    <arg name="object"></arg>
  </function>
  <function name="NSRectFromCGRect">
    <arg name="cgrect"></arg>
    <retval></retval>
  </function>
  <function name="NSRectFromString">
    <arg name="aString"></arg>
    <retval></retval>
  </function>
  <function name="NSRectToCGRect">
    <arg name="nsrect"></arg>
    <retval></retval>
  </function>
  <function name="NSRecycleZone">
    <arg name="zone"></arg>
  </function>
  <function name="NSResetHashTable">
    <arg name="table"></arg>
  </function>
  <function name="NSResetMapTable">
    <arg name="table"></arg>
  </function>
  <function name="NSReturnAddress">
    <arg name="frame"></arg>
    <retval></retval>
  </function>
  <function name="NSRoundDownToMultipleOfPageSize">
    <arg name="bytes"></arg>
    <retval></retval>
  </function>
  <function name="NSRoundUpToMultipleOfPageSize">
    <arg name="bytes"></arg>
    <retval></retval>
  </function>
  <function name="NSSearchPathForDirectoriesInDomains" swt_gen="true">
    <arg name="directory" swt_gen="true"></arg>
    <arg name="domainMask" swt_gen="true"></arg>
    <arg name="expandTilde" swt_gen="true"></arg>
    <retval swt_gen="true"></retval>
  </function>
  <function name="NSSelectorFromString">
    <arg name="aSelectorName"></arg>
    <retval></retval>
  </function>
  <function name="NSSetUncaughtExceptionHandler">
    <arg name="dummy">
      <arg></arg>
      <retval></retval>
    </arg>
  </function>
  <function name="NSSetZoneName">
    <arg name="zone"></arg>
    <arg name="name"></arg>
  </function>
  <function name="NSShouldRetainWithZone">
    <arg name="anObject"></arg>
    <arg name="requestedZone"></arg>
    <retval></retval>
  </function>
  <function name="NSSizeFromCGSize">
    <arg name="cgsize"></arg>
    <retval></retval>
  </function>
  <function name="NSSizeFromString">
    <arg name="aString"></arg>
    <retval></retval>
  </function>
  <function name="NSSizeToCGSize">
    <arg name="nssize"></arg>
    <retval></retval>
  </function>
  <function name="NSStringFromClass">
    <arg name="aClass"></arg>
    <retval></retval>
  </function>
  <function name="NSStringFromHashTable">
    <arg name="table"></arg>
    <retval></retval>
  </function>
  <function name="NSStringFromMapTable">
    <arg name="table"></arg>
    <retval></retval>
  </function>
  <function name="NSStringFromPoint">
    <arg name="aPoint"></arg>
    <retval></retval>
  </function>
  <function name="NSStringFromProtocol">
    <arg name="proto"></arg>
    <retval></retval>
  </function>
  <function name="NSStringFromRange">
    <arg name="range"></arg>
    <retval></retval>
  </function>
  <function name="NSStringFromRect">
    <arg name="aRect"></arg>
    <retval></retval>
  </function>
  <function name="NSStringFromSelector">
    <arg name="aSelector"></arg>
    <retval></retval>
  </function>
  <function name="NSStringFromSize">
    <arg name="aSize"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapBigDoubleToHost">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapBigFloatToHost">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapBigIntToHost">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapBigLongLongToHost">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapBigLongToHost">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapBigShortToHost">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapDouble">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapFloat">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapHostDoubleToBig">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapHostDoubleToLittle">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapHostFloatToBig">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapHostFloatToLittle">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapHostIntToBig">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapHostIntToLittle">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapHostLongLongToBig">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapHostLongLongToLittle">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapHostLongToBig">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapHostLongToLittle">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapHostShortToBig">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapHostShortToLittle">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapInt">
    <arg name="inv"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapLittleDoubleToHost">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapLittleFloatToHost">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapLittleIntToHost">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapLittleLongLongToHost">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapLittleLongToHost">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapLittleShortToHost">
    <arg name="x"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapLong">
    <arg name="inv"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapLongLong">
    <arg name="inv"></arg>
    <retval></retval>
  </function>
  <function name="NSSwapShort">
    <arg name="inv"></arg>
    <retval></retval>
  </function>
  <function name="NSTemporaryDirectory" swt_gen="true">
    <retval swt_gen="true"></retval>
  </function>
  <function name="NSUnionRange">
    <arg name="range1"></arg>
    <arg name="range2"></arg>
    <retval></retval>
  </function>
  <function name="NSUnionRect">
    <arg name="aRect"></arg>
    <arg name="bRect"></arg>
    <retval></retval>
  </function>
  <function name="NSUserName">
    <retval></retval>
  </function>
  <function name="NSWidth">
    <arg name="aRect"></arg>
    <retval></retval>
  </function>
  <function name="NSZoneCalloc">
    <arg name="zone"></arg>
    <arg name="numElems"></arg>
    <arg name="byteSize"></arg>
    <retval></retval>
  </function>
  <function name="NSZoneFree">
    <arg name="zone"></arg>
    <arg name="ptr"></arg>
  </function>
  <function name="NSZoneFromPointer">
    <arg name="ptr"></arg>
    <retval></retval>
  </function>
  <function name="NSZoneMalloc">
    <arg name="zone"></arg>
    <arg name="size"></arg>
    <retval></retval>
  </function>
  <function name="NSZoneName">
    <arg name="zone"></arg>
    <retval></retval>
  </function>
  <function name="NSZoneRealloc">
    <arg name="zone"></arg>
    <arg name="ptr"></arg>
    <arg name="size"></arg>
    <retval></retval>
  </function>
  <function name="NXReadNSObjectFromCoder">
    <arg name="decoder"></arg>
    <retval></retval>
  </function>
  <class name="NSAffineTransform" swt_gen="true">
    <method selector="appendTransform:" swt_gen="true">
      <arg name="transform" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithTransform:" swt_gen="true">
      <arg name="transform" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invert" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="prependTransform:" swt_gen="true">
      <arg name="transform" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rotateByDegrees:" swt_gen="true">
      <arg name="angle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rotateByRadians:" swt_gen="true">
      <arg name="angle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scaleBy:" swt_gen="true">
      <arg name="scale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scaleXBy:yBy:" swt_gen="true">
      <arg name="scaleX" swt_gen="true"></arg>
      <arg name="scaleY" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTransformStruct:" swt_gen="true">
      <arg name="transformStruct" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="transform" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="transformPoint:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="transformSize:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="transformStruct" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="translateXBy:yBy:" swt_gen="true">
      <arg name="deltaX" swt_gen="true"></arg>
      <arg name="deltaY" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSAppleEventDescriptor" swt_gen="true">
    <method selector="aeDesc" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appleEventWithEventClass:eventID:targetDescriptor:returnID:transactionID:" swt_gen="true">
      <arg name="eventClass" swt_gen="true"></arg>
      <arg name="eventID" swt_gen="true"></arg>
      <arg name="targetDescriptor" swt_gen="true"></arg>
      <arg name="returnID" swt_gen="true"></arg>
      <arg name="transactionID" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributeDescriptorForKeyword:" swt_gen="true">
      <arg name="keyword" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="booleanValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="coerceToDescriptorType:" swt_gen="true">
      <arg name="descriptorType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="data" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptorAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptorForKeyword:" swt_gen="true">
      <arg name="keyword" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptorType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptorWithBoolean:" swt_gen="true">
      <arg name="boolean" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptorWithDescriptorType:bytes:length:" swt_gen="true">
      <arg name="descriptorType" swt_gen="true"></arg>
      <arg name="bytes" swt_gen="true"></arg>
      <arg name="byteCount" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptorWithDescriptorType:data:" swt_gen="true">
      <arg name="descriptorType" swt_gen="true"></arg>
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptorWithEnumCode:" swt_gen="true">
      <arg name="enumerator" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptorWithInt32:" swt_gen="true">
      <arg name="signedInt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptorWithString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptorWithTypeCode:" swt_gen="true">
      <arg name="typeCode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="enumCodeValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="eventClass" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="eventID" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initListDescriptor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initRecordDescriptor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithAEDescNoCopy:" swt_gen="true">
      <arg name="aeDesc" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithDescriptorType:bytes:length:" swt_gen="true">
      <arg name="descriptorType" swt_gen="true"></arg>
      <arg name="bytes" swt_gen="true"></arg>
      <arg name="byteCount" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithDescriptorType:data:" swt_gen="true">
      <arg name="descriptorType" swt_gen="true"></arg>
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithEventClass:eventID:targetDescriptor:returnID:transactionID:" swt_gen="true">
      <arg name="eventClass" swt_gen="true"></arg>
      <arg name="eventID" swt_gen="true"></arg>
      <arg name="targetDescriptor" swt_gen="true"></arg>
      <arg name="returnID" swt_gen="true"></arg>
      <arg name="transactionID" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertDescriptor:atIndex:" swt_gen="true">
      <arg name="descriptor" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="int32Value" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keywordForDescriptorAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="listDescriptor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nullDescriptor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="paramDescriptorForKeyword:" swt_gen="true">
      <arg name="keyword" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="recordDescriptor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeDescriptorAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeDescriptorWithKeyword:" swt_gen="true">
      <arg name="keyword" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeParamDescriptorWithKeyword:" swt_gen="true">
      <arg name="keyword" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="returnID" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributeDescriptor:forKeyword:" swt_gen="true">
      <arg name="descriptor" swt_gen="true"></arg>
      <arg name="keyword" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDescriptor:forKeyword:" swt_gen="true">
      <arg name="descriptor" swt_gen="true"></arg>
      <arg name="keyword" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setParamDescriptor:forKeyword:" swt_gen="true">
      <arg name="descriptor" swt_gen="true"></arg>
      <arg name="keyword" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="transactionID" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="typeCodeValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSAppleEventManager" swt_gen="true">
    <method selector="appleEventForSuspensionID:" swt_gen="true">
      <arg name="suspensionID" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentAppleEvent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentReplyAppleEvent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dispatchRawAppleEvent:withRawReply:handlerRefCon:" swt_gen="true">
      <arg name="theAppleEvent" swt_gen="true"></arg>
      <arg name="theReply" swt_gen="true"></arg>
      <arg name="handlerRefCon" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeEventHandlerForEventClass:andEventID:" swt_gen="true">
      <arg name="eventClass" swt_gen="true"></arg>
      <arg name="eventID" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replyAppleEventForSuspensionID:" swt_gen="true">
      <arg name="suspensionID" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resumeWithSuspensionID:" swt_gen="true">
      <arg name="suspensionID" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCurrentAppleEventAndReplyEventWithSuspensionID:" swt_gen="true">
      <arg name="suspensionID" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEventHandler:andSelector:forEventClass:andEventID:" swt_gen="true">
      <arg name="handler" swt_gen="true"></arg>
      <arg name="handleEventSelector" swt_gen="true"></arg>
      <arg name="eventClass" swt_gen="true"></arg>
      <arg name="eventID" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedAppleEventManager" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="suspendCurrentAppleEvent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSAppleScript" swt_gen="true">
    <method selector="compileAndReturnError:" swt_gen="true">
      <arg name="errorInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="executeAndReturnError:" swt_gen="true">
      <arg name="errorInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="executeAppleEvent:error:" swt_gen="true">
      <arg name="event" swt_gen="true"></arg>
      <arg name="errorInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfURL:error:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="errorInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithSource:" swt_gen="true">
      <arg name="source" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isCompiled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="source" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSArchiver" swt_gen="true">
    <method selector="archiveRootObject:toFile:" swt_gen="true">
      <arg name="rootObject" swt_gen="true"></arg>
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="archivedDataWithRootObject:" swt_gen="true">
      <arg name="rootObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="archiverData" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="classNameEncodedForTrueClassName:" swt_gen="true">
      <arg name="trueName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeClassName:intoClassName:" swt_gen="true">
      <arg name="trueName" swt_gen="true"></arg>
      <arg name="inArchiveName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeConditionalObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeRootObject:" swt_gen="true">
      <arg name="rootObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initForWritingWithMutableData:" swt_gen="true">
      <arg name="mdata" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceObject:withObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <arg name="newObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSArray" swt_gen="true">
    <method selector="addObserver:forKeyPath:options:context:" swt_gen="true">
      <arg name="observer" swt_gen="true"></arg>
      <arg name="keyPath" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <arg name="context" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addObserver:toObjectsAtIndexes:forKeyPath:options:context:" swt_gen="true">
      <arg name="observer" swt_gen="true"></arg>
      <arg name="indexes" swt_gen="true"></arg>
      <arg name="keyPath" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <arg name="context" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="array" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="arrayByAddingObject:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="arrayByAddingObjectsFromArray:" swt_gen="true">
      <arg name="otherArray" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="arrayWithArray:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="arrayWithContentsOfFile:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="arrayWithContentsOfURL:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="arrayWithObject:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="arrayWithObjects:" swt_gen="true">
      <arg name="arrayWithObjects" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="arrayWithObjects:count:" swt_gen="true">
      <arg name="objects" swt_gen="true"></arg>
      <arg name="cnt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="componentsJoinedByString:" swt_gen="true">
      <arg name="separator" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="containsObject:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="count" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="description" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptionWithLocale:" swt_gen="true">
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptionWithLocale:indent:" swt_gen="true">
      <arg name="locale" swt_gen="true"></arg>
      <arg name="level" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="filteredArrayUsingPredicate:" swt_gen="true">
      <arg name="predicate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="firstObjectCommonWithArray:" swt_gen="true">
      <arg name="otherArray" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getObjects:" swt_gen="true">
      <arg name="objects" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getObjects:range:" swt_gen="true">
      <arg name="objects" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfObject:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfObject:inRange:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfObjectIdenticalTo:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfObjectIdenticalTo:inRange:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithArray:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithArray:copyItems:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfFile:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfURL:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithObjects:" swt_gen="true">
      <arg name="initWithObjects" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithObjects:count:" swt_gen="true">
      <arg name="objects" swt_gen="true"></arg>
      <arg name="cnt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEqualToArray:" swt_gen="true">
      <arg name="otherArray" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lastObject" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makeObjectsPerformSelector:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makeObjectsPerformSelector:withObject:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="argument" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectEnumerator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectsAtIndexes:" swt_gen="true">
      <arg name="indexes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathsMatchingExtensions:" swt_gen="true">
      <arg name="filterTypes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObserver:forKeyPath:" swt_gen="true">
      <arg name="observer" swt_gen="true"></arg>
      <arg name="keyPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObserver:fromObjectsAtIndexes:forKeyPath:" swt_gen="true">
      <arg name="observer" swt_gen="true"></arg>
      <arg name="indexes" swt_gen="true"></arg>
      <arg name="keyPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reverseObjectEnumerator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setValue:forKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sortedArrayHint" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sortedArrayUsingDescriptors:" swt_gen="true">
      <arg name="sortDescriptors" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sortedArrayUsingFunction:context:" swt_gen="true">
      <arg name="comparator" swt_gen="true">
        <arg swt_gen="true"></arg>
        <arg swt_gen="true"></arg>
        <arg swt_gen="true"></arg>
        <retval swt_gen="true"></retval>
      </arg>
      <arg name="context" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sortedArrayUsingFunction:context:hint:" swt_gen="true">
      <arg name="comparator" swt_gen="true">
        <arg swt_gen="true"></arg>
        <arg swt_gen="true"></arg>
        <arg swt_gen="true"></arg>
        <retval swt_gen="true"></retval>
      </arg>
      <arg name="context" swt_gen="true"></arg>
      <arg name="hint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sortedArrayUsingSelector:" swt_gen="true">
      <arg name="comparator" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="subarrayWithRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToFile:atomically:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="useAuxiliaryFile" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToURL:atomically:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="atomically" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSAssertionHandler" swt_gen="true">
    <method selector="currentHandler" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="handleFailureInFunction:file:lineNumber:description:" swt_gen="true">
      <arg name="functionName" swt_gen="true"></arg>
      <arg name="fileName" swt_gen="true"></arg>
      <arg name="line" swt_gen="true"></arg>
      <arg name="description" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="handleFailureInMethod:object:file:lineNumber:description:" swt_gen="true">
      <arg name="selector" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
      <arg name="fileName" swt_gen="true"></arg>
      <arg name="line" swt_gen="true"></arg>
      <arg name="description" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSAttributedString" swt_gen="true">
    <method selector="attribute:atIndex:effectiveRange:" swt_gen="true">
      <arg name="attrName" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attribute:atIndex:longestEffectiveRange:inRange:" swt_gen="true">
      <arg name="attrName" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <arg name="rangeLimit" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributedSubstringFromRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributesAtIndex:effectiveRange:" swt_gen="true">
      <arg name="location" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributesAtIndex:longestEffectiveRange:inRange:" swt_gen="true">
      <arg name="location" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <arg name="rangeLimit" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithAttributedString:" swt_gen="true">
      <arg name="attrStr" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithString:" swt_gen="true">
      <arg name="str" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithString:attributes:" swt_gen="true">
      <arg name="str" swt_gen="true"></arg>
      <arg name="attrs" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEqualToAttributedString:" swt_gen="true">
      <arg name="other" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="length" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="string" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSAutoreleasePool" swt_gen="true">
    <method selector="addObject:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addObject:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autoreleasedObjectCount" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drain" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="enableFreedObjectCheck:" swt_gen="true">
      <arg name="enable" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="enableRelease:" swt_gen="true">
      <arg name="enable" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="poolCountHighWaterMark" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="poolCountHighWaterResolution" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resetTotalAutoreleasedObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPoolCountHighWaterMark:" swt_gen="true">
      <arg name="count" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPoolCountHighWaterResolution:" swt_gen="true">
      <arg name="res" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showPools" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="topAutoreleasePoolCount" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="totalAutoreleasedObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSBundle" swt_gen="true">
    <method selector="allBundles" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allFrameworks" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="builtInPlugInsPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bundleForClass:" swt_gen="true">
      <arg name="aClass" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bundleIdentifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bundlePath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bundleWithIdentifier:" swt_gen="true">
      <arg name="identifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bundleWithPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="classNamed:" swt_gen="true">
      <arg name="className" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="developmentLocalization" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="executableArchitectures" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="executablePath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="infoDictionary" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isLoaded" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="load" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="loadAndReturnError:" swt_gen="true">
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizations" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedInfoDictionary" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedStringForKey:value:table:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <arg name="value" swt_gen="true"></arg>
      <arg name="tableName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mainBundle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectForInfoDictionaryKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathForAuxiliaryExecutable:" swt_gen="true">
      <arg name="executableName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathForResource:ofType:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="ext" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathForResource:ofType:inDirectory:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="ext" swt_gen="true"></arg>
      <arg name="subpath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathForResource:ofType:inDirectory:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="ext" swt_gen="true"></arg>
      <arg name="bundlePath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathForResource:ofType:inDirectory:forLocalization:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="ext" swt_gen="true"></arg>
      <arg name="subpath" swt_gen="true"></arg>
      <arg name="localizationName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathsForResourcesOfType:inDirectory:" swt_gen="true">
      <arg name="ext" swt_gen="true"></arg>
      <arg name="bundlePath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathsForResourcesOfType:inDirectory:" swt_gen="true">
      <arg name="ext" swt_gen="true"></arg>
      <arg name="subpath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathsForResourcesOfType:inDirectory:forLocalization:" swt_gen="true">
      <arg name="ext" swt_gen="true"></arg>
      <arg name="subpath" swt_gen="true"></arg>
      <arg name="localizationName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="preferredLocalizations" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="preferredLocalizationsFromArray:" swt_gen="true">
      <arg name="localizationsArray" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="preferredLocalizationsFromArray:forPreferences:" swt_gen="true">
      <arg name="localizationsArray" swt_gen="true"></arg>
      <arg name="preferencesArray" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="preflightAndReturnError:" swt_gen="true">
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="principalClass" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="privateFrameworksPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resourcePath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedFrameworksPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedSupportPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unload" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSCachedURLResponse" swt_gen="true">
    <method selector="data" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithResponse:data:" swt_gen="true">
      <arg name="response" swt_gen="true"></arg>
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithResponse:data:userInfo:storagePolicy:" swt_gen="true">
      <arg name="response" swt_gen="true"></arg>
      <arg name="data" swt_gen="true"></arg>
      <arg name="userInfo" swt_gen="true"></arg>
      <arg name="storagePolicy" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="response" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="storagePolicy" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="userInfo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSCalendar" swt_gen="true">
    <method selector="autoupdatingCurrentCalendar" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="calendarIdentifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="components:fromDate:" swt_gen="true">
      <arg name="unitFlags" swt_gen="true"></arg>
      <arg name="date" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="components:fromDate:toDate:options:" swt_gen="true">
      <arg name="unitFlags" swt_gen="true"></arg>
      <arg name="startingDate" swt_gen="true"></arg>
      <arg name="resultDate" swt_gen="true"></arg>
      <arg name="opts" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentCalendar" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dateByAddingComponents:toDate:options:" swt_gen="true">
      <arg name="comps" swt_gen="true"></arg>
      <arg name="date" swt_gen="true"></arg>
      <arg name="opts" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dateFromComponents:" swt_gen="true">
      <arg name="comps" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="firstWeekday" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithCalendarIdentifier:" swt_gen="true">
      <arg name="ident" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="locale" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maximumRangeOfUnit:" swt_gen="true">
      <arg name="unit" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minimumDaysInFirstWeek" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minimumRangeOfUnit:" swt_gen="true">
      <arg name="unit" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ordinalityOfUnit:inUnit:forDate:" swt_gen="true">
      <arg name="smaller" swt_gen="true"></arg>
      <arg name="larger" swt_gen="true"></arg>
      <arg name="date" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeOfUnit:inUnit:forDate:" swt_gen="true">
      <arg name="smaller" swt_gen="true"></arg>
      <arg name="larger" swt_gen="true"></arg>
      <arg name="date" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeOfUnit:startDate:interval:forDate:" swt_gen="true">
      <arg name="unit" swt_gen="true"></arg>
      <arg name="datep" swt_gen="true"></arg>
      <arg name="tip" swt_gen="true"></arg>
      <arg name="date" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFirstWeekday:" swt_gen="true">
      <arg name="weekday" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLocale:" swt_gen="true">
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinimumDaysInFirstWeek:" swt_gen="true">
      <arg name="mdw" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTimeZone:" swt_gen="true">
      <arg name="tz" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="timeZone" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSCalendarDate" swt_gen="true" swt_superclass="NSDate">
    <method selector="calendarDate" swt_gen="true">
      <retval swt_gen="true" swt_replace_return="NSCalendarDate"></retval>
    </method>
    <method selector="calendarFormat" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dateByAddingYears:months:days:hours:minutes:seconds:" swt_gen="true">
      <arg name="year" swt_gen="true"></arg>
      <arg name="month" swt_gen="true"></arg>
      <arg name="day" swt_gen="true"></arg>
      <arg name="hour" swt_gen="true"></arg>
      <arg name="minute" swt_gen="true"></arg>
      <arg name="second" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dateWithString:calendarFormat:" swt_gen="true">
      <arg name="description" swt_gen="true"></arg>
      <arg name="format" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dateWithString:calendarFormat:locale:" swt_gen="true">
      <arg name="description" swt_gen="true"></arg>
      <arg name="format" swt_gen="true"></arg>
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dateWithYear:month:day:hour:minute:second:timeZone:" swt_gen="true">
      <arg name="year" swt_gen="true"></arg>
      <arg name="month" swt_gen="true"></arg>
      <arg name="day" swt_gen="true"></arg>
      <arg name="hour" swt_gen="true"></arg>
      <arg name="minute" swt_gen="true"></arg>
      <arg name="second" swt_gen="true"></arg>
      <arg name="aTimeZone" swt_gen="true"></arg>
      <retval swt_gen="true" swt_replace_return="NSCalendarDate"></retval>
    </method>
    <method selector="dayOfCommonEra" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dayOfMonth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dayOfWeek" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dayOfYear" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="description" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptionWithCalendarFormat:" swt_gen="true">
      <arg name="format" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptionWithCalendarFormat:locale:" swt_gen="true">
      <arg name="format" swt_gen="true"></arg>
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptionWithLocale:" swt_gen="true">
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hourOfDay" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithString:" swt_gen="true">
      <arg name="description" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithString:calendarFormat:" swt_gen="true">
      <arg name="description" swt_gen="true"></arg>
      <arg name="format" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithString:calendarFormat:locale:" swt_gen="true">
      <arg name="description" swt_gen="true"></arg>
      <arg name="format" swt_gen="true"></arg>
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithYear:month:day:hour:minute:second:timeZone:" swt_gen="true">
      <arg name="year" swt_gen="true"></arg>
      <arg name="month" swt_gen="true"></arg>
      <arg name="day" swt_gen="true"></arg>
      <arg name="hour" swt_gen="true"></arg>
      <arg name="minute" swt_gen="true"></arg>
      <arg name="second" swt_gen="true"></arg>
      <arg name="aTimeZone" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minuteOfHour" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="monthOfYear" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="secondOfMinute" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCalendarFormat:" swt_gen="true">
      <arg name="format" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTimeZone:" swt_gen="true">
      <arg name="aTimeZone" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="timeZone" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="yearOfCommonEra" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="years:months:days:hours:minutes:seconds:sinceDate:" swt_gen="true">
      <arg name="yp" swt_gen="true"></arg>
      <arg name="mop" swt_gen="true"></arg>
      <arg name="dp" swt_gen="true"></arg>
      <arg name="hp" swt_gen="true"></arg>
      <arg name="mip" swt_gen="true"></arg>
      <arg name="sp" swt_gen="true"></arg>
      <arg name="date" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSCharacterSet" swt_gen="true">
    <method selector="alphanumericCharacterSet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bitmapRepresentation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="capitalizedLetterCharacterSet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="characterIsMember:" swt_gen="true">
      <arg name="aCharacter" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="characterSetWithBitmapRepresentation:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="characterSetWithCharactersInString:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="characterSetWithContentsOfFile:" swt_gen="true">
      <arg name="fName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="characterSetWithRange:" swt_gen="true">
      <arg name="aRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlCharacterSet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decimalDigitCharacterSet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decomposableCharacterSet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasMemberInPlane:" swt_gen="true">
      <arg name="thePlane" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="illegalCharacterSet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invertedSet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSupersetOfSet:" swt_gen="true">
      <arg name="theOtherSet" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="letterCharacterSet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="longCharacterIsMember:" swt_gen="true">
      <arg name="theLongChar" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lowercaseLetterCharacterSet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="newlineCharacterSet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nonBaseCharacterSet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="punctuationCharacterSet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="symbolCharacterSet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="uppercaseLetterCharacterSet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="whitespaceAndNewlineCharacterSet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="whitespaceCharacterSet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSClassDescription" swt_gen="true">
    <method selector="attributeKeys" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="classDescriptionForClass:" swt_gen="true">
      <arg name="aClass" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invalidateClassDescriptionCache" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="inverseForRelationshipKey:" swt_gen="true">
      <arg name="relationshipKey" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registerClassDescription:forClass:" swt_gen="true">
      <arg name="description" swt_gen="true"></arg>
      <arg name="aClass" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toManyRelationshipKeys" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toOneRelationshipKeys" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSCloneCommand" swt_gen="true" swt_superclass="NSScriptCommand">
    <method selector="keySpecifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setReceiversSpecifier:" swt_gen="true">
      <arg name="receiversRef" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSCloseCommand" swt_gen="true" swt_superclass="NSScriptCommand">
    <method selector="saveOptions" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSCoder" swt_gen="true">
    <method selector="allowsKeyedCoding" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="containsValueForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeArrayOfObjCType:count:at:" swt_gen="true">
      <arg name="itemType" swt_gen="true"></arg>
      <arg name="count" swt_gen="true"></arg>
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeBoolForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeBytesForKey:returnedLength:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <arg name="lengthp" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeBytesWithReturnedLength:" swt_gen="true">
      <arg name="lengthp" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeDataObject" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeDoubleForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeFloatForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeInt32ForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeInt64ForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeIntForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeIntegerForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeNXObject" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeObject" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeObjectForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodePoint" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodePointForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodePropertyList" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeRect" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeRectForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeSizeForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeValueOfObjCType:at:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeValuesOfObjCTypes:" swt_gen="true">
      <arg name="decodeValuesOfObjCTypes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeArrayOfObjCType:count:at:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <arg name="count" swt_gen="true"></arg>
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeBool:forKey:" swt_gen="true">
      <arg name="boolv" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeBycopyObject:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeByrefObject:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeBytes:length:" swt_gen="true">
      <arg name="byteaddr" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeBytes:length:forKey:" swt_gen="true">
      <arg name="bytesp" swt_gen="true"></arg>
      <arg name="lenv" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeConditionalObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeConditionalObject:forKey:" swt_gen="true">
      <arg name="objv" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeDataObject:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeDouble:forKey:" swt_gen="true">
      <arg name="realv" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeFloat:forKey:" swt_gen="true">
      <arg name="realv" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeInt32:forKey:" swt_gen="true">
      <arg name="intv" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeInt64:forKey:" swt_gen="true">
      <arg name="intv" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeInt:forKey:" swt_gen="true">
      <arg name="intv" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeInteger:forKey:" swt_gen="true">
      <arg name="intv" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeNXObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeObject:forKey:" swt_gen="true">
      <arg name="objv" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodePoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodePoint:forKey:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodePropertyList:" swt_gen="true">
      <arg name="aPropertyList" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeRect:forKey:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeRootObject:" swt_gen="true">
      <arg name="rootObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeSize:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeSize:forKey:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeValueOfObjCType:at:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <arg name="addr" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeValuesOfObjCTypes:" swt_gen="true">
      <arg name="encodeValuesOfObjCTypes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectZone" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setObjectZone:" swt_gen="true">
      <arg name="zone" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="systemVersion" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="versionForClassName:" swt_gen="true">
      <arg name="className" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSComparisonPredicate" swt_gen="true" swt_superclass="NSPredicate">
    <method selector="comparisonPredicateModifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="customSelector" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithLeftExpression:rightExpression:customSelector:" swt_gen="true">
      <arg name="lhs" swt_gen="true"></arg>
      <arg name="rhs" swt_gen="true"></arg>
      <arg name="selector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithLeftExpression:rightExpression:modifier:type:options:" swt_gen="true">
      <arg name="lhs" swt_gen="true"></arg>
      <arg name="rhs" swt_gen="true"></arg>
      <arg name="modifier" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="leftExpression" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="options" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="predicateOperatorType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="predicateWithLeftExpression:rightExpression:customSelector:" swt_gen="true">
      <arg name="lhs" swt_gen="true"></arg>
      <arg name="rhs" swt_gen="true"></arg>
      <arg name="selector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="predicateWithLeftExpression:rightExpression:modifier:type:options:" swt_gen="true">
      <arg name="lhs" swt_gen="true"></arg>
      <arg name="rhs" swt_gen="true"></arg>
      <arg name="modifier" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rightExpression" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSCompoundPredicate" swt_gen="true" swt_superclass="NSPredicate">
    <method selector="andPredicateWithSubpredicates:" swt_gen="true">
      <arg name="subpredicates" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="compoundPredicateType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithType:subpredicates:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <arg name="subpredicates" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="notPredicateWithSubpredicate:" swt_gen="true">
      <arg name="predicate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orPredicateWithSubpredicates:" swt_gen="true">
      <arg name="subpredicates" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="subpredicates" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSCondition" swt_gen="true">
    <method selector="broadcast" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="name" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setName:" swt_gen="true">
      <arg name="n" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="signal" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="wait" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="waitUntilDate:" swt_gen="true">
      <arg name="limit" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSConditionLock" swt_gen="true">
    <method selector="condition" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithCondition:" swt_gen="true">
      <arg name="condition" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lockBeforeDate:" swt_gen="true">
      <arg name="limit" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lockWhenCondition:" swt_gen="true">
      <arg name="condition" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lockWhenCondition:beforeDate:" swt_gen="true">
      <arg name="condition" swt_gen="true"></arg>
      <arg name="limit" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="name" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setName:" swt_gen="true">
      <arg name="n" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tryLock" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tryLockWhenCondition:" swt_gen="true">
      <arg name="condition" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unlockWithCondition:" swt_gen="true">
      <arg name="condition" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSConnection" swt_gen="true">
    <method selector="addRequestMode:" swt_gen="true">
      <arg name="rmode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addRunLoop:" swt_gen="true">
      <arg name="runloop" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allConnections" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="connectionWithReceivePort:sendPort:" swt_gen="true">
      <arg name="receivePort" swt_gen="true"></arg>
      <arg name="sendPort" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="connectionWithRegisteredName:host:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="hostName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="connectionWithRegisteredName:host:usingNameServer:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="hostName" swt_gen="true"></arg>
      <arg name="server" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentConversation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultConnection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="enableMultipleThreads" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="independentConversationQueueing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithReceivePort:sendPort:" swt_gen="true">
      <arg name="receivePort" swt_gen="true"></arg>
      <arg name="sendPort" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invalidate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isValid" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="multipleThreadsEnabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="receivePort" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registerName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registerName:withNameServer:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="server" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="remoteObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeRequestMode:" swt_gen="true">
      <arg name="rmode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeRunLoop:" swt_gen="true">
      <arg name="runloop" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replyTimeout" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="requestModes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="requestTimeout" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rootObject" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rootProxy" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rootProxyForConnectionWithRegisteredName:host:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="hostName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rootProxyForConnectionWithRegisteredName:host:usingNameServer:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="hostName" swt_gen="true"></arg>
      <arg name="server" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runInNewThread" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendPort" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="serviceConnectionWithName:rootObject:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="root" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="serviceConnectionWithName:rootObject:usingNameServer:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="root" swt_gen="true"></arg>
      <arg name="server" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIndependentConversationQueueing:" swt_gen="true">
      <arg name="yorn" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setReplyTimeout:" swt_gen="true">
      <arg name="ti" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRequestTimeout:" swt_gen="true">
      <arg name="ti" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRootObject:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="statistics" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSCountedSet" swt_gen="true" swt_superclass="NSMutableSet">
    <method selector="addObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="countForObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithArray:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithCapacity:" swt_gen="true">
      <arg name="numItems" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithSet:" swt_gen="true">
      <arg name="set" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectEnumerator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSCreateCommand" swt_gen="true" swt_superclass="NSScriptCommand">
    <method selector="createClassDescription" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resolvedKeyDictionary" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSData" swt_gen="true">
    <method selector="bytes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="data" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataWithBytes:length:" swt_gen="true">
      <arg name="bytes" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataWithBytesNoCopy:length:" swt_gen="true">
      <arg name="bytes" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataWithBytesNoCopy:length:freeWhenDone:" swt_gen="true">
      <arg name="bytes" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
      <arg name="b" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataWithContentsOfFile:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataWithContentsOfFile:options:error:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="readOptionsMask" swt_gen="true"></arg>
      <arg name="errorPtr" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataWithContentsOfMappedFile:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataWithContentsOfURL:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataWithContentsOfURL:options:error:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="readOptionsMask" swt_gen="true"></arg>
      <arg name="errorPtr" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataWithData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="description" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getBytes:" swt_gen="true">
      <arg name="buffer" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getBytes:length:" swt_gen="true">
      <arg name="buffer" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getBytes:range:" swt_gen="true">
      <arg name="buffer" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithBytes:length:" swt_gen="true">
      <arg name="bytes" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithBytesNoCopy:length:" swt_gen="true">
      <arg name="bytes" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithBytesNoCopy:length:freeWhenDone:" swt_gen="true">
      <arg name="bytes" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
      <arg name="b" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfFile:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfFile:options:error:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="readOptionsMask" swt_gen="true"></arg>
      <arg name="errorPtr" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfMappedFile:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfURL:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfURL:options:error:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="readOptionsMask" swt_gen="true"></arg>
      <arg name="errorPtr" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEqualToData:" swt_gen="true">
      <arg name="other" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="length" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="subdataWithRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToFile:atomically:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="useAuxiliaryFile" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToFile:options:error:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="writeOptionsMask" swt_gen="true"></arg>
      <arg name="errorPtr" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToURL:atomically:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="atomically" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToURL:options:error:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="writeOptionsMask" swt_gen="true"></arg>
      <arg name="errorPtr" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSDate" swt_gen="true">
    <method selector="addTimeInterval:" swt_gen="true">
      <arg name="seconds" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="compare:" swt_gen="true">
      <arg name="other" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="date" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dateWithCalendarFormat:timeZone:" swt_gen="true">
      <arg name="format" swt_gen="true"></arg>
      <arg name="aTimeZone" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dateWithNaturalLanguageString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dateWithNaturalLanguageString:locale:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dateWithString:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dateWithTimeIntervalSince1970:" swt_gen="true">
      <arg name="secs" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dateWithTimeIntervalSinceNow:" swt_gen="true">
      <arg name="secs" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dateWithTimeIntervalSinceReferenceDate:" swt_gen="true">
      <arg name="secs" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="description" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptionWithCalendarFormat:timeZone:locale:" swt_gen="true">
      <arg name="format" swt_gen="true"></arg>
      <arg name="aTimeZone" swt_gen="true"></arg>
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptionWithLocale:" swt_gen="true">
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="distantFuture" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="distantPast" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="earlierDate:" swt_gen="true">
      <arg name="anotherDate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="init" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithString:" swt_gen="true">
      <arg name="description" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithTimeInterval:sinceDate:" swt_gen="true">
      <arg name="secsToBeAdded" swt_gen="true"></arg>
      <arg name="anotherDate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithTimeIntervalSinceNow:" swt_gen="true">
      <arg name="secsToBeAddedToNow" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithTimeIntervalSinceReferenceDate:" swt_gen="true">
      <arg name="secsToBeAdded" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEqualToDate:" swt_gen="true">
      <arg name="otherDate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="laterDate:" swt_gen="true">
      <arg name="anotherDate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="timeIntervalSince1970" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="timeIntervalSinceDate:" swt_gen="true">
      <arg name="anotherDate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="timeIntervalSinceNow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="timeIntervalSinceReferenceDate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="timeIntervalSinceReferenceDate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSDateComponents" swt_gen="true">
    <method selector="day" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="era" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hour" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minute" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="month" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="second" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDay:" swt_gen="true">
      <arg name="v" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEra:" swt_gen="true">
      <arg name="v" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHour:" swt_gen="true">
      <arg name="v" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinute:" swt_gen="true">
      <arg name="v" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMonth:" swt_gen="true">
      <arg name="v" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSecond:" swt_gen="true">
      <arg name="v" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWeek:" swt_gen="true">
      <arg name="v" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWeekday:" swt_gen="true">
      <arg name="v" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWeekdayOrdinal:" swt_gen="true">
      <arg name="v" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setYear:" swt_gen="true">
      <arg name="v" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="week" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="weekday" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="weekdayOrdinal" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="year" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSDateFormatter" swt_gen="true" swt_superclass="NSFormatter">
    <method selector="AMSymbol" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="PMSymbol" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsNaturalLanguage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="calendar" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dateFormat" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dateFromString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dateStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultDate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultFormatterBehavior" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="eraSymbols" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="formatterBehavior" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="generatesCalendarDates" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getObjectValue:forString:range:error:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
      <arg name="rangep" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="gregorianStartDate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="init" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithDateFormat:allowNaturalLanguage:" swt_gen="true">
      <arg name="format" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isLenient" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="locale" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="longEraSymbols" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="monthSymbols" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="quarterSymbols" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAMSymbol:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCalendar:" swt_gen="true">
      <arg name="calendar" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDateFormat:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDateStyle:" swt_gen="true">
      <arg name="style" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDefaultDate:" swt_gen="true">
      <arg name="date" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDefaultFormatterBehavior:" swt_gen="true">
      <arg name="behavior" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEraSymbols:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFormatterBehavior:" swt_gen="true">
      <arg name="behavior" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setGeneratesCalendarDates:" swt_gen="true">
      <arg name="b" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setGregorianStartDate:" swt_gen="true">
      <arg name="date" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLenient:" swt_gen="true">
      <arg name="b" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLocale:" swt_gen="true">
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLongEraSymbols:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMonthSymbols:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPMSymbol:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setQuarterSymbols:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShortMonthSymbols:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShortQuarterSymbols:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShortStandaloneMonthSymbols:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShortStandaloneQuarterSymbols:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShortStandaloneWeekdaySymbols:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShortWeekdaySymbols:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setStandaloneMonthSymbols:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setStandaloneQuarterSymbols:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setStandaloneWeekdaySymbols:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTimeStyle:" swt_gen="true">
      <arg name="style" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTimeZone:" swt_gen="true">
      <arg name="tz" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTwoDigitStartDate:" swt_gen="true">
      <arg name="date" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVeryShortMonthSymbols:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVeryShortStandaloneMonthSymbols:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVeryShortStandaloneWeekdaySymbols:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVeryShortWeekdaySymbols:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWeekdaySymbols:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shortMonthSymbols" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shortQuarterSymbols" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shortStandaloneMonthSymbols" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shortStandaloneQuarterSymbols" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shortStandaloneWeekdaySymbols" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shortWeekdaySymbols" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="standaloneMonthSymbols" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="standaloneQuarterSymbols" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="standaloneWeekdaySymbols" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringFromDate:" swt_gen="true">
      <arg name="date" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="timeStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="timeZone" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="twoDigitStartDate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="veryShortMonthSymbols" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="veryShortStandaloneMonthSymbols" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="veryShortStandaloneWeekdaySymbols" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="veryShortWeekdaySymbols" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="weekdaySymbols" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSDecimalNumber" swt_gen="true" swt_superclass="NSNumber">
    <method selector="compare:" swt_gen="true">
      <arg name="decimalNumber" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decimalNumberByAdding:" swt_gen="true">
      <arg name="decimalNumber" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decimalNumberByAdding:withBehavior:" swt_gen="true">
      <arg name="decimalNumber" swt_gen="true"></arg>
      <arg name="behavior" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decimalNumberByDividingBy:" swt_gen="true">
      <arg name="decimalNumber" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decimalNumberByDividingBy:withBehavior:" swt_gen="true">
      <arg name="decimalNumber" swt_gen="true"></arg>
      <arg name="behavior" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decimalNumberByMultiplyingBy:" swt_gen="true">
      <arg name="decimalNumber" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decimalNumberByMultiplyingBy:withBehavior:" swt_gen="true">
      <arg name="decimalNumber" swt_gen="true"></arg>
      <arg name="behavior" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decimalNumberByMultiplyingByPowerOf10:" swt_gen="true">
      <arg name="power" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decimalNumberByMultiplyingByPowerOf10:withBehavior:" swt_gen="true">
      <arg name="power" swt_gen="true"></arg>
      <arg name="behavior" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decimalNumberByRaisingToPower:" swt_gen="true">
      <arg name="power" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decimalNumberByRaisingToPower:withBehavior:" swt_gen="true">
      <arg name="power" swt_gen="true"></arg>
      <arg name="behavior" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decimalNumberByRoundingAccordingToBehavior:" swt_gen="true">
      <arg name="behavior" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decimalNumberBySubtracting:" swt_gen="true">
      <arg name="decimalNumber" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decimalNumberBySubtracting:withBehavior:" swt_gen="true">
      <arg name="decimalNumber" swt_gen="true"></arg>
      <arg name="behavior" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decimalNumberWithDecimal:" swt_gen="true">
      <arg name="dcm" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decimalNumberWithMantissa:exponent:isNegative:" swt_gen="true">
      <arg name="mantissa" swt_gen="true"></arg>
      <arg name="exponent" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decimalNumberWithString:" swt_gen="true">
      <arg name="numberValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decimalNumberWithString:locale:" swt_gen="true">
      <arg name="numberValue" swt_gen="true"></arg>
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decimalValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultBehavior" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptionWithLocale:" swt_gen="true">
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doubleValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithDecimal:" swt_gen="true">
      <arg name="dcm" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithMantissa:exponent:isNegative:" swt_gen="true">
      <arg name="mantissa" swt_gen="true"></arg>
      <arg name="exponent" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithString:" swt_gen="true">
      <arg name="numberValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithString:locale:" swt_gen="true">
      <arg name="numberValue" swt_gen="true"></arg>
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maximumDecimalNumber" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minimumDecimalNumber" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="notANumber" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objCType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="one" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDefaultBehavior:" swt_gen="true">
      <arg name="behavior" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="zero" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSDecimalNumberHandler" swt_gen="true">
    <method selector="decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:" swt_gen="true">
      <arg name="roundingMode" swt_gen="true"></arg>
      <arg name="scale" swt_gen="true"></arg>
      <arg name="exact" swt_gen="true"></arg>
      <arg name="overflow" swt_gen="true"></arg>
      <arg name="underflow" swt_gen="true"></arg>
      <arg name="divideByZero" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultDecimalNumberHandler" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:" swt_gen="true">
      <arg name="roundingMode" swt_gen="true"></arg>
      <arg name="scale" swt_gen="true"></arg>
      <arg name="exact" swt_gen="true"></arg>
      <arg name="overflow" swt_gen="true"></arg>
      <arg name="underflow" swt_gen="true"></arg>
      <arg name="divideByZero" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSDeleteCommand" swt_gen="true" swt_superclass="NSScriptCommand">
    <method selector="keySpecifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setReceiversSpecifier:" swt_gen="true">
      <arg name="receiversRef" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSDictionary" swt_gen="true">
    <method selector="allKeys" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allKeysForObject:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allValues" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="count" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="description" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptionInStringsFileFormat" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptionWithLocale:" swt_gen="true">
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptionWithLocale:indent:" swt_gen="true">
      <arg name="locale" swt_gen="true"></arg>
      <arg name="level" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dictionary" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dictionaryWithContentsOfFile:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dictionaryWithContentsOfURL:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dictionaryWithDictionary:" swt_gen="true">
      <arg name="dict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dictionaryWithObject:forKey:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dictionaryWithObjects:forKeys:" swt_gen="true">
      <arg name="objects" swt_gen="true"></arg>
      <arg name="keys" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dictionaryWithObjects:forKeys:count:" swt_gen="true">
      <arg name="objects" swt_gen="true"></arg>
      <arg name="keys" swt_gen="true"></arg>
      <arg name="cnt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dictionaryWithObjectsAndKeys:" swt_gen="true">
      <arg name="dictionaryWithObjectsAndKeys" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileCreationDate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileExtensionHidden" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileGroupOwnerAccountID" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileGroupOwnerAccountName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileHFSCreatorCode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileHFSTypeCode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileIsAppendOnly" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileIsImmutable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileModificationDate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileOwnerAccountID" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileOwnerAccountName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="filePosixPermissions" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileSystemFileNumber" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileSystemNumber" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getObjects:andKeys:" swt_gen="true">
      <arg name="objects" swt_gen="true"></arg>
      <arg name="keys" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfFile:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfURL:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithDictionary:" swt_gen="true">
      <arg name="otherDictionary" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithDictionary:copyItems:" swt_gen="true">
      <arg name="otherDictionary" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithObjects:forKeys:" swt_gen="true">
      <arg name="objects" swt_gen="true"></arg>
      <arg name="keys" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithObjects:forKeys:count:" swt_gen="true">
      <arg name="objects" swt_gen="true"></arg>
      <arg name="keys" swt_gen="true"></arg>
      <arg name="cnt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithObjectsAndKeys:" swt_gen="true">
      <arg name="initWithObjectsAndKeys" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEqualToDictionary:" swt_gen="true">
      <arg name="otherDictionary" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyEnumerator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keysSortedByValueUsingSelector:" swt_gen="true">
      <arg name="comparator" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectEnumerator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectForKey:" swt_gen="true">
      <arg name="aKey" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectsForKeys:notFoundMarker:" swt_gen="true">
      <arg name="keys" swt_gen="true"></arg>
      <arg name="marker" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToFile:atomically:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="useAuxiliaryFile" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToURL:atomically:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="atomically" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSDirectoryEnumerator" swt_gen="true" swt_superclass="NSEnumerator">
    <method selector="directoryAttributes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileAttributes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="skipDescendents" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSDistantObject" swt_gen="true" swt_superclass="NSProxy">
    <method selector="connectionForProxy" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithLocal:connection:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <arg name="connection" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithTarget:connection:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <arg name="connection" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="proxyWithLocal:connection:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <arg name="connection" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="proxyWithTarget:connection:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <arg name="connection" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setProtocolForProxy:" swt_gen="true">
      <arg name="proto" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSDistantObjectRequest" swt_gen="true">
    <method selector="connection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="conversation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invocation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replyWithException:" swt_gen="true">
      <arg name="exception" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSDistributedLock" swt_gen="true">
    <method selector="breakLock" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lockDate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lockWithPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tryLock" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unlock" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSDistributedNotificationCenter" swt_gen="true" swt_superclass="NSNotificationCenter">
    <method selector="addObserver:selector:name:object:" swt_gen="true">
      <arg name="observer" swt_gen="true"></arg>
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="aName" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addObserver:selector:name:object:suspensionBehavior:" swt_gen="true">
      <arg name="observer" swt_gen="true"></arg>
      <arg name="selector" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
      <arg name="suspensionBehavior" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultCenter" swt_gen="true">
      <retval swt_gen="true" swt_replace_return="NSNotificationCenter"></retval>
    </method>
    <method selector="notificationCenterForType:" swt_gen="true">
      <arg name="notificationCenterType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="postNotificationName:object:" swt_gen="true">
      <arg name="aName" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="postNotificationName:object:userInfo:" swt_gen="true">
      <arg name="aName" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <arg name="aUserInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="postNotificationName:object:userInfo:deliverImmediately:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
      <arg name="userInfo" swt_gen="true"></arg>
      <arg name="deliverImmediately" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="postNotificationName:object:userInfo:options:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
      <arg name="userInfo" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObserver:name:object:" swt_gen="true">
      <arg name="observer" swt_gen="true"></arg>
      <arg name="aName" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSuspended:" swt_gen="true">
      <arg name="suspended" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="suspended" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSEnumerator" swt_gen="true">
    <method selector="allObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nextObject" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSError" swt_gen="true">
    <method selector="code" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="domain" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="errorWithDomain:code:userInfo:" swt_gen="true">
      <arg name="domain" swt_gen="true"></arg>
      <arg name="code" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithDomain:code:userInfo:" swt_gen="true">
      <arg name="domain" swt_gen="true"></arg>
      <arg name="code" swt_gen="true"></arg>
      <arg name="dict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedDescription" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedFailureReason" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedRecoveryOptions" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedRecoverySuggestion" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="recoveryAttempter" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="userInfo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSException" swt_gen="true">
    <method selector="callStackReturnAddresses" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="exceptionWithName:reason:userInfo:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="reason" swt_gen="true"></arg>
      <arg name="userInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithName:reason:userInfo:" swt_gen="true">
      <arg name="aName" swt_gen="true"></arg>
      <arg name="aReason" swt_gen="true"></arg>
      <arg name="aUserInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="name" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="raise" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="raise:format:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="format" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="raise:format:arguments:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="format" swt_gen="true"></arg>
      <arg name="argList" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reason" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="userInfo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSExpression" swt_gen="true">
    <method selector="arguments" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="collection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="constantValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="expressionForAggregate:" swt_gen="true">
      <arg name="subexpressions" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="expressionForConstantValue:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="expressionForEvaluatedObject" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="expressionForFunction:arguments:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="parameters" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="expressionForFunction:selectorName:arguments:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <arg name="parameters" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="expressionForIntersectSet:with:" swt_gen="true">
      <arg name="left" swt_gen="true"></arg>
      <arg name="right" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="expressionForKeyPath:" swt_gen="true">
      <arg name="keyPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="expressionForMinusSet:with:" swt_gen="true">
      <arg name="left" swt_gen="true"></arg>
      <arg name="right" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="expressionForSubquery:usingIteratorVariable:predicate:" swt_gen="true">
      <arg name="expression" swt_gen="true"></arg>
      <arg name="variable" swt_gen="true"></arg>
      <arg name="predicate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="expressionForUnionSet:with:" swt_gen="true">
      <arg name="left" swt_gen="true"></arg>
      <arg name="right" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="expressionForVariable:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="expressionType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="expressionValueWithObject:context:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <arg name="context" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="function" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithExpressionType:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="leftExpression" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="operand" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="predicate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rightExpression" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="variable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSFileHandle" swt_gen="true">
    <method selector="acceptConnectionInBackgroundAndNotify" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="acceptConnectionInBackgroundAndNotifyForModes:" swt_gen="true">
      <arg name="modes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="availableData" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="closeFile" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileDescriptor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileHandleForReadingAtPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileHandleForUpdatingAtPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileHandleForWritingAtPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileHandleWithNullDevice" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileHandleWithStandardError" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileHandleWithStandardInput" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileHandleWithStandardOutput" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFileDescriptor:" swt_gen="true">
      <arg name="fd" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFileDescriptor:closeOnDealloc:" swt_gen="true">
      <arg name="fd" swt_gen="true"></arg>
      <arg name="closeopt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="offsetInFile" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readDataOfLength:" swt_gen="true">
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readDataToEndOfFile" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readInBackgroundAndNotify" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readInBackgroundAndNotifyForModes:" swt_gen="true">
      <arg name="modes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readToEndOfFileInBackgroundAndNotify" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readToEndOfFileInBackgroundAndNotifyForModes:" swt_gen="true">
      <arg name="modes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="seekToEndOfFile" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="seekToFileOffset:" swt_gen="true">
      <arg name="offset" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="synchronizeFile" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="truncateFileAtOffset:" swt_gen="true">
      <arg name="offset" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="waitForDataInBackgroundAndNotify" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="waitForDataInBackgroundAndNotifyForModes:" swt_gen="true">
      <arg name="modes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSFileManager" swt_gen="true">
    <method selector="attributesOfFileSystemForPath:error:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributesOfItemAtPath:error:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="changeCurrentDirectoryPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="changeFileAttributes:atPath:" swt_gen="true">
      <arg name="attributes" swt_gen="true"></arg>
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="componentsToDisplayForPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentsAtPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentsEqualAtPath:andPath:" swt_gen="true">
      <arg name="path1" swt_gen="true"></arg>
      <arg name="path2" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentsOfDirectoryAtPath:error:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="copyItemAtPath:toPath:error:" swt_gen="true">
      <arg name="srcPath" swt_gen="true"></arg>
      <arg name="dstPath" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="copyPath:toPath:handler:" swt_gen="true">
      <arg name="src" swt_gen="true"></arg>
      <arg name="dest" swt_gen="true"></arg>
      <arg name="handler" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="createDirectoryAtPath:attributes:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="attributes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="createDirectoryAtPath:withIntermediateDirectories:attributes:error:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="createIntermediates" swt_gen="true"></arg>
      <arg name="attributes" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="createFileAtPath:contents:attributes:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="data" swt_gen="true"></arg>
      <arg name="attr" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="createSymbolicLinkAtPath:pathContent:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="otherpath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="createSymbolicLinkAtPath:withDestinationPath:error:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="destPath" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentDirectoryPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultManager" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="destinationOfSymbolicLinkAtPath:error:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="directoryContentsAtPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displayNameAtPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="enumeratorAtPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileAttributesAtPath:traverseLink:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="yorn" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileExistsAtPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileExistsAtPath:isDirectory:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="isDirectory" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileSystemAttributesAtPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileSystemRepresentationWithPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isDeletableFileAtPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isExecutableFileAtPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isReadableFileAtPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isWritableFileAtPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="linkItemAtPath:toPath:error:" swt_gen="true">
      <arg name="srcPath" swt_gen="true"></arg>
      <arg name="dstPath" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="linkPath:toPath:handler:" swt_gen="true">
      <arg name="src" swt_gen="true"></arg>
      <arg name="dest" swt_gen="true"></arg>
      <arg name="handler" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveItemAtPath:toPath:error:" swt_gen="true">
      <arg name="srcPath" swt_gen="true"></arg>
      <arg name="dstPath" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="movePath:toPath:handler:" swt_gen="true">
      <arg name="src" swt_gen="true"></arg>
      <arg name="dest" swt_gen="true"></arg>
      <arg name="handler" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathContentOfSymbolicLinkAtPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeFileAtPath:handler:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="handler" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeItemAtPath:error:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributes:ofItemAtPath:error:" swt_gen="true">
      <arg name="attributes" swt_gen="true"></arg>
      <arg name="path" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringWithFileSystemRepresentation:length:" swt_gen="true">
      <arg name="str" swt_gen="true"></arg>
      <arg name="len" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="subpathsAtPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="subpathsOfDirectoryAtPath:error:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSFormatter" swt_gen="true">
    <method selector="attributedStringForObjectValue:withDefaultAttributes:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <arg name="attrs" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="editingStringForObjectValue:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getObjectValue:forString:errorDescription:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isPartialStringValid:newEditingString:errorDescription:" swt_gen="true">
      <arg name="partialString" swt_gen="true"></arg>
      <arg name="newString" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:" swt_gen="true">
      <arg name="partialStringPtr" swt_gen="true"></arg>
      <arg name="proposedSelRangePtr" swt_gen="true"></arg>
      <arg name="origString" swt_gen="true"></arg>
      <arg name="origSelRange" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringForObjectValue:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSGarbageCollector" swt_gen="true">
    <method selector="collectExhaustively" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="collectIfNeeded" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultCollector" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="disable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="disableCollectorForPointer:" swt_gen="true">
      <arg name="ptr" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="enable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="enableCollectorForPointer:" swt_gen="true">
      <arg name="ptr" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isCollecting" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEnabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="zone" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSHTTPCookie" swt_gen="true">
    <method selector="comment" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="commentURL" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cookieWithProperties:" swt_gen="true">
      <arg name="properties" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cookiesWithResponseHeaderFields:forURL:" swt_gen="true">
      <arg name="headerFields" swt_gen="true"></arg>
      <arg name="URL" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="domain" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="expiresDate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithProperties:" swt_gen="true">
      <arg name="properties" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSecure" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSessionOnly" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="name" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="path" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="portList" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="properties" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="requestHeaderFieldsWithCookies:" swt_gen="true">
      <arg name="cookies" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="value" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="version" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSHTTPCookieStorage" swt_gen="true">
    <method selector="cookieAcceptPolicy" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cookies" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cookiesForURL:" swt_gen="true">
      <arg name="URL" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deleteCookie:" swt_gen="true">
      <arg name="cookie" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCookie:" swt_gen="true">
      <arg name="cookie" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCookieAcceptPolicy:" swt_gen="true">
      <arg name="cookieAcceptPolicy" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCookies:forURL:mainDocumentURL:" swt_gen="true">
      <arg name="cookies" swt_gen="true"></arg>
      <arg name="URL" swt_gen="true"></arg>
      <arg name="mainDocumentURL" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedHTTPCookieStorage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSHTTPURLResponse" swt_gen="true" swt_superclass="NSURLResponse">
    <method selector="allHeaderFields" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedStringForStatusCode:" swt_gen="true">
      <arg name="statusCode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="statusCode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSHashTable" swt_gen="true">
    <method selector="addObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="anyObject" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="containsObject:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="count" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hashTableWithOptions:" swt_gen="true">
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hashTableWithWeakObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithOptions:capacity:" swt_gen="true">
      <arg name="options" swt_gen="true"></arg>
      <arg name="initialCapacity" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithPointerFunctions:capacity:" swt_gen="true">
      <arg name="functions" swt_gen="true"></arg>
      <arg name="initialCapacity" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="intersectHashTable:" swt_gen="true">
      <arg name="other" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="intersectsHashTable:" swt_gen="true">
      <arg name="other" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEqualToHashTable:" swt_gen="true">
      <arg name="other" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSubsetOfHashTable:" swt_gen="true">
      <arg name="other" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="member:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minusHashTable:" swt_gen="true">
      <arg name="other" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectEnumerator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pointerFunctions" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeAllObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRepresentation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unionHashTable:" swt_gen="true">
      <arg name="other" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSHost" swt_gen="true">
    <method selector="address" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addresses" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentHost" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="flushHostCache" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hostWithAddress:" swt_gen="true">
      <arg name="address" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hostWithName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEqualToHost:" swt_gen="true">
      <arg name="aHost" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isHostCacheEnabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="name" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="names" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHostCacheEnabled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSIndexPath" swt_gen="true">
    <method selector="compare:" swt_gen="true">
      <arg name="otherObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getIndexes:" swt_gen="true">
      <arg name="indexes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexAtPosition:" swt_gen="true">
      <arg name="position" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexPathByAddingIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexPathByRemovingLastIndex" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexPathWithIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexPathWithIndexes:length:" swt_gen="true">
      <arg name="indexes" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithIndexes:length:" swt_gen="true">
      <arg name="indexes" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="length" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSIndexSet" swt_gen="true">
    <method selector="containsIndex:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="containsIndexes:" swt_gen="true">
      <arg name="indexSet" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="containsIndexesInRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="count" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="countOfIndexesInRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="firstIndex" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getIndexes:maxCount:inIndexRange:" swt_gen="true">
      <arg name="indexBuffer" swt_gen="true"></arg>
      <arg name="bufferSize" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexGreaterThanIndex:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexGreaterThanOrEqualToIndex:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexLessThanIndex:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexLessThanOrEqualToIndex:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexSet" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexSetWithIndex:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexSetWithIndexesInRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="init" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithIndex:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithIndexSet:" swt_gen="true">
      <arg name="indexSet" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithIndexesInRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="intersectsIndexesInRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEqualToIndexSet:" swt_gen="true">
      <arg name="indexSet" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lastIndex" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSIndexSpecifier" swt_gen="true" swt_superclass="NSScriptObjectSpecifier">
    <method selector="index" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContainerClassDescription:containerSpecifier:key:index:" swt_gen="true">
      <arg name="classDesc" swt_gen="true"></arg>
      <arg name="container" swt_gen="true"></arg>
      <arg name="property" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSInputStream" swt_gen="true" swt_superclass="NSStream">
    <method selector="getBuffer:length:" swt_gen="true">
      <arg name="buffer" swt_gen="true"></arg>
      <arg name="len" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasBytesAvailable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFileAtPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="inputStreamWithData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="inputStreamWithFileAtPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="read:maxLength:" swt_gen="true">
      <arg name="buffer" swt_gen="true"></arg>
      <arg name="len" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSInvocation" swt_gen="true">
    <method selector="argumentsRetained" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getArgument:atIndex:" swt_gen="true">
      <arg name="argumentLocation" swt_gen="true"></arg>
      <arg name="idx" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getReturnValue:" swt_gen="true">
      <arg name="retLoc" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invocationWithMethodSignature:" swt_gen="true">
      <arg name="sig" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invoke" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invokeWithTarget:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="methodSignature" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="retainArguments" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selector" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setArgument:atIndex:" swt_gen="true">
      <arg name="argumentLocation" swt_gen="true"></arg>
      <arg name="idx" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setReturnValue:" swt_gen="true">
      <arg name="retLoc" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelector:" swt_gen="true">
      <arg name="selector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTarget:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="target" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSInvocationOperation" swt_gen="true" swt_superclass="NSOperation">
    <method selector="initWithInvocation:" swt_gen="true">
      <arg name="inv" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithTarget:selector:object:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <arg name="sel" swt_gen="true"></arg>
      <arg name="arg" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invocation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="result" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSKeyedArchiver" swt_gen="true" swt_superclass="NSCoder">
    <method selector="archiveRootObject:toFile:" swt_gen="true">
      <arg name="rootObject" swt_gen="true"></arg>
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="archivedDataWithRootObject:" swt_gen="true">
      <arg name="rootObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="classNameForClass:" swt_gen="true">
      <arg name="cls" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="classNameForClass:" swt_gen="true">
      <arg name="cls" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeBool:forKey:" swt_gen="true">
      <arg name="boolv" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeBytes:length:forKey:" swt_gen="true">
      <arg name="bytesp" swt_gen="true"></arg>
      <arg name="lenv" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeConditionalObject:forKey:" swt_gen="true">
      <arg name="objv" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeDouble:forKey:" swt_gen="true">
      <arg name="realv" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeFloat:forKey:" swt_gen="true">
      <arg name="realv" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeInt32:forKey:" swt_gen="true">
      <arg name="intv" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeInt64:forKey:" swt_gen="true">
      <arg name="intv" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeInt:forKey:" swt_gen="true">
      <arg name="intv" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeObject:forKey:" swt_gen="true">
      <arg name="objv" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="finishEncoding" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initForWritingWithMutableData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outputFormat" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setClassName:forClass:" swt_gen="true">
      <arg name="codedName" swt_gen="true"></arg>
      <arg name="cls" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setClassName:forClass:" swt_gen="true">
      <arg name="codedName" swt_gen="true"></arg>
      <arg name="cls" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setOutputFormat:" swt_gen="true">
      <arg name="format" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSKeyedUnarchiver" swt_gen="true" swt_superclass="NSCoder">
    <method selector="classForClassName:" swt_gen="true">
      <arg name="codedName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="classForClassName:" swt_gen="true">
      <arg name="codedName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="containsValueForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeBoolForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeBytesForKey:returnedLength:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <arg name="lengthp" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeDoubleForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeFloatForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeInt32ForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeInt64ForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeIntForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeObjectForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="finishDecoding" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initForReadingWithData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setClass:forClassName:" swt_gen="true">
      <arg name="cls" swt_gen="true"></arg>
      <arg name="codedName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setClass:forClassName:" swt_gen="true">
      <arg name="cls" swt_gen="true"></arg>
      <arg name="codedName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unarchiveObjectWithData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unarchiveObjectWithFile:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSLocale" swt_gen="true">
    <method selector="ISOCountryCodes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ISOCurrencyCodes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="ISOLanguageCodes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autoupdatingCurrentLocale" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="availableLocaleIdentifiers" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canonicalLocaleIdentifierFromString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="commonISOCurrencyCodes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="componentsFromLocaleIdentifier:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentLocale" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displayNameForKey:value:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithLocaleIdentifier:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localeIdentifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localeIdentifierFromComponents:" swt_gen="true">
      <arg name="dict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="preferredLanguages" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="systemLocale" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSLock" swt_gen="true">
    <method selector="lockBeforeDate:" swt_gen="true">
      <arg name="limit" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="name" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setName:" swt_gen="true">
      <arg name="n" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tryLock" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSLogicalTest" swt_gen="true" swt_superclass="NSScriptWhoseTest">
    <method selector="initAndTestWithTests:" swt_gen="true">
      <arg name="subTests" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initNotTestWithTest:" swt_gen="true">
      <arg name="subTest" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initOrTestWithTests:" swt_gen="true">
      <arg name="subTests" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMachBootstrapServer" swt_gen="true" swt_superclass="NSPortNameServer">
    <method selector="portForName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="portForName:host:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="host" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registerPort:name:" swt_gen="true">
      <arg name="port" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="servicePortWithName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedInstance" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMachPort" swt_gen="true" swt_superclass="NSPort">
    <method selector="initWithMachPort:" swt_gen="true">
      <arg name="machPort" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithMachPort:options:" swt_gen="true">
      <arg name="machPort" swt_gen="true"></arg>
      <arg name="f" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="machPort" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="portWithMachPort:" swt_gen="true">
      <arg name="machPort" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="portWithMachPort:options:" swt_gen="true">
      <arg name="machPort" swt_gen="true"></arg>
      <arg name="f" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeFromRunLoop:forMode:" swt_gen="true">
      <arg name="runLoop" swt_gen="true"></arg>
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scheduleInRunLoop:forMode:" swt_gen="true">
      <arg name="runLoop" swt_gen="true"></arg>
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMapTable" swt_gen="true">
    <method selector="count" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dictionaryRepresentation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithKeyOptions:valueOptions:capacity:" swt_gen="true">
      <arg name="keyOptions" swt_gen="true"></arg>
      <arg name="valueOptions" swt_gen="true"></arg>
      <arg name="initialCapacity" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithKeyPointerFunctions:valuePointerFunctions:capacity:" swt_gen="true">
      <arg name="keyFunctions" swt_gen="true"></arg>
      <arg name="valueFunctions" swt_gen="true"></arg>
      <arg name="initialCapacity" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyEnumerator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyPointerFunctions" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mapTableWithKeyOptions:valueOptions:" swt_gen="true">
      <arg name="keyOptions" swt_gen="true"></arg>
      <arg name="valueOptions" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mapTableWithStrongToStrongObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mapTableWithStrongToWeakObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mapTableWithWeakToStrongObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mapTableWithWeakToWeakObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectEnumerator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectForKey:" swt_gen="true">
      <arg name="aKey" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeAllObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObjectForKey:" swt_gen="true">
      <arg name="aKey" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setObject:forKey:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <arg name="aKey" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valuePointerFunctions" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMessagePortNameServer" swt_gen="true" swt_superclass="NSPortNameServer">
    <method selector="portForName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="portForName:host:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="host" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedInstance" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMetadataItem" swt_gen="true">
    <method selector="attributes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueForAttribute:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valuesForAttributes:" swt_gen="true">
      <arg name="keys" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMetadataQuery" swt_gen="true">
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="disableUpdates" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="enableUpdates" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="groupedResults" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="groupingAttributes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfResult:" swt_gen="true">
      <arg name="result" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="init" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isGathering" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isStarted" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isStopped" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="notificationBatchingInterval" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="predicate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resultAtIndex:" swt_gen="true">
      <arg name="idx" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resultCount" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="results" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="searchScopes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setGroupingAttributes:" swt_gen="true">
      <arg name="attrs" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNotificationBatchingInterval:" swt_gen="true">
      <arg name="ti" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPredicate:" swt_gen="true">
      <arg name="predicate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSearchScopes:" swt_gen="true">
      <arg name="scopes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSortDescriptors:" swt_gen="true">
      <arg name="descriptors" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setValueListAttributes:" swt_gen="true">
      <arg name="attrs" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sortDescriptors" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="startQuery" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stopQuery" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueListAttributes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueLists" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueOfAttribute:forResultAtIndex:" swt_gen="true">
      <arg name="attrName" swt_gen="true"></arg>
      <arg name="idx" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMetadataQueryAttributeValueTuple" swt_gen="true">
    <method selector="attribute" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="count" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="value" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMetadataQueryResultGroup" swt_gen="true">
    <method selector="attribute" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resultAtIndex:" swt_gen="true">
      <arg name="idx" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resultCount" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="results" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="subgroups" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="value" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMethodSignature" swt_gen="true">
    <method selector="frameLength" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getArgumentTypeAtIndex:" swt_gen="true">
      <arg name="idx" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isOneway" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="methodReturnLength" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="methodReturnType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfArguments" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="signatureWithObjCTypes:" swt_gen="true">
      <arg name="types" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMoveCommand" swt_gen="true" swt_superclass="NSScriptCommand">
    <method selector="keySpecifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setReceiversSpecifier:" swt_gen="true">
      <arg name="receiversRef" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMutableArray" swt_gen="true" swt_superclass="NSArray">
    <method selector="addObject:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addObjectsFromArray:" swt_gen="true">
      <arg name="otherArray" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="arrayWithCapacity:" swt_gen="true">
      <arg name="numItems" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="exchangeObjectAtIndex:withObjectAtIndex:" swt_gen="true">
      <arg name="idx1" swt_gen="true"></arg>
      <arg name="idx2" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="filterUsingPredicate:" swt_gen="true">
      <arg name="predicate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithCapacity:" swt_gen="true">
      <arg name="numItems" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertObject:atIndex:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertObjects:atIndexes:" swt_gen="true">
      <arg name="objects" swt_gen="true"></arg>
      <arg name="indexes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeAllObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeLastObject" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObject:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObject:inRange:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObjectAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObjectIdenticalTo:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObjectIdenticalTo:inRange:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObjectsAtIndexes:" swt_gen="true">
      <arg name="indexes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObjectsFromIndices:numIndices:" swt_gen="true">
      <arg name="indices" swt_gen="true"></arg>
      <arg name="cnt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObjectsInArray:" swt_gen="true">
      <arg name="otherArray" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObjectsInRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceObjectAtIndex:withObject:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceObjectsAtIndexes:withObjects:" swt_gen="true">
      <arg name="indexes" swt_gen="true"></arg>
      <arg name="objects" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceObjectsInRange:withObjectsFromArray:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <arg name="otherArray" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceObjectsInRange:withObjectsFromArray:range:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <arg name="otherArray" swt_gen="true"></arg>
      <arg name="otherRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setArray:" swt_gen="true">
      <arg name="otherArray" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sortUsingDescriptors:" swt_gen="true">
      <arg name="sortDescriptors" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sortUsingFunction:context:" swt_gen="true">
      <arg name="compare" swt_gen="true">
        <arg swt_gen="true"></arg>
        <arg swt_gen="true"></arg>
        <arg swt_gen="true"></arg>
        <retval swt_gen="true"></retval>
      </arg>
      <arg name="context" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sortUsingSelector:" swt_gen="true">
      <arg name="comparator" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMutableAttributedString" swt_gen="true" swt_superclass="NSAttributedString">
    <method selector="addAttribute:value:range:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="value" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addAttributes:range:" swt_gen="true">
      <arg name="attrs" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appendAttributedString:" swt_gen="true">
      <arg name="attrString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="beginEditing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deleteCharactersInRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="endEditing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertAttributedString:atIndex:" swt_gen="true">
      <arg name="attrString" swt_gen="true"></arg>
      <arg name="loc" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mutableString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeAttribute:range:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceCharactersInRange:withAttributedString:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <arg name="attrString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceCharactersInRange:withString:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <arg name="str" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributedString:" swt_gen="true">
      <arg name="attrString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributes:range:" swt_gen="true">
      <arg name="attrs" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMutableCharacterSet" swt_gen="true" swt_superclass="NSCharacterSet">
    <method selector="addCharactersInRange:" swt_gen="true">
      <arg name="aRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addCharactersInString:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="formIntersectionWithCharacterSet:" swt_gen="true">
      <arg name="otherSet" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="formUnionWithCharacterSet:" swt_gen="true">
      <arg name="otherSet" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invert" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeCharactersInRange:" swt_gen="true">
      <arg name="aRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeCharactersInString:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMutableData" swt_gen="true" swt_superclass="NSData">
    <method selector="appendBytes:length:" swt_gen="true">
      <arg name="bytes" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appendData:" swt_gen="true">
      <arg name="other" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataWithCapacity:" swt_gen="true">
      <arg name="aNumItems" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataWithLength:" swt_gen="true">
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="increaseLengthBy:" swt_gen="true">
      <arg name="extraLength" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithCapacity:" swt_gen="true">
      <arg name="capacity" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithLength:" swt_gen="true">
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mutableBytes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceBytesInRange:withBytes:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <arg name="bytes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceBytesInRange:withBytes:length:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <arg name="replacementBytes" swt_gen="true"></arg>
      <arg name="replacementLength" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resetBytesInRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLength:" swt_gen="true">
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMutableDictionary" swt_gen="true" swt_superclass="NSDictionary">
    <method selector="addEntriesFromDictionary:" swt_gen="true">
      <arg name="otherDictionary" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dictionaryWithCapacity:" swt_gen="true">
      <arg name="numItems" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithCapacity:" swt_gen="true">
      <arg name="numItems" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeAllObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObjectForKey:" swt_gen="true">
      <arg name="aKey" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObjectsForKeys:" swt_gen="true">
      <arg name="keyArray" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDictionary:" swt_gen="true">
      <arg name="otherDictionary" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setObject:forKey:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <arg name="aKey" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setValue:forKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMutableIndexSet" swt_gen="true" swt_superclass="NSIndexSet">
    <method selector="addIndex:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addIndexes:" swt_gen="true">
      <arg name="indexSet" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addIndexesInRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeAllIndexes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeIndex:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeIndexes:" swt_gen="true">
      <arg name="indexSet" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeIndexesInRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shiftIndexesStartingAtIndex:by:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <arg name="delta" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMutableSet" swt_gen="true" swt_superclass="NSSet">
    <method selector="addObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addObjectsFromArray:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="filterUsingPredicate:" swt_gen="true">
      <arg name="predicate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithCapacity:" swt_gen="true">
      <arg name="numItems" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="intersectSet:" swt_gen="true">
      <arg name="otherSet" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minusSet:" swt_gen="true">
      <arg name="otherSet" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeAllObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSet:" swt_gen="true">
      <arg name="otherSet" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWithCapacity:" swt_gen="true">
      <arg name="numItems" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unionSet:" swt_gen="true">
      <arg name="otherSet" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMutableString" swt_gen="true" swt_superclass="NSString">
    <method selector="appendFormat:" swt_gen="true">
      <arg name="appendFormat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appendString:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deleteCharactersInRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithCapacity:" swt_gen="true">
      <arg name="capacity" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertString:atIndex:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <arg name="loc" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceCharactersInRange:withString:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceOccurrencesOfString:withString:options:range:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <arg name="replacement" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <arg name="searchRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setString:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringWithCapacity:" swt_gen="true">
      <arg name="capacity" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSMutableURLRequest" swt_gen="true" swt_superclass="NSURLRequest">
    <method selector="addValue:forHTTPHeaderField:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="field" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllHTTPHeaderFields:" swt_gen="true">
      <arg name="headerFields" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCachePolicy:" swt_gen="true">
      <arg name="policy" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHTTPBody:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHTTPBodyStream:" swt_gen="true">
      <arg name="inputStream" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHTTPMethod:" swt_gen="true">
      <arg name="method" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHTTPShouldHandleCookies:" swt_gen="true">
      <arg name="should" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMainDocumentURL:" swt_gen="true">
      <arg name="URL" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTimeoutInterval:" swt_gen="true">
      <arg name="seconds" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setURL:" swt_gen="true">
      <arg name="URL" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setValue:forHTTPHeaderField:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="field" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSNameSpecifier" swt_gen="true" swt_superclass="NSScriptObjectSpecifier">
    <method selector="initWithContainerClassDescription:containerSpecifier:key:name:" swt_gen="true">
      <arg name="classDesc" swt_gen="true"></arg>
      <arg name="container" swt_gen="true"></arg>
      <arg name="property" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="name" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSNetService" swt_gen="true">
    <method selector="TXTRecordData" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addresses" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataFromTXTRecordDictionary:" swt_gen="true">
      <arg name="txtDictionary" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dictionaryFromTXTRecordData:" swt_gen="true">
      <arg name="txtData" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="domain" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getInputStream:outputStream:" swt_gen="true">
      <arg name="inputStream" swt_gen="true"></arg>
      <arg name="outputStream" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hostName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithDomain:type:name:" swt_gen="true">
      <arg name="domain" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithDomain:type:name:port:" swt_gen="true">
      <arg name="domain" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <arg name="port" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="name" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="port" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="protocolSpecificInformation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="publish" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="publishWithOptions:" swt_gen="true">
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeFromRunLoop:forMode:" swt_gen="true">
      <arg name="aRunLoop" swt_gen="true"></arg>
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resolve" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resolveWithTimeout:" swt_gen="true">
      <arg name="timeout" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scheduleInRunLoop:forMode:" swt_gen="true">
      <arg name="aRunLoop" swt_gen="true"></arg>
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setProtocolSpecificInformation:" swt_gen="true">
      <arg name="specificInformation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTXTRecordData:" swt_gen="true">
      <arg name="recordData" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="startMonitoring" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stop" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stopMonitoring" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="type" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSNetServiceBrowser" swt_gen="true">
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="init" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeFromRunLoop:forMode:" swt_gen="true">
      <arg name="aRunLoop" swt_gen="true"></arg>
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scheduleInRunLoop:forMode:" swt_gen="true">
      <arg name="aRunLoop" swt_gen="true"></arg>
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="searchForAllDomains" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="searchForBrowsableDomains" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="searchForRegistrationDomains" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="searchForServicesOfType:inDomain:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <arg name="domainString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stop" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSNotification" swt_gen="true">
    <method selector="name" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="notificationWithName:object:" swt_gen="true">
      <arg name="aName" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="notificationWithName:object:userInfo:" swt_gen="true">
      <arg name="aName" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <arg name="aUserInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="object" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="userInfo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSNotificationCenter" swt_gen="true">
    <method selector="addObserver:selector:name:object:" swt_gen="true">
      <arg name="observer" swt_gen="true"></arg>
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="aName" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultCenter" swt_gen="true">
      <retval swt_gen="true" swt_replace_return="NSNotificationCenter"></retval>
    </method>
    <method selector="postNotification:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="postNotificationName:object:" swt_gen="true">
      <arg name="aName" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="postNotificationName:object:userInfo:" swt_gen="true">
      <arg name="aName" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <arg name="aUserInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObserver:" swt_gen="true">
      <arg name="observer" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObserver:name:object:" swt_gen="true">
      <arg name="observer" swt_gen="true"></arg>
      <arg name="aName" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSNotificationQueue" swt_gen="true">
    <method selector="defaultQueue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dequeueNotificationsMatching:coalesceMask:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <arg name="coalesceMask" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="enqueueNotification:postingStyle:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <arg name="postingStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="enqueueNotification:postingStyle:coalesceMask:forModes:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <arg name="postingStyle" swt_gen="true"></arg>
      <arg name="coalesceMask" swt_gen="true"></arg>
      <arg name="modes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithNotificationCenter:" swt_gen="true">
      <arg name="notificationCenter" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSNull" swt_gen="true">
    <method selector="null" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSNumber" swt_gen="true" swt_superclass="NSValue">
    <method selector="boolValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="charValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="compare:" swt_gen="true">
      <arg name="otherNumber" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decimalValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptionWithLocale:" swt_gen="true">
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doubleValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="floatValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithBool:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithChar:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithDouble:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFloat:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithInt:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithInteger:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithLong:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithLongLong:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithShort:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithUnsignedChar:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithUnsignedInt:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithUnsignedInteger:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithUnsignedLong:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithUnsignedLongLong:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithUnsignedShort:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="intValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="integerValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEqualToNumber:" swt_gen="true">
      <arg name="number" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="longLongValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="longValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberWithBool:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberWithChar:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberWithDouble:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberWithFloat:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberWithInt:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberWithInteger:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberWithLong:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberWithLongLong:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberWithShort:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberWithUnsignedChar:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberWithUnsignedInt:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberWithUnsignedInteger:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberWithUnsignedLong:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberWithUnsignedLongLong:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberWithUnsignedShort:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shortValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unsignedCharValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unsignedIntValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unsignedIntegerValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unsignedLongLongValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unsignedLongValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unsignedShortValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSNumberFormatter" swt_gen="true" swt_superclass="NSFormatter">
    <method selector="allowsFloats" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alwaysShowsDecimalSeparator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributedStringForNil" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributedStringForNotANumber" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributedStringForZero" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currencyCode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currencyDecimalSeparator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currencyGroupingSeparator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currencySymbol" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decimalSeparator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultFormatterBehavior" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="exponentSymbol" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="format" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="formatWidth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="formatterBehavior" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="generatesDecimalNumbers" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getObjectValue:forString:range:error:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
      <arg name="rangep" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="groupingSeparator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="groupingSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasThousandSeparators" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="init" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="internationalCurrencySymbol" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isLenient" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isPartialStringValidationEnabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="locale" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizesFormat" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maximum" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maximumFractionDigits" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maximumIntegerDigits" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maximumSignificantDigits" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minimum" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minimumFractionDigits" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minimumIntegerDigits" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minimumSignificantDigits" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minusSign" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="multiplier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="negativeFormat" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="negativeInfinitySymbol" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="negativePrefix" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="negativeSuffix" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nilSymbol" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="notANumberSymbol" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberFromString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="paddingCharacter" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="paddingPosition" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="perMillSymbol" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="percentSymbol" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="plusSign" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="positiveFormat" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="positiveInfinitySymbol" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="positivePrefix" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="positiveSuffix" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="roundingBehavior" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="roundingIncrement" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="roundingMode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="secondaryGroupingSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsFloats:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlwaysShowsDecimalSeparator:" swt_gen="true">
      <arg name="b" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributedStringForNil:" swt_gen="true">
      <arg name="newAttributedString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributedStringForNotANumber:" swt_gen="true">
      <arg name="newAttributedString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributedStringForZero:" swt_gen="true">
      <arg name="newAttributedString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCurrencyCode:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCurrencyDecimalSeparator:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCurrencyGroupingSeparator:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCurrencySymbol:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDecimalSeparator:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDefaultFormatterBehavior:" swt_gen="true">
      <arg name="behavior" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setExponentSymbol:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFormat:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFormatWidth:" swt_gen="true">
      <arg name="number" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFormatterBehavior:" swt_gen="true">
      <arg name="behavior" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setGeneratesDecimalNumbers:" swt_gen="true">
      <arg name="b" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setGroupingSeparator:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setGroupingSize:" swt_gen="true">
      <arg name="number" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHasThousandSeparators:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setInternationalCurrencySymbol:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLenient:" swt_gen="true">
      <arg name="b" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLocale:" swt_gen="true">
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLocalizesFormat:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaximum:" swt_gen="true">
      <arg name="number" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaximumFractionDigits:" swt_gen="true">
      <arg name="number" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaximumIntegerDigits:" swt_gen="true">
      <arg name="number" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaximumSignificantDigits:" swt_gen="true">
      <arg name="number" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinimum:" swt_gen="true">
      <arg name="number" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinimumFractionDigits:" swt_gen="true">
      <arg name="number" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinimumIntegerDigits:" swt_gen="true">
      <arg name="number" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinimumSignificantDigits:" swt_gen="true">
      <arg name="number" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinusSign:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMultiplier:" swt_gen="true">
      <arg name="number" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNegativeFormat:" swt_gen="true">
      <arg name="format" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNegativeInfinitySymbol:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNegativePrefix:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNegativeSuffix:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNilSymbol:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNotANumberSymbol:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNumberStyle:" swt_gen="true">
      <arg name="style" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPaddingCharacter:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPaddingPosition:" swt_gen="true">
      <arg name="position" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPartialStringValidationEnabled:" swt_gen="true">
      <arg name="b" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPerMillSymbol:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPercentSymbol:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPlusSign:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPositiveFormat:" swt_gen="true">
      <arg name="format" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPositiveInfinitySymbol:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPositivePrefix:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPositiveSuffix:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRoundingBehavior:" swt_gen="true">
      <arg name="newRoundingBehavior" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRoundingIncrement:" swt_gen="true">
      <arg name="number" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRoundingMode:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSecondaryGroupingSize:" swt_gen="true">
      <arg name="number" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextAttributesForNegativeInfinity:" swt_gen="true">
      <arg name="newAttributes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextAttributesForNegativeValues:" swt_gen="true">
      <arg name="newAttributes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextAttributesForNil:" swt_gen="true">
      <arg name="newAttributes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextAttributesForNotANumber:" swt_gen="true">
      <arg name="newAttributes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextAttributesForPositiveInfinity:" swt_gen="true">
      <arg name="newAttributes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextAttributesForPositiveValues:" swt_gen="true">
      <arg name="newAttributes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextAttributesForZero:" swt_gen="true">
      <arg name="newAttributes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setThousandSeparator:" swt_gen="true">
      <arg name="newSeparator" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUsesGroupingSeparator:" swt_gen="true">
      <arg name="b" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUsesSignificantDigits:" swt_gen="true">
      <arg name="b" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setZeroSymbol:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringFromNumber:" swt_gen="true">
      <arg name="number" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textAttributesForNegativeInfinity" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textAttributesForNegativeValues" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textAttributesForNil" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textAttributesForNotANumber" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textAttributesForPositiveInfinity" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textAttributesForPositiveValues" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textAttributesForZero" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="thousandSeparator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesGroupingSeparator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesSignificantDigits" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="zeroSymbol" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSObject" swt_gen="true">
    <method selector="URL:resourceDataDidBecomeAvailable:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="newBytes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="URL:resourceDidFailLoadingWithReason:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="reason" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="URLHandle:resourceDataDidBecomeAvailable:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="newBytes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="URLHandle:resourceDidFailLoadingWithReason:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="reason" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="URLHandleResourceDidBeginLoading:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="URLHandleResourceDidCancelLoading:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="URLHandleResourceDidFinishLoading:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="URLProtocol:cachedResponseIsValid:" swt_gen="true">
      <arg name="protocol" swt_gen="true"></arg>
      <arg name="cachedResponse" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="URLProtocol:didCancelAuthenticationChallenge:" swt_gen="true">
      <arg name="protocol" swt_gen="true"></arg>
      <arg name="challenge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="URLProtocol:didFailWithError:" swt_gen="true">
      <arg name="protocol" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="URLProtocol:didLoadData:" swt_gen="true">
      <arg name="protocol" swt_gen="true"></arg>
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="URLProtocol:didReceiveAuthenticationChallenge:" swt_gen="true">
      <arg name="protocol" swt_gen="true"></arg>
      <arg name="challenge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="URLProtocol:didReceiveResponse:cacheStoragePolicy:" swt_gen="true">
      <arg name="protocol" swt_gen="true"></arg>
      <arg name="response" swt_gen="true"></arg>
      <arg name="policy" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="URLProtocol:wasRedirectedToRequest:redirectResponse:" swt_gen="true">
      <arg name="protocol" swt_gen="true"></arg>
      <arg name="request" swt_gen="true"></arg>
      <arg name="redirectResponse" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="URLProtocolDidFinishLoading:" swt_gen="true">
      <arg name="protocol" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="URLResourceDidCancelLoading:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="URLResourceDidFinishLoading:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="accessInstanceVariablesDirectly" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addObserver:forKeyPath:options:context:" swt_gen="true">
      <arg name="observer" swt_gen="true"></arg>
      <arg name="keyPath" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <arg name="context" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alloc" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allocWithZone:" swt_gen="true">
      <arg name="zone" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="archiver:didEncodeObject:" swt_gen="true">
      <arg name="archiver" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="archiver:willEncodeObject:" swt_gen="true">
      <arg name="archiver" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="archiver:willReplaceObject:withObject:" swt_gen="true">
      <arg name="archiver" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
      <arg name="newObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="archiverDidFinish:" swt_gen="true">
      <arg name="archiver" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="archiverWillFinish:" swt_gen="true">
      <arg name="archiver" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attemptRecoveryFromError:optionIndex:" swt_gen="true">
      <arg name="error" swt_gen="true"></arg>
      <arg name="recoveryOptionIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:" swt_gen="true">
      <arg name="error" swt_gen="true"></arg>
      <arg name="recoveryOptionIndex" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didRecoverSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributeKeys" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="authenticateComponents:withData:" swt_gen="true">
      <arg name="components" swt_gen="true"></arg>
      <arg name="signature" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="authenticationDataForComponents:" swt_gen="true">
      <arg name="components" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="automaticallyNotifiesObserversForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="autorelease" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="awakeAfterUsingCoder:" swt_gen="true">
      <arg name="aDecoder" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cancelAuthenticationChallenge:" swt_gen="true">
      <arg name="challenge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cancelPreviousPerformRequestsWithTarget:" swt_gen="true">
      <arg name="aTarget" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cancelPreviousPerformRequestsWithTarget:selector:object:" swt_gen="true">
      <arg name="aTarget" swt_gen="true"></arg>
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="anArgument" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="class" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="class" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="classCode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="classDescription" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="classFallbacksForKeyedArchiver" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="classForArchiver" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="classForCoder" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="classForKeyedArchiver" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="classForKeyedUnarchiver" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="classForPortCoder" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="className" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="coerceValue:forKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="conformsToProtocol:" swt_gen="true">
      <arg name="aProtocol" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="conformsToProtocol:" swt_gen="true">
      <arg name="protocol" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="connection:didCancelAuthenticationChallenge:" swt_gen="true">
      <arg name="connection" swt_gen="true"></arg>
      <arg name="challenge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="connection:didFailWithError:" swt_gen="true">
      <arg name="connection" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="connection:didReceiveAuthenticationChallenge:" swt_gen="true">
      <arg name="connection" swt_gen="true"></arg>
      <arg name="challenge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="connection:didReceiveData:" swt_gen="true">
      <arg name="connection" swt_gen="true"></arg>
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="connection:didReceiveResponse:" swt_gen="true">
      <arg name="connection" swt_gen="true"></arg>
      <arg name="response" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="connection:handleRequest:" swt_gen="true">
      <arg name="connection" swt_gen="true"></arg>
      <arg name="doreq" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="connection:shouldMakeNewConnection:" swt_gen="true">
      <arg name="ancestor" swt_gen="true"></arg>
      <arg name="conn" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="connection:willCacheResponse:" swt_gen="true">
      <arg name="connection" swt_gen="true"></arg>
      <arg name="cachedResponse" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="connection:willSendRequest:redirectResponse:" swt_gen="true">
      <arg name="connection" swt_gen="true"></arg>
      <arg name="request" swt_gen="true"></arg>
      <arg name="response" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="connectionDidFinishLoading:" swt_gen="true">
      <arg name="connection" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="continueWithoutCredentialForAuthenticationChallenge:" swt_gen="true">
      <arg name="challenge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="copy" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="copyScriptingValue:forKey:withProperties:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <arg name="properties" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="copyWithZone:" swt_gen="true">
      <arg name="zone" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="copyWithZone:" swt_gen="true">
      <arg name="zone" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="countByEnumeratingWithState:objects:count:" swt_gen="true">
      <arg name="state" swt_gen="true"></arg>
      <arg name="stackbuf" swt_gen="true"></arg>
      <arg name="len" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="createConversationForConnection:" swt_gen="true">
      <arg name="conn" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dealloc" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="description" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="description" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dictionaryWithValuesForKeys:" swt_gen="true">
      <arg name="keys" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="didChange:valuesAtIndexes:forKey:" swt_gen="true">
      <arg name="changeKind" swt_gen="true"></arg>
      <arg name="indexes" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="didChangeValueForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="didChangeValueForKey:withSetMutation:usingObjects:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <arg name="mutationKind" swt_gen="true"></arg>
      <arg name="objects" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doesContain:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doesNotRecognizeSelector:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="download:decideDestinationWithSuggestedFilename:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
      <arg name="filename" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="download:didCancelAuthenticationChallenge:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
      <arg name="challenge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="download:didCreateDestination:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="download:didFailWithError:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="download:didReceiveAuthenticationChallenge:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
      <arg name="challenge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="download:didReceiveDataOfLength:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="download:didReceiveResponse:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
      <arg name="response" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="download:shouldDecodeSourceDataOfMIMEType:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
      <arg name="encodingType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="download:willResumeWithResponse:fromByte:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
      <arg name="response" swt_gen="true"></arg>
      <arg name="startingByte" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="download:willSendRequest:redirectResponse:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
      <arg name="request" swt_gen="true"></arg>
      <arg name="redirectResponse" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="downloadDidBegin:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="downloadDidFinish:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodeWithCoder:" swt_gen="true">
      <arg name="aCoder" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="exceptionDuringOperation:error:leftOperand:rightOperand:" swt_gen="true">
      <arg name="operation" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <arg name="leftOperand" swt_gen="true"></arg>
      <arg name="rightOperand" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileManager:shouldCopyItemAtPath:toPath:" swt_gen="true">
      <arg name="fileManager" swt_gen="true"></arg>
      <arg name="srcPath" swt_gen="true"></arg>
      <arg name="dstPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileManager:shouldLinkItemAtPath:toPath:" swt_gen="true">
      <arg name="fileManager" swt_gen="true"></arg>
      <arg name="srcPath" swt_gen="true"></arg>
      <arg name="dstPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileManager:shouldMoveItemAtPath:toPath:" swt_gen="true">
      <arg name="fileManager" swt_gen="true"></arg>
      <arg name="srcPath" swt_gen="true"></arg>
      <arg name="dstPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileManager:shouldProceedAfterError:" swt_gen="true">
      <arg name="fm" swt_gen="true"></arg>
      <arg name="errorInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:" swt_gen="true">
      <arg name="fileManager" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <arg name="srcPath" swt_gen="true"></arg>
      <arg name="dstPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:" swt_gen="true">
      <arg name="fileManager" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <arg name="srcPath" swt_gen="true"></arg>
      <arg name="dstPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileManager:shouldProceedAfterError:movingItemAtPath:toPath:" swt_gen="true">
      <arg name="fileManager" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <arg name="srcPath" swt_gen="true"></arg>
      <arg name="dstPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileManager:shouldProceedAfterError:removingItemAtPath:" swt_gen="true">
      <arg name="fileManager" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileManager:shouldRemoveItemAtPath:" swt_gen="true">
      <arg name="fileManager" swt_gen="true"></arg>
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileManager:willProcessPath:" swt_gen="true">
      <arg name="fm" swt_gen="true"></arg>
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="finalize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="forwardInvocation:" swt_gen="true">
      <arg name="anInvocation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="handleMachMessage:" swt_gen="true">
      <arg name="msg" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="handlePortMessage:" swt_gen="true">
      <arg name="message" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="handleQueryWithUnboundKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="handleTakeValue:forUnboundKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hash" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indicesOfObjectsByEvaluatingObjectSpecifier:" swt_gen="true">
      <arg name="specifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="init" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithCoder:" swt_gen="true">
      <arg name="aDecoder" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initialize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertValue:atIndex:inPropertyWithKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertValue:inPropertyWithKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="instanceMethodForSelector:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="instanceMethodSignatureForSelector:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="instancesRespondToSelector:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="inverseForRelationshipKey:" swt_gen="true">
      <arg name="relationshipKey" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isCaseInsensitiveLike:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEqual:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEqualTo:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isGreaterThan:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isGreaterThanOrEqualTo:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isKindOfClass:" swt_gen="true">
      <arg name="aClass" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isLessThan:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isLessThanOrEqualTo:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isLike:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isMemberOfClass:" swt_gen="true">
      <arg name="aClass" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isNotEqualTo:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isProxy" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSubclassOfClass:" swt_gen="true">
      <arg name="aClass" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyPathsForValuesAffectingValueForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="load" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lock" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makeNewConnection:sender:" swt_gen="true">
      <arg name="conn" swt_gen="true"></arg>
      <arg name="ancestor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="metadataQuery:replacementObjectForResultObject:" swt_gen="true">
      <arg name="query" swt_gen="true"></arg>
      <arg name="result" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="metadataQuery:replacementValueForAttribute:value:" swt_gen="true">
      <arg name="query" swt_gen="true"></arg>
      <arg name="attrName" swt_gen="true"></arg>
      <arg name="attrValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="methodForSelector:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="methodSignatureForSelector:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mutableArrayValueForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mutableArrayValueForKeyPath:" swt_gen="true">
      <arg name="keyPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mutableCopy" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mutableCopyWithZone:" swt_gen="true">
      <arg name="zone" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mutableCopyWithZone:" swt_gen="true">
      <arg name="zone" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mutableSetValueForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mutableSetValueForKeyPath:" swt_gen="true">
      <arg name="keyPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="netService:didNotPublish:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="errorDict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="netService:didNotResolve:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="errorDict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="netService:didUpdateTXTRecordData:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="netServiceBrowser:didFindDomain:moreComing:" swt_gen="true">
      <arg name="aNetServiceBrowser" swt_gen="true"></arg>
      <arg name="domainString" swt_gen="true"></arg>
      <arg name="moreComing" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="netServiceBrowser:didFindService:moreComing:" swt_gen="true">
      <arg name="aNetServiceBrowser" swt_gen="true"></arg>
      <arg name="aNetService" swt_gen="true"></arg>
      <arg name="moreComing" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="netServiceBrowser:didNotSearch:" swt_gen="true">
      <arg name="aNetServiceBrowser" swt_gen="true"></arg>
      <arg name="errorDict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="netServiceBrowser:didRemoveDomain:moreComing:" swt_gen="true">
      <arg name="aNetServiceBrowser" swt_gen="true"></arg>
      <arg name="domainString" swt_gen="true"></arg>
      <arg name="moreComing" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="netServiceBrowser:didRemoveService:moreComing:" swt_gen="true">
      <arg name="aNetServiceBrowser" swt_gen="true"></arg>
      <arg name="aNetService" swt_gen="true"></arg>
      <arg name="moreComing" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="netServiceBrowserDidStopSearch:" swt_gen="true">
      <arg name="aNetServiceBrowser" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="netServiceBrowserWillSearch:" swt_gen="true">
      <arg name="aNetServiceBrowser" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="netServiceDidPublish:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="netServiceDidResolveAddress:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="netServiceDidStop:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="netServiceWillPublish:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="netServiceWillResolve:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="new" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="newScriptingObjectOfClass:forValueForKey:withContentsValue:properties:" swt_gen="true">
      <arg name="objectClass" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <arg name="contentsValue" swt_gen="true"></arg>
      <arg name="properties" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectSpecifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="observationInfo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="observeValueForKeyPath:ofObject:change:context:" swt_gen="true">
      <arg name="keyPath" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
      <arg name="change" swt_gen="true"></arg>
      <arg name="context" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parser:didEndElement:namespaceURI:qualifiedName:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="elementName" swt_gen="true"></arg>
      <arg name="namespaceURI" swt_gen="true"></arg>
      <arg name="qName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parser:didEndMappingPrefix:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="prefix" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parser:didStartElement:namespaceURI:qualifiedName:attributes:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="elementName" swt_gen="true"></arg>
      <arg name="namespaceURI" swt_gen="true"></arg>
      <arg name="qName" swt_gen="true"></arg>
      <arg name="attributeDict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parser:didStartMappingPrefix:toURI:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="prefix" swt_gen="true"></arg>
      <arg name="namespaceURI" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="attributeName" swt_gen="true"></arg>
      <arg name="elementName" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <arg name="defaultValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parser:foundCDATA:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="CDATABlock" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parser:foundCharacters:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parser:foundComment:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="comment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parser:foundElementDeclarationWithName:model:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="elementName" swt_gen="true"></arg>
      <arg name="model" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parser:foundExternalEntityDeclarationWithName:publicID:systemID:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <arg name="publicID" swt_gen="true"></arg>
      <arg name="systemID" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parser:foundIgnorableWhitespace:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="whitespaceString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parser:foundInternalEntityDeclarationWithName:value:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parser:foundNotationDeclarationWithName:publicID:systemID:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <arg name="publicID" swt_gen="true"></arg>
      <arg name="systemID" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parser:foundProcessingInstructionWithTarget:data:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="target" swt_gen="true"></arg>
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <arg name="publicID" swt_gen="true"></arg>
      <arg name="systemID" swt_gen="true"></arg>
      <arg name="notationName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parser:parseErrorOccurred:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="parseError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parser:resolveExternalEntityName:systemID:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <arg name="systemID" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parser:validationErrorOccurred:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="validationError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parserDidEndDocument:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parserDidStartDocument:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performSelector:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performSelector:onThread:withObject:waitUntilDone:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="thr" swt_gen="true"></arg>
      <arg name="arg" swt_gen="true"></arg>
      <arg name="wait" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performSelector:onThread:withObject:waitUntilDone:modes:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="thr" swt_gen="true"></arg>
      <arg name="arg" swt_gen="true"></arg>
      <arg name="wait" swt_gen="true"></arg>
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performSelector:withObject:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performSelector:withObject:afterDelay:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="anArgument" swt_gen="true"></arg>
      <arg name="delay" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performSelector:withObject:afterDelay:inModes:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="anArgument" swt_gen="true"></arg>
      <arg name="delay" swt_gen="true"></arg>
      <arg name="modes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performSelector:withObject:withObject:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="object1" swt_gen="true"></arg>
      <arg name="object2" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performSelectorInBackground:withObject:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="arg" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performSelectorOnMainThread:withObject:waitUntilDone:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="arg" swt_gen="true"></arg>
      <arg name="wait" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performSelectorOnMainThread:withObject:waitUntilDone:modes:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="arg" swt_gen="true"></arg>
      <arg name="wait" swt_gen="true"></arg>
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="poseAsClass:" swt_gen="true">
      <arg name="aClass" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="release" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObserver:forKeyPath:" swt_gen="true">
      <arg name="observer" swt_gen="true"></arg>
      <arg name="keyPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeValueAtIndex:fromPropertyWithKey:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceValueAtIndex:inPropertyWithKey:withValue:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replacementObjectForArchiver:" swt_gen="true">
      <arg name="archiver" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replacementObjectForCoder:" swt_gen="true">
      <arg name="aCoder" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replacementObjectForKeyedArchiver:" swt_gen="true">
      <arg name="archiver" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replacementObjectForPortCoder:" swt_gen="true">
      <arg name="coder" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resolveClassMethod:" swt_gen="true">
      <arg name="sel" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resolveInstanceMethod:" swt_gen="true">
      <arg name="sel" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="respondsToSelector:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="retain" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="retainCount" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="roundingMode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scale" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scriptingBeginsWith:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scriptingContains:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scriptingEndsWith:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scriptingIsEqualTo:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scriptingIsGreaterThan:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scriptingIsGreaterThanOrEqualTo:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scriptingIsLessThan:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scriptingIsLessThanOrEqualTo:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scriptingProperties" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scriptingValueForSpecifier:" swt_gen="true">
      <arg name="objectSpecifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="self" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setKeys:triggerChangeNotificationsForDependentKey:" swt_gen="true">
      <arg name="keys" swt_gen="true"></arg>
      <arg name="dependentKey" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNilValueForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setObservationInfo:" swt_gen="true">
      <arg name="observationInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setScriptingProperties:" swt_gen="true">
      <arg name="properties" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setValue:forKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setValue:forKeyPath:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="keyPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setValue:forUndefinedKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setValuesForKeysWithDictionary:" swt_gen="true">
      <arg name="keyedValues" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVersion:" swt_gen="true">
      <arg name="aVersion" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="spellServer:checkGrammarInString:language:details:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="stringToCheck" swt_gen="true"></arg>
      <arg name="language" swt_gen="true"></arg>
      <arg name="details" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="spellServer:didForgetWord:inLanguage:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="word" swt_gen="true"></arg>
      <arg name="language" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="spellServer:didLearnWord:inLanguage:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="word" swt_gen="true"></arg>
      <arg name="language" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="spellServer:findMisspelledWordInString:language:wordCount:countOnly:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="stringToCheck" swt_gen="true"></arg>
      <arg name="language" swt_gen="true"></arg>
      <arg name="wordCount" swt_gen="true"></arg>
      <arg name="countOnly" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="spellServer:suggestCompletionsForPartialWordRange:inString:language:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
      <arg name="language" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="spellServer:suggestGuessesForWord:inLanguage:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="word" swt_gen="true"></arg>
      <arg name="language" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="storedValueForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stream:handleEvent:" swt_gen="true">
      <arg name="aStream" swt_gen="true"></arg>
      <arg name="eventCode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="superclass" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="superclass" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="takeStoredValue:forKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="takeValue:forKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="takeValue:forKeyPath:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="keyPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="takeValuesFromDictionary:" swt_gen="true">
      <arg name="properties" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toManyRelationshipKeys" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toOneRelationshipKeys" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unableToSetNilForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unarchiver:cannotDecodeObjectOfClassName:originalClasses:" swt_gen="true">
      <arg name="unarchiver" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <arg name="classNames" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unarchiver:didDecodeObject:" swt_gen="true">
      <arg name="unarchiver" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unarchiver:willReplaceObject:withObject:" swt_gen="true">
      <arg name="unarchiver" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
      <arg name="newObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unarchiverDidFinish:" swt_gen="true">
      <arg name="unarchiver" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unarchiverWillFinish:" swt_gen="true">
      <arg name="unarchiver" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unlock" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="useCredential:forAuthenticationChallenge:" swt_gen="true">
      <arg name="credential" swt_gen="true"></arg>
      <arg name="challenge" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="useStoredAccessor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="validateValue:forKey:error:" swt_gen="true">
      <arg name="ioValue" swt_gen="true"></arg>
      <arg name="inKey" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="validateValue:forKeyPath:error:" swt_gen="true">
      <arg name="ioValue" swt_gen="true"></arg>
      <arg name="inKeyPath" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueAtIndex:inPropertyWithKey:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueForKeyPath:" swt_gen="true">
      <arg name="keyPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueForUndefinedKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueWithName:inPropertyWithKey:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueWithUniqueID:inPropertyWithKey:" swt_gen="true">
      <arg name="uniqueID" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valuesForKeys:" swt_gen="true">
      <arg name="keys" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="version" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="willChange:valuesAtIndexes:forKey:" swt_gen="true">
      <arg name="changeKind" swt_gen="true"></arg>
      <arg name="indexes" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="willChangeValueForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="willChangeValueForKey:withSetMutation:usingObjects:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <arg name="mutationKind" swt_gen="true"></arg>
      <arg name="objects" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="zone" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSOperation" swt_gen="true">
    <method selector="addDependency:" swt_gen="true">
      <arg name="op" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cancel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dependencies" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="init" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isCancelled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isConcurrent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isExecuting" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isFinished" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isReady" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="main" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="queuePriority" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeDependency:" swt_gen="true">
      <arg name="op" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setQueuePriority:" swt_gen="true">
      <arg name="p" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="start" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSOperationQueue" swt_gen="true">
    <method selector="addOperation:" swt_gen="true">
      <arg name="op" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cancelAllOperations" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSuspended" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maxConcurrentOperationCount" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="operations" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxConcurrentOperationCount:" swt_gen="true">
      <arg name="cnt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSuspended:" swt_gen="true">
      <arg name="b" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="waitUntilAllOperationsAreFinished" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSOutputStream" swt_gen="true" swt_superclass="NSStream">
    <method selector="hasSpaceAvailable" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initToBuffer:capacity:" swt_gen="true">
      <arg name="buffer" swt_gen="true"></arg>
      <arg name="capacity" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initToFileAtPath:append:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="shouldAppend" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initToMemory" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outputStreamToBuffer:capacity:" swt_gen="true">
      <arg name="buffer" swt_gen="true"></arg>
      <arg name="capacity" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outputStreamToFileAtPath:append:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="shouldAppend" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outputStreamToMemory" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="write:maxLength:" swt_gen="true">
      <arg name="buffer" swt_gen="true"></arg>
      <arg name="len" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPipe" swt_gen="true">
    <method selector="fileHandleForReading" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileHandleForWriting" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="init" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pipe" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPointerArray" swt_gen="true">
    <method selector="addPointer:" swt_gen="true">
      <arg name="pointer" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="compact" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="count" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithOptions:" swt_gen="true">
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithPointerFunctions:" swt_gen="true">
      <arg name="functions" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertPointer:atIndex:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pointerArrayWithOptions:" swt_gen="true">
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pointerArrayWithPointerFunctions:" swt_gen="true">
      <arg name="functions" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pointerArrayWithStrongObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pointerArrayWithWeakObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pointerAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pointerFunctions" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removePointerAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replacePointerAtIndex:withPointer:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCount:" swt_gen="true">
      <arg name="count" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPointerFunctions" swt_gen="true">
    <method selector="initWithOptions:" swt_gen="true">
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pointerFunctionsWithOptions:" swt_gen="true">
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUsesStrongWriteBarrier:" swt_gen="true">
      <arg name="" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUsesWeakReadAndWriteBarriers:" swt_gen="true">
      <arg name="" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesStrongWriteBarrier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesWeakReadAndWriteBarriers" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPort" swt_gen="true">
    <method selector="addConnection:toRunLoop:forMode:" swt_gen="true">
      <arg name="conn" swt_gen="true"></arg>
      <arg name="runLoop" swt_gen="true"></arg>
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allocWithZone:" swt_gen="true">
      <arg name="zone" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invalidate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isValid" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="port" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeConnection:fromRunLoop:forMode:" swt_gen="true">
      <arg name="conn" swt_gen="true"></arg>
      <arg name="runLoop" swt_gen="true"></arg>
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeFromRunLoop:forMode:" swt_gen="true">
      <arg name="runLoop" swt_gen="true"></arg>
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reservedSpaceLength" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scheduleInRunLoop:forMode:" swt_gen="true">
      <arg name="runLoop" swt_gen="true"></arg>
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendBeforeDate:components:from:reserved:" swt_gen="true">
      <arg name="limitDate" swt_gen="true"></arg>
      <arg name="components" swt_gen="true"></arg>
      <arg name="receivePort" swt_gen="true"></arg>
      <arg name="headerSpaceReserved" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendBeforeDate:msgid:components:from:reserved:" swt_gen="true">
      <arg name="limitDate" swt_gen="true"></arg>
      <arg name="msgID" swt_gen="true"></arg>
      <arg name="components" swt_gen="true"></arg>
      <arg name="receivePort" swt_gen="true"></arg>
      <arg name="headerSpaceReserved" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anId" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPortCoder" swt_gen="true" swt_superclass="NSCoder">
    <method selector="connection" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodePortObject" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dispatch" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="encodePortObject:" swt_gen="true">
      <arg name="aport" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithReceivePort:sendPort:components:" swt_gen="true">
      <arg name="rcvPort" swt_gen="true"></arg>
      <arg name="sndPort" swt_gen="true"></arg>
      <arg name="comps" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isBycopy" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isByref" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="portCoderWithReceivePort:sendPort:components:" swt_gen="true">
      <arg name="rcvPort" swt_gen="true"></arg>
      <arg name="sndPort" swt_gen="true"></arg>
      <arg name="comps" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPortMessage" swt_gen="true">
    <method selector="components" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithSendPort:receivePort:components:" swt_gen="true">
      <arg name="sendPort" swt_gen="true"></arg>
      <arg name="replyPort" swt_gen="true"></arg>
      <arg name="components" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="msgid" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="receivePort" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendBeforeDate:" swt_gen="true">
      <arg name="date" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendPort" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMsgid:" swt_gen="true">
      <arg name="msgid" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPortNameServer" swt_gen="true">
    <method selector="portForName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="portForName:host:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="host" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registerPort:name:" swt_gen="true">
      <arg name="port" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removePortForName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="systemDefaultPortNameServer" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPositionalSpecifier" swt_gen="true">
    <method selector="evaluate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithPosition:objectSpecifier:" swt_gen="true">
      <arg name="position" swt_gen="true"></arg>
      <arg name="specifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertionContainer" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertionIndex" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertionKey" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertionReplaces" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectSpecifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="position" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setInsertionClassDescription:" swt_gen="true">
      <arg name="classDescription" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPredicate" swt_gen="true">
    <method selector="evaluateWithObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="evaluateWithObject:substitutionVariables:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <arg name="bindings" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="predicateFormat" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="predicateWithFormat:" swt_gen="true">
      <arg name="predicateWithFormat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="predicateWithFormat:argumentArray:" swt_gen="true">
      <arg name="predicateFormat" swt_gen="true"></arg>
      <arg name="arguments" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="predicateWithFormat:arguments:" swt_gen="true">
      <arg name="predicateFormat" swt_gen="true"></arg>
      <arg name="argList" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="predicateWithSubstitutionVariables:" swt_gen="true">
      <arg name="variables" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="predicateWithValue:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSProcessInfo" swt_gen="true">
    <method selector="activeProcessorCount" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="arguments" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="environment" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="globallyUniqueString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hostName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="operatingSystem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="operatingSystemName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="operatingSystemVersionString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="physicalMemory" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="processIdentifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="processInfo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="processName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="processorCount" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setProcessName:" swt_gen="true">
      <arg name="newName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPropertyListSerialization" swt_gen="true">
    <method selector="dataFromPropertyList:format:errorDescription:" swt_gen="true">
      <arg name="plist" swt_gen="true"></arg>
      <arg name="format" swt_gen="true"></arg>
      <arg name="errorString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="propertyList:isValidForFormat:" swt_gen="true">
      <arg name="plist" swt_gen="true"></arg>
      <arg name="format" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="propertyListFromData:mutabilityOption:format:errorDescription:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <arg name="opt" swt_gen="true"></arg>
      <arg name="format" swt_gen="true"></arg>
      <arg name="errorString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSProtocolChecker" swt_gen="true" swt_superclass="NSProxy">
    <method selector="initWithTarget:protocol:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <arg name="aProtocol" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="protocol" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="protocolCheckerWithTarget:protocol:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <arg name="aProtocol" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="target" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSProxy" swt_gen="true">
    <method selector="alloc" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allocWithZone:" swt_gen="true">
      <arg name="zone" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="class" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dealloc" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="description" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="finalize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="forwardInvocation:" swt_gen="true">
      <arg name="invocation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="methodSignatureForSelector:" swt_gen="true">
      <arg name="sel" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="respondsToSelector:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSQuitCommand" swt_gen="true" swt_superclass="NSScriptCommand">
    <method selector="saveOptions" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSRangeSpecifier" swt_gen="true" swt_superclass="NSScriptObjectSpecifier">
    <method selector="endSpecifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContainerClassDescription:containerSpecifier:key:startSpecifier:endSpecifier:" swt_gen="true">
      <arg name="classDesc" swt_gen="true"></arg>
      <arg name="container" swt_gen="true"></arg>
      <arg name="property" swt_gen="true"></arg>
      <arg name="startSpec" swt_gen="true"></arg>
      <arg name="endSpec" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEndSpecifier:" swt_gen="true">
      <arg name="endSpec" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setStartSpecifier:" swt_gen="true">
      <arg name="startSpec" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="startSpecifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSRecursiveLock" swt_gen="true">
    <method selector="lockBeforeDate:" swt_gen="true">
      <arg name="limit" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="name" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setName:" swt_gen="true">
      <arg name="n" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tryLock" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSRelativeSpecifier" swt_gen="true" swt_superclass="NSScriptObjectSpecifier">
    <method selector="baseSpecifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContainerClassDescription:containerSpecifier:key:relativePosition:baseSpecifier:" swt_gen="true">
      <arg name="classDesc" swt_gen="true"></arg>
      <arg name="container" swt_gen="true"></arg>
      <arg name="property" swt_gen="true"></arg>
      <arg name="relPos" swt_gen="true"></arg>
      <arg name="baseSpecifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="relativePosition" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBaseSpecifier:" swt_gen="true">
      <arg name="baseSpecifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRelativePosition:" swt_gen="true">
      <arg name="relPos" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSRunLoop" swt_gen="true">
    <method selector="acceptInputForMode:beforeDate:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <arg name="limitDate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addPort:forMode:" swt_gen="true">
      <arg name="aPort" swt_gen="true"></arg>
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addTimer:forMode:" swt_gen="true">
      <arg name="timer" swt_gen="true"></arg>
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cancelPerformSelector:target:argument:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="target" swt_gen="true"></arg>
      <arg name="arg" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cancelPerformSelectorsWithTarget:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="configureAsServer" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentMode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentRunLoop" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getCFRunLoop" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="limitDateForMode:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mainRunLoop" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performSelector:target:argument:order:modes:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="target" swt_gen="true"></arg>
      <arg name="arg" swt_gen="true"></arg>
      <arg name="order" swt_gen="true"></arg>
      <arg name="modes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removePort:forMode:" swt_gen="true">
      <arg name="aPort" swt_gen="true"></arg>
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="run" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runMode:beforeDate:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <arg name="limitDate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runUntilDate:" swt_gen="true">
      <arg name="limitDate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSScanner" swt_gen="true">
    <method selector="caseSensitive" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="charactersToBeSkipped" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isAtEnd" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="locale" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedScannerWithString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scanCharactersFromSet:intoString:" swt_gen="true">
      <arg name="set" swt_gen="true"></arg>
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scanDecimal:" swt_gen="true">
      <arg name="dcm" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scanDouble:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scanFloat:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scanHexDouble:" swt_gen="true">
      <arg name="result" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scanHexFloat:" swt_gen="true">
      <arg name="result" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scanHexInt:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scanHexLongLong:" swt_gen="true">
      <arg name="result" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scanInt:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scanInteger:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scanLocation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scanLongLong:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scanString:intoString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scanUpToCharactersFromSet:intoString:" swt_gen="true">
      <arg name="set" swt_gen="true"></arg>
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scanUpToString:intoString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scannerWithString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCaseSensitive:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCharactersToBeSkipped:" swt_gen="true">
      <arg name="set" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLocale:" swt_gen="true">
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setScanLocation:" swt_gen="true">
      <arg name="pos" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="string" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSScriptClassDescription" swt_gen="true" swt_superclass="NSClassDescription">
    <method selector="appleEventCode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appleEventCodeForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="classDescriptionForClass:" swt_gen="true">
      <arg name="aClass" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="classDescriptionForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="className" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultSubcontainerAttributeKey" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasOrderedToManyRelationshipForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasPropertyForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasReadablePropertyForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasWritablePropertyForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="implementationClassName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithSuiteName:className:dictionary:" swt_gen="true">
      <arg name="suiteName" swt_gen="true"></arg>
      <arg name="className" swt_gen="true"></arg>
      <arg name="classDeclaration" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isLocationRequiredToCreateForKey:" swt_gen="true">
      <arg name="toManyRelationshipKey" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isReadOnlyKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyWithAppleEventCode:" swt_gen="true">
      <arg name="appleEventCode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="matchesAppleEventCode:" swt_gen="true">
      <arg name="appleEventCode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectorForCommand:" swt_gen="true">
      <arg name="commandDescription" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="suiteName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="superclassDescription" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="supportsCommand:" swt_gen="true">
      <arg name="commandDescription" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="typeForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSScriptCoercionHandler" swt_gen="true">
    <method selector="coerceValue:toClass:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="toClass" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registerCoercer:selector:toConvertFromClass:toClass:" swt_gen="true">
      <arg name="coercer" swt_gen="true"></arg>
      <arg name="selector" swt_gen="true"></arg>
      <arg name="fromClass" swt_gen="true"></arg>
      <arg name="toClass" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedCoercionHandler" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSScriptCommand" swt_gen="true">
    <method selector="appleEvent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="arguments" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="commandDescription" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentCommand" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="directParameter" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="evaluatedArguments" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="evaluatedReceivers" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="executeCommand" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithCommandDescription:" swt_gen="true">
      <arg name="commandDef" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isWellFormed" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performDefaultImplementation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="receiversSpecifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resumeExecutionWithResult:" swt_gen="true">
      <arg name="result" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scriptErrorExpectedTypeDescriptor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scriptErrorNumber" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scriptErrorOffendingObjectDescriptor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scriptErrorString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setArguments:" swt_gen="true">
      <arg name="args" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDirectParameter:" swt_gen="true">
      <arg name="directParameter" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setReceiversSpecifier:" swt_gen="true">
      <arg name="receiversRef" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setScriptErrorExpectedTypeDescriptor:" swt_gen="true">
      <arg name="errorExpectedTypeDescriptor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setScriptErrorNumber:" swt_gen="true">
      <arg name="errorNumber" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setScriptErrorOffendingObjectDescriptor:" swt_gen="true">
      <arg name="errorOffendingObjectDescriptor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setScriptErrorString:" swt_gen="true">
      <arg name="errorString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="suspendExecution" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSScriptCommandDescription" swt_gen="true">
    <method selector="appleEventClassCode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appleEventCode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appleEventCodeForArgumentWithName:" swt_gen="true">
      <arg name="argumentName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appleEventCodeForReturnType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="argumentNames" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="commandClassName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="commandName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="createCommandInstance" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="createCommandInstanceWithZone:" swt_gen="true">
      <arg name="zone" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithSuiteName:commandName:dictionary:" swt_gen="true">
      <arg name="suiteName" swt_gen="true"></arg>
      <arg name="commandName" swt_gen="true"></arg>
      <arg name="commandDeclaration" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isOptionalArgumentWithName:" swt_gen="true">
      <arg name="argumentName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="returnType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="suiteName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="typeForArgumentWithName:" swt_gen="true">
      <arg name="argumentName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSScriptExecutionContext" swt_gen="true">
    <method selector="objectBeingTested" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeContainerObject" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setObjectBeingTested:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRangeContainerObject:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTopLevelObject:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedScriptExecutionContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="topLevelObject" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSScriptObjectSpecifier" swt_gen="true">
    <method selector="childSpecifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="containerClassDescription" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="containerIsObjectBeingTested" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="containerIsRangeContainerObject" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="containerSpecifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="evaluationErrorNumber" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="evaluationErrorSpecifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indicesOfObjectsByEvaluatingWithContainer:count:" swt_gen="true">
      <arg name="container" swt_gen="true"></arg>
      <arg name="count" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContainerClassDescription:containerSpecifier:key:" swt_gen="true">
      <arg name="classDesc" swt_gen="true"></arg>
      <arg name="container" swt_gen="true"></arg>
      <arg name="property" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContainerSpecifier:key:" swt_gen="true">
      <arg name="container" swt_gen="true"></arg>
      <arg name="property" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="key" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyClassDescription" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectSpecifierWithDescriptor:" swt_gen="true">
      <arg name="descriptor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectsByEvaluatingSpecifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectsByEvaluatingWithContainers:" swt_gen="true">
      <arg name="containers" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setChildSpecifier:" swt_gen="true">
      <arg name="child" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContainerClassDescription:" swt_gen="true">
      <arg name="classDesc" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContainerIsObjectBeingTested:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContainerIsRangeContainerObject:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContainerSpecifier:" swt_gen="true">
      <arg name="subRef" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEvaluationErrorNumber:" swt_gen="true">
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSScriptSuiteRegistry" swt_gen="true">
    <method selector="aeteResource:" swt_gen="true">
      <arg name="languageName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appleEventCodeForSuite:" swt_gen="true">
      <arg name="suiteName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bundleForSuite:" swt_gen="true">
      <arg name="suiteName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="classDescriptionWithAppleEventCode:" swt_gen="true">
      <arg name="appleEventCode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="classDescriptionsInSuite:" swt_gen="true">
      <arg name="suiteName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="commandDescriptionWithAppleEventClass:andAppleEventCode:" swt_gen="true">
      <arg name="appleEventClassCode" swt_gen="true"></arg>
      <arg name="appleEventIDCode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="commandDescriptionsInSuite:" swt_gen="true">
      <arg name="suiteName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="loadSuiteWithDictionary:fromBundle:" swt_gen="true">
      <arg name="suiteDeclaration" swt_gen="true"></arg>
      <arg name="bundle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="loadSuitesFromBundle:" swt_gen="true">
      <arg name="bundle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registerClassDescription:" swt_gen="true">
      <arg name="classDescription" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registerCommandDescription:" swt_gen="true">
      <arg name="commandDescription" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSharedScriptSuiteRegistry:" swt_gen="true">
      <arg name="registry" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedScriptSuiteRegistry" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="suiteForAppleEventCode:" swt_gen="true">
      <arg name="appleEventCode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="suiteNames" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSScriptWhoseTest" swt_gen="true">
    <method selector="isTrue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSSet" swt_gen="true">
    <method selector="addObserver:forKeyPath:options:context:" swt_gen="true">
      <arg name="observer" swt_gen="true"></arg>
      <arg name="keyPath" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <arg name="context" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allObjects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="anyObject" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="containsObject:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="count" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="description" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="descriptionWithLocale:" swt_gen="true">
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="filteredSetUsingPredicate:" swt_gen="true">
      <arg name="predicate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithArray:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithObjects:" swt_gen="true">
      <arg name="initWithObjects" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithObjects:count:" swt_gen="true">
      <arg name="objects" swt_gen="true"></arg>
      <arg name="cnt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithSet:" swt_gen="true">
      <arg name="set" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithSet:copyItems:" swt_gen="true">
      <arg name="set" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="intersectsSet:" swt_gen="true">
      <arg name="otherSet" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEqualToSet:" swt_gen="true">
      <arg name="otherSet" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isSubsetOfSet:" swt_gen="true">
      <arg name="otherSet" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makeObjectsPerformSelector:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makeObjectsPerformSelector:withObject:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="argument" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="member:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectEnumerator" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObserver:forKeyPath:" swt_gen="true">
      <arg name="observer" swt_gen="true"></arg>
      <arg name="keyPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="set" swt_gen="true">
      <retval swt_gen="true" swt_replace_return="NSSet"></retval>
    </method>
    <method selector="setByAddingObject:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setByAddingObjectsFromArray:" swt_gen="true">
      <arg name="other" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setByAddingObjectsFromSet:" swt_gen="true">
      <arg name="other" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setValue:forKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWithArray:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWithObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWithObjects:" swt_gen="true">
      <arg name="setWithObjects" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWithObjects:count:" swt_gen="true">
      <arg name="objects" swt_gen="true"></arg>
      <arg name="cnt" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWithSet:" swt_gen="true">
      <arg name="set" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSSetCommand" swt_gen="true" swt_superclass="NSScriptCommand">
    <method selector="keySpecifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setReceiversSpecifier:" swt_gen="true">
      <arg name="receiversRef" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSSocketPort" swt_gen="true" swt_superclass="NSPort">
    <method selector="address" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="init" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initRemoteWithProtocolFamily:socketType:protocol:address:" swt_gen="true">
      <arg name="family" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <arg name="protocol" swt_gen="true"></arg>
      <arg name="address" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initRemoteWithTCPPort:host:" swt_gen="true">
      <arg name="port" swt_gen="true"></arg>
      <arg name="hostName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithProtocolFamily:socketType:protocol:address:" swt_gen="true">
      <arg name="family" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <arg name="protocol" swt_gen="true"></arg>
      <arg name="address" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithProtocolFamily:socketType:protocol:socket:" swt_gen="true">
      <arg name="family" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <arg name="protocol" swt_gen="true"></arg>
      <arg name="sock" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithTCPPort:" swt_gen="true">
      <arg name="port" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="protocol" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="protocolFamily" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="socket" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="socketType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSSocketPortNameServer" swt_gen="true" swt_superclass="NSPortNameServer">
    <method selector="defaultNameServerPortNumber" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="portForName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="portForName:host:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="host" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="portForName:host:nameServerPortNumber:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="host" swt_gen="true"></arg>
      <arg name="portNumber" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registerPort:name:" swt_gen="true">
      <arg name="port" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registerPort:name:nameServerPortNumber:" swt_gen="true">
      <arg name="port" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <arg name="portNumber" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removePortForName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDefaultNameServerPortNumber:" swt_gen="true">
      <arg name="portNumber" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedInstance" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSSortDescriptor" swt_gen="true">
    <method selector="ascending" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="compareObject:toObject:" swt_gen="true">
      <arg name="object1" swt_gen="true"></arg>
      <arg name="object2" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithKey:ascending:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <arg name="ascending" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithKey:ascending:selector:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <arg name="ascending" swt_gen="true"></arg>
      <arg name="selector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="key" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reversedSortDescriptor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selector" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSSpecifierTest" swt_gen="true" swt_superclass="NSScriptWhoseTest">
    <method selector="initWithObjectSpecifier:comparisonOperator:testObject:" swt_gen="true">
      <arg name="obj1" swt_gen="true"></arg>
      <arg name="compOp" swt_gen="true"></arg>
      <arg name="obj2" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSSpellServer" swt_gen="true">
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isWordInUserDictionaries:caseSensitive:" swt_gen="true">
      <arg name="word" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registerLanguage:byVendor:" swt_gen="true">
      <arg name="language" swt_gen="true"></arg>
      <arg name="vendor" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="run" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSStream" swt_gen="true">
    <method selector="close" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getStreamsToHost:port:inputStream:outputStream:" swt_gen="true">
      <arg name="host" swt_gen="true"></arg>
      <arg name="port" swt_gen="true"></arg>
      <arg name="inputStream" swt_gen="true"></arg>
      <arg name="outputStream" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="open" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="propertyForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeFromRunLoop:forMode:" swt_gen="true">
      <arg name="aRunLoop" swt_gen="true"></arg>
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scheduleInRunLoop:forMode:" swt_gen="true">
      <arg name="aRunLoop" swt_gen="true"></arg>
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setProperty:forKey:" swt_gen="true">
      <arg name="property" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="streamError" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="streamStatus" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSString" swt_gen="true">
    <method selector="UTF8String" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="availableStringEncodings" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="boolValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cStringLength" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cStringUsingEncoding:" swt_gen="true">
      <arg name="encoding" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canBeConvertedToEncoding:" swt_gen="true">
      <arg name="encoding" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="capitalizedString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="caseInsensitiveCompare:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="characterAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="commonPrefixWithString:options:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <arg name="mask" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="compare:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="compare:options:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <arg name="mask" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="compare:options:range:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <arg name="mask" swt_gen="true"></arg>
      <arg name="compareRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="compare:options:range:locale:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <arg name="mask" swt_gen="true"></arg>
      <arg name="compareRange" swt_gen="true"></arg>
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:" swt_gen="true">
      <arg name="outputName" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <arg name="outputArray" swt_gen="true"></arg>
      <arg name="filterTypes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="componentsSeparatedByCharactersInSet:" swt_gen="true">
      <arg name="separator" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="componentsSeparatedByString:" swt_gen="true">
      <arg name="separator" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataUsingEncoding:" swt_gen="true">
      <arg name="encoding" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataUsingEncoding:allowLossyConversion:" swt_gen="true">
      <arg name="encoding" swt_gen="true"></arg>
      <arg name="lossy" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decomposedStringWithCanonicalMapping" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decomposedStringWithCompatibilityMapping" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultCStringEncoding" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="description" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doubleValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fastestEncoding" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileSystemRepresentation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="floatValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getBytes:maxLength:usedLength:encoding:options:range:remainingRange:" swt_gen="true">
      <arg name="buffer" swt_gen="true"></arg>
      <arg name="maxBufferCount" swt_gen="true"></arg>
      <arg name="usedBufferCount" swt_gen="true"></arg>
      <arg name="encoding" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <arg name="leftover" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getCString:" swt_gen="true">
      <arg name="bytes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getCString:maxLength:" swt_gen="true">
      <arg name="bytes" swt_gen="true"></arg>
      <arg name="maxLength" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getCString:maxLength:encoding:" swt_gen="true">
      <arg name="buffer" swt_gen="true"></arg>
      <arg name="maxBufferCount" swt_gen="true"></arg>
      <arg name="encoding" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getCString:maxLength:range:remainingRange:" swt_gen="true">
      <arg name="bytes" swt_gen="true"></arg>
      <arg name="maxLength" swt_gen="true"></arg>
      <arg name="aRange" swt_gen="true"></arg>
      <arg name="leftoverRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getCharacters:" swt_gen="true">
      <arg name="buffer" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getCharacters:range:" swt_gen="true">
      <arg name="buffer" swt_gen="true"></arg>
      <arg name="aRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getFileSystemRepresentation:maxLength:" swt_gen="true">
      <arg name="cname" swt_gen="true"></arg>
      <arg name="max" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getLineStart:end:contentsEnd:forRange:" swt_gen="true">
      <arg name="startPtr" swt_gen="true"></arg>
      <arg name="lineEndPtr" swt_gen="true"></arg>
      <arg name="contentsEndPtr" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getParagraphStart:end:contentsEnd:forRange:" swt_gen="true">
      <arg name="startPtr" swt_gen="true"></arg>
      <arg name="parEndPtr" swt_gen="true"></arg>
      <arg name="contentsEndPtr" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasPrefix:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasSuffix:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hash" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="init" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithBytes:length:encoding:" swt_gen="true">
      <arg name="bytes" swt_gen="true"></arg>
      <arg name="len" swt_gen="true"></arg>
      <arg name="encoding" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithBytesNoCopy:length:encoding:freeWhenDone:" swt_gen="true">
      <arg name="bytes" swt_gen="true"></arg>
      <arg name="len" swt_gen="true"></arg>
      <arg name="encoding" swt_gen="true"></arg>
      <arg name="freeBuffer" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithCString:" swt_gen="true">
      <arg name="bytes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithCString:encoding:" swt_gen="true">
      <arg name="nullTerminatedCString" swt_gen="true"></arg>
      <arg name="encoding" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithCString:length:" swt_gen="true">
      <arg name="bytes" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithCStringNoCopy:length:freeWhenDone:" swt_gen="true">
      <arg name="bytes" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
      <arg name="freeBuffer" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithCharacters:length:" swt_gen="true">
      <arg name="characters" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithCharactersNoCopy:length:freeWhenDone:" swt_gen="true">
      <arg name="characters" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
      <arg name="freeBuffer" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfFile:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfFile:encoding:error:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="enc" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfFile:usedEncoding:error:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="enc" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfURL:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfURL:encoding:error:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="enc" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfURL:usedEncoding:error:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="enc" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithData:encoding:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <arg name="encoding" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFormat:" swt_gen="true">
      <arg name="initWithFormat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFormat:arguments:" swt_gen="true">
      <arg name="format" swt_gen="true"></arg>
      <arg name="argList" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFormat:locale:" swt_gen="true">
      <arg name="format" swt_gen="true"></arg>
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFormat:locale:arguments:" swt_gen="true">
      <arg name="format" swt_gen="true"></arg>
      <arg name="locale" swt_gen="true"></arg>
      <arg name="argList" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithString:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithUTF8String:" swt_gen="true">
      <arg name="nullTerminatedCString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="intValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="integerValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isAbsolutePath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEqualToString:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lastPathComponent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="length" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lengthOfBytesUsingEncoding:" swt_gen="true">
      <arg name="enc" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineRangeForRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedCaseInsensitiveCompare:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedCompare:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedNameOfStringEncoding:" swt_gen="true">
      <arg name="encoding" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedStringWithFormat:" swt_gen="true">
      <arg name="localizedStringWithFormat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="longLongValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lossyCString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lowercaseString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maximumLengthOfBytesUsingEncoding:" swt_gen="true">
      <arg name="enc" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="paragraphRangeForRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathComponents" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathExtension" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pathWithComponents:" swt_gen="true">
      <arg name="components" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="precomposedStringWithCanonicalMapping" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="precomposedStringWithCompatibilityMapping" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="propertyList" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="propertyListFromStringsFileFormat" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeOfCharacterFromSet:" swt_gen="true">
      <arg name="aSet" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeOfCharacterFromSet:options:" swt_gen="true">
      <arg name="aSet" swt_gen="true"></arg>
      <arg name="mask" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeOfCharacterFromSet:options:range:" swt_gen="true">
      <arg name="aSet" swt_gen="true"></arg>
      <arg name="mask" swt_gen="true"></arg>
      <arg name="searchRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeOfComposedCharacterSequenceAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeOfComposedCharacterSequencesForRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeOfString:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeOfString:options:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <arg name="mask" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeOfString:options:range:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <arg name="mask" swt_gen="true"></arg>
      <arg name="searchRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeOfString:options:range:locale:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <arg name="mask" swt_gen="true"></arg>
      <arg name="searchRange" swt_gen="true"></arg>
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="smallestEncoding" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="string" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringByAbbreviatingWithTildeInPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringByAddingPercentEscapesUsingEncoding:" swt_gen="true">
      <arg name="enc" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringByAppendingFormat:" swt_gen="true">
      <arg name="stringByAppendingFormat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringByAppendingPathComponent:" swt_gen="true">
      <arg name="str" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringByAppendingPathExtension:" swt_gen="true">
      <arg name="str" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringByAppendingString:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringByDeletingLastPathComponent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringByDeletingPathExtension" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringByExpandingTildeInPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringByFoldingWithOptions:locale:" swt_gen="true">
      <arg name="options" swt_gen="true"></arg>
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringByPaddingToLength:withString:startingAtIndex:" swt_gen="true">
      <arg name="newLength" swt_gen="true"></arg>
      <arg name="padString" swt_gen="true"></arg>
      <arg name="padIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringByReplacingCharactersInRange:withString:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <arg name="replacement" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringByReplacingOccurrencesOfString:withString:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <arg name="replacement" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringByReplacingOccurrencesOfString:withString:options:range:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <arg name="replacement" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <arg name="searchRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringByReplacingPercentEscapesUsingEncoding:" swt_gen="true">
      <arg name="enc" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringByResolvingSymlinksInPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringByStandardizingPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringByTrimmingCharactersInSet:" swt_gen="true">
      <arg name="set" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringWithCString:" swt_gen="true">
      <arg name="bytes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringWithCString:encoding:" swt_gen="true">
      <arg name="cString" swt_gen="true"></arg>
      <arg name="enc" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringWithCString:length:" swt_gen="true">
      <arg name="bytes" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringWithCharacters:length:" swt_gen="true">
      <arg name="characters" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringWithContentsOfFile:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringWithContentsOfFile:encoding:error:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="enc" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringWithContentsOfFile:usedEncoding:error:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="enc" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringWithContentsOfURL:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringWithContentsOfURL:encoding:error:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="enc" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringWithContentsOfURL:usedEncoding:error:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="enc" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringWithFormat:" swt_gen="true">
      <arg name="stringWithFormat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringWithString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringWithUTF8String:" swt_gen="true">
      <arg name="nullTerminatedCString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringsByAppendingPaths:" swt_gen="true">
      <arg name="paths" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="substringFromIndex:" swt_gen="true">
      <arg name="from" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="substringToIndex:" swt_gen="true">
      <arg name="to" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="substringWithRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="uppercaseString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToFile:atomically:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="useAuxiliaryFile" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToFile:atomically:encoding:error:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="useAuxiliaryFile" swt_gen="true"></arg>
      <arg name="enc" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToURL:atomically:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="atomically" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToURL:atomically:encoding:error:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="useAuxiliaryFile" swt_gen="true"></arg>
      <arg name="enc" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTask" swt_gen="true">
    <method selector="arguments" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentDirectoryPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="environment" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="init" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="interrupt" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isRunning" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="launch" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="launchPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="launchedTaskWithLaunchPath:arguments:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="arguments" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="processIdentifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resume" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setArguments:" swt_gen="true">
      <arg name="arguments" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCurrentDirectoryPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEnvironment:" swt_gen="true">
      <arg name="dict" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLaunchPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setStandardError:" swt_gen="true">
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setStandardInput:" swt_gen="true">
      <arg name="input" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setStandardOutput:" swt_gen="true">
      <arg name="output" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="standardError" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="standardInput" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="standardOutput" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="suspend" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="terminate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="terminationStatus" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="waitUntilExit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSThread" swt_gen="true">
    <method selector="callStackReturnAddresses" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cancel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentThread" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="detachNewThreadSelector:toTarget:withObject:" swt_gen="true">
      <arg name="selector" swt_gen="true"></arg>
      <arg name="target" swt_gen="true"></arg>
      <arg name="argument" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="exit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="init" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithTarget:selector:object:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <arg name="selector" swt_gen="true"></arg>
      <arg name="argument" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isCancelled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isExecuting" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isFinished" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isMainThread" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isMainThread" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isMultiThreaded" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="main" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mainThread" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="name" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setName:" swt_gen="true">
      <arg name="n" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setStackSize:" swt_gen="true">
      <arg name="s" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setThreadPriority:" swt_gen="true">
      <arg name="p" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sleepForTimeInterval:" swt_gen="true">
      <arg name="ti" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sleepUntilDate:" swt_gen="true">
      <arg name="date" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stackSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="start" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="threadDictionary" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="threadPriority" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTimeZone" swt_gen="true">
    <method selector="abbreviation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="abbreviationDictionary" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="abbreviationForDate:" swt_gen="true">
      <arg name="aDate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="data" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="daylightSavingTimeOffset" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="daylightSavingTimeOffsetForDate:" swt_gen="true">
      <arg name="aDate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultTimeZone" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="description" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithName:" swt_gen="true">
      <arg name="tzName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithName:data:" swt_gen="true">
      <arg name="tzName" swt_gen="true"></arg>
      <arg name="aData" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isDaylightSavingTime" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isDaylightSavingTimeForDate:" swt_gen="true">
      <arg name="aDate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEqualToTimeZone:" swt_gen="true">
      <arg name="aTimeZone" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="knownTimeZoneNames" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localTimeZone" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localizedName:locale:" swt_gen="true">
      <arg name="style" swt_gen="true"></arg>
      <arg name="locale" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="name" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nextDaylightSavingTimeTransition" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nextDaylightSavingTimeTransitionAfterDate:" swt_gen="true">
      <arg name="aDate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resetSystemTimeZone" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="secondsFromGMT" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="secondsFromGMTForDate:" swt_gen="true">
      <arg name="aDate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDefaultTimeZone:" swt_gen="true">
      <arg name="aTimeZone" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="systemTimeZone" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="timeZoneForSecondsFromGMT:" swt_gen="true">
      <arg name="seconds" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="timeZoneWithAbbreviation:" swt_gen="true">
      <arg name="abbreviation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="timeZoneWithName:" swt_gen="true">
      <arg name="tzName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="timeZoneWithName:data:" swt_gen="true">
      <arg name="tzName" swt_gen="true"></arg>
      <arg name="aData" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTimer" swt_gen="true">
    <method selector="fire" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fireDate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFireDate:interval:target:selector:userInfo:repeats:" swt_gen="true">
      <arg name="date" swt_gen="true"></arg>
      <arg name="ti" swt_gen="true"></arg>
      <arg name="t" swt_gen="true"></arg>
      <arg name="s" swt_gen="true"></arg>
      <arg name="ui" swt_gen="true"></arg>
      <arg name="rep" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="invalidate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isValid" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scheduledTimerWithTimeInterval:invocation:repeats:" swt_gen="true">
      <arg name="ti" swt_gen="true"></arg>
      <arg name="invocation" swt_gen="true"></arg>
      <arg name="yesOrNo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:" swt_gen="true">
      <arg name="ti" swt_gen="true"></arg>
      <arg name="aTarget" swt_gen="true"></arg>
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="userInfo" swt_gen="true"></arg>
      <arg name="yesOrNo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFireDate:" swt_gen="true">
      <arg name="date" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="timeInterval" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="timerWithTimeInterval:invocation:repeats:" swt_gen="true">
      <arg name="ti" swt_gen="true"></arg>
      <arg name="invocation" swt_gen="true"></arg>
      <arg name="yesOrNo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="timerWithTimeInterval:target:selector:userInfo:repeats:" swt_gen="true">
      <arg name="ti" swt_gen="true"></arg>
      <arg name="aTarget" swt_gen="true"></arg>
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="userInfo" swt_gen="true"></arg>
      <arg name="yesOrNo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="userInfo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSURL" swt_gen="true">
    <method selector="URLHandleUsingCache:" swt_gen="true">
      <arg name="shouldUseCache" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="URLWithString:" swt_gen="true">
      <arg name="URLString" swt_gen="true"></arg>
      <retval swt_gen="true" swt_replace_return="NSURL"></retval>
    </method>
    <method selector="URLWithString:relativeToURL:" swt_gen="true">
      <arg name="URLString" swt_gen="true"></arg>
      <arg name="baseURL" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="absoluteString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="absoluteURL" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="baseURL" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fileURLWithPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true" swt_replace_return="NSURL"></retval>
    </method>
    <method selector="fileURLWithPath:isDirectory:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="isDir" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fragment" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="host" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initFileURLWithPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initFileURLWithPath:isDirectory:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="isDir" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithScheme:host:path:" swt_gen="true">
      <arg name="scheme" swt_gen="true"></arg>
      <arg name="host" swt_gen="true"></arg>
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithString:" swt_gen="true">
      <arg name="URLString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithString:relativeToURL:" swt_gen="true">
      <arg name="URLString" swt_gen="true"></arg>
      <arg name="baseURL" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isFileURL" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="loadResourceDataNotifyingClient:usingCache:" swt_gen="true">
      <arg name="client" swt_gen="true"></arg>
      <arg name="shouldUseCache" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parameterString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="password" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="path" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="port" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="propertyForKey:" swt_gen="true">
      <arg name="propertyKey" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="query" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="relativePath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="relativeString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resourceDataUsingCache:" swt_gen="true">
      <arg name="shouldUseCache" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resourceSpecifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scheme" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setProperty:forKey:" swt_gen="true">
      <arg name="property" swt_gen="true"></arg>
      <arg name="propertyKey" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setResourceData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="standardizedURL" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="user" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSURLAuthenticationChallenge" swt_gen="true">
    <method selector="error" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="failureResponse" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithAuthenticationChallenge:sender:" swt_gen="true">
      <arg name="challenge" swt_gen="true"></arg>
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:" swt_gen="true">
      <arg name="space" swt_gen="true"></arg>
      <arg name="credential" swt_gen="true"></arg>
      <arg name="previousFailureCount" swt_gen="true"></arg>
      <arg name="response" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="previousFailureCount" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="proposedCredential" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="protectionSpace" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sender" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSURLCache" swt_gen="true">
    <method selector="cachedResponseForRequest:" swt_gen="true">
      <arg name="request" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentDiskUsage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentMemoryUsage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="diskCapacity" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithMemoryCapacity:diskCapacity:diskPath:" swt_gen="true">
      <arg name="memoryCapacity" swt_gen="true"></arg>
      <arg name="diskCapacity" swt_gen="true"></arg>
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="memoryCapacity" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeAllCachedResponses" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeCachedResponseForRequest:" swt_gen="true">
      <arg name="request" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDiskCapacity:" swt_gen="true">
      <arg name="diskCapacity" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMemoryCapacity:" swt_gen="true">
      <arg name="memoryCapacity" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSharedURLCache:" swt_gen="true">
      <arg name="cache" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedURLCache" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="storeCachedResponse:forRequest:" swt_gen="true">
      <arg name="cachedResponse" swt_gen="true"></arg>
      <arg name="request" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSURLConnection" swt_gen="true">
    <method selector="canHandleRequest:" swt_gen="true">
      <arg name="request" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cancel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="connectionWithRequest:delegate:" swt_gen="true">
      <arg name="request" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithRequest:delegate:" swt_gen="true">
      <arg name="request" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithRequest:delegate:startImmediately:" swt_gen="true">
      <arg name="request" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="startImmediately" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scheduleInRunLoop:forMode:" swt_gen="true">
      <arg name="aRunLoop" swt_gen="true"></arg>
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendSynchronousRequest:returningResponse:error:" swt_gen="true">
      <arg name="request" swt_gen="true"></arg>
      <arg name="response" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="start" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unscheduleFromRunLoop:forMode:" swt_gen="true">
      <arg name="aRunLoop" swt_gen="true"></arg>
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSURLCredential" swt_gen="true">
    <method selector="credentialWithUser:password:persistence:" swt_gen="true">
      <arg name="user" swt_gen="true"></arg>
      <arg name="password" swt_gen="true"></arg>
      <arg name="persistence" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasPassword" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithUser:password:persistence:" swt_gen="true">
      <arg name="user" swt_gen="true"></arg>
      <arg name="password" swt_gen="true"></arg>
      <arg name="persistence" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="password" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="persistence" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="user" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSURLCredentialStorage" swt_gen="true">
    <method selector="allCredentials" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="credentialsForProtectionSpace:" swt_gen="true">
      <arg name="space" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="defaultCredentialForProtectionSpace:" swt_gen="true">
      <arg name="space" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeCredential:forProtectionSpace:" swt_gen="true">
      <arg name="credential" swt_gen="true"></arg>
      <arg name="space" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCredential:forProtectionSpace:" swt_gen="true">
      <arg name="credential" swt_gen="true"></arg>
      <arg name="space" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDefaultCredential:forProtectionSpace:" swt_gen="true">
      <arg name="credential" swt_gen="true"></arg>
      <arg name="space" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sharedCredentialStorage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSURLDownload" swt_gen="true">
    <method selector="canResumeDownloadDecodedWithEncodingMIMEType:" swt_gen="true">
      <arg name="MIMEType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cancel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deletesFileUponFailure" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithRequest:delegate:" swt_gen="true">
      <arg name="request" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithResumeData:delegate:path:" swt_gen="true">
      <arg name="resumeData" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="request" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resumeData" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDeletesFileUponFailure:" swt_gen="true">
      <arg name="deletesFileUponFailure" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDestination:allowOverwrite:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <arg name="allowOverwrite" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSURLHandle" swt_gen="true">
    <method selector="URLHandleClassForURL:" swt_gen="true">
      <arg name="anURL" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addClient:" swt_gen="true">
      <arg name="client" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="availableResourceData" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="backgroundLoadDidFailWithReason:" swt_gen="true">
      <arg name="reason" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="beginLoadInBackground" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cachedHandleForURL:" swt_gen="true">
      <arg name="anURL" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canInitWithURL:" swt_gen="true">
      <arg name="anURL" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cancelLoadInBackground" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="didLoadBytes:loadComplete:" swt_gen="true">
      <arg name="newBytes" swt_gen="true"></arg>
      <arg name="yorn" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="endLoadInBackground" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="expectedResourceDataSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="failureReason" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="flushCachedData" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithURL:cached:" swt_gen="true">
      <arg name="anURL" swt_gen="true"></arg>
      <arg name="willCache" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="loadInBackground" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="loadInForeground" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="propertyForKey:" swt_gen="true">
      <arg name="propertyKey" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="propertyForKeyIfAvailable:" swt_gen="true">
      <arg name="propertyKey" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registerURLHandleClass:" swt_gen="true">
      <arg name="anURLHandleSubclass" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeClient:" swt_gen="true">
      <arg name="client" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resourceData" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="status" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeProperty:forKey:" swt_gen="true">
      <arg name="propertyValue" swt_gen="true"></arg>
      <arg name="propertyKey" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSURLProtectionSpace" swt_gen="true">
    <method selector="authenticationMethod" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="host" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithHost:port:protocol:realm:authenticationMethod:" swt_gen="true">
      <arg name="host" swt_gen="true"></arg>
      <arg name="port" swt_gen="true"></arg>
      <arg name="protocol" swt_gen="true"></arg>
      <arg name="realm" swt_gen="true"></arg>
      <arg name="authenticationMethod" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithProxyHost:port:type:realm:authenticationMethod:" swt_gen="true">
      <arg name="host" swt_gen="true"></arg>
      <arg name="port" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <arg name="realm" swt_gen="true"></arg>
      <arg name="authenticationMethod" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isProxy" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="port" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="protocol" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="proxyType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="realm" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="receivesCredentialSecurely" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSURLProtocol" swt_gen="true">
    <method selector="cachedResponse" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canInitWithRequest:" swt_gen="true">
      <arg name="request" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canonicalRequestForRequest:" swt_gen="true">
      <arg name="request" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="client" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithRequest:cachedResponse:client:" swt_gen="true">
      <arg name="request" swt_gen="true"></arg>
      <arg name="cachedResponse" swt_gen="true"></arg>
      <arg name="client" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="propertyForKey:inRequest:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <arg name="request" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registerClass:" swt_gen="true">
      <arg name="protocolClass" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removePropertyForKey:inRequest:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <arg name="request" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="request" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="requestIsCacheEquivalent:toRequest:" swt_gen="true">
      <arg name="a" swt_gen="true"></arg>
      <arg name="b" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setProperty:forKey:inRequest:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <arg name="request" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="startLoading" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stopLoading" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unregisterClass:" swt_gen="true">
      <arg name="protocolClass" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSURLRequest" swt_gen="true">
    <method selector="HTTPBody" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="HTTPBodyStream" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="HTTPMethod" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="HTTPShouldHandleCookies" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="URL" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allHTTPHeaderFields" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cachePolicy" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithURL:" swt_gen="true">
      <arg name="URL" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithURL:cachePolicy:timeoutInterval:" swt_gen="true">
      <arg name="URL" swt_gen="true"></arg>
      <arg name="cachePolicy" swt_gen="true"></arg>
      <arg name="timeoutInterval" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mainDocumentURL" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="requestWithURL:" swt_gen="true">
      <arg name="URL" swt_gen="true"></arg>
      <retval swt_gen="true" swt_replace_return="NSURLRequest"></retval>
    </method>
    <method selector="requestWithURL:cachePolicy:timeoutInterval:" swt_gen="true">
      <arg name="URL" swt_gen="true"></arg>
      <arg name="cachePolicy" swt_gen="true"></arg>
      <arg name="timeoutInterval" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="timeoutInterval" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueForHTTPHeaderField:" swt_gen="true">
      <arg name="field" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSURLResponse" swt_gen="true">
    <method selector="MIMEType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="URL" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="expectedContentLength" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithURL:MIMEType:expectedContentLength:textEncodingName:" swt_gen="true">
      <arg name="URL" swt_gen="true"></arg>
      <arg name="MIMEType" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="suggestedFilename" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textEncodingName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSUnarchiver" swt_gen="true" swt_superclass="NSCoder">
    <method selector="classNameDecodedForArchiveClassName:" swt_gen="true">
      <arg name="inArchiveName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="classNameDecodedForArchiveClassName:" swt_gen="true">
      <arg name="inArchiveName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeClassName:asClassName:" swt_gen="true">
      <arg name="inArchiveName" swt_gen="true"></arg>
      <arg name="trueName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="decodeClassName:asClassName:" swt_gen="true">
      <arg name="inArchiveName" swt_gen="true"></arg>
      <arg name="trueName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initForReadingWithData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isAtEnd" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectZone" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceObject:withObject:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <arg name="newObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setObjectZone:" swt_gen="true">
      <arg name="zone" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="systemVersion" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unarchiveObjectWithData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unarchiveObjectWithFile:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSUndoManager" swt_gen="true">
    <method selector="beginUndoGrouping" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canRedo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canUndo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="disableUndoRegistration" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="enableUndoRegistration" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="endUndoGrouping" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="groupingLevel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="groupsByEvent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isRedoing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isUndoRegistrationEnabled" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isUndoing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="levelsOfUndo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="prepareWithInvocationTarget:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="redo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="redoActionName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="redoMenuItemTitle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="redoMenuTitleForUndoActionName:" swt_gen="true">
      <arg name="actionName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registerUndoWithTarget:selector:object:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <arg name="selector" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeAllActions" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeAllActionsWithTarget:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runLoopModes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setActionName:" swt_gen="true">
      <arg name="actionName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setGroupsByEvent:" swt_gen="true">
      <arg name="groupsByEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLevelsOfUndo:" swt_gen="true">
      <arg name="levels" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRunLoopModes:" swt_gen="true">
      <arg name="runLoopModes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="undo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="undoActionName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="undoMenuItemTitle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="undoMenuTitleForUndoActionName:" swt_gen="true">
      <arg name="actionName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="undoNestedGroup" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSUniqueIDSpecifier" swt_gen="true" swt_superclass="NSScriptObjectSpecifier">
    <method selector="initWithContainerClassDescription:containerSpecifier:key:uniqueID:" swt_gen="true">
      <arg name="classDesc" swt_gen="true"></arg>
      <arg name="container" swt_gen="true"></arg>
      <arg name="property" swt_gen="true"></arg>
      <arg name="uniqueID" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUniqueID:" swt_gen="true">
      <arg name="uniqueID" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="uniqueID" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSUserDefaults" swt_gen="true">
    <method selector="addSuiteNamed:" swt_gen="true">
      <arg name="suiteName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="arrayForKey:" swt_gen="true">
      <arg name="defaultName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="boolForKey:" swt_gen="true">
      <arg name="defaultName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataForKey:" swt_gen="true">
      <arg name="defaultName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dictionaryForKey:" swt_gen="true">
      <arg name="defaultName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dictionaryRepresentation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doubleForKey:" swt_gen="true">
      <arg name="defaultName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="floatForKey:" swt_gen="true">
      <arg name="defaultName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="init" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithUser:" swt_gen="true">
      <arg name="username" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="integerForKey:" swt_gen="true">
      <arg name="defaultName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectForKey:" swt_gen="true">
      <arg name="defaultName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectIsForcedForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectIsForcedForKey:inDomain:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <arg name="domain" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="persistentDomainForName:" swt_gen="true">
      <arg name="domainName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="persistentDomainNames" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registerDefaults:" swt_gen="true">
      <arg name="registrationDictionary" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeObjectForKey:" swt_gen="true">
      <arg name="defaultName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removePersistentDomainForName:" swt_gen="true">
      <arg name="domainName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeSuiteNamed:" swt_gen="true">
      <arg name="suiteName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeVolatileDomainForName:" swt_gen="true">
      <arg name="domainName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resetStandardUserDefaults" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBool:forKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="defaultName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDouble:forKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="defaultName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFloat:forKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="defaultName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setInteger:forKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="defaultName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setObject:forKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="defaultName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPersistentDomain:forName:" swt_gen="true">
      <arg name="domain" swt_gen="true"></arg>
      <arg name="domainName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVolatileDomain:forName:" swt_gen="true">
      <arg name="domain" swt_gen="true"></arg>
      <arg name="domainName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="standardUserDefaults" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringArrayForKey:" swt_gen="true">
      <arg name="defaultName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringForKey:" swt_gen="true">
      <arg name="defaultName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="synchronize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="volatileDomainForName:" swt_gen="true">
      <arg name="domainName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="volatileDomainNames" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSValue" swt_gen="true">
    <method selector="getValue:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithBytes:objCType:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEqualToValue:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nonretainedObjectValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objCType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pointValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pointerValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rectValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sizeValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="value:withObjCType:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueWithBytes:objCType:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueWithNonretainedObject:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueWithPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueWithPointer:" swt_gen="true">
      <arg name="pointer" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueWithRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueWithRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueWithSize:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSValueTransformer" swt_gen="true">
    <method selector="allowsReverseTransformation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reverseTransformedValue:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setValueTransformer:forName:" swt_gen="true">
      <arg name="transformer" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="transformedValue:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="transformedValueClass" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueTransformerForName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueTransformerNames" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSWhoseSpecifier" swt_gen="true" swt_superclass="NSScriptObjectSpecifier">
    <method selector="endSubelementIdentifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="endSubelementIndex" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContainerClassDescription:containerSpecifier:key:test:" swt_gen="true">
      <arg name="classDesc" swt_gen="true"></arg>
      <arg name="container" swt_gen="true"></arg>
      <arg name="property" swt_gen="true"></arg>
      <arg name="test" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEndSubelementIdentifier:" swt_gen="true">
      <arg name="subelement" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEndSubelementIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setStartSubelementIdentifier:" swt_gen="true">
      <arg name="subelement" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setStartSubelementIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTest:" swt_gen="true">
      <arg name="test" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="startSubelementIdentifier" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="startSubelementIndex" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="test" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSXMLDTD" swt_gen="true" swt_superclass="NSXMLNode">
    <method selector="addChild:" swt_gen="true">
      <arg name="child" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributeDeclarationForName:elementName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="elementName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="elementDeclarationForName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="entityDeclarationForName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfURL:options:error:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="mask" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithData:options:error:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <arg name="mask" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertChild:atIndex:" swt_gen="true">
      <arg name="child" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertChildren:atIndex:" swt_gen="true">
      <arg name="children" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="notationDeclarationForName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="predefinedEntityDeclarationForName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="publicID" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeChildAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceChildAtIndex:withNode:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <arg name="node" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setChildren:" swt_gen="true">
      <arg name="children" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPublicID:" swt_gen="true">
      <arg name="publicID" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSystemID:" swt_gen="true">
      <arg name="systemID" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="systemID" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSXMLDTDNode" swt_gen="true" swt_superclass="NSXMLNode">
    <method selector="DTDKind" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithXMLString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isExternal" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="notationName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="publicID" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDTDKind:" swt_gen="true">
      <arg name="kind" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNotationName:" swt_gen="true">
      <arg name="notationName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPublicID:" swt_gen="true">
      <arg name="publicID" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSystemID:" swt_gen="true">
      <arg name="systemID" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="systemID" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSXMLDocument" swt_gen="true" swt_superclass="NSXMLNode">
    <method selector="DTD" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="MIMEType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="XMLData" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="XMLDataWithOptions:" swt_gen="true">
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addChild:" swt_gen="true">
      <arg name="child" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="characterEncoding" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="documentContentKind" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfURL:options:error:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <arg name="mask" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithData:options:error:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <arg name="mask" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithRootElement:" swt_gen="true">
      <arg name="element" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithXMLString:options:error:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <arg name="mask" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertChild:atIndex:" swt_gen="true">
      <arg name="child" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertChildren:atIndex:" swt_gen="true">
      <arg name="children" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isStandalone" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectByApplyingXSLT:arguments:error:" swt_gen="true">
      <arg name="xslt" swt_gen="true"></arg>
      <arg name="arguments" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectByApplyingXSLTAtURL:arguments:error:" swt_gen="true">
      <arg name="xsltURL" swt_gen="true"></arg>
      <arg name="argument" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectByApplyingXSLTString:arguments:error:" swt_gen="true">
      <arg name="xslt" swt_gen="true"></arg>
      <arg name="arguments" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeChildAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceChildAtIndex:withNode:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <arg name="node" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replacementClassForClass:" swt_gen="true">
      <arg name="cls" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rootElement" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCharacterEncoding:" swt_gen="true">
      <arg name="encoding" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setChildren:" swt_gen="true">
      <arg name="children" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDTD:" swt_gen="true">
      <arg name="documentTypeDeclaration" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDocumentContentKind:" swt_gen="true">
      <arg name="kind" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMIMEType:" swt_gen="true">
      <arg name="MIMEType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRootElement:" swt_gen="true">
      <arg name="root" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setStandalone:" swt_gen="true">
      <arg name="standalone" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVersion:" swt_gen="true">
      <arg name="version" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="validateAndReturnError:" swt_gen="true">
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="version" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSXMLElement" swt_gen="true" swt_superclass="NSXMLNode">
    <method selector="addAttribute:" swt_gen="true">
      <arg name="attribute" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addChild:" swt_gen="true">
      <arg name="child" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addNamespace:" swt_gen="true">
      <arg name="aNamespace" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributeForLocalName:URI:" swt_gen="true">
      <arg name="localName" swt_gen="true"></arg>
      <arg name="URI" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributeForName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="elementsForLocalName:URI:" swt_gen="true">
      <arg name="localName" swt_gen="true"></arg>
      <arg name="URI" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="elementsForName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithName:URI:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="URI" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithName:stringValue:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithXMLString:error:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertChild:atIndex:" swt_gen="true">
      <arg name="child" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertChildren:atIndex:" swt_gen="true">
      <arg name="children" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="namespaceForPrefix:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="namespaces" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="normalizeAdjacentTextNodesPreservingCDATA:" swt_gen="true">
      <arg name="preserve" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeAttributeForName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeChildAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeNamespaceForPrefix:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="replaceChildAtIndex:withNode:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <arg name="node" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resolveNamespaceForName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resolvePrefixForNamespaceURI:" swt_gen="true">
      <arg name="namespaceURI" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributes:" swt_gen="true">
      <arg name="attributes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributesAsDictionary:" swt_gen="true">
      <arg name="attributes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setChildren:" swt_gen="true">
      <arg name="children" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNamespaces:" swt_gen="true">
      <arg name="namespaces" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSXMLNode" swt_gen="true">
    <method selector="DTDNodeWithXMLString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="URI" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="XMLString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="XMLStringWithOptions:" swt_gen="true">
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="XPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributeWithName:URI:stringValue:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="URI" swt_gen="true"></arg>
      <arg name="stringValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributeWithName:stringValue:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="stringValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canonicalXMLStringPreservingComments:" swt_gen="true">
      <arg name="comments" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="childAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="childCount" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="children" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="commentWithStringValue:" swt_gen="true">
      <arg name="stringValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="description" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="detach" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="document" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="documentWithRootElement:" swt_gen="true">
      <arg name="element" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="elementWithName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="elementWithName:URI:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="URI" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="elementWithName:children:attributes:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="children" swt_gen="true"></arg>
      <arg name="attributes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="elementWithName:stringValue:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="index" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithKind:" swt_gen="true">
      <arg name="kind" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithKind:options:" swt_gen="true">
      <arg name="kind" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="kind" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="level" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="localNameForName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="name" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="namespaceWithName:stringValue:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="stringValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nextNode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nextSibling" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nodesForXPath:error:" swt_gen="true">
      <arg name="xpath" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectsForXQuery:constants:error:" swt_gen="true">
      <arg name="xquery" swt_gen="true"></arg>
      <arg name="constants" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectsForXQuery:error:" swt_gen="true">
      <arg name="xquery" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="predefinedNamespaceForPrefix:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="prefix" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="prefixForName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="previousNode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="previousSibling" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="processingInstructionWithName:stringValue:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="stringValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rootDocument" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setObjectValue:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setStringValue:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setStringValue:resolvingEntities:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <arg name="resolve" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setURI:" swt_gen="true">
      <arg name="URI" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textWithStringValue:" swt_gen="true">
      <arg name="stringValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSXMLParser" swt_gen="true">
    <method selector="abortParsing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="columnNumber" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithContentsOfURL:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineNumber" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parse" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parserError" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="publicID" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShouldProcessNamespaces:" swt_gen="true">
      <arg name="shouldProcessNamespaces" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShouldReportNamespacePrefixes:" swt_gen="true">
      <arg name="shouldReportNamespacePrefixes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShouldResolveExternalEntities:" swt_gen="true">
      <arg name="shouldResolveExternalEntities" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shouldProcessNamespaces" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shouldReportNamespacePrefixes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shouldResolveExternalEntities" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="systemID" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <informal_protocol name="NSArchiverCallback" swt_gen="true">
    <method selector="classForArchiver" swt_gen="true"></method>
    <method selector="replacementObjectForArchiver:" swt_gen="true">
      <arg name="archiver" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSClassDescriptionPrimitives" swt_gen="true">
    <method selector="attributeKeys" swt_gen="true"></method>
    <method selector="classDescription" swt_gen="true"></method>
    <method selector="inverseForRelationshipKey:" swt_gen="true">
      <arg name="relationshipKey" swt_gen="true"></arg>
    </method>
    <method selector="toManyRelationshipKeys" swt_gen="true"></method>
    <method selector="toOneRelationshipKeys" swt_gen="true"></method>
  </informal_protocol>
  <informal_protocol name="NSCoderMethods" swt_gen="true">
    <method selector="awakeAfterUsingCoder:" swt_gen="true">
      <arg name="aDecoder" swt_gen="true"></arg>
    </method>
    <method selector="classForCoder" swt_gen="true"></method>
    <method selector="replacementObjectForCoder:" swt_gen="true">
      <arg name="aCoder" swt_gen="true"></arg>
    </method>
    <method selector="setVersion:" swt_gen="true">
      <arg name="aVersion" swt_gen="true"></arg>
    </method>
    <method selector="version" swt_gen="true"></method>
  </informal_protocol>
  <informal_protocol name="NSComparisonMethods" swt_gen="true">
    <method selector="doesContain:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
    </method>
    <method selector="isCaseInsensitiveLike:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
    </method>
    <method selector="isEqualTo:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
    </method>
    <method selector="isGreaterThan:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
    </method>
    <method selector="isGreaterThanOrEqualTo:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
    </method>
    <method selector="isLessThan:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
    </method>
    <method selector="isLessThanOrEqualTo:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
    </method>
    <method selector="isLike:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
    </method>
    <method selector="isNotEqualTo:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSConnectionDelegateMethods" swt_gen="true">
    <method selector="authenticateComponents:withData:" swt_gen="true">
      <arg name="components" swt_gen="true"></arg>
      <arg name="signature" swt_gen="true"></arg>
    </method>
    <method selector="authenticationDataForComponents:" swt_gen="true">
      <arg name="components" swt_gen="true"></arg>
    </method>
    <method selector="connection:shouldMakeNewConnection:" swt_gen="true">
      <arg name="ancestor" swt_gen="true"></arg>
      <arg name="conn" swt_gen="true"></arg>
    </method>
    <method selector="createConversationForConnection:" swt_gen="true">
      <arg name="conn" swt_gen="true"></arg>
    </method>
    <method selector="makeNewConnection:sender:" swt_gen="true">
      <arg name="conn" swt_gen="true"></arg>
      <arg name="ancestor" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSCopyLinkMoveHandler" swt_gen="true">
    <method selector="fileManager:shouldProceedAfterError:" swt_gen="true">
      <arg name="fm" swt_gen="true"></arg>
      <arg name="errorInfo" swt_gen="true"></arg>
    </method>
    <method selector="fileManager:willProcessPath:" swt_gen="true">
      <arg name="fm" swt_gen="true"></arg>
      <arg name="path" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSDelayedPerforming" swt_gen="true">
    <method selector="cancelPreviousPerformRequestsWithTarget:" swt_gen="true">
      <arg name="aTarget" swt_gen="true"></arg>
    </method>
    <method selector="cancelPreviousPerformRequestsWithTarget:selector:object:" swt_gen="true">
      <arg name="aTarget" swt_gen="true"></arg>
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="anArgument" swt_gen="true"></arg>
    </method>
    <method selector="performSelector:withObject:afterDelay:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="anArgument" swt_gen="true"></arg>
      <arg name="delay" swt_gen="true"></arg>
    </method>
    <method selector="performSelector:withObject:afterDelay:inModes:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="anArgument" swt_gen="true"></arg>
      <arg name="delay" swt_gen="true"></arg>
      <arg name="modes" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSDeprecatedKeyValueCoding" swt_gen="true">
    <method selector="handleQueryWithUnboundKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="handleTakeValue:forUnboundKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="storedValueForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="takeStoredValue:forKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="takeValue:forKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="takeValue:forKeyPath:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="keyPath" swt_gen="true"></arg>
    </method>
    <method selector="takeValuesFromDictionary:" swt_gen="true">
      <arg name="properties" swt_gen="true"></arg>
    </method>
    <method selector="unableToSetNilForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="useStoredAccessor" swt_gen="true"></method>
    <method selector="valuesForKeys:" swt_gen="true">
      <arg name="keys" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSDeprecatedKeyValueObservingCustomization" swt_gen="true">
    <method selector="setKeys:triggerChangeNotificationsForDependentKey:" swt_gen="true">
      <arg name="keys" swt_gen="true"></arg>
      <arg name="dependentKey" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSDeprecatedMethods" swt_gen="true">
    <method selector="poseAsClass:" swt_gen="true">
      <arg name="aClass" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSDistantObjectRequestMethods" swt_gen="true">
    <method selector="connection:handleRequest:" swt_gen="true">
      <arg name="connection" swt_gen="true"></arg>
      <arg name="doreq" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSDistributedObjects" swt_gen="true">
    <method selector="classForPortCoder" swt_gen="true"></method>
    <method selector="replacementObjectForPortCoder:" swt_gen="true">
      <arg name="coder" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSErrorRecoveryAttempting" swt_gen="true">
    <method selector="attemptRecoveryFromError:optionIndex:" swt_gen="true">
      <arg name="error" swt_gen="true"></arg>
      <arg name="recoveryOptionIndex" swt_gen="true"></arg>
    </method>
    <method selector="attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:" swt_gen="true">
      <arg name="error" swt_gen="true"></arg>
      <arg name="recoveryOptionIndex" swt_gen="true"></arg>
      <arg name="delegate" swt_gen="true"></arg>
      <arg name="didRecoverSelector" swt_gen="true"></arg>
      <arg name="contextInfo" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSFileManagerFileOperationAdditions" swt_gen="true">
    <method selector="fileManager:shouldCopyItemAtPath:toPath:" swt_gen="true">
      <arg name="fileManager" swt_gen="true"></arg>
      <arg name="srcPath" swt_gen="true"></arg>
      <arg name="dstPath" swt_gen="true"></arg>
    </method>
    <method selector="fileManager:shouldLinkItemAtPath:toPath:" swt_gen="true">
      <arg name="fileManager" swt_gen="true"></arg>
      <arg name="srcPath" swt_gen="true"></arg>
      <arg name="dstPath" swt_gen="true"></arg>
    </method>
    <method selector="fileManager:shouldMoveItemAtPath:toPath:" swt_gen="true">
      <arg name="fileManager" swt_gen="true"></arg>
      <arg name="srcPath" swt_gen="true"></arg>
      <arg name="dstPath" swt_gen="true"></arg>
    </method>
    <method selector="fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:" swt_gen="true">
      <arg name="fileManager" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <arg name="srcPath" swt_gen="true"></arg>
      <arg name="dstPath" swt_gen="true"></arg>
    </method>
    <method selector="fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:" swt_gen="true">
      <arg name="fileManager" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <arg name="srcPath" swt_gen="true"></arg>
      <arg name="dstPath" swt_gen="true"></arg>
    </method>
    <method selector="fileManager:shouldProceedAfterError:movingItemAtPath:toPath:" swt_gen="true">
      <arg name="fileManager" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <arg name="srcPath" swt_gen="true"></arg>
      <arg name="dstPath" swt_gen="true"></arg>
    </method>
    <method selector="fileManager:shouldProceedAfterError:removingItemAtPath:" swt_gen="true">
      <arg name="fileManager" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
      <arg name="path" swt_gen="true"></arg>
    </method>
    <method selector="fileManager:shouldRemoveItemAtPath:" swt_gen="true">
      <arg name="fileManager" swt_gen="true"></arg>
      <arg name="path" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSKeyValueCoding" swt_gen="true">
    <method selector="accessInstanceVariablesDirectly" swt_gen="true"></method>
    <method selector="dictionaryWithValuesForKeys:" swt_gen="true">
      <arg name="keys" swt_gen="true"></arg>
    </method>
    <method selector="mutableArrayValueForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="mutableArrayValueForKeyPath:" swt_gen="true">
      <arg name="keyPath" swt_gen="true"></arg>
    </method>
    <method selector="mutableSetValueForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="mutableSetValueForKeyPath:" swt_gen="true">
      <arg name="keyPath" swt_gen="true"></arg>
    </method>
    <method selector="setNilValueForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="setValue:forKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="setValue:forKeyPath:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="keyPath" swt_gen="true"></arg>
    </method>
    <method selector="setValue:forUndefinedKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="setValuesForKeysWithDictionary:" swt_gen="true">
      <arg name="keyedValues" swt_gen="true"></arg>
    </method>
    <method selector="validateValue:forKey:error:" swt_gen="true">
      <arg name="ioValue" swt_gen="true"></arg>
      <arg name="inKey" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
    </method>
    <method selector="validateValue:forKeyPath:error:" swt_gen="true">
      <arg name="ioValue" swt_gen="true"></arg>
      <arg name="inKeyPath" swt_gen="true"></arg>
      <arg name="outError" swt_gen="true"></arg>
    </method>
    <method selector="valueForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="valueForKeyPath:" swt_gen="true">
      <arg name="keyPath" swt_gen="true"></arg>
    </method>
    <method selector="valueForUndefinedKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSKeyValueObserverNotification" swt_gen="true">
    <method selector="didChange:valuesAtIndexes:forKey:" swt_gen="true">
      <arg name="changeKind" swt_gen="true"></arg>
      <arg name="indexes" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="didChangeValueForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="didChangeValueForKey:withSetMutation:usingObjects:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <arg name="mutationKind" swt_gen="true"></arg>
      <arg name="objects" swt_gen="true"></arg>
    </method>
    <method selector="willChange:valuesAtIndexes:forKey:" swt_gen="true">
      <arg name="changeKind" swt_gen="true"></arg>
      <arg name="indexes" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="willChangeValueForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="willChangeValueForKey:withSetMutation:usingObjects:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
      <arg name="mutationKind" swt_gen="true"></arg>
      <arg name="objects" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSKeyValueObserverRegistration" swt_gen="true">
    <method selector="addObserver:forKeyPath:options:context:" swt_gen="true">
      <arg name="observer" swt_gen="true"></arg>
      <arg name="keyPath" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <arg name="context" swt_gen="true"></arg>
    </method>
    <method selector="removeObserver:forKeyPath:" swt_gen="true">
      <arg name="observer" swt_gen="true"></arg>
      <arg name="keyPath" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSKeyValueObserving" swt_gen="true">
    <method selector="observeValueForKeyPath:ofObject:change:context:" swt_gen="true">
      <arg name="keyPath" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
      <arg name="change" swt_gen="true"></arg>
      <arg name="context" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSKeyValueObservingCustomization" swt_gen="true">
    <method selector="automaticallyNotifiesObserversForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="keyPathsForValuesAffectingValueForKey:" swt_gen="true">
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="observationInfo" swt_gen="true"></method>
    <method selector="setObservationInfo:" swt_gen="true">
      <arg name="observationInfo" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSKeyedArchiverDelegate" swt_gen="true">
    <method selector="archiver:didEncodeObject:" swt_gen="true">
      <arg name="archiver" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
    </method>
    <method selector="archiver:willEncodeObject:" swt_gen="true">
      <arg name="archiver" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
    </method>
    <method selector="archiver:willReplaceObject:withObject:" swt_gen="true">
      <arg name="archiver" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
      <arg name="newObject" swt_gen="true"></arg>
    </method>
    <method selector="archiverDidFinish:" swt_gen="true">
      <arg name="archiver" swt_gen="true"></arg>
    </method>
    <method selector="archiverWillFinish:" swt_gen="true">
      <arg name="archiver" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSKeyedArchiverObjectSubstitution" swt_gen="true">
    <method selector="classFallbacksForKeyedArchiver" swt_gen="true"></method>
    <method selector="classForKeyedArchiver" swt_gen="true"></method>
    <method selector="replacementObjectForKeyedArchiver:" swt_gen="true">
      <arg name="archiver" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSKeyedUnarchiverDelegate" swt_gen="true">
    <method selector="unarchiver:cannotDecodeObjectOfClassName:originalClasses:" swt_gen="true">
      <arg name="unarchiver" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <arg name="classNames" swt_gen="true"></arg>
    </method>
    <method selector="unarchiver:didDecodeObject:" swt_gen="true">
      <arg name="unarchiver" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
    </method>
    <method selector="unarchiver:willReplaceObject:withObject:" swt_gen="true">
      <arg name="unarchiver" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
      <arg name="newObject" swt_gen="true"></arg>
    </method>
    <method selector="unarchiverDidFinish:" swt_gen="true">
      <arg name="unarchiver" swt_gen="true"></arg>
    </method>
    <method selector="unarchiverWillFinish:" swt_gen="true">
      <arg name="unarchiver" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSKeyedUnarchiverObjectSubstitution" swt_gen="true">
    <method selector="classForKeyedUnarchiver" swt_gen="true"></method>
  </informal_protocol>
  <informal_protocol name="NSMachPortDelegateMethods" swt_gen="true">
    <method selector="handleMachMessage:" swt_gen="true">
      <arg name="msg" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSMetadataQueryDelegate" swt_gen="true">
    <method selector="metadataQuery:replacementObjectForResultObject:" swt_gen="true">
      <arg name="query" swt_gen="true"></arg>
      <arg name="result" swt_gen="true"></arg>
    </method>
    <method selector="metadataQuery:replacementValueForAttribute:value:" swt_gen="true">
      <arg name="query" swt_gen="true"></arg>
      <arg name="attrName" swt_gen="true"></arg>
      <arg name="attrValue" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSNetServiceBrowserDelegateMethods" swt_gen="true">
    <method selector="netServiceBrowser:didFindDomain:moreComing:" swt_gen="true">
      <arg name="aNetServiceBrowser" swt_gen="true"></arg>
      <arg name="domainString" swt_gen="true"></arg>
      <arg name="moreComing" swt_gen="true"></arg>
    </method>
    <method selector="netServiceBrowser:didFindService:moreComing:" swt_gen="true">
      <arg name="aNetServiceBrowser" swt_gen="true"></arg>
      <arg name="aNetService" swt_gen="true"></arg>
      <arg name="moreComing" swt_gen="true"></arg>
    </method>
    <method selector="netServiceBrowser:didNotSearch:" swt_gen="true">
      <arg name="aNetServiceBrowser" swt_gen="true"></arg>
      <arg name="errorDict" swt_gen="true"></arg>
    </method>
    <method selector="netServiceBrowser:didRemoveDomain:moreComing:" swt_gen="true">
      <arg name="aNetServiceBrowser" swt_gen="true"></arg>
      <arg name="domainString" swt_gen="true"></arg>
      <arg name="moreComing" swt_gen="true"></arg>
    </method>
    <method selector="netServiceBrowser:didRemoveService:moreComing:" swt_gen="true">
      <arg name="aNetServiceBrowser" swt_gen="true"></arg>
      <arg name="aNetService" swt_gen="true"></arg>
      <arg name="moreComing" swt_gen="true"></arg>
    </method>
    <method selector="netServiceBrowserDidStopSearch:" swt_gen="true">
      <arg name="aNetServiceBrowser" swt_gen="true"></arg>
    </method>
    <method selector="netServiceBrowserWillSearch:" swt_gen="true">
      <arg name="aNetServiceBrowser" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSNetServiceDelegateMethods" swt_gen="true">
    <method selector="netService:didNotPublish:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="errorDict" swt_gen="true"></arg>
    </method>
    <method selector="netService:didNotResolve:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="errorDict" swt_gen="true"></arg>
    </method>
    <method selector="netService:didUpdateTXTRecordData:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="data" swt_gen="true"></arg>
    </method>
    <method selector="netServiceDidPublish:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="netServiceDidResolveAddress:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="netServiceDidStop:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="netServiceWillPublish:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="netServiceWillResolve:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSPortDelegateMethods" swt_gen="true">
    <method selector="handlePortMessage:" swt_gen="true">
      <arg name="message" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSScriptClassDescription" swt_gen="true">
    <method selector="classCode" swt_gen="true"></method>
    <method selector="className" swt_gen="true"></method>
  </informal_protocol>
  <informal_protocol name="NSScriptKeyValueCoding" swt_gen="true">
    <method selector="coerceValue:forKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="insertValue:atIndex:inPropertyWithKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="insertValue:inPropertyWithKey:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="removeValueAtIndex:fromPropertyWithKey:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="replaceValueAtIndex:inPropertyWithKey:withValue:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <arg name="value" swt_gen="true"></arg>
    </method>
    <method selector="valueAtIndex:inPropertyWithKey:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="valueWithName:inPropertyWithKey:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
    </method>
    <method selector="valueWithUniqueID:inPropertyWithKey:" swt_gen="true">
      <arg name="uniqueID" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSScriptObjectSpecifiers" swt_gen="true">
    <method selector="indicesOfObjectsByEvaluatingObjectSpecifier:" swt_gen="true">
      <arg name="specifier" swt_gen="true"></arg>
    </method>
    <method selector="objectSpecifier" swt_gen="true"></method>
  </informal_protocol>
  <informal_protocol name="NSScripting" swt_gen="true">
    <method selector="copyScriptingValue:forKey:withProperties:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <arg name="properties" swt_gen="true"></arg>
    </method>
    <method selector="newScriptingObjectOfClass:forValueForKey:withContentsValue:properties:" swt_gen="true">
      <arg name="objectClass" swt_gen="true"></arg>
      <arg name="key" swt_gen="true"></arg>
      <arg name="contentsValue" swt_gen="true"></arg>
      <arg name="properties" swt_gen="true"></arg>
    </method>
    <method selector="scriptingProperties" swt_gen="true"></method>
    <method selector="scriptingValueForSpecifier:" swt_gen="true">
      <arg name="objectSpecifier" swt_gen="true"></arg>
    </method>
    <method selector="setScriptingProperties:" swt_gen="true">
      <arg name="properties" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSScriptingComparisonMethods" swt_gen="true">
    <method selector="scriptingBeginsWith:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
    </method>
    <method selector="scriptingContains:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
    </method>
    <method selector="scriptingEndsWith:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
    </method>
    <method selector="scriptingIsEqualTo:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
    </method>
    <method selector="scriptingIsGreaterThan:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
    </method>
    <method selector="scriptingIsGreaterThanOrEqualTo:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
    </method>
    <method selector="scriptingIsLessThan:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
    </method>
    <method selector="scriptingIsLessThanOrEqualTo:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSSpellServerDelegate" swt_gen="true">
    <method selector="spellServer:checkGrammarInString:language:details:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="stringToCheck" swt_gen="true"></arg>
      <arg name="language" swt_gen="true"></arg>
      <arg name="details" swt_gen="true"></arg>
    </method>
    <method selector="spellServer:didForgetWord:inLanguage:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="word" swt_gen="true"></arg>
      <arg name="language" swt_gen="true"></arg>
    </method>
    <method selector="spellServer:didLearnWord:inLanguage:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="word" swt_gen="true"></arg>
      <arg name="language" swt_gen="true"></arg>
    </method>
    <method selector="spellServer:findMisspelledWordInString:language:wordCount:countOnly:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="stringToCheck" swt_gen="true"></arg>
      <arg name="language" swt_gen="true"></arg>
      <arg name="wordCount" swt_gen="true"></arg>
      <arg name="countOnly" swt_gen="true"></arg>
    </method>
    <method selector="spellServer:suggestCompletionsForPartialWordRange:inString:language:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
      <arg name="language" swt_gen="true"></arg>
    </method>
    <method selector="spellServer:suggestGuessesForWord:inLanguage:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="word" swt_gen="true"></arg>
      <arg name="language" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSStreamDelegateEventExtensions" swt_gen="true">
    <method selector="stream:handleEvent:" swt_gen="true">
      <arg name="aStream" swt_gen="true"></arg>
      <arg name="eventCode" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSThreadPerformAdditions" swt_gen="true">
    <method selector="performSelector:onThread:withObject:waitUntilDone:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="thr" swt_gen="true"></arg>
      <arg name="arg" swt_gen="true"></arg>
      <arg name="wait" swt_gen="true"></arg>
    </method>
    <method selector="performSelector:onThread:withObject:waitUntilDone:modes:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="thr" swt_gen="true"></arg>
      <arg name="arg" swt_gen="true"></arg>
      <arg name="wait" swt_gen="true"></arg>
      <arg name="array" swt_gen="true"></arg>
    </method>
    <method selector="performSelectorInBackground:withObject:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="arg" swt_gen="true"></arg>
    </method>
    <method selector="performSelectorOnMainThread:withObject:waitUntilDone:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="arg" swt_gen="true"></arg>
      <arg name="wait" swt_gen="true"></arg>
    </method>
    <method selector="performSelectorOnMainThread:withObject:waitUntilDone:modes:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="arg" swt_gen="true"></arg>
      <arg name="wait" swt_gen="true"></arg>
      <arg name="array" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSURLClient" swt_gen="true">
    <method selector="URL:resourceDataDidBecomeAvailable:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="newBytes" swt_gen="true"></arg>
    </method>
    <method selector="URL:resourceDidFailLoadingWithReason:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="reason" swt_gen="true"></arg>
    </method>
    <method selector="URLResourceDidCancelLoading:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="URLResourceDidFinishLoading:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSURLConnectionDelegate" swt_gen="true">
    <method selector="connection:didCancelAuthenticationChallenge:" swt_gen="true">
      <arg name="connection" swt_gen="true"></arg>
      <arg name="challenge" swt_gen="true"></arg>
    </method>
    <method selector="connection:didFailWithError:" swt_gen="true">
      <arg name="connection" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
    </method>
    <method selector="connection:didReceiveAuthenticationChallenge:" swt_gen="true">
      <arg name="connection" swt_gen="true"></arg>
      <arg name="challenge" swt_gen="true"></arg>
    </method>
    <method selector="connection:didReceiveData:" swt_gen="true">
      <arg name="connection" swt_gen="true"></arg>
      <arg name="data" swt_gen="true"></arg>
    </method>
    <method selector="connection:didReceiveResponse:" swt_gen="true">
      <arg name="connection" swt_gen="true"></arg>
      <arg name="response" swt_gen="true"></arg>
    </method>
    <method selector="connection:willCacheResponse:" swt_gen="true">
      <arg name="connection" swt_gen="true"></arg>
      <arg name="cachedResponse" swt_gen="true"></arg>
    </method>
    <method selector="connection:willSendRequest:redirectResponse:" swt_gen="true">
      <arg name="connection" swt_gen="true"></arg>
      <arg name="request" swt_gen="true"></arg>
      <arg name="response" swt_gen="true"></arg>
    </method>
    <method selector="connectionDidFinishLoading:" swt_gen="true">
      <arg name="connection" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSURLDownloadDelegate" swt_gen="true">
    <method selector="download:decideDestinationWithSuggestedFilename:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
      <arg name="filename" swt_gen="true"></arg>
    </method>
    <method selector="download:didCancelAuthenticationChallenge:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
      <arg name="challenge" swt_gen="true"></arg>
    </method>
    <method selector="download:didCreateDestination:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
      <arg name="path" swt_gen="true"></arg>
    </method>
    <method selector="download:didFailWithError:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
      <arg name="error" swt_gen="true"></arg>
    </method>
    <method selector="download:didReceiveAuthenticationChallenge:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
      <arg name="challenge" swt_gen="true"></arg>
    </method>
    <method selector="download:didReceiveDataOfLength:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
      <arg name="length" swt_gen="true"></arg>
    </method>
    <method selector="download:didReceiveResponse:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
      <arg name="response" swt_gen="true"></arg>
    </method>
    <method selector="download:shouldDecodeSourceDataOfMIMEType:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
      <arg name="encodingType" swt_gen="true"></arg>
    </method>
    <method selector="download:willResumeWithResponse:fromByte:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
      <arg name="response" swt_gen="true"></arg>
      <arg name="startingByte" swt_gen="true"></arg>
    </method>
    <method selector="download:willSendRequest:redirectResponse:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
      <arg name="request" swt_gen="true"></arg>
      <arg name="redirectResponse" swt_gen="true"></arg>
    </method>
    <method selector="downloadDidBegin:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
    </method>
    <method selector="downloadDidFinish:" swt_gen="true">
      <arg name="download" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSXMLParserDelegateEventAdditions" swt_gen="true">
    <method selector="parser:didEndElement:namespaceURI:qualifiedName:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="elementName" swt_gen="true"></arg>
      <arg name="namespaceURI" swt_gen="true"></arg>
      <arg name="qName" swt_gen="true"></arg>
    </method>
    <method selector="parser:didEndMappingPrefix:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="prefix" swt_gen="true"></arg>
    </method>
    <method selector="parser:didStartElement:namespaceURI:qualifiedName:attributes:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="elementName" swt_gen="true"></arg>
      <arg name="namespaceURI" swt_gen="true"></arg>
      <arg name="qName" swt_gen="true"></arg>
      <arg name="attributeDict" swt_gen="true"></arg>
    </method>
    <method selector="parser:didStartMappingPrefix:toURI:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="prefix" swt_gen="true"></arg>
      <arg name="namespaceURI" swt_gen="true"></arg>
    </method>
    <method selector="parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="attributeName" swt_gen="true"></arg>
      <arg name="elementName" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <arg name="defaultValue" swt_gen="true"></arg>
    </method>
    <method selector="parser:foundCDATA:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="CDATABlock" swt_gen="true"></arg>
    </method>
    <method selector="parser:foundCharacters:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="string" swt_gen="true"></arg>
    </method>
    <method selector="parser:foundComment:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="comment" swt_gen="true"></arg>
    </method>
    <method selector="parser:foundElementDeclarationWithName:model:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="elementName" swt_gen="true"></arg>
      <arg name="model" swt_gen="true"></arg>
    </method>
    <method selector="parser:foundExternalEntityDeclarationWithName:publicID:systemID:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <arg name="publicID" swt_gen="true"></arg>
      <arg name="systemID" swt_gen="true"></arg>
    </method>
    <method selector="parser:foundIgnorableWhitespace:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="whitespaceString" swt_gen="true"></arg>
    </method>
    <method selector="parser:foundInternalEntityDeclarationWithName:value:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <arg name="value" swt_gen="true"></arg>
    </method>
    <method selector="parser:foundNotationDeclarationWithName:publicID:systemID:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <arg name="publicID" swt_gen="true"></arg>
      <arg name="systemID" swt_gen="true"></arg>
    </method>
    <method selector="parser:foundProcessingInstructionWithTarget:data:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="target" swt_gen="true"></arg>
      <arg name="data" swt_gen="true"></arg>
    </method>
    <method selector="parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <arg name="publicID" swt_gen="true"></arg>
      <arg name="systemID" swt_gen="true"></arg>
      <arg name="notationName" swt_gen="true"></arg>
    </method>
    <method selector="parser:parseErrorOccurred:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="parseError" swt_gen="true"></arg>
    </method>
    <method selector="parser:resolveExternalEntityName:systemID:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="name" swt_gen="true"></arg>
      <arg name="systemID" swt_gen="true"></arg>
    </method>
    <method selector="parser:validationErrorOccurred:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
      <arg name="validationError" swt_gen="true"></arg>
    </method>
    <method selector="parserDidEndDocument:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
    </method>
    <method selector="parserDidStartDocument:" swt_gen="true">
      <arg name="parser" swt_gen="true"></arg>
    </method>
  </informal_protocol>
</signatures>