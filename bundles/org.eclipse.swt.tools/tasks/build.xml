<project name="org.eclipse.swt.build.buildWindows" default="build_windows" basedir=".">
	<property name="workspace.location" location=".."/>
	
	<!-- CVS user name -->
	<property name="cvsUser" value="fheidric"/>
	
	<!-- CVS values -->
	<property name="cvsRootAnon" value=":pserver:anonymous@dev.eclipse.org:/cvsroot/eclipse"/>
	<property name="cvsRoot" value=":ext:${cvsUser}@dev.eclipse.org:/cvsroot/eclipse"/>
	<property name="TAG" value="SSQ_build"/>
	
	<property name="builddir" value="org.eclipse.swt/bin/library"/>
		
	
	<!-- Low level build tasks -->
	<target name="build_win32_dll" >
		<exec dir="${basedir}\${builddir}" executable="${basedir}\${builddir}\build.bat">
			<arg line="x86"/>
			<arg line="install"/>
			<arg line="clean"/>
		</exec>
	</target>
	
	<target name="build_win64_dll" >
		<exec dir="${basedir}\${builddir}" executable="${basedir}\${builddir}\build.bat">
			<arg line="x86_64"/>
			<arg line="install"/>
			<arg line="clean"/>
		</exec>
	</target>

	<target name="build_winIA_dll" >
		<exec dir="${basedir}\${builddir}" executable="${basedir}\${builddir}\build.bat">
			<arg line="ia64"/>
			<arg line="install"/>
			<arg line="clean"/>
		</exec>
	</target>
		
	<target name="build_wince_dll" >
		<exec dir="${basedir}\${builddir}" executable="${basedir}\${builddir}\build-ce.bat">
			<arg line="install"/>
			<arg line="clean"/>
		</exec>
	</target>

	<target name="build_gtk_linux_x86" >
		<exec dir="${workdir}/${builddir}" executable="sh">
			<arg value="${workdir}/${builddir}/build.sh"/>
			<env key="JAVA_HOME" value="/bluebird/teamswt/swt-builddir/IBMJava2-141"/>
			<env key="MOZILLA_SDK" value="/bluebird/teamswt/swt-builddir/mozilla/1.4/linux_gtk2/mozilla/dist/sdk"/>
			<env key="XULRUNNER_SDK" value="/bluebird/teamswt/swt-builddir/geckoSDK/1.8.0.4/gecko-sdk"/>
			<env key="MOZILLA_INCLUDES" value="-include ${MOZILLA_SDK}/mozilla-config.h -I${MOZILLA_SDK}/../include/xpcom -I${MOZILLA_SDK}/../include/nspr -I${MOZILLA_SDK}/../include/embed_base -I${MOZILLA_SDK}/../include/embedstring -I${MOZILLA_SDK}/../include/string"/>
			<env key="MOZILLA_LIBS" value="${MOZILLA_SDK}/../lib/libembedstring.a -L${MOZILLA_SDK}/../bin -L${MOZILLA_SDK}/../lib/ -lxpcom -lnspr4 -lplds4 -lplc4"/>
			<env key="XULRUNNER_INCLUDES" value="-include ${XULRUNNER_SDK}/include/mozilla-config.h -I${XULRUNNER_SDK}/include"/>
			<env key="XULRUNNER_LIBS" value="-L${XULRUNNER_SDK}/lib -lxpcomglue"/>
			<arg value="make_mozilla"/>
			<arg value="make_xulrunner"/>
			<arg value="make_xpcominit"/>
			<arg value="install"/>
			<arg value="clean"/>
		</exec>
	</target>
	
	<target name="build_motif_linux_x86" >
		<exec dir="${workdir}/${builddir}" executable="sh">
			<arg value="${workdir}/${builddir}/build.sh"/>
			<env key="JAVA_HOME" value="/bluebird/teamswt/swt-builddir/IBMJava2-141"/>
			<env key="MOZILLA_SDK" value="/bluebird/teamswt/swt-builddir/mozilla/1.4/linux_gtk2/mozilla/dist/sdk"/>
			<env key="XULRUNNER_SDK" value="/bluebird/teamswt/swt-builddir/geckoSDK/1.8.0.4/gecko-sdk"/>
			<env key="MOZILLA_INCLUDES" value="-include ${MOZILLA_SDK}/mozilla-config.h -I${MOZILLA_SDK}/../include/xpcom -I${MOZILLA_SDK}/../include/nspr -I${MOZILLA_SDK}/../include/embed_base -I${MOZILLA_SDK}/../include/embedstring -I${MOZILLA_SDK}/../include/string"/>
			<env key="MOZILLA_LIBS" value="${MOZILLA_SDK}/../lib/libembedstring.a -L${MOZILLA_SDK}/../bin -L${MOZILLA_SDK}/../lib/ -lxpcom -lnspr4 -lplds4 -lplc4"/>
			<env key="XULRUNNER_INCLUDES" value="-include ${XULRUNNER_SDK}/include/mozilla-config.h -I${XULRUNNER_SDK}/include"/>
			<env key="XULRUNNER_LIBS" value="-L${XULRUNNER_SDK}/lib -lxpcomglue"/>
			<arg value="make_mozilla"/>
			<arg value="make_xulrunner"/>
			<arg value="make_xpcominit"/>
			<arg value="install"/>
			<arg value="clean"/>
		</exec>
	</target>

	<!-- common build tasks -->
	<target name="checkout_natives">
		<xslt style="style.xls" in="${workdir}/${cp}" out="${workdir}/files.xml">
			<param name="TAG" expression="${TAG}"/>
			<param name="workdir" expression="${workdir}"/>
		</xslt>
		<ant antfile="${workdir}/files.xml"/>
		<copy todir="${workdir}/${builddir}" flatten="true">
			<fileset dir="${workdir}/org.eclipse.swt" includes="**/library/"/>
		</copy>
	</target>
	
	<target name="get_version" >
		<property name="version_file" value="${workdir}/${builddir}/make_common.mak"/>
		<copy file="${version_file}" tofile="${workdir}/tmp"/>
		<loadproperties srcFile="${version_file}"/>
		<propertyfile file="${workdir}/tmp">
			<entry key="old_min_ver" default="${min_ver}" type="int" operation="-"/>
		</propertyfile>
		<loadproperties srcFile="${workdir}/tmp"/>
		<delete file="${workdir}/tmp"/>
		<property name="swt_version" value="${maj_ver}${min_ver}"/>
		<property name="old_version" value="${maj_ver}${old_min_ver}"/>
		<echo>Version ${swt_version} ${old_version}</echo>
	</target>
	
	<target name="new_version" if="is_new_version">
		<echo>Removing ${removed_files}</echo>
		<cvs dest="${workdir}/${fragment}" command="remove -f ${removed_files}" cvsRoot="${cvsRoot}" cvsrsh="${cvsRsh}" failonerror="true"/>
		<echo>Commiting ${removed_files}</echo>
		<cvs dest="${workdir}/${fragment}" command="commit -m 'remove v${old_version}' ${removed_files}" cvsRoot="${cvsRoot}" cvsrsh="${cvsRsh}" failonerror="true"/>
		<echo>Adding ${added_files}</echo>
		<cvs dest="${workdir}/${fragment}" command="add ${added_files}" cvsRoot="${cvsRoot}" cvsrsh="${cvsRsh}" failonerror="true"/>
	</target>
	
	<!-- Params: fragment -->
	<target name="commit_fragment" depends="get_version">
		<copy todir="${workdir}/${fragment}" overwrite="false">
			<fileset dir="${workdir}/${fragment}" includes="*${old_version}*"/>
			<regexpmapper from="(.*)${old_version}(.*)" to="\1${swt_version}\2"/>
		</copy>

		<fileset id="removeid" dir="${workdir}/${fragment}" includes="*${old_version}*"/>
		<property name="rfiles" refid="removeid"/>
		<echo file="${workdir}/tmp">removed_files=${rfiles}</echo>
		<replace file="${workdir}/tmp" token=";" value=" "/>
		<loadproperties srcfile="${workdir}/tmp"></loadproperties>
		<delete file="${workdir}/tmp"/>
		
		<fileset id= "addid" dir="${workdir}/${fragment}" includes="*${swt_version}*"/>
		<property name="afiles" refid="addid"/>
		<echo file="${workdir}/tmp">added_files=${afiles}</echo>
		<replace file="${workdir}/tmp" token=";" value=" "/>
		<loadproperties srcfile="${workdir}/tmp"></loadproperties>
		<delete file="${workdir}/tmp"/>
		
		<condition property="is_new_version">
			<not>
				<equals arg1="" arg2="${removed_files}"/>
			</not>
		</condition>
		<antcall target="new_version"/>
		
		<echo>"Commiting ${added_files}</echo>
		<cvs dest="${workdir}/${fragment}" command="commit -m 'v${swt_version}' ${added_files}" cvsRoot="${cvsRoot}" cvsrsh="${cvsRsh}" failonerror="true"/>
	</target>

	<target name="clean">
		<delete dir="${workdir}"/> 
	</target>
	
	<target name="build_windows">
		<property name="cvsRsh" value="plink"/>
		<property name="cp" value="org.eclipse.swt/.classpath_win32"/>
		<property name="fragmentWin32" value="org.eclipse.swt.win32.win32.x86"/>
		<property name="fragmentWin64" value="org.eclipse.swt.win32.win32.x86_64"/>
		<property name="fragmentWinIA" value="org.eclipse.swt.win32.win32.ia64"/>
		<property name="fragmentWinCE" value="org.eclipse.swt.win32.wce_ppc.arm"/>
		
		<!-- check out classpath, fragments, and natives -->
		<cvs cvsRoot="${cvsRootAnon}" failonerror="true">
			<commandline>
				<argument value="checkout"/>
				<argument value="-r"/>
				<argument value="${TAG}"/>
				<argument value="${cp}"/>
				<argument value="${fragmentWin32}"/>
				<argument value="${fragmentWin64}"/>
				<argument value="${fragmentWinIA}"/>
				<argument value="${fragmentWinCE}"/>
			</commandline>
		</cvs>
		<antcall target="checkout_natives"/>
			
		<!-- test only -->
		<copy file="make_common.mak" todir="${builddir}" overwrite="true"/>
		
		<!-- build libraries -->
		<antcall target="build_win32_dll"/>
		<antcall target="build_win64_dll"/>
		<antcall target="build_winIA_dll"/>
		<antcall target="build_wince_dll"/>
		
		<!-- commint libraries -->
		<antcall target="commit_fragment">
			<param name="fragment" value="${fragmentWin32}"/>
		</antcall>
		<antcall target="commit_fragment">
			<param name="fragment" value="${fragmentWin64}"/>
		</antcall>
		<antcall target="commit_fragment">
			<param name="fragment" value="${fragmentWinIA}"/>
		</antcall>
		<antcall target="commit_fragment">
			<param name="fragment" value="${fragmentWinCE}"/>
		</antcall>

	</target>
	

	<!-- Params: cp, fragment, build_target -->
	<target name="build_fragment">
		<property name="cvsRsh" value="ssh"/>
		<property name="workdir" value="${basedir}/workdir"/>
		
		<!-- check out classpath, fragments, and natives -->
		<cvs cvsRoot="${cvsRootAnon}" failonerror="true" dest="${workdir}">
			<commandline>
				<argument value="checkout"/>
				<argument value="-r"/>
				<argument value="${TAG}"/>
				<argument value="${cp}"/>
				<argument value="${fragment}"/>
			</commandline>
		</cvs>
		
		<!-- check out natives -->
		<antcall target="checkout_natives"/>
			
		<!-- test only -->
		<copy file="make_common.mak" todir="${workdir}/${builddir}" overwrite="true"/>
		
		<!-- build libraries -->
		<antcall target="${build_target}"/>
		
		<!-- commint libraries -->
		<antcall target="commit_fragment"/>
	</target>

	<!-- Params: machine, java_home, classpath, fragment, build_target -->
	<target name="build_ssh">
		<property name="jh" value="/bluebird/teamswt/swt-builddir/build/${java_home}"/>
		<property name="ant_bin" value="/bluebird/teamswt/swt-builddir/build/apache-ant-1.7.1/bin"/>
		<property name="tmpdir" value="/bluebird/teamswt/swt-builddir/build/${machine}"/>
		<property name="tools" value="org.eclipse.swt.tools/tasks"/>
		<sshexec host="${machine}" 
			username="swtbuild" 
			keyfile="C:\BUILD\ssh\swtbuild_dsa_private" 
			trust="true"
	 		command="mkdir ${tmpdir}; cd ${tmpdir}; cvs -d ${cvsRootAnon} checkout ${tools}; export JAVA_HOME=${jh}; export PATH=$PATH:${ant_bin}; cd ${tmpdir}/${tools}; ant build_fragment -Dcp=${cp} -Dfragment=${fragment} -Dbuild_target=${build_target}; cd; rm -rf ${tmpdir}"/>
	</target>
	
	
	<!-- shortcuts -->
	<target name="rhel4">
		<antcall target="build_ssh">
			<param name="machine" value="rhel4vh"/>
			<param name="java_home" value="JRE/x32/jdk1.6.0_14"/>
			<param name="cp" value="org.eclipse.swt/.classpath_gtk"/>
			<param name="fragment" value="org.eclipse.swt.gtk.linux.x86"/>
			<param name="build_target" value="build_gtk_linux_x86"/>
		</antcall>
	</target>
	
	<!-- shortcuts -->
	<target name="rhel4_motif">
		<antcall target="build_ssh">
			<param name="machine" value="rhel4vh"/>
			<param name="java_home" value="JRE/x32/jdk1.6.0_14"/>
			<param name="cp" value="org.eclipse.swt/.classpath_motif"/>
			<param name="fragment" value="org.eclipse.swt.motif.linux.x86"/>
			<param name="build_target" value="build_motif_linux_x86"/>
		</antcall>
	</target>

	<!-- Machine names -->
	<property name="ppc"  value="apollobuildserv14"/>
	<property name="solaris"  value="mmsol10"/>
	<property name="solaris_x86"  value="tswtopensol"/>
	<property name="rhel3x64"  value="tswtrh3x64"/>
	<property name="rhel4x64"  value="tswtrh4x"/>
		

</project>
