<?xml version="1.0" encoding="UTF8"?>
<signatures swt_gen="mixed">
	<constant name="NSAccessibilityButtonRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityCheckBoxRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityChildrenAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityColumnRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityComboBoxRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityConfirmAction" swt_gen="true"></constant>
	<constant name="NSAccessibilityContentsAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityDescriptionAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityDialogSubrole" swt_gen="true"></constant>
	<constant name="NSAccessibilityEnabledAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityExpandedAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityFloatingWindowSubrole" swt_gen="true"></constant>
	<constant name="NSAccessibilityFocusedAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityFocusedUIElementChangedNotification" swt_gen="true"></constant>
	<constant name="NSAccessibilityGridRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityGroupRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityHelpAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityHelpTagRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityHorizontalOrientationValue" swt_gen="true"></constant>
	<constant name="NSAccessibilityHorizontalScrollBarAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityImageRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityIncrementorRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityInsertionPointLineNumberAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityLabelValueAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityLineForIndexParameterizedAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityLinkRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityLinkTextAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityListRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityMaxValueAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityMenuBarRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityMenuButtonRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityMenuItemRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityMenuRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityMinValueAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityNextContentsAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityNumberOfCharactersAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityOrientationAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityOutlineRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityOutlineRowSubrole" swt_gen="true"></constant>
	<constant name="NSAccessibilityParentAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityPopUpButtonRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityPositionAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityPressAction" swt_gen="true"></constant>
	<constant name="NSAccessibilityPreviousContentsAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityProgressIndicatorRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityRTFForRangeParameterizedAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityRadioButtonRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityRadioGroupRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityRangeForIndexParameterizedAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityRangeForLineParameterizedAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityRangeForPositionParameterizedAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityRoleAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityRoleDescriptionAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityRowRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityScrollAreaRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityScrollBarRole" swt_gen="true"></constant>
	<constant name="NSAccessibilitySelectedAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilitySelectedChildrenAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilitySelectedChildrenChangedNotification" swt_gen="true"></constant>
	<constant name="NSAccessibilitySelectedTextAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilitySelectedTextChangedNotification" swt_gen="true"></constant>
	<constant name="NSAccessibilitySelectedTextRangeAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilitySelectedTextRangesAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityServesAsTitleForUIElementsAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilitySizeAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilitySliderRole" swt_gen="true"></constant>
	<constant name="NSAccessibilitySortButtonRole" swt_gen="true"></constant>
	<constant name="NSAccessibilitySplitterRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityStandardWindowSubrole" swt_gen="true"></constant>
	<constant name="NSAccessibilityStaticTextRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityStringForRangeParameterizedAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityStyleRangeForIndexParameterizedAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilitySubroleAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilitySystemDialogSubrole" swt_gen="true"></constant>
	<constant name="NSAccessibilityTabGroupRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityTableRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityTableRowSubrole" swt_gen="true"></constant>
	<constant name="NSAccessibilityTabsAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityTextAreaRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityTextFieldRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityTextLinkSubrole" swt_gen="true"></constant>
	<constant name="NSAccessibilityTitleAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityTitleUIElementAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityToolbarRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityTopLevelUIElementAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityUnknownRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityUnknownSubrole" swt_gen="true"></constant>
	<constant name="NSAccessibilityValueAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityValueChangedNotification" swt_gen="true"></constant>
	<constant name="NSAccessibilityValueDescriptionAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityValueIndicatorRole" swt_gen="true"></constant>
	<constant name="NSAccessibilityVerticalOrientationValue" swt_gen="true"></constant>
	<constant name="NSAccessibilityVerticalScrollBarAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityVisibleCharacterRangeAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityVisibleChildrenAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityWindowAttribute" swt_gen="true"></constant>
	<constant name="NSAccessibilityWindowRole" swt_gen="true"></constant>
	<constant name="NSBackgroundColorAttributeName" swt_gen="true"></constant>
	<constant name="NSBaselineOffsetAttributeName" swt_gen="true"></constant>
	<constant name="NSCalibratedRGBColorSpace" swt_gen="true"></constant>
	<constant name="NSDeviceRGBColorSpace" swt_gen="true"></constant>
	<constant name="NSDeviceResolution" swt_gen="true"></constant>
	<constant name="NSDragPboard" swt_gen="true"></constant>
	<constant name="NSEventTrackingRunLoopMode" swt_gen="true"></constant>
	<constant name="NSFilenamesPboardType" swt_gen="true"></constant>
	<constant name="NSFontAttributeName" swt_gen="true"></constant>
	<constant name="NSForegroundColorAttributeName" swt_gen="true"></constant>
	<constant name="NSHTMLPboardType" swt_gen="true"></constant>
	<constant name="NSLinkAttributeName" swt_gen="true"></constant>
	<constant name="NSObliquenessAttributeName" swt_gen="true"></constant>
	<constant name="NSParagraphStyleAttributeName" swt_gen="true"></constant>
	<constant name="NSPrintAllPages" swt_gen="true"></constant>
	<constant name="NSPrintCopies" swt_gen="true"></constant>
	<constant name="NSPrintFirstPage" swt_gen="true"></constant>
	<constant name="NSPrintJobDisposition" swt_gen="true"></constant>
	<constant name="NSPrintLastPage" swt_gen="true"></constant>
	<constant name="NSPrintMustCollate" swt_gen="true"></constant>
	<constant name="NSPrintPreviewJob" swt_gen="true"></constant>
	<constant name="NSPrintSaveJob" swt_gen="true"></constant>
	<constant name="NSPrintSavePath" swt_gen="true"></constant>
	<constant name="NSPrintScalingFactor" swt_gen="true"></constant>
	<constant name="NSPrintSpoolJob" swt_gen="true"></constant>
	<constant name="NSRTFPboardType" swt_gen="true"></constant>
	<constant name="NSStrikethroughColorAttributeName" swt_gen="true"></constant>
	<constant name="NSStrikethroughStyleAttributeName" swt_gen="true"></constant>
	<constant name="NSStringPboardType" swt_gen="true"></constant>
	<constant name="NSStrokeWidthAttributeName" swt_gen="true"></constant>
	<constant name="NSTIFFPboardType" swt_gen="true"></constant>
	<constant name="NSURLPboardType" swt_gen="true"></constant>
	<constant name="NSUnderlineColorAttributeName" swt_gen="true"></constant>
	<constant name="NSUnderlineStyleAttributeName" swt_gen="true"></constant>
	<enum name="NSAWTEventType" swt_gen="true"></enum>
	<enum name="NSAboveBottom" swt_gen="true"></enum>
	<enum name="NSAboveTop" swt_gen="true"></enum>
	<enum name="NSAddTraitFontAction" swt_gen="true"></enum>
	<enum name="NSAdobeCNS1CharacterCollection" swt_gen="true"></enum>
	<enum name="NSAdobeGB1CharacterCollection" swt_gen="true"></enum>
	<enum name="NSAdobeJapan1CharacterCollection" swt_gen="true"></enum>
	<enum name="NSAdobeJapan2CharacterCollection" swt_gen="true"></enum>
	<enum name="NSAdobeKorea1CharacterCollection" swt_gen="true"></enum>
	<enum name="NSAlertAlternateReturn" swt_gen="true"></enum>
	<enum name="NSAlertDefaultReturn" swt_gen="true"></enum>
	<enum name="NSAlertErrorReturn" swt_gen="true"></enum>
	<enum name="NSAlertFirstButtonReturn" swt_gen="true"></enum>
	<enum name="NSAlertOtherReturn" swt_gen="true"></enum>
	<enum name="NSAlertSecondButtonReturn" swt_gen="true"></enum>
	<enum name="NSAlertThirdButtonReturn" swt_gen="true"></enum>
	<enum name="NSAllScrollerParts" swt_gen="true"></enum>
	<enum name="NSAlphaFirstBitmapFormat" swt_gen="true"></enum>
	<enum name="NSAlphaNonpremultipliedBitmapFormat" swt_gen="true"></enum>
	<enum name="NSAlphaShiftKeyMask" swt_gen="true"></enum>
	<enum name="NSAlternateKeyMask" swt_gen="true"></enum>
	<enum name="NSAnimationBlocking" swt_gen="true"></enum>
	<enum name="NSAnimationEaseIn" swt_gen="true"></enum>
	<enum name="NSAnimationEaseInOut" swt_gen="true"></enum>
	<enum name="NSAnimationEaseOut" swt_gen="true"></enum>
	<enum name="NSAnimationEffectDisappearingItemDefault" swt_gen="true"></enum>
	<enum name="NSAnimationEffectPoof" swt_gen="true"></enum>
	<enum name="NSAnimationLinear" swt_gen="true"></enum>
	<enum name="NSAnimationNonblocking" swt_gen="true"></enum>
	<enum name="NSAnimationNonblockingThreaded" swt_gen="true"></enum>
	<enum name="NSAnyEventMask" swt_gen="true"></enum>
	<enum name="NSAnyType" swt_gen="true"></enum>
	<enum name="NSAppKitDefined" swt_gen="true"></enum>
	<enum name="NSAppKitDefinedMask" swt_gen="true"></enum>
	<enum name="NSAppKitVersionNumber10_0" swt_gen="true"></enum>
	<enum name="NSAppKitVersionNumber10_1" swt_gen="true"></enum>
	<enum name="NSAppKitVersionNumber10_2" swt_gen="true"></enum>
	<enum name="NSAppKitVersionNumber10_2_3" swt_gen="true"></enum>
	<enum name="NSAppKitVersionNumber10_3" swt_gen="true"></enum>
	<enum name="NSAppKitVersionNumber10_3_2" swt_gen="true"></enum>
	<enum name="NSAppKitVersionNumber10_3_3" swt_gen="true"></enum>
	<enum name="NSAppKitVersionNumber10_3_5" swt_gen="true"></enum>
	<enum name="NSAppKitVersionNumber10_3_7" swt_gen="true"></enum>
	<enum name="NSAppKitVersionNumber10_3_9" swt_gen="true"></enum>
	<enum name="NSAppKitVersionNumber10_4" swt_gen="true"></enum>
	<enum name="NSAppKitVersionNumberWithColumnResizingBrowser" swt_gen="true"></enum>
	<enum name="NSAppKitVersionNumberWithContinuousScrollingBrowser" swt_gen="true"></enum>
	<enum name="NSAppKitVersionNumberWithCursorSizeSupport" swt_gen="true"></enum>
	<enum name="NSAppKitVersionNumberWithCustomSheetPosition" swt_gen="true"></enum>
	<enum name="NSAppKitVersionNumberWithDirectionalTabs" swt_gen="true"></enum>
	<enum name="NSAppKitVersionNumberWithPatternColorLeakFix" swt_gen="true"></enum>
	<enum name="NSApplicationActivatedEventType" swt_gen="true"></enum>
	<enum name="NSApplicationDeactivatedEventType" swt_gen="true"></enum>
	<enum name="NSApplicationDefined" swt_gen="true"></enum>
	<enum name="NSApplicationDefinedMask" swt_gen="true"></enum>
	<enum name="NSApplicationDelegateReplyCancel" swt_gen="true"></enum>
	<enum name="NSApplicationDelegateReplyFailure" swt_gen="true"></enum>
	<enum name="NSApplicationDelegateReplySuccess" swt_gen="true"></enum>
	<enum name="NSAscendingPageOrder" swt_gen="true"></enum>
	<enum name="NSAtBottom" swt_gen="true"></enum>
	<enum name="NSAtTop" swt_gen="true"></enum>
	<enum name="NSAttachmentCharacter" swt_gen="true"></enum>
	<enum name="NSAutoPagination" swt_gen="true"></enum>
	<enum name="NSAutosaveOperation" swt_gen="true"></enum>
	<enum name="NSBMPFileType" swt_gen="true"></enum>
	<enum name="NSBackTabCharacter" swt_gen="true"></enum>
	<enum name="NSBackgroundStyleDark" swt_gen="true"></enum>
	<enum name="NSBackgroundStyleLight" swt_gen="true"></enum>
	<enum name="NSBackgroundStyleLowered" swt_gen="true"></enum>
	<enum name="NSBackgroundStyleRaised" swt_gen="true"></enum>
	<enum name="NSBackgroundTab" swt_gen="true"></enum>
	<enum name="NSBackingStoreBuffered" swt_gen="true"></enum>
	<enum name="NSBackingStoreNonretained" swt_gen="true"></enum>
	<enum name="NSBackingStoreRetained" swt_gen="true"></enum>
	<enum name="NSBackspaceCharacter" swt_gen="true"></enum>
	<enum name="NSBacktabTextMovement" swt_gen="true"></enum>
	<enum name="NSBeginFunctionKey" swt_gen="true"></enum>
	<enum name="NSBelowBottom" swt_gen="true"></enum>
	<enum name="NSBelowTop" swt_gen="true"></enum>
	<enum name="NSBevelLineJoinStyle" swt_gen="true"></enum>
	<enum name="NSBezelBorder" swt_gen="true"></enum>
	<enum name="NSBlueControlTint" swt_gen="true"></enum>
	<enum name="NSBoldFontMask" swt_gen="true"></enum>
	<enum name="NSBorderlessWindowMask" swt_gen="true"></enum>
	<enum name="NSBottomTabsBezelBorder" swt_gen="true"></enum>
	<enum name="NSBoxCustom" swt_gen="true"></enum>
	<enum name="NSBoxOldStyle" swt_gen="true"></enum>
	<enum name="NSBoxPrimary" swt_gen="true"></enum>
	<enum name="NSBoxSecondary" swt_gen="true"></enum>
	<enum name="NSBoxSeparator" swt_gen="true"></enum>
	<enum name="NSBreakFunctionKey" swt_gen="true"></enum>
	<enum name="NSBrowserAutoColumnResizing" swt_gen="true"></enum>
	<enum name="NSBrowserDropAbove" swt_gen="true"></enum>
	<enum name="NSBrowserDropOn" swt_gen="true"></enum>
	<enum name="NSBrowserNoColumnResizing" swt_gen="true"></enum>
	<enum name="NSBrowserUserColumnResizing" swt_gen="true"></enum>
	<enum name="NSButtLineCapStyle" swt_gen="true"></enum>
	<enum name="NSCMYKColorSpaceModel" swt_gen="true"></enum>
	<enum name="NSCMYKModeColorPanel" swt_gen="true"></enum>
	<enum name="NSCancelButton" swt_gen="true"></enum>
	<enum name="NSCancelTextMovement" swt_gen="true"></enum>
	<enum name="NSCarriageReturnCharacter" swt_gen="true"></enum>
	<enum name="NSCellAllowsMixedState" swt_gen="true"></enum>
	<enum name="NSCellChangesContents" swt_gen="true"></enum>
	<enum name="NSCellDisabled" swt_gen="true"></enum>
	<enum name="NSCellEditable" swt_gen="true"></enum>
	<enum name="NSCellHasImageHorizontal" swt_gen="true"></enum>
	<enum name="NSCellHasImageOnLeftOrBottom" swt_gen="true"></enum>
	<enum name="NSCellHasOverlappingImage" swt_gen="true"></enum>
	<enum name="NSCellHighlighted" swt_gen="true"></enum>
	<enum name="NSCellHitContentArea" swt_gen="true"></enum>
	<enum name="NSCellHitEditableTextArea" swt_gen="true"></enum>
	<enum name="NSCellHitNone" swt_gen="true"></enum>
	<enum name="NSCellHitTrackableArea" swt_gen="true"></enum>
	<enum name="NSCellIsBordered" swt_gen="true"></enum>
	<enum name="NSCellIsInsetButton" swt_gen="true"></enum>
	<enum name="NSCellLightsByBackground" swt_gen="true"></enum>
	<enum name="NSCellLightsByContents" swt_gen="true"></enum>
	<enum name="NSCellLightsByGray" swt_gen="true"></enum>
	<enum name="NSCellState" swt_gen="true"></enum>
	<enum name="NSCenterTabStopType" swt_gen="true"></enum>
	<enum name="NSCenterTextAlignment" swt_gen="true"></enum>
	<enum name="NSChangeAutosaved" swt_gen="true"></enum>
	<enum name="NSChangeBackgroundCell" swt_gen="true"></enum>
	<enum name="NSChangeBackgroundCellMask" swt_gen="true"></enum>
	<enum name="NSChangeCleared" swt_gen="true"></enum>
	<enum name="NSChangeDone" swt_gen="true"></enum>
	<enum name="NSChangeGrayCell" swt_gen="true"></enum>
	<enum name="NSChangeGrayCellMask" swt_gen="true"></enum>
	<enum name="NSChangeReadOtherContents" swt_gen="true"></enum>
	<enum name="NSChangeRedone" swt_gen="true"></enum>
	<enum name="NSChangeUndone" swt_gen="true"></enum>
	<enum name="NSCircularBezelStyle" swt_gen="true"></enum>
	<enum name="NSCircularSlider" swt_gen="true"></enum>
	<enum name="NSClearControlTint" swt_gen="true"></enum>
	<enum name="NSClearDisplayFunctionKey" swt_gen="true"></enum>
	<enum name="NSClearLineFunctionKey" swt_gen="true"></enum>
	<enum name="NSClipPagination" swt_gen="true"></enum>
	<enum name="NSClockAndCalendarDatePickerStyle" swt_gen="true"></enum>
	<enum name="NSClosableWindowMask" swt_gen="true"></enum>
	<enum name="NSClosePathBezierPathElement" swt_gen="true"></enum>
	<enum name="NSColorListModeColorPanel" swt_gen="true"></enum>
	<enum name="NSColorPanelAllModesMask" swt_gen="true"></enum>
	<enum name="NSColorPanelCMYKModeMask" swt_gen="true"></enum>
	<enum name="NSColorPanelColorListModeMask" swt_gen="true"></enum>
	<enum name="NSColorPanelCrayonModeMask" swt_gen="true"></enum>
	<enum name="NSColorPanelCustomPaletteModeMask" swt_gen="true"></enum>
	<enum name="NSColorPanelGrayModeMask" swt_gen="true"></enum>
	<enum name="NSColorPanelHSBModeMask" swt_gen="true"></enum>
	<enum name="NSColorPanelRGBModeMask" swt_gen="true"></enum>
	<enum name="NSColorPanelWheelModeMask" swt_gen="true"></enum>
	<enum name="NSColorRenderingIntentAbsoluteColorimetric" swt_gen="true"></enum>
	<enum name="NSColorRenderingIntentDefault" swt_gen="true"></enum>
	<enum name="NSColorRenderingIntentPerceptual" swt_gen="true"></enum>
	<enum name="NSColorRenderingIntentRelativeColorimetric" swt_gen="true"></enum>
	<enum name="NSColorRenderingIntentSaturation" swt_gen="true"></enum>
	<enum name="NSCommandKeyMask" swt_gen="true"></enum>
	<enum name="NSCompositeClear" swt_gen="true"></enum>
	<enum name="NSCompositeCopy" swt_gen="true"></enum>
	<enum name="NSCompositeDestinationAtop" swt_gen="true"></enum>
	<enum name="NSCompositeDestinationIn" swt_gen="true"></enum>
	<enum name="NSCompositeDestinationOut" swt_gen="true"></enum>
	<enum name="NSCompositeDestinationOver" swt_gen="true"></enum>
	<enum name="NSCompositeHighlight" swt_gen="true"></enum>
	<enum name="NSCompositePlusDarker" swt_gen="true"></enum>
	<enum name="NSCompositePlusLighter" swt_gen="true"></enum>
	<enum name="NSCompositeSourceAtop" swt_gen="true"></enum>
	<enum name="NSCompositeSourceIn" swt_gen="true"></enum>
	<enum name="NSCompositeSourceOut" swt_gen="true"></enum>
	<enum name="NSCompositeSourceOver" swt_gen="true"></enum>
	<enum name="NSCompositeXOR" swt_gen="true"></enum>
	<enum name="NSCompressedFontMask" swt_gen="true"></enum>
	<enum name="NSCondensedFontMask" swt_gen="true"></enum>
	<enum name="NSContentsCellMask" swt_gen="true"></enum>
	<enum name="NSContinuousCapacityLevelIndicatorStyle" swt_gen="true"></enum>
	<enum name="NSControlGlyph" swt_gen="true"></enum>
	<enum name="NSControlKeyMask" swt_gen="true"></enum>
	<enum name="NSCrayonModeColorPanel" swt_gen="true"></enum>
	<enum name="NSCriticalAlertStyle" swt_gen="true"></enum>
	<enum name="NSCriticalRequest" swt_gen="true"></enum>
	<enum name="NSCursorPointingDevice" swt_gen="true"></enum>
	<enum name="NSCursorUpdate" swt_gen="true"></enum>
	<enum name="NSCursorUpdateMask" swt_gen="true"></enum>
	<enum name="NSCurveToBezierPathElement" swt_gen="true"></enum>
	<enum name="NSCustomPaletteModeColorPanel" swt_gen="true"></enum>
	<enum name="NSDecimalTabStopType" swt_gen="true"></enum>
	<enum name="NSDefaultControlTint" swt_gen="true"></enum>
	<enum name="NSDefaultTokenStyle" swt_gen="true"></enum>
	<enum name="NSDeleteCharFunctionKey" swt_gen="true"></enum>
	<enum name="NSDeleteCharacter" swt_gen="true"></enum>
	<enum name="NSDeleteFunctionKey" swt_gen="true"></enum>
	<enum name="NSDeleteLineFunctionKey" swt_gen="true"></enum>
	<enum name="NSDescendingPageOrder" swt_gen="true"></enum>
	<enum name="NSDeviceIndependentModifierFlagsMask" swt_gen="true"></enum>
	<enum name="NSDeviceNColorSpaceModel" swt_gen="true"></enum>
	<enum name="NSDirectSelection" swt_gen="true"></enum>
	<enum name="NSDisclosureBezelStyle" swt_gen="true"></enum>
	<enum name="NSDiscreteCapacityLevelIndicatorStyle" swt_gen="true"></enum>
	<enum name="NSDisplayWindowRunLoopOrdering" swt_gen="true"></enum>
	<enum name="NSDocModalWindowMask" swt_gen="true"></enum>
	<enum name="NSDockWindowLevel" swt_gen="true"></enum>
	<enum name="NSDoubleType" swt_gen="true"></enum>
	<enum name="NSDownArrowFunctionKey" swt_gen="true"></enum>
	<enum name="NSDownTextMovement" swt_gen="true"></enum>
	<enum name="NSDragOperationAll" swt_gen="true"></enum>
	<enum name="NSDragOperationAll_Obsolete" swt_gen="true"></enum>
	<enum name="NSDragOperationCopy" swt_gen="true"></enum>
	<enum name="NSDragOperationDelete" swt_gen="true"></enum>
	<enum name="NSDragOperationEvery" swt_gen="true"></enum>
	<enum name="NSDragOperationGeneric" swt_gen="true"></enum>
	<enum name="NSDragOperationLink" swt_gen="true"></enum>
	<enum name="NSDragOperationMove" swt_gen="true"></enum>
	<enum name="NSDragOperationNone" swt_gen="true"></enum>
	<enum name="NSDragOperationPrivate" swt_gen="true"></enum>
	<enum name="NSDrawerClosedState" swt_gen="true"></enum>
	<enum name="NSDrawerClosingState" swt_gen="true"></enum>
	<enum name="NSDrawerOpenState" swt_gen="true"></enum>
	<enum name="NSDrawerOpeningState" swt_gen="true"></enum>
	<enum name="NSEndFunctionKey" swt_gen="true"></enum>
	<enum name="NSEnterCharacter" swt_gen="true"></enum>
	<enum name="NSEraDatePickerElementFlag" swt_gen="true"></enum>
	<enum name="NSEraserPointingDevice" swt_gen="true"></enum>
	<enum name="NSEvenOddWindingRule" swt_gen="true"></enum>
	<enum name="NSExclude10_4ElementsIconCreationOption" swt_gen="true"></enum>
	<enum name="NSExcludeQuickDrawElementsIconCreationOption" swt_gen="true"></enum>
	<enum name="NSExecuteFunctionKey" swt_gen="true"></enum>
	<enum name="NSExpandedFontMask" swt_gen="true"></enum>
	<enum name="NSF10FunctionKey" swt_gen="true"></enum>
	<enum name="NSF11FunctionKey" swt_gen="true"></enum>
	<enum name="NSF12FunctionKey" swt_gen="true"></enum>
	<enum name="NSF13FunctionKey" swt_gen="true"></enum>
	<enum name="NSF14FunctionKey" swt_gen="true"></enum>
	<enum name="NSF15FunctionKey" swt_gen="true"></enum>
	<enum name="NSF16FunctionKey" swt_gen="true"></enum>
	<enum name="NSF17FunctionKey" swt_gen="true"></enum>
	<enum name="NSF18FunctionKey" swt_gen="true"></enum>
	<enum name="NSF19FunctionKey" swt_gen="true"></enum>
	<enum name="NSF1FunctionKey" swt_gen="true"></enum>
	<enum name="NSF20FunctionKey" swt_gen="true"></enum>
	<enum name="NSF21FunctionKey" swt_gen="true"></enum>
	<enum name="NSF22FunctionKey" swt_gen="true"></enum>
	<enum name="NSF23FunctionKey" swt_gen="true"></enum>
	<enum name="NSF24FunctionKey" swt_gen="true"></enum>
	<enum name="NSF25FunctionKey" swt_gen="true"></enum>
	<enum name="NSF26FunctionKey" swt_gen="true"></enum>
	<enum name="NSF27FunctionKey" swt_gen="true"></enum>
	<enum name="NSF28FunctionKey" swt_gen="true"></enum>
	<enum name="NSF29FunctionKey" swt_gen="true"></enum>
	<enum name="NSF2FunctionKey" swt_gen="true"></enum>
	<enum name="NSF30FunctionKey" swt_gen="true"></enum>
	<enum name="NSF31FunctionKey" swt_gen="true"></enum>
	<enum name="NSF32FunctionKey" swt_gen="true"></enum>
	<enum name="NSF33FunctionKey" swt_gen="true"></enum>
	<enum name="NSF34FunctionKey" swt_gen="true"></enum>
	<enum name="NSF35FunctionKey" swt_gen="true"></enum>
	<enum name="NSF3FunctionKey" swt_gen="true"></enum>
	<enum name="NSF4FunctionKey" swt_gen="true"></enum>
	<enum name="NSF5FunctionKey" swt_gen="true"></enum>
	<enum name="NSF6FunctionKey" swt_gen="true"></enum>
	<enum name="NSF7FunctionKey" swt_gen="true"></enum>
	<enum name="NSF8FunctionKey" swt_gen="true"></enum>
	<enum name="NSF9FunctionKey" swt_gen="true"></enum>
	<enum name="NSFPCurrentField" swt_gen="true"></enum>
	<enum name="NSFPPreviewButton" swt_gen="true"></enum>
	<enum name="NSFPPreviewField" swt_gen="true"></enum>
	<enum name="NSFPRevertButton" swt_gen="true"></enum>
	<enum name="NSFPSetButton" swt_gen="true"></enum>
	<enum name="NSFPSizeField" swt_gen="true"></enum>
	<enum name="NSFPSizeTitle" swt_gen="true"></enum>
	<enum name="NSFileHandlingPanelCancelButton" swt_gen="true"></enum>
	<enum name="NSFileHandlingPanelOKButton" swt_gen="true"></enum>
	<enum name="NSFindFunctionKey" swt_gen="true"></enum>
	<enum name="NSFindPanelActionNext" swt_gen="true"></enum>
	<enum name="NSFindPanelActionPrevious" swt_gen="true"></enum>
	<enum name="NSFindPanelActionReplace" swt_gen="true"></enum>
	<enum name="NSFindPanelActionReplaceAll" swt_gen="true"></enum>
	<enum name="NSFindPanelActionReplaceAllInSelection" swt_gen="true"></enum>
	<enum name="NSFindPanelActionReplaceAndFind" swt_gen="true"></enum>
	<enum name="NSFindPanelActionSelectAll" swt_gen="true"></enum>
	<enum name="NSFindPanelActionSelectAllInSelection" swt_gen="true"></enum>
	<enum name="NSFindPanelActionSetFindString" swt_gen="true"></enum>
	<enum name="NSFindPanelActionShowFindPanel" swt_gen="true"></enum>
	<enum name="NSFindPanelSubstringMatchTypeContains" swt_gen="true"></enum>
	<enum name="NSFindPanelSubstringMatchTypeEndsWith" swt_gen="true"></enum>
	<enum name="NSFindPanelSubstringMatchTypeFullWord" swt_gen="true"></enum>
	<enum name="NSFindPanelSubstringMatchTypeStartsWith" swt_gen="true"></enum>
	<enum name="NSFitPagination" swt_gen="true"></enum>
	<enum name="NSFixedPitchFontMask" swt_gen="true"></enum>
	<enum name="NSFlagsChanged" swt_gen="true"></enum>
	<enum name="NSFlagsChangedMask" swt_gen="true"></enum>
	<enum name="NSFloatType" swt_gen="true"></enum>
	<enum name="NSFloatingPointSamplesBitmapFormat" swt_gen="true"></enum>
	<enum name="NSFloatingWindowLevel" swt_gen="true"></enum>
	<enum name="NSFocusRingAbove" swt_gen="true"></enum>
	<enum name="NSFocusRingBelow" swt_gen="true"></enum>
	<enum name="NSFocusRingOnly" swt_gen="true"></enum>
	<enum name="NSFocusRingTypeDefault" swt_gen="true"></enum>
	<enum name="NSFocusRingTypeExterior" swt_gen="true"></enum>
	<enum name="NSFocusRingTypeNone" swt_gen="true"></enum>
	<enum name="NSFontAntialiasedIntegerAdvancementsRenderingMode" swt_gen="true"></enum>
	<enum name="NSFontAntialiasedRenderingMode" swt_gen="true"></enum>
	<enum name="NSFontBoldTrait" swt_gen="true"></enum>
	<enum name="NSFontClarendonSerifsClass" swt_gen="true"></enum>
	<enum name="NSFontCollectionApplicationOnlyMask" swt_gen="true"></enum>
	<enum name="NSFontCondensedTrait" swt_gen="true"></enum>
	<enum name="NSFontDefaultRenderingMode" swt_gen="true"></enum>
	<enum name="NSFontExpandedTrait" swt_gen="true"></enum>
	<enum name="NSFontFamilyClassMask" swt_gen="true"></enum>
	<enum name="NSFontFreeformSerifsClass" swt_gen="true"></enum>
	<enum name="NSFontIntegerAdvancementsRenderingMode" swt_gen="true"></enum>
	<enum name="NSFontItalicTrait" swt_gen="true"></enum>
	<enum name="NSFontModernSerifsClass" swt_gen="true"></enum>
	<enum name="NSFontMonoSpaceTrait" swt_gen="true"></enum>
	<enum name="NSFontOldStyleSerifsClass" swt_gen="true"></enum>
	<enum name="NSFontOrnamentalsClass" swt_gen="true"></enum>
	<enum name="NSFontPanelAllEffectsModeMask" swt_gen="true"></enum>
	<enum name="NSFontPanelAllModesMask" swt_gen="true"></enum>
	<enum name="NSFontPanelCollectionModeMask" swt_gen="true"></enum>
	<enum name="NSFontPanelDocumentColorEffectModeMask" swt_gen="true"></enum>
	<enum name="NSFontPanelFaceModeMask" swt_gen="true"></enum>
	<enum name="NSFontPanelShadowEffectModeMask" swt_gen="true"></enum>
	<enum name="NSFontPanelSizeModeMask" swt_gen="true"></enum>
	<enum name="NSFontPanelStandardModesMask" swt_gen="true"></enum>
	<enum name="NSFontPanelStrikethroughEffectModeMask" swt_gen="true"></enum>
	<enum name="NSFontPanelTextColorEffectModeMask" swt_gen="true"></enum>
	<enum name="NSFontPanelUnderlineEffectModeMask" swt_gen="true"></enum>
	<enum name="NSFontSansSerifClass" swt_gen="true"></enum>
	<enum name="NSFontScriptsClass" swt_gen="true"></enum>
	<enum name="NSFontSlabSerifsClass" swt_gen="true"></enum>
	<enum name="NSFontSymbolicClass" swt_gen="true"></enum>
	<enum name="NSFontTransitionalSerifsClass" swt_gen="true"></enum>
	<enum name="NSFontUIOptimizedTrait" swt_gen="true"></enum>
	<enum name="NSFontUnknownClass" swt_gen="true"></enum>
	<enum name="NSFontVerticalTrait" swt_gen="true"></enum>
	<enum name="NSFormFeedCharacter" swt_gen="true"></enum>
	<enum name="NSFunctionKeyMask" swt_gen="true"></enum>
	<enum name="NSGIFFileType" swt_gen="true"></enum>
	<enum name="NSGlyphAttributeBidiLevel" swt_gen="true"></enum>
	<enum name="NSGlyphAttributeElastic" swt_gen="true"></enum>
	<enum name="NSGlyphAttributeInscribe" swt_gen="true"></enum>
	<enum name="NSGlyphAttributeSoft" swt_gen="true"></enum>
	<enum name="NSGlyphInscribeAbove" swt_gen="true"></enum>
	<enum name="NSGlyphInscribeBase" swt_gen="true"></enum>
	<enum name="NSGlyphInscribeBelow" swt_gen="true"></enum>
	<enum name="NSGlyphInscribeOverBelow" swt_gen="true"></enum>
	<enum name="NSGlyphInscribeOverstrike" swt_gen="true"></enum>
	<enum name="NSGradientConcaveStrong" swt_gen="true"></enum>
	<enum name="NSGradientConcaveWeak" swt_gen="true"></enum>
	<enum name="NSGradientConvexStrong" swt_gen="true"></enum>
	<enum name="NSGradientConvexWeak" swt_gen="true"></enum>
	<enum name="NSGradientDrawsAfterEndingLocation" swt_gen="true"></enum>
	<enum name="NSGradientDrawsBeforeStartingLocation" swt_gen="true"></enum>
	<enum name="NSGradientNone" swt_gen="true"></enum>
	<enum name="NSGraphiteControlTint" swt_gen="true"></enum>
	<enum name="NSGrayColorSpaceModel" swt_gen="true"></enum>
	<enum name="NSGrayModeColorPanel" swt_gen="true"></enum>
	<enum name="NSGrooveBorder" swt_gen="true"></enum>
	<enum name="NSHSBModeColorPanel" swt_gen="true"></enum>
	<enum name="NSHUDWindowMask" swt_gen="true"></enum>
	<enum name="NSHeavierFontAction" swt_gen="true"></enum>
	<enum name="NSHelpButtonBezelStyle" swt_gen="true"></enum>
	<enum name="NSHelpFunctionKey" swt_gen="true"></enum>
	<enum name="NSHelpKeyMask" swt_gen="true"></enum>
	<enum name="NSHighlightModeMatrix" swt_gen="true"></enum>
	<enum name="NSHomeFunctionKey" swt_gen="true"></enum>
	<enum name="NSHorizontalRuler" swt_gen="true"></enum>
	<enum name="NSHourMinuteDatePickerElementFlag" swt_gen="true"></enum>
	<enum name="NSHourMinuteSecondDatePickerElementFlag" swt_gen="true"></enum>
	<enum name="NSIdentityMappingCharacterCollection" swt_gen="true"></enum>
	<enum name="NSIllegalTextMovement" swt_gen="true"></enum>
	<enum name="NSImageAbove" swt_gen="true"></enum>
	<enum name="NSImageAlignBottom" swt_gen="true"></enum>
	<enum name="NSImageAlignBottomLeft" swt_gen="true"></enum>
	<enum name="NSImageAlignBottomRight" swt_gen="true"></enum>
	<enum name="NSImageAlignCenter" swt_gen="true"></enum>
	<enum name="NSImageAlignLeft" swt_gen="true"></enum>
	<enum name="NSImageAlignRight" swt_gen="true"></enum>
	<enum name="NSImageAlignTop" swt_gen="true"></enum>
	<enum name="NSImageAlignTopLeft" swt_gen="true"></enum>
	<enum name="NSImageAlignTopRight" swt_gen="true"></enum>
	<enum name="NSImageBelow" swt_gen="true"></enum>
	<enum name="NSImageCacheAlways" swt_gen="true"></enum>
	<enum name="NSImageCacheBySize" swt_gen="true"></enum>
	<enum name="NSImageCacheDefault" swt_gen="true"></enum>
	<enum name="NSImageCacheNever" swt_gen="true"></enum>
	<enum name="NSImageCellType" swt_gen="true"></enum>
	<enum name="NSImageFrameButton" swt_gen="true"></enum>
	<enum name="NSImageFrameGrayBezel" swt_gen="true"></enum>
	<enum name="NSImageFrameGroove" swt_gen="true"></enum>
	<enum name="NSImageFrameNone" swt_gen="true"></enum>
	<enum name="NSImageFramePhoto" swt_gen="true"></enum>
	<enum name="NSImageInterpolationDefault" swt_gen="true"></enum>
	<enum name="NSImageInterpolationHigh" swt_gen="true"></enum>
	<enum name="NSImageInterpolationLow" swt_gen="true"></enum>
	<enum name="NSImageInterpolationNone" swt_gen="true"></enum>
	<enum name="NSImageLeft" swt_gen="true"></enum>
	<enum name="NSImageLoadStatusCancelled" swt_gen="true"></enum>
	<enum name="NSImageLoadStatusCompleted" swt_gen="true"></enum>
	<enum name="NSImageLoadStatusInvalidData" swt_gen="true"></enum>
	<enum name="NSImageLoadStatusReadError" swt_gen="true"></enum>
	<enum name="NSImageLoadStatusUnexpectedEOF" swt_gen="true"></enum>
	<enum name="NSImageOnly" swt_gen="true"></enum>
	<enum name="NSImageOverlaps" swt_gen="true"></enum>
	<enum name="NSImageRepLoadStatusCompleted" swt_gen="true"></enum>
	<enum name="NSImageRepLoadStatusInvalidData" swt_gen="true"></enum>
	<enum name="NSImageRepLoadStatusReadingHeader" swt_gen="true"></enum>
	<enum name="NSImageRepLoadStatusUnexpectedEOF" swt_gen="true"></enum>
	<enum name="NSImageRepLoadStatusUnknownType" swt_gen="true"></enum>
	<enum name="NSImageRepLoadStatusWillNeedAllData" swt_gen="true"></enum>
	<enum name="NSImageRepMatchesDevice" swt_gen="true"></enum>
	<enum name="NSImageRight" swt_gen="true"></enum>
	<enum name="NSImageScaleAxesIndependently" swt_gen="true"></enum>
	<enum name="NSImageScaleNone" swt_gen="true"></enum>
	<enum name="NSImageScaleProportionallyDown" swt_gen="true"></enum>
	<enum name="NSImageScaleProportionallyUpOrDown" swt_gen="true"></enum>
	<enum name="NSIndexedColorSpaceModel" swt_gen="true"></enum>
	<enum name="NSInformationalAlertStyle" swt_gen="true"></enum>
	<enum name="NSInformationalRequest" swt_gen="true"></enum>
	<enum name="NSInsertCharFunctionKey" swt_gen="true"></enum>
	<enum name="NSInsertFunctionKey" swt_gen="true"></enum>
	<enum name="NSInsertLineFunctionKey" swt_gen="true"></enum>
	<enum name="NSIntType" swt_gen="true"></enum>
	<enum name="NSItalicFontMask" swt_gen="true"></enum>
	<enum name="NSJPEG2000FileType" swt_gen="true"></enum>
	<enum name="NSJPEGFileType" swt_gen="true"></enum>
	<enum name="NSJustifiedTextAlignment" swt_gen="true"></enum>
	<enum name="NSKeyDown" swt_gen="true"></enum>
	<enum name="NSKeyDownMask" swt_gen="true"></enum>
	<enum name="NSKeyUp" swt_gen="true"></enum>
	<enum name="NSKeyUpMask" swt_gen="true"></enum>
	<enum name="NSLABColorSpaceModel" swt_gen="true"></enum>
	<enum name="NSLandscapeOrientation" swt_gen="true"></enum>
	<enum name="NSLeftArrowFunctionKey" swt_gen="true"></enum>
	<enum name="NSLeftMouseDown" swt_gen="true"></enum>
	<enum name="NSLeftMouseDownMask" swt_gen="true"></enum>
	<enum name="NSLeftMouseDragged" swt_gen="true"></enum>
	<enum name="NSLeftMouseDraggedMask" swt_gen="true"></enum>
	<enum name="NSLeftMouseUp" swt_gen="true"></enum>
	<enum name="NSLeftMouseUpMask" swt_gen="true"></enum>
	<enum name="NSLeftTabStopType" swt_gen="true"></enum>
	<enum name="NSLeftTabsBezelBorder" swt_gen="true"></enum>
	<enum name="NSLeftTextAlignment" swt_gen="true"></enum>
	<enum name="NSLeftTextMovement" swt_gen="true"></enum>
	<enum name="NSLighterFontAction" swt_gen="true"></enum>
	<enum name="NSLineBorder" swt_gen="true"></enum>
	<enum name="NSLineBreakByCharWrapping" swt_gen="true"></enum>
	<enum name="NSLineBreakByClipping" swt_gen="true"></enum>
	<enum name="NSLineBreakByTruncatingHead" swt_gen="true"></enum>
	<enum name="NSLineBreakByTruncatingMiddle" swt_gen="true"></enum>
	<enum name="NSLineBreakByTruncatingTail" swt_gen="true"></enum>
	<enum name="NSLineBreakByWordWrapping" swt_gen="true"></enum>
	<enum name="NSLineDoesntMove" swt_gen="true"></enum>
	<enum name="NSLineMovesDown" swt_gen="true"></enum>
	<enum name="NSLineMovesLeft" swt_gen="true"></enum>
	<enum name="NSLineMovesRight" swt_gen="true"></enum>
	<enum name="NSLineMovesUp" swt_gen="true"></enum>
	<enum name="NSLineSeparatorCharacter" swt_gen="true"></enum>
	<enum name="NSLineSweepDown" swt_gen="true"></enum>
	<enum name="NSLineSweepLeft" swt_gen="true"></enum>
	<enum name="NSLineSweepRight" swt_gen="true"></enum>
	<enum name="NSLineSweepUp" swt_gen="true"></enum>
	<enum name="NSLineToBezierPathElement" swt_gen="true"></enum>
	<enum name="NSLinearSlider" swt_gen="true"></enum>
	<enum name="NSListModeMatrix" swt_gen="true"></enum>
	<enum name="NSMacintoshInterfaceStyle" swt_gen="true"></enum>
	<enum name="NSMainMenuWindowLevel" swt_gen="true"></enum>
	<enum name="NSMenuFunctionKey" swt_gen="true"></enum>
	<enum name="NSMiniControlSize" swt_gen="true"></enum>
	<enum name="NSMiniaturizableWindowMask" swt_gen="true"></enum>
	<enum name="NSMiterLineJoinStyle" swt_gen="true"></enum>
	<enum name="NSMixedState" swt_gen="true"></enum>
	<enum name="NSModalPanelWindowLevel" swt_gen="true"></enum>
	<enum name="NSModeSwitchFunctionKey" swt_gen="true"></enum>
	<enum name="NSMomentaryChangeButton" swt_gen="true"></enum>
	<enum name="NSMomentaryLight" swt_gen="true"></enum>
	<enum name="NSMomentaryLightButton" swt_gen="true"></enum>
	<enum name="NSMomentaryPushButton" swt_gen="true"></enum>
	<enum name="NSMomentaryPushInButton" swt_gen="true"></enum>
	<enum name="NSMouseEntered" swt_gen="true"></enum>
	<enum name="NSMouseEnteredMask" swt_gen="true"></enum>
	<enum name="NSMouseEventSubtype" swt_gen="true"></enum>
	<enum name="NSMouseExited" swt_gen="true"></enum>
	<enum name="NSMouseExitedMask" swt_gen="true"></enum>
	<enum name="NSMouseMoved" swt_gen="true"></enum>
	<enum name="NSMouseMovedMask" swt_gen="true"></enum>
	<enum name="NSMoveToBezierPathElement" swt_gen="true"></enum>
	<enum name="NSNarrowFontMask" swt_gen="true"></enum>
	<enum name="NSNativeShortGlyphPacking" swt_gen="true"></enum>
	<enum name="NSNaturalTextAlignment" swt_gen="true"></enum>
	<enum name="NSNewlineCharacter" swt_gen="true"></enum>
	<enum name="NSNextFunctionKey" swt_gen="true"></enum>
	<enum name="NSNextStepInterfaceStyle" swt_gen="true"></enum>
	<enum name="NSNoBorder" swt_gen="true"></enum>
	<enum name="NSNoCellMask" swt_gen="true"></enum>
	<enum name="NSNoFontChangeAction" swt_gen="true"></enum>
	<enum name="NSNoImage" swt_gen="true"></enum>
	<enum name="NSNoInterfaceStyle" swt_gen="true"></enum>
	<enum name="NSNoModeColorPanel" swt_gen="true"></enum>
	<enum name="NSNoScrollerParts" swt_gen="true"></enum>
	<enum name="NSNoTabsBezelBorder" swt_gen="true"></enum>
	<enum name="NSNoTabsLineBorder" swt_gen="true"></enum>
	<enum name="NSNoTabsNoBorder" swt_gen="true"></enum>
	<enum name="NSNoTitle" swt_gen="true"></enum>
	<enum name="NSNoUnderlineStyle" swt_gen="true"></enum>
	<enum name="NSNonStandardCharacterSetFontMask" swt_gen="true"></enum>
	<enum name="NSNonZeroWindingRule" swt_gen="true"></enum>
	<enum name="NSNonactivatingPanelMask" swt_gen="true"></enum>
	<enum name="NSNormalWindowLevel" swt_gen="true"></enum>
	<enum name="NSNullCellType" swt_gen="true"></enum>
	<enum name="NSNullGlyph" swt_gen="true"></enum>
	<enum name="NSNumericPadKeyMask" swt_gen="true"></enum>
	<enum name="NSOKButton" swt_gen="true"></enum>
	<enum name="NSOPENGL_CURRENT_VERSION" swt_gen="true"></enum>
	<enum name="NSOffState" swt_gen="true"></enum>
	<enum name="NSOnOffButton" swt_gen="true"></enum>
	<enum name="NSOnState" swt_gen="true"></enum>
	<enum name="NSOnlyScrollerArrows" swt_gen="true"></enum>
	<enum name="NSOpenGLCPRasterizationEnable" swt_gen="true"></enum>
	<enum name="NSOpenGLCPStateValidation" swt_gen="true"></enum>
	<enum name="NSOpenGLCPSurfaceOpacity" swt_gen="true"></enum>
	<enum name="NSOpenGLCPSurfaceOrder" swt_gen="true"></enum>
	<enum name="NSOpenGLCPSwapInterval" swt_gen="true"></enum>
	<enum name="NSOpenGLCPSwapRectangle" swt_gen="true"></enum>
	<enum name="NSOpenGLCPSwapRectangleEnable" swt_gen="true"></enum>
	<enum name="NSOpenGLGOClearFormatCache" swt_gen="true"></enum>
	<enum name="NSOpenGLGOFormatCacheSize" swt_gen="true"></enum>
	<enum name="NSOpenGLGOResetLibrary" swt_gen="true"></enum>
	<enum name="NSOpenGLGORetainRenderers" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAAccelerated" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAAccumSize" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAAllRenderers" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAAllowOfflineRenderers" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAAlphaSize" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAAuxBuffers" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAAuxDepthStencil" swt_gen="true"></enum>
	<enum name="NSOpenGLPFABackingStore" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAClosestPolicy" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAColorFloat" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAColorSize" swt_gen="true"></enum>
	<enum name="NSOpenGLPFACompliant" swt_gen="true"></enum>
	<enum name="NSOpenGLPFADepthSize" swt_gen="true"></enum>
	<enum name="NSOpenGLPFADoubleBuffer" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAFullScreen" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAMPSafe" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAMaximumPolicy" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAMinimumPolicy" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAMultiScreen" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAMultisample" swt_gen="true"></enum>
	<enum name="NSOpenGLPFANoRecovery" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAOffScreen" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAPixelBuffer" swt_gen="true"></enum>
	<enum name="NSOpenGLPFARendererID" swt_gen="true"></enum>
	<enum name="NSOpenGLPFARobust" swt_gen="true"></enum>
	<enum name="NSOpenGLPFASampleAlpha" swt_gen="true"></enum>
	<enum name="NSOpenGLPFASampleBuffers" swt_gen="true"></enum>
	<enum name="NSOpenGLPFASamples" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAScreenMask" swt_gen="true"></enum>
	<enum name="NSOpenGLPFASingleRenderer" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAStencilSize" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAStereo" swt_gen="true"></enum>
	<enum name="NSOpenGLPFASupersample" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAVirtualScreenCount" swt_gen="true"></enum>
	<enum name="NSOpenGLPFAWindow" swt_gen="true"></enum>
	<enum name="NSOtherMouseDown" swt_gen="true"></enum>
	<enum name="NSOtherMouseDownMask" swt_gen="true"></enum>
	<enum name="NSOtherMouseDragged" swt_gen="true"></enum>
	<enum name="NSOtherMouseDraggedMask" swt_gen="true"></enum>
	<enum name="NSOtherMouseUp" swt_gen="true"></enum>
	<enum name="NSOtherMouseUpMask" swt_gen="true"></enum>
	<enum name="NSOtherTextMovement" swt_gen="true"></enum>
	<enum name="NSOutlineViewDropOnItemIndex" swt_gen="true"></enum>
	<enum name="NSPNGFileType" swt_gen="true"></enum>
	<enum name="NSPageDownFunctionKey" swt_gen="true"></enum>
	<enum name="NSPageUpFunctionKey" swt_gen="true"></enum>
	<enum name="NSParagraphSeparatorCharacter" swt_gen="true"></enum>
	<enum name="NSPathStyleNavigationBar" swt_gen="true"></enum>
	<enum name="NSPathStylePopUp" swt_gen="true"></enum>
	<enum name="NSPathStyleStandard" swt_gen="true"></enum>
	<enum name="NSPatternColorSpaceModel" swt_gen="true"></enum>
	<enum name="NSPauseFunctionKey" swt_gen="true"></enum>
	<enum name="NSPenLowerSideMask" swt_gen="true"></enum>
	<enum name="NSPenPointingDevice" swt_gen="true"></enum>
	<enum name="NSPenTipMask" swt_gen="true"></enum>
	<enum name="NSPenUpperSideMask" swt_gen="true"></enum>
	<enum name="NSPeriodic" swt_gen="true"></enum>
	<enum name="NSPeriodicMask" swt_gen="true"></enum>
	<enum name="NSPlainTextTokenStyle" swt_gen="true"></enum>
	<enum name="NSPopUpArrowAtBottom" swt_gen="true"></enum>
	<enum name="NSPopUpArrowAtCenter" swt_gen="true"></enum>
	<enum name="NSPopUpMenuWindowLevel" swt_gen="true"></enum>
	<enum name="NSPopUpNoArrow" swt_gen="true"></enum>
	<enum name="NSPortraitOrientation" swt_gen="true"></enum>
	<enum name="NSPositiveDoubleType" swt_gen="true"></enum>
	<enum name="NSPositiveFloatType" swt_gen="true"></enum>
	<enum name="NSPositiveIntType" swt_gen="true"></enum>
	<enum name="NSPosterFontMask" swt_gen="true"></enum>
	<enum name="NSPowerOffEventType" swt_gen="true"></enum>
	<enum name="NSPressedTab" swt_gen="true"></enum>
	<enum name="NSPrevFunctionKey" swt_gen="true"></enum>
	<enum name="NSPrintFunctionKey" swt_gen="true"></enum>
	<enum name="NSPrintPanelShowsCopies" swt_gen="true"></enum>
	<enum name="NSPrintPanelShowsOrientation" swt_gen="true"></enum>
	<enum name="NSPrintPanelShowsPageRange" swt_gen="true"></enum>
	<enum name="NSPrintPanelShowsPageSetupAccessory" swt_gen="true"></enum>
	<enum name="NSPrintPanelShowsPaperSize" swt_gen="true"></enum>
	<enum name="NSPrintPanelShowsPreview" swt_gen="true"></enum>
	<enum name="NSPrintPanelShowsScaling" swt_gen="true"></enum>
	<enum name="NSPrintScreenFunctionKey" swt_gen="true"></enum>
	<enum name="NSPrinterTableError" swt_gen="true"></enum>
	<enum name="NSPrinterTableNotFound" swt_gen="true"></enum>
	<enum name="NSPrinterTableOK" swt_gen="true"></enum>
	<enum name="NSPrintingCancelled" swt_gen="true"></enum>
	<enum name="NSPrintingFailure" swt_gen="true"></enum>
	<enum name="NSPrintingReplyLater" swt_gen="true"></enum>
	<enum name="NSPrintingSuccess" swt_gen="true"></enum>
	<enum name="NSProgressIndicatorBarStyle" swt_gen="true"></enum>
	<enum name="NSProgressIndicatorPreferredAquaThickness" swt_gen="true"></enum>
	<enum name="NSProgressIndicatorPreferredLargeThickness" swt_gen="true"></enum>
	<enum name="NSProgressIndicatorPreferredSmallThickness" swt_gen="true"></enum>
	<enum name="NSProgressIndicatorPreferredThickness" swt_gen="true"></enum>
	<enum name="NSProgressIndicatorSpinningStyle" swt_gen="true"></enum>
	<enum name="NSPushInCell" swt_gen="true"></enum>
	<enum name="NSPushInCellMask" swt_gen="true"></enum>
	<enum name="NSPushOnPushOffButton" swt_gen="true"></enum>
	<enum name="NSQTMovieLoopingBackAndForthPlayback" swt_gen="true"></enum>
	<enum name="NSQTMovieLoopingPlayback" swt_gen="true"></enum>
	<enum name="NSQTMovieNormalPlayback" swt_gen="true"></enum>
	<enum name="NSRGBColorSpaceModel" swt_gen="true"></enum>
	<enum name="NSRGBModeColorPanel" swt_gen="true"></enum>
	<enum name="NSRadioButton" swt_gen="true"></enum>
	<enum name="NSRadioModeMatrix" swt_gen="true"></enum>
	<enum name="NSRangeDateMode" swt_gen="true"></enum>
	<enum name="NSRatingLevelIndicatorStyle" swt_gen="true"></enum>
	<enum name="NSRecessedBezelStyle" swt_gen="true"></enum>
	<enum name="NSRedoFunctionKey" swt_gen="true"></enum>
	<enum name="NSRegularControlSize" swt_gen="true"></enum>
	<enum name="NSRegularSquareBezelStyle" swt_gen="true"></enum>
	<enum name="NSRelevancyLevelIndicatorStyle" swt_gen="true"></enum>
	<enum name="NSRemoveTraitFontAction" swt_gen="true"></enum>
	<enum name="NSResetCursorRectsRunLoopOrdering" swt_gen="true"></enum>
	<enum name="NSResetFunctionKey" swt_gen="true"></enum>
	<enum name="NSResizableWindowMask" swt_gen="true"></enum>
	<enum name="NSReturnTextMovement" swt_gen="true"></enum>
	<enum name="NSRightArrowFunctionKey" swt_gen="true"></enum>
	<enum name="NSRightMouseDown" swt_gen="true"></enum>
	<enum name="NSRightMouseDownMask" swt_gen="true"></enum>
	<enum name="NSRightMouseDragged" swt_gen="true"></enum>
	<enum name="NSRightMouseDraggedMask" swt_gen="true"></enum>
	<enum name="NSRightMouseUp" swt_gen="true"></enum>
	<enum name="NSRightMouseUpMask" swt_gen="true"></enum>
	<enum name="NSRightTabStopType" swt_gen="true"></enum>
	<enum name="NSRightTabsBezelBorder" swt_gen="true"></enum>
	<enum name="NSRightTextAlignment" swt_gen="true"></enum>
	<enum name="NSRightTextMovement" swt_gen="true"></enum>
	<enum name="NSRoundLineCapStyle" swt_gen="true"></enum>
	<enum name="NSRoundLineJoinStyle" swt_gen="true"></enum>
	<enum name="NSRoundRectBezelStyle" swt_gen="true"></enum>
	<enum name="NSRoundedBezelStyle" swt_gen="true"></enum>
	<enum name="NSRoundedDisclosureBezelStyle" swt_gen="true"></enum>
	<enum name="NSRoundedTokenStyle" swt_gen="true"></enum>
	<enum name="NSRuleEditorNestingModeCompound" swt_gen="true"></enum>
	<enum name="NSRuleEditorNestingModeList" swt_gen="true"></enum>
	<enum name="NSRuleEditorNestingModeSimple" swt_gen="true"></enum>
	<enum name="NSRuleEditorNestingModeSingle" swt_gen="true"></enum>
	<enum name="NSRuleEditorRowTypeCompound" swt_gen="true"></enum>
	<enum name="NSRuleEditorRowTypeSimple" swt_gen="true"></enum>
	<enum name="NSRunAbortedResponse" swt_gen="true"></enum>
	<enum name="NSRunContinuesResponse" swt_gen="true"></enum>
	<enum name="NSRunStoppedResponse" swt_gen="true"></enum>
	<enum name="NSSaveAsOperation" swt_gen="true"></enum>
	<enum name="NSSaveOperation" swt_gen="true"></enum>
	<enum name="NSSaveToOperation" swt_gen="true"></enum>
	<enum name="NSScaleNone" swt_gen="true"></enum>
	<enum name="NSScaleProportionally" swt_gen="true"></enum>
	<enum name="NSScaleToFit" swt_gen="true"></enum>
	<enum name="NSScreenChangedEventType" swt_gen="true"></enum>
	<enum name="NSScreenSaverWindowLevel" swt_gen="true"></enum>
	<enum name="NSScrollLockFunctionKey" swt_gen="true"></enum>
	<enum name="NSScrollWheel" swt_gen="true"></enum>
	<enum name="NSScrollWheelMask" swt_gen="true"></enum>
	<enum name="NSScrollerArrowsDefaultSetting" swt_gen="true"></enum>
	<enum name="NSScrollerArrowsMaxEnd" swt_gen="true"></enum>
	<enum name="NSScrollerArrowsMinEnd" swt_gen="true"></enum>
	<enum name="NSScrollerArrowsNone" swt_gen="true"></enum>
	<enum name="NSScrollerDecrementArrow" swt_gen="true"></enum>
	<enum name="NSScrollerDecrementLine" swt_gen="true"></enum>
	<enum name="NSScrollerDecrementPage" swt_gen="true"></enum>
	<enum name="NSScrollerIncrementArrow" swt_gen="true"></enum>
	<enum name="NSScrollerIncrementLine" swt_gen="true"></enum>
	<enum name="NSScrollerIncrementPage" swt_gen="true"></enum>
	<enum name="NSScrollerKnob" swt_gen="true"></enum>
	<enum name="NSScrollerKnobSlot" swt_gen="true"></enum>
	<enum name="NSScrollerNoPart" swt_gen="true"></enum>
	<enum name="NSSearchFieldClearRecentsMenuItemTag" swt_gen="true"></enum>
	<enum name="NSSearchFieldNoRecentsMenuItemTag" swt_gen="true"></enum>
	<enum name="NSSearchFieldRecentsMenuItemTag" swt_gen="true"></enum>
	<enum name="NSSearchFieldRecentsTitleMenuItemTag" swt_gen="true"></enum>
	<enum name="NSSegmentStyleAutomatic" swt_gen="true"></enum>
	<enum name="NSSegmentStyleCapsule" swt_gen="true"></enum>
	<enum name="NSSegmentStyleRoundRect" swt_gen="true"></enum>
	<enum name="NSSegmentStyleRounded" swt_gen="true"></enum>
	<enum name="NSSegmentStyleSmallSquare" swt_gen="true"></enum>
	<enum name="NSSegmentStyleTexturedRounded" swt_gen="true"></enum>
	<enum name="NSSegmentStyleTexturedSquare" swt_gen="true"></enum>
	<enum name="NSSegmentSwitchTrackingMomentary" swt_gen="true"></enum>
	<enum name="NSSegmentSwitchTrackingSelectAny" swt_gen="true"></enum>
	<enum name="NSSegmentSwitchTrackingSelectOne" swt_gen="true"></enum>
	<enum name="NSSelectByCharacter" swt_gen="true"></enum>
	<enum name="NSSelectByParagraph" swt_gen="true"></enum>
	<enum name="NSSelectByWord" swt_gen="true"></enum>
	<enum name="NSSelectFunctionKey" swt_gen="true"></enum>
	<enum name="NSSelectedTab" swt_gen="true"></enum>
	<enum name="NSSelectingNext" swt_gen="true"></enum>
	<enum name="NSSelectingPrevious" swt_gen="true"></enum>
	<enum name="NSSelectionAffinityDownstream" swt_gen="true"></enum>
	<enum name="NSSelectionAffinityUpstream" swt_gen="true"></enum>
	<enum name="NSServiceApplicationLaunchFailedError" swt_gen="true"></enum>
	<enum name="NSServiceApplicationNotFoundError" swt_gen="true"></enum>
	<enum name="NSServiceErrorMaximum" swt_gen="true"></enum>
	<enum name="NSServiceErrorMinimum" swt_gen="true"></enum>
	<enum name="NSServiceInvalidPasteboardDataError" swt_gen="true"></enum>
	<enum name="NSServiceMalformedServiceDictionaryError" swt_gen="true"></enum>
	<enum name="NSServiceMiscellaneousError" swt_gen="true"></enum>
	<enum name="NSServiceRequestTimedOutError" swt_gen="true"></enum>
	<enum name="NSShadowlessSquareBezelStyle" swt_gen="true"></enum>
	<enum name="NSShiftKeyMask" swt_gen="true"></enum>
	<enum name="NSShowControlGlyphs" swt_gen="true"></enum>
	<enum name="NSShowInvisibleGlyphs" swt_gen="true"></enum>
	<enum name="NSSingleDateMode" swt_gen="true"></enum>
	<enum name="NSSingleUnderlineStyle" swt_gen="true"></enum>
	<enum name="NSSizeDownFontAction" swt_gen="true"></enum>
	<enum name="NSSizeUpFontAction" swt_gen="true"></enum>
	<enum name="NSSmallCapsFontMask" swt_gen="true"></enum>
	<enum name="NSSmallControlSize" swt_gen="true"></enum>
	<enum name="NSSmallIconButtonBezelStyle" swt_gen="true"></enum>
	<enum name="NSSmallSquareBezelStyle" swt_gen="true"></enum>
	<enum name="NSSpecialPageOrder" swt_gen="true"></enum>
	<enum name="NSSpeechImmediateBoundary" swt_gen="true"></enum>
	<enum name="NSSpeechSentenceBoundary" swt_gen="true"></enum>
	<enum name="NSSpeechWordBoundary" swt_gen="true"></enum>
	<enum name="NSSpellingStateGrammarFlag" swt_gen="true"></enum>
	<enum name="NSSpellingStateSpellingFlag" swt_gen="true"></enum>
	<enum name="NSSplitViewDividerStyleThick" swt_gen="true"></enum>
	<enum name="NSSplitViewDividerStyleThin" swt_gen="true"></enum>
	<enum name="NSSquareLineCapStyle" swt_gen="true"></enum>
	<enum name="NSSquareStatusItemLength" swt_gen="true"></enum>
	<enum name="NSStatusWindowLevel" swt_gen="true"></enum>
	<enum name="NSStopFunctionKey" swt_gen="true"></enum>
	<enum name="NSStringDrawingDisableScreenFontSubstitution" swt_gen="true"></enum>
	<enum name="NSStringDrawingOneShot" swt_gen="true"></enum>
	<enum name="NSStringDrawingTruncatesLastVisibleLine" swt_gen="true"></enum>
	<enum name="NSStringDrawingUsesDeviceMetrics" swt_gen="true"></enum>
	<enum name="NSStringDrawingUsesFontLeading" swt_gen="true"></enum>
	<enum name="NSStringDrawingUsesLineFragmentOrigin" swt_gen="true"></enum>
	<enum name="NSSubmenuWindowLevel" swt_gen="true"></enum>
	<enum name="NSSwitchButton" swt_gen="true"></enum>
	<enum name="NSSysReqFunctionKey" swt_gen="true"></enum>
	<enum name="NSSystemDefined" swt_gen="true"></enum>
	<enum name="NSSystemDefinedMask" swt_gen="true"></enum>
	<enum name="NSSystemFunctionKey" swt_gen="true"></enum>
	<enum name="NSTIFFCompressionCCITTFAX3" swt_gen="true"></enum>
	<enum name="NSTIFFCompressionCCITTFAX4" swt_gen="true"></enum>
	<enum name="NSTIFFCompressionJPEG" swt_gen="true"></enum>
	<enum name="NSTIFFCompressionLZW" swt_gen="true"></enum>
	<enum name="NSTIFFCompressionNEXT" swt_gen="true"></enum>
	<enum name="NSTIFFCompressionNone" swt_gen="true"></enum>
	<enum name="NSTIFFCompressionOldJPEG" swt_gen="true"></enum>
	<enum name="NSTIFFCompressionPackBits" swt_gen="true"></enum>
	<enum name="NSTIFFFileType" swt_gen="true"></enum>
	<enum name="NSTabCharacter" swt_gen="true"></enum>
	<enum name="NSTabTextMovement" swt_gen="true"></enum>
	<enum name="NSTableColumnAutoresizingMask" swt_gen="true"></enum>
	<enum name="NSTableColumnNoResizing" swt_gen="true"></enum>
	<enum name="NSTableColumnUserResizingMask" swt_gen="true"></enum>
	<enum name="NSTableViewDropAbove" swt_gen="true"></enum>
	<enum name="NSTableViewDropOn" swt_gen="true"></enum>
	<enum name="NSTableViewFirstColumnOnlyAutoresizingStyle" swt_gen="true"></enum>
	<enum name="NSTableViewGridNone" swt_gen="true"></enum>
	<enum name="NSTableViewLastColumnOnlyAutoresizingStyle" swt_gen="true"></enum>
	<enum name="NSTableViewNoColumnAutoresizing" swt_gen="true"></enum>
	<enum name="NSTableViewReverseSequentialColumnAutoresizingStyle" swt_gen="true"></enum>
	<enum name="NSTableViewSelectionHighlightStyleRegular" swt_gen="true"></enum>
	<enum name="NSTableViewSelectionHighlightStyleSourceList" swt_gen="true"></enum>
	<enum name="NSTableViewSequentialColumnAutoresizingStyle" swt_gen="true"></enum>
	<enum name="NSTableViewSolidHorizontalGridLineMask" swt_gen="true"></enum>
	<enum name="NSTableViewSolidVerticalGridLineMask" swt_gen="true"></enum>
	<enum name="NSTableViewUniformColumnAutoresizingStyle" swt_gen="true"></enum>
	<enum name="NSTabletPoint" swt_gen="true"></enum>
	<enum name="NSTabletPointEventSubtype" swt_gen="true"></enum>
	<enum name="NSTabletPointMask" swt_gen="true"></enum>
	<enum name="NSTabletProximity" swt_gen="true"></enum>
	<enum name="NSTabletProximityEventSubtype" swt_gen="true"></enum>
	<enum name="NSTabletProximityMask" swt_gen="true"></enum>
	<enum name="NSTerminateCancel" swt_gen="true"></enum>
	<enum name="NSTerminateLater" swt_gen="true"></enum>
	<enum name="NSTerminateNow" swt_gen="true"></enum>
	<enum name="NSTextBlockAbsoluteValueType" swt_gen="true"></enum>
	<enum name="NSTextBlockBaselineAlignment" swt_gen="true"></enum>
	<enum name="NSTextBlockBorder" swt_gen="true"></enum>
	<enum name="NSTextBlockBottomAlignment" swt_gen="true"></enum>
	<enum name="NSTextBlockHeight" swt_gen="true"></enum>
	<enum name="NSTextBlockMargin" swt_gen="true"></enum>
	<enum name="NSTextBlockMaximumHeight" swt_gen="true"></enum>
	<enum name="NSTextBlockMaximumWidth" swt_gen="true"></enum>
	<enum name="NSTextBlockMiddleAlignment" swt_gen="true"></enum>
	<enum name="NSTextBlockMinimumHeight" swt_gen="true"></enum>
	<enum name="NSTextBlockMinimumWidth" swt_gen="true"></enum>
	<enum name="NSTextBlockPadding" swt_gen="true"></enum>
	<enum name="NSTextBlockPercentageValueType" swt_gen="true"></enum>
	<enum name="NSTextBlockTopAlignment" swt_gen="true"></enum>
	<enum name="NSTextBlockWidth" swt_gen="true"></enum>
	<enum name="NSTextCellType" swt_gen="true"></enum>
	<enum name="NSTextFieldAndStepperDatePickerStyle" swt_gen="true"></enum>
	<enum name="NSTextFieldDatePickerStyle" swt_gen="true"></enum>
	<enum name="NSTextFieldRoundedBezel" swt_gen="true"></enum>
	<enum name="NSTextFieldSquareBezel" swt_gen="true"></enum>
	<enum name="NSTextListPrependEnclosingMarker" swt_gen="true"></enum>
	<enum name="NSTextReadInapplicableDocumentTypeError" swt_gen="true"></enum>
	<enum name="NSTextReadWriteErrorMaximum" swt_gen="true"></enum>
	<enum name="NSTextReadWriteErrorMinimum" swt_gen="true"></enum>
	<enum name="NSTextStorageEditedAttributes" swt_gen="true"></enum>
	<enum name="NSTextStorageEditedCharacters" swt_gen="true"></enum>
	<enum name="NSTextTableAutomaticLayoutAlgorithm" swt_gen="true"></enum>
	<enum name="NSTextTableFixedLayoutAlgorithm" swt_gen="true"></enum>
	<enum name="NSTextWriteInapplicableDocumentTypeError" swt_gen="true"></enum>
	<enum name="NSTexturedBackgroundWindowMask" swt_gen="true"></enum>
	<enum name="NSTexturedRoundedBezelStyle" swt_gen="true"></enum>
	<enum name="NSTexturedSquareBezelStyle" swt_gen="true"></enum>
	<enum name="NSThickSquareBezelStyle" swt_gen="true"></enum>
	<enum name="NSThickerSquareBezelStyle" swt_gen="true"></enum>
	<enum name="NSTickMarkAbove" swt_gen="true"></enum>
	<enum name="NSTickMarkBelow" swt_gen="true"></enum>
	<enum name="NSTickMarkLeft" swt_gen="true"></enum>
	<enum name="NSTickMarkRight" swt_gen="true"></enum>
	<enum name="NSTimeZoneDatePickerElementFlag" swt_gen="true"></enum>
	<enum name="NSTitledWindowMask" swt_gen="true"></enum>
	<enum name="NSToggleButton" swt_gen="true"></enum>
	<enum name="NSToolbarDisplayModeDefault" swt_gen="true"></enum>
	<enum name="NSToolbarDisplayModeIconAndLabel" swt_gen="true"></enum>
	<enum name="NSToolbarDisplayModeIconOnly" swt_gen="true"></enum>
	<enum name="NSToolbarDisplayModeLabelOnly" swt_gen="true"></enum>
	<enum name="NSToolbarItemVisibilityPriorityHigh" swt_gen="true"></enum>
	<enum name="NSToolbarItemVisibilityPriorityLow" swt_gen="true"></enum>
	<enum name="NSToolbarItemVisibilityPriorityStandard" swt_gen="true"></enum>
	<enum name="NSToolbarItemVisibilityPriorityUser" swt_gen="true"></enum>
	<enum name="NSToolbarSizeModeDefault" swt_gen="true"></enum>
	<enum name="NSToolbarSizeModeRegular" swt_gen="true"></enum>
	<enum name="NSToolbarSizeModeSmall" swt_gen="true"></enum>
	<enum name="NSTopTabsBezelBorder" swt_gen="true"></enum>
	<enum name="NSTornOffMenuWindowLevel" swt_gen="true"></enum>
	<enum name="NSTrackModeMatrix" swt_gen="true"></enum>
	<enum name="NSTrackingActiveAlways" swt_gen="true"></enum>
	<enum name="NSTrackingActiveInActiveApp" swt_gen="true"></enum>
	<enum name="NSTrackingActiveInKeyWindow" swt_gen="true"></enum>
	<enum name="NSTrackingActiveWhenFirstResponder" swt_gen="true"></enum>
	<enum name="NSTrackingAssumeInside" swt_gen="true"></enum>
	<enum name="NSTrackingCursorUpdate" swt_gen="true"></enum>
	<enum name="NSTrackingEnabledDuringMouseDrag" swt_gen="true"></enum>
	<enum name="NSTrackingInVisibleRect" swt_gen="true"></enum>
	<enum name="NSTrackingMouseEnteredAndExited" swt_gen="true"></enum>
	<enum name="NSTrackingMouseMoved" swt_gen="true"></enum>
	<enum name="NSTypesetterBehavior_10_2" swt_gen="true"></enum>
	<enum name="NSTypesetterBehavior_10_2_WithCompatibility" swt_gen="true"></enum>
	<enum name="NSTypesetterBehavior_10_3" swt_gen="true"></enum>
	<enum name="NSTypesetterBehavior_10_4" swt_gen="true"></enum>
	<enum name="NSTypesetterContainerBreakAction" swt_gen="true"></enum>
	<enum name="NSTypesetterHorizontalTabAction" swt_gen="true"></enum>
	<enum name="NSTypesetterLatestBehavior" swt_gen="true"></enum>
	<enum name="NSTypesetterLineBreakAction" swt_gen="true"></enum>
	<enum name="NSTypesetterOriginalBehavior" swt_gen="true"></enum>
	<enum name="NSTypesetterParagraphBreakAction" swt_gen="true"></enum>
	<enum name="NSTypesetterWhitespaceAction" swt_gen="true"></enum>
	<enum name="NSTypesetterZeroAdvancementAction" swt_gen="true"></enum>
	<enum name="NSUnboldFontMask" swt_gen="true"></enum>
	<enum name="NSUnderlinePatternDash" swt_gen="true"></enum>
	<enum name="NSUnderlinePatternDashDot" swt_gen="true"></enum>
	<enum name="NSUnderlinePatternDashDotDot" swt_gen="true"></enum>
	<enum name="NSUnderlinePatternDot" swt_gen="true"></enum>
	<enum name="NSUnderlinePatternSolid" swt_gen="true"></enum>
	<enum name="NSUnderlineStyleDouble" swt_gen="true"></enum>
	<enum name="NSUnderlineStyleNone" swt_gen="true"></enum>
	<enum name="NSUnderlineStyleSingle" swt_gen="true"></enum>
	<enum name="NSUnderlineStyleThick" swt_gen="true"></enum>
	<enum name="NSUndoFunctionKey" swt_gen="true"></enum>
	<enum name="NSUnifiedTitleAndToolbarWindowMask" swt_gen="true"></enum>
	<enum name="NSUnitalicFontMask" swt_gen="true"></enum>
	<enum name="NSUnknownColorSpaceModel" swt_gen="true"></enum>
	<enum name="NSUnknownPageOrder" swt_gen="true"></enum>
	<enum name="NSUnknownPointingDevice" swt_gen="true"></enum>
	<enum name="NSUnscaledWindowMask" swt_gen="true"></enum>
	<enum name="NSUpArrowFunctionKey" swt_gen="true"></enum>
	<enum name="NSUpTextMovement" swt_gen="true"></enum>
	<enum name="NSUpdateWindowsRunLoopOrdering" swt_gen="true"></enum>
	<enum name="NSUserFunctionKey" swt_gen="true"></enum>
	<enum name="NSUtilityWindowMask" swt_gen="true"></enum>
	<enum name="NSVariableStatusItemLength" swt_gen="true"></enum>
	<enum name="NSVerticalRuler" swt_gen="true"></enum>
	<enum name="NSViaPanelFontAction" swt_gen="true"></enum>
	<enum name="NSViewHeightSizable" swt_gen="true"></enum>
	<enum name="NSViewMaxXMargin" swt_gen="true"></enum>
	<enum name="NSViewMaxYMargin" swt_gen="true"></enum>
	<enum name="NSViewMinXMargin" swt_gen="true"></enum>
	<enum name="NSViewMinYMargin" swt_gen="true"></enum>
	<enum name="NSViewNotSizable" swt_gen="true"></enum>
	<enum name="NSViewWidthSizable" swt_gen="true"></enum>
	<enum name="NSWantsBidiLevels" swt_gen="true"></enum>
	<enum name="NSWarningAlertStyle" swt_gen="true"></enum>
	<enum name="NSWheelModeColorPanel" swt_gen="true"></enum>
	<enum name="NSWindowAbove" swt_gen="true"></enum>
	<enum name="NSWindowBackingLocationDefault" swt_gen="true"></enum>
	<enum name="NSWindowBackingLocationMainMemory" swt_gen="true"></enum>
	<enum name="NSWindowBackingLocationVideoMemory" swt_gen="true"></enum>
	<enum name="NSWindowBelow" swt_gen="true"></enum>
	<enum name="NSWindowCloseButton" swt_gen="true"></enum>
	<enum name="NSWindowCollectionBehaviorCanJoinAllSpaces" swt_gen="true"></enum>
	<enum name="NSWindowCollectionBehaviorDefault" swt_gen="true"></enum>
	<enum name="NSWindowCollectionBehaviorMoveToActiveSpace" swt_gen="true"></enum>
	<enum name="NSWindowDocumentIconButton" swt_gen="true"></enum>
	<enum name="NSWindowExposedEventType" swt_gen="true"></enum>
	<enum name="NSWindowMiniaturizeButton" swt_gen="true"></enum>
	<enum name="NSWindowMovedEventType" swt_gen="true"></enum>
	<enum name="NSWindowOut" swt_gen="true"></enum>
	<enum name="NSWindowSharingNone" swt_gen="true"></enum>
	<enum name="NSWindowSharingReadOnly" swt_gen="true"></enum>
	<enum name="NSWindowSharingReadWrite" swt_gen="true"></enum>
	<enum name="NSWindowToolbarButton" swt_gen="true"></enum>
	<enum name="NSWindowZoomButton" swt_gen="true"></enum>
	<enum name="NSWindows95InterfaceStyle" swt_gen="true"></enum>
	<enum name="NSWorkspaceLaunchAllowingClassicStartup" swt_gen="true"></enum>
	<enum name="NSWorkspaceLaunchAndHide" swt_gen="true"></enum>
	<enum name="NSWorkspaceLaunchAndHideOthers" swt_gen="true"></enum>
	<enum name="NSWorkspaceLaunchAndPrint" swt_gen="true"></enum>
	<enum name="NSWorkspaceLaunchAsync" swt_gen="true"></enum>
	<enum name="NSWorkspaceLaunchDefault" swt_gen="true"></enum>
	<enum name="NSWorkspaceLaunchInhibitingBackgroundOnly" swt_gen="true"></enum>
	<enum name="NSWorkspaceLaunchNewInstance" swt_gen="true"></enum>
	<enum name="NSWorkspaceLaunchPreferringClassic" swt_gen="true"></enum>
	<enum name="NSWorkspaceLaunchWithoutActivation" swt_gen="true"></enum>
	<enum name="NSWorkspaceLaunchWithoutAddingToRecents" swt_gen="true"></enum>
	<enum name="NSWritingDirectionLeftToRight" swt_gen="true"></enum>
	<enum name="NSWritingDirectionNatural" swt_gen="true"></enum>
	<enum name="NSWritingDirectionRightToLeft" swt_gen="true"></enum>
	<enum name="NSYearMonthDatePickerElementFlag" swt_gen="true"></enum>
	<enum name="NSYearMonthDayDatePickerElementFlag" swt_gen="true"></enum>
	<function name="NSAccessibilityActionDescription" swt_gen="true">
		<arg name="action" swt_gen="true"></arg>
		<retval swt_gen="true"></retval>
	</function>
	<function name="NSAccessibilityPostNotification" swt_gen="true">
		<arg name="element" swt_gen="true"></arg>
		<arg name="notification" swt_gen="true"></arg>
	</function>
	<function name="NSAccessibilityRaiseBadArgumentException" swt_gen="true">
		<arg name="element" swt_gen="true"></arg>
		<arg name="attribute" swt_gen="true"></arg>
		<arg name="value" swt_gen="true"></arg>
	</function>
	<function name="NSAccessibilityRoleDescription" swt_gen="true">
		<arg name="role" swt_gen="true"></arg>
		<arg name="subrole" swt_gen="true"></arg>
		<retval swt_gen="true"></retval>
	</function>
	<function name="NSAccessibilityRoleDescriptionForUIElement" swt_gen="true">
		<arg name="element" swt_gen="true"></arg>
		<retval swt_gen="true"></retval>
	</function>
	<function name="NSAccessibilityUnignoredAncestor" swt_gen="true">
		<arg name="element" swt_gen="true"></arg>
		<retval swt_gen="true"></retval>
	</function>
	<function name="NSAccessibilityUnignoredChildren" swt_gen="true">
		<arg name="originalChildren" swt_gen="true"></arg>
		<retval swt_gen="true"></retval>
	</function>
	<function name="NSAccessibilityUnignoredChildrenForOnlyChild" swt_gen="true">
		<arg name="originalChild" swt_gen="true"></arg>
		<retval swt_gen="true"></retval>
	</function>
	<function name="NSAccessibilityUnignoredDescendant" swt_gen="true">
		<arg name="element" swt_gen="true"></arg>
		<retval swt_gen="true"></retval>
	</function>
	<function name="NSBeep" swt_gen="true"></function>
	<function name="NSBitsPerPixelFromDepth" swt_gen="true">
		<arg name="depth" swt_gen="true"></arg>
		<retval swt_gen="true"></retval>
	</function>
	<function name="NSCopyBits" swt_gen="true">
		<arg name="srcGState" swt_gen="true"></arg>
		<arg name="srcRect" swt_gen="true"></arg>
		<arg name="destPoint" swt_gen="true"></arg>
	</function>
	<function name="NSNumberOfColorComponents" swt_gen="true">
		<arg name="colorSpaceName" swt_gen="true"></arg>
		<retval swt_gen="true"></retval>
	</function>
	<class name="NSATSTypesetter" swt_superclass="NSTypesetter">
	</class>
	<class name="NSActionCell" swt_gen="mixed" swt_superclass="NSCell">
		<method selector="action" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAction:" swt_gen="true">
			<arg name="aSelector" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setTarget:" swt_gen="true">
			<arg name="anObject" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="target" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSAffineTransform" swt_gen="mixed">
		<method selector="concat" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="initWithTransform:" swt_gen="true">
			<arg name="transform" swt_gen="true"></arg>
			<retval swt_gen="true" swt_java_type="NSAffineTransform"></retval>
		</method>
		<method selector="invert" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="prependTransform:" swt_gen="true">
			<arg name="transform" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="rotateByDegrees:" swt_gen="true">
			<arg name="angle" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="scaleXBy:yBy:" swt_gen="true">
			<arg name="scaleX" swt_gen="true"></arg>
			<arg name="scaleY" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="set" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setTransformStruct:" swt_gen="true">
			<arg name="transformStruct" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="transform" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="transformPoint:" swt_gen="true">
			<arg name="aPoint" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="transformSize:" swt_gen="true">
			<arg name="aSize" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="transformStruct" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="translateXBy:yBy:" swt_gen="true">
			<arg name="deltaX" swt_gen="true"></arg>
			<arg name="deltaY" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSAlert" swt_gen="mixed">
		<method selector="addButtonWithTitle:" swt_gen="true">
			<arg name="title" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="runModal" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAlertStyle:" swt_gen="true">
			<arg name="style" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setMessageText:" swt_gen="true">
			<arg name="messageText" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="window" swt_gen="true">
			<retval swt_gen="true" swt_java_type="NSWindow"></retval>
		</method>
	</class>
	<class name="NSApplication" swt_gen="mixed" swt_superclass="NSResponder">
		<method selector="activateIgnoringOtherApps:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:" swt_gen="true">
			<arg name="sheet" swt_gen="true"></arg>
			<arg name="docWindow" swt_gen="true"></arg>
			<arg name="modalDelegate" swt_gen="true"></arg>
			<arg name="didEndSelector" swt_gen="true"></arg>
			<arg name="contextInfo" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="currentEvent" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="endSheet:returnCode:" swt_gen="true">
			<arg name="sheet" swt_gen="true"></arg>
			<arg name="returnCode" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="finishLaunching" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="hide:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="hideOtherApplications:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="isActive" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="isRunning" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="keyWindow" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="mainMenu" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="nextEventMatchingMask:untilDate:inMode:dequeue:" swt_gen="true">
			<arg name="mask" swt_gen="true"></arg>
			<arg name="expiration" swt_gen="true"></arg>
			<arg name="mode" swt_gen="true"></arg>
			<arg name="deqFlag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="orderFrontStandardAboutPanel:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="orderedWindows" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="postEvent:atStart:" swt_gen="true">
			<arg name="event" swt_gen="true"></arg>
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="run" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="runModalForWindow:" swt_gen="true">
			<arg name="theWindow" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="sendEvent:" swt_gen="true">
			<arg name="theEvent" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setApplicationIconImage:" swt_gen="true">
			<arg name="image" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDelegate:" swt_gen="true">
			<arg name="anObject" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="sharedApplication" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="stop:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="terminate:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="unhideAllApplications:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="windows" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSArrayController" swt_superclass="NSObjectController">
	</class>
	<class name="NSAttributedString" swt_gen="mixed">
		<method class_method="true" selector="attributedStringWithAttachment:" swt_gen="true">
			<arg name="attachment" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="attributesAtIndex:longestEffectiveRange:inRange:" swt_gen="true">
			<arg name="location" swt_gen="true"></arg>
			<arg name="range" swt_gen="true"></arg>
			<arg name="rangeLimit" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="doubleClickAtIndex:" swt_gen="true">
			<arg name="location" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="drawAtPoint:" swt_gen="true">
			<arg name="point" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="drawInRect:" swt_gen="true">
			<arg name="rect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="initWithString:attributes:" swt_gen="true">
			<arg name="str" swt_gen="true"></arg>
			<arg name="attrs" swt_gen="true"></arg>
			<retval swt_gen="true" swt_java_type="NSAttributedString"></retval>
		</method>
		<method selector="nextWordFromIndex:forward:" swt_gen="true">
			<arg name="location" swt_gen="true"></arg>
			<arg name="isForward" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="size" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSBezierPath" swt_gen="mixed">
		<method selector="addClip" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="appendBezierPath:" swt_gen="true">
			<arg name="path" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:" swt_gen="true">
			<arg name="center" swt_gen="true"></arg>
			<arg name="radius" swt_gen="true"></arg>
			<arg name="startAngle" swt_gen="true"></arg>
			<arg name="endAngle" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:clockwise:" swt_gen="true">
			<arg name="center" swt_gen="true"></arg>
			<arg name="radius" swt_gen="true"></arg>
			<arg name="startAngle" swt_gen="true"></arg>
			<arg name="endAngle" swt_gen="true"></arg>
			<arg name="clockwise" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="appendBezierPathWithGlyphs:count:inFont:" swt_gen="true">
			<arg name="glyphs" swt_gen="true"></arg>
			<arg name="count" swt_gen="true"></arg>
			<arg name="font" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="appendBezierPathWithOvalInRect:" swt_gen="true">
			<arg name="rect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="appendBezierPathWithRect:" swt_gen="true">
			<arg name="rect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="appendBezierPathWithRoundedRect:xRadius:yRadius:" swt_gen="true">
			<arg name="rect" swt_gen="true"></arg>
			<arg name="xRadius" swt_gen="true"></arg>
			<arg name="yRadius" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="bezierPath" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="bezierPathByFlatteningPath" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="bezierPathWithRect:" swt_gen="true">
			<arg name="rect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="bounds" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="closePath" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="containsPoint:" swt_gen="true">
			<arg name="point" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="controlPointBounds" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="currentPoint" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="curveToPoint:controlPoint1:controlPoint2:" swt_gen="true">
			<arg name="endPoint" swt_gen="true"></arg>
			<arg name="controlPoint1" swt_gen="true"></arg>
			<arg name="controlPoint2" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="defaultFlatness" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="elementAtIndex:associatedPoints:" swt_gen="true">
			<arg name="index" swt_gen="true"></arg>
			<arg name="points" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="elementCount" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="fill" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="fillRect:" swt_gen="true">
			<arg name="rect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="isEmpty" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="lineToPoint:" swt_gen="true">
			<arg name="point" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="moveToPoint:" swt_gen="true">
			<arg name="point" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="removeAllPoints" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setClip" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="setDefaultFlatness:" swt_gen="true">
			<arg name="flatness" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setLineCapStyle:" swt_gen="true">
			<arg name="lineCapStyle" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setLineDash:count:phase:" swt_gen="true">
			<arg name="pattern" swt_gen="true" swt_java_type="float[]" swt_java_type64="double[]"></arg>
			<arg name="count" swt_gen="true"></arg>
			<arg name="phase" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setLineJoinStyle:" swt_gen="true">
			<arg name="lineJoinStyle" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setLineWidth:" swt_gen="true">
			<arg name="lineWidth" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setMiterLimit:" swt_gen="true">
			<arg name="miterLimit" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setWindingRule:" swt_gen="true">
			<arg name="windingRule" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="stroke" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="strokeRect:" swt_gen="true">
			<arg name="rect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="transformUsingAffineTransform:" swt_gen="true">
			<arg name="transform" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSBitmapImageRep" swt_gen="mixed" swt_superclass="NSImageRep">
		<method selector="TIFFRepresentation" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="bitmapData" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="bitmapFormat" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="bitsPerPixel" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="bytesPerPlane" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="bytesPerRow" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="colorAtX:y:" swt_gen="true">
			<arg name="x" swt_gen="true"></arg>
			<arg name="y" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="getBitmapDataPlanes:" swt_gen="true">
			<arg name="data" swt_gen="true" swt_java_type="int[]" swt_java_type64="long[]"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="imageRepWithData:" swt_gen="true">
			<arg name="data" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bitmapFormat:bytesPerRow:bitsPerPixel:" swt_gen="true">
			<arg name="planes" swt_gen="true"></arg>
			<arg name="width" swt_gen="true"></arg>
			<arg name="height" swt_gen="true"></arg>
			<arg name="bps" swt_gen="true"></arg>
			<arg name="spp" swt_gen="true"></arg>
			<arg name="alpha" swt_gen="true"></arg>
			<arg name="isPlanar" swt_gen="true"></arg>
			<arg name="colorSpaceName" swt_gen="true"></arg>
			<arg name="bitmapFormat" swt_gen="true"></arg>
			<arg name="rBytes" swt_gen="true"></arg>
			<arg name="pBits" swt_gen="true"></arg>
			<retval swt_gen="true" swt_java_type="NSBitmapImageRep"></retval>
		</method>
		<method selector="initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bytesPerRow:bitsPerPixel:" swt_gen="true">
			<arg name="planes" swt_gen="true"></arg>
			<arg name="width" swt_gen="true"></arg>
			<arg name="height" swt_gen="true"></arg>
			<arg name="bps" swt_gen="true"></arg>
			<arg name="spp" swt_gen="true"></arg>
			<arg name="alpha" swt_gen="true"></arg>
			<arg name="isPlanar" swt_gen="true"></arg>
			<arg name="colorSpaceName" swt_gen="true"></arg>
			<arg name="rBytes" swt_gen="true"></arg>
			<arg name="pBits" swt_gen="true"></arg>
			<retval swt_gen="true" swt_java_type="NSBitmapImageRep"></retval>
		</method>
		<method selector="initWithFocusedViewRect:" swt_gen="true">
			<arg name="rect" swt_gen="true"></arg>
			<retval swt_gen="true" swt_java_type="NSBitmapImageRep"></retval>
		</method>
		<method selector="isPlanar" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="numberOfPlanes" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="samplesPerPixel" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSBox" swt_gen="mixed" swt_superclass="NSView">
		<method selector="borderWidth" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="contentView" swt_gen="true">
			<retval swt_gen="true" swt_java_type="NSView"></retval>
		</method>
		<method selector="contentViewMargins" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setBorderType:" swt_gen="true">
			<arg name="aType" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setBorderWidth:" swt_gen="true">
			<arg name="borderWidth" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setBoxType:" swt_gen="true">
			<arg name="boxType" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setContentView:" swt_gen="true">
			<arg name="aView" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setContentViewMargins:" swt_gen="true">
			<arg name="offsetSize" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setFillColor:" swt_gen="true">
			<arg name="fillColor" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setTitle:" swt_gen="true">
			<arg name="aString" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setTitleFont:" swt_gen="true">
			<arg name="fontObj" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setTitlePosition:" swt_gen="true">
			<arg name="aPosition" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="sizeToFit" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="titleCell" swt_gen="true">
			<retval swt_gen="true" swt_java_type="NSCell"></retval>
		</method>
		<method selector="titleFont" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSBrowser" swt_superclass="NSControl">
	</class>
	<class name="NSBrowserCell" swt_gen="mixed" swt_superclass="NSCell">
		<method selector="highlightColorInView:" swt_gen="true">
			<arg name="controlView" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setLeaf:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSBundle" swt_gen="mixed">
		<method class_method="true" selector="loadNibFile:externalNameTable:withZone:" swt_gen="true">
			<arg name="fileName" swt_gen="true"></arg>
			<arg name="context" swt_gen="true"></arg>
			<arg name="zone" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSButton" swt_gen="mixed" swt_superclass="NSControl">
		<method selector="setAllowsMixedState:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAttributedTitle:" swt_gen="true">
			<arg name="aString" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setBezelStyle:" swt_gen="true">
			<arg name="bezelStyle" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setBordered:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setButtonType:" swt_gen="true">
			<arg name="aType" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setImage:" swt_gen="true">
			<arg name="image" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setImagePosition:" swt_gen="true">
			<arg name="aPosition" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setState:" swt_gen="true">
			<arg name="value" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setTitle:" swt_gen="true">
			<arg name="aString" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="state" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSButtonCell" swt_gen="mixed" swt_superclass="NSActionCell">
		<method selector="drawImage:withFrame:inView:" swt_gen="true">
			<arg name="image" swt_gen="true"></arg>
			<arg name="frame" swt_gen="true"></arg>
			<arg name="controlView" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setBackgroundColor:" swt_gen="true">
			<arg name="color" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setButtonType:" swt_gen="true">
			<arg name="aType" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setImagePosition:" swt_gen="true">
			<arg name="aPosition" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="title" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSCIImageRep" swt_superclass="NSImageRep">
	</class>
	<class name="NSCachedImageRep" swt_superclass="NSImageRep">
	</class>
	<class name="NSCell" swt_gen="mixed">
		<method selector="attributedStringValue" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="cellSize" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="cellSizeForBounds:" swt_gen="true">
			<arg name="aRect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="drawInteriorWithFrame:inView:" swt_gen="true">
			<arg name="cellFrame" swt_gen="true"></arg>
			<arg name="controlView" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="drawWithFrame:inView:" swt_gen="true">
			<arg name="cellFrame" swt_gen="true"></arg>
			<arg name="controlView" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="drawingRectForBounds:" swt_gen="true">
			<arg name="theRect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="font" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="highlightColorWithFrame:inView:" swt_gen="true">
			<arg name="cellFrame" swt_gen="true"></arg>
			<arg name="controlView" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="hitTestForEvent:inRect:ofView:" swt_gen="true">
			<arg name="event" swt_gen="true"></arg>
			<arg name="cellFrame" swt_gen="true"></arg>
			<arg name="controlView" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="image" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="imageRectForBounds:" swt_gen="true">
			<arg name="theRect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="isHighlighted" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="nextState" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAlignment:" swt_gen="true">
			<arg name="mode" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAllowsMixedState:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAttributedStringValue:" swt_gen="true">
			<arg name="obj" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setControlSize:" swt_gen="true">
			<arg name="size" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setEnabled:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setFont:" swt_gen="true">
			<arg name="fontObj" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setFormatter:" swt_gen="true">
			<arg name="newFormatter" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setHighlighted:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setImage:" swt_gen="true">
			<arg name="image" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setLineBreakMode:" swt_gen="true">
			<arg name="mode" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setObjectValue:" swt_gen="true">
			<arg name="obj" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setScrollable:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setTitle:" swt_gen="true">
			<arg name="aString" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setWraps:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="title" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="titleRectForBounds:" swt_gen="true">
			<arg name="theRect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="wraps" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSClipView" swt_gen="mixed" swt_superclass="NSView">
		<method selector="copiesOnScroll" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="documentCursor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="scrollToPoint:" swt_gen="true">
			<arg name="newOrigin" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setCopiesOnScroll:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDocumentCursor:" swt_gen="true">
			<arg name="anObj" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDrawsBackground:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSCollectionView" swt_superclass="NSView">
	</class>
	<class name="NSColor" swt_gen="mixed">
		<method selector="alphaComponent" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="alternateSelectedControlColor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="alternateSelectedControlTextColor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="blackColor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="blueComponent" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="clearColor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="colorUsingColorSpace:" swt_gen="true">
			<arg name="space" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="colorUsingColorSpaceName:" swt_gen="true">
			<arg name="colorSpace" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="colorWithDeviceRed:green:blue:alpha:" swt_gen="true">
			<arg name="red" swt_gen="true"></arg>
			<arg name="green" swt_gen="true"></arg>
			<arg name="blue" swt_gen="true"></arg>
			<arg name="alpha" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="colorWithPatternImage:" swt_gen="true">
			<arg name="image" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="controlBackgroundColor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="controlDarkShadowColor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="controlHighlightColor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="controlLightHighlightColor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="controlShadowColor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="controlTextColor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="disabledControlTextColor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="getComponents:" swt_gen="true">
			<arg name="components" swt_gen="true" swt_java_type="float[]" swt_java_type64="double[]"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="greenComponent" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="numberOfComponents" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="redComponent" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="secondarySelectedControlColor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="selectedControlColor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="selectedControlTextColor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="selectedTextBackgroundColor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="selectedTextColor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="set" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setFill" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setStroke" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="textBackgroundColor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="textColor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="windowBackgroundColor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="windowFrameColor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="windowFrameTextColor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSColorPanel" swt_gen="mixed" swt_superclass="NSPanel">
		<method selector="color" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setColor:" swt_gen="true">
			<arg name="color" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="sharedColorPanel" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSColorSpace" swt_gen="mixed">
		<method class_method="true" selector="deviceRGBColorSpace" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSColorWell" swt_superclass="NSControl">
	</class>
	<class name="NSComboBox" swt_gen="mixed" swt_superclass="NSTextField">
		<method selector="addItemWithObjectValue:" swt_gen="true">
			<arg name="object" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="deselectItemAtIndex:" swt_gen="true">
			<arg name="index" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="indexOfSelectedItem" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="insertItemWithObjectValue:atIndex:" swt_gen="true">
			<arg name="object" swt_gen="true"></arg>
			<arg name="index" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="itemObjectValueAtIndex:" swt_gen="true">
			<arg name="index" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="numberOfItems" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="numberOfVisibleItems" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="removeAllItems" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="removeItemAtIndex:" swt_gen="true">
			<arg name="index" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="selectItemAtIndex:" swt_gen="true">
			<arg name="index" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setNumberOfVisibleItems:" swt_gen="true">
			<arg name="visibleItems" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSComboBoxCell" swt_gen="mixed" swt_superclass="NSTextFieldCell">
		<method selector="objectValues" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSControl" swt_gen="mixed" swt_superclass="NSView">
		<method selector="abortEditing" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="action" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="cell" swt_gen="true">
			<retval swt_gen="true" swt_java_type="NSCell"></retval>
		</method>
		<method class_method="true" selector="cellClass" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="currentEditor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="doubleValue" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="font" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="sendAction:to:" swt_gen="true">
			<arg name="theAction" swt_gen="true"></arg>
			<arg name="theTarget" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAction:" swt_gen="true">
			<arg name="aSelector" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAlignment:" swt_gen="true">
			<arg name="mode" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setCell:" swt_gen="true">
			<arg name="aCell" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="setCellClass:" swt_gen="true">
			<arg name="factoryId" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDoubleValue:" swt_gen="true">
			<arg name="aDouble" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setEnabled:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setFont:" swt_gen="true">
			<arg name="fontObj" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setFormatter:" swt_gen="true">
			<arg name="newFormatter" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setStringValue:" swt_gen="true">
			<arg name="aString" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setTarget:" swt_gen="true">
			<arg name="anObject" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="sizeToFit" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="stringValue" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="target" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSCursor" swt_gen="mixed">
		<method class_method="true" selector="IBeamCursor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="arrowCursor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="crosshairCursor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="currentCursor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="initWithImage:hotSpot:" swt_gen="true">
			<arg name="newImage" swt_gen="true"></arg>
			<arg name="aPoint" swt_gen="true"></arg>
			<retval swt_gen="true" swt_java_type="NSCursor"></retval>
		</method>
		<method class_method="true" selector="pointingHandCursor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="pop" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="push" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="resizeDownCursor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="resizeLeftCursor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="resizeLeftRightCursor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="resizeRightCursor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="resizeUpCursor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="resizeUpDownCursor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="set" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="setHiddenUntilMouseMoves:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setOnMouseEntered:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSDatePicker" swt_gen="mixed" swt_superclass="NSControl">
		<method selector="dateValue" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setBackgroundColor:" swt_gen="true">
			<arg name="color" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDatePickerElements:" swt_gen="true">
			<arg name="elementFlags" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDatePickerStyle:" swt_gen="true">
			<arg name="newStyle" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDateValue:" swt_gen="true">
			<arg name="newStartDate" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDrawsBackground:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setTextColor:" swt_gen="true">
			<arg name="color" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSDatePickerCell" swt_superclass="NSActionCell">
	</class>
	<class name="NSDictionaryController" swt_superclass="NSArrayController">
	</class>
	<class name="NSDrawer" swt_superclass="NSResponder">
	</class>
	<class name="NSEPSImageRep" swt_superclass="NSImageRep">
	</class>
	<class name="NSEvent" swt_gen="mixed">
		<method selector="CGEvent" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="buttonNumber" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="characters" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="charactersIgnoringModifiers" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="clickCount" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="deltaX" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="deltaY" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="enterExitEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:trackingNumber:userData:" swt_gen="true">
			<arg name="type" swt_gen="true"></arg>
			<arg name="location" swt_gen="true"></arg>
			<arg name="flags" swt_gen="true"></arg>
			<arg name="time" swt_gen="true"></arg>
			<arg name="wNum" swt_gen="true"></arg>
			<arg name="context" swt_gen="true"></arg>
			<arg name="eNum" swt_gen="true"></arg>
			<arg name="tNum" swt_gen="true"></arg>
			<arg name="data" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="keyCode" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="locationInWindow" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="modifierFlags" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="mouseLocation" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:" swt_gen="true">
			<arg name="type" swt_gen="true"></arg>
			<arg name="location" swt_gen="true"></arg>
			<arg name="flags" swt_gen="true"></arg>
			<arg name="time" swt_gen="true"></arg>
			<arg name="wNum" swt_gen="true"></arg>
			<arg name="context" swt_gen="true"></arg>
			<arg name="subtype" swt_gen="true"></arg>
			<arg name="d1" swt_gen="true"></arg>
			<arg name="d2" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="timestamp" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="type" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="window" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSFileWrapper" swt_gen="mixed">
		<method selector="setIcon:" swt_gen="true">
			<arg name="icon" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSFont" swt_gen="mixed">
		<method selector="ascender" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="controlContentFontOfSize:" swt_gen="true">
			<arg name="fontSize" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="descender" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="familyName" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="fontName" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="fontWithName:size:" swt_gen="true">
			<arg name="fontName" swt_gen="true"></arg>
			<arg name="fontSize" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="leading" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="pointSize" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="smallSystemFontSize" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="systemFontOfSize:" swt_gen="true">
			<arg name="fontSize" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="systemFontSize" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="systemFontSizeForControlSize:" swt_gen="true">
			<arg name="controlSize" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSFontManager" swt_gen="mixed">
		<method selector="availableFontFamilies" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="availableFonts" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="availableMembersOfFontFamily:" swt_gen="true">
			<arg name="fam" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="fontWithFamily:traits:weight:size:" swt_gen="true">
			<arg name="family" swt_gen="true"></arg>
			<arg name="traits" swt_gen="true"></arg>
			<arg name="weight" swt_gen="true"></arg>
			<arg name="size" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="sharedFontManager" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="traitsOfFont:" swt_gen="true">
			<arg name="fontObj" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="weightOfFont:" swt_gen="true">
			<arg name="fontObj" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSFontPanel" swt_gen="mixed" swt_superclass="NSPanel">
		<method selector="panelConvertFont:" swt_gen="true">
			<arg name="fontObj" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setPanelFont:isMultiple:" swt_gen="true">
			<arg name="fontObj" swt_gen="true"></arg>
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="sharedFontPanel" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSForm" swt_superclass="NSMatrix">
	</class>
	<class name="NSFormCell" swt_superclass="NSActionCell">
	</class>
	<class name="NSGradient" swt_gen="mixed">
		<method selector="drawFromPoint:toPoint:options:" swt_gen="true">
			<arg name="startingPoint" swt_gen="true"></arg>
			<arg name="endingPoint" swt_gen="true"></arg>
			<arg name="options" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="drawInRect:angle:" swt_gen="true">
			<arg name="rect" swt_gen="true"></arg>
			<arg name="angle" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="initWithStartingColor:endingColor:" swt_gen="true">
			<arg name="startingColor" swt_gen="true"></arg>
			<arg name="endingColor" swt_gen="true"></arg>
			<retval swt_gen="true" swt_java_type="NSGradient"></retval>
		</method>
	</class>
	<class name="NSGraphicsContext" swt_gen="mixed">
		<method class_method="true" selector="currentContext" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="flushGraphics" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="graphicsContextWithBitmapImageRep:" swt_gen="true">
			<arg name="bitmapRep" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="graphicsContextWithGraphicsPort:flipped:" swt_gen="true">
			<arg name="graphicsPort" swt_gen="true"></arg>
			<arg name="initialFlippedState" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="graphicsContextWithWindow:" swt_gen="true">
			<arg name="window" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="graphicsPort" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="imageInterpolation" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="isDrawingToScreen" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="restoreGraphicsState" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="restoreGraphicsState" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="saveGraphicsState" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="saveGraphicsState" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setCompositingOperation:" swt_gen="true">
			<arg name="operation" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="setCurrentContext:" swt_gen="true">
			<arg name="context" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setImageInterpolation:" swt_gen="true">
			<arg name="interpolation" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setPatternPhase:" swt_gen="true">
			<arg name="phase" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setShouldAntialias:" swt_gen="true">
			<arg name="antialias" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="shouldAntialias" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSImage" swt_gen="mixed">
		<method selector="TIFFRepresentation" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="addRepresentation:" swt_gen="true">
			<arg name="imageRep" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="bestRepresentationForDevice:" swt_gen="true">
			<arg name="deviceDescription" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="drawAtPoint:fromRect:operation:fraction:" swt_gen="true">
			<arg name="point" swt_gen="true"></arg>
			<arg name="fromRect" swt_gen="true"></arg>
			<arg name="op" swt_gen="true"></arg>
			<arg name="delta" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="drawInRect:fromRect:operation:fraction:" swt_gen="true">
			<arg name="rect" swt_gen="true"></arg>
			<arg name="fromRect" swt_gen="true"></arg>
			<arg name="op" swt_gen="true"></arg>
			<arg name="delta" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="initByReferencingFile:" swt_gen="true">
			<arg name="fileName" swt_gen="true"></arg>
			<retval swt_gen="true" swt_java_type="NSImage"></retval>
		</method>
		<method selector="initWithContentsOfFile:" swt_gen="true">
			<arg name="fileName" swt_gen="true"></arg>
			<retval swt_gen="true" swt_java_type="NSImage"></retval>
		</method>
		<method selector="initWithData:" swt_gen="true">
			<arg name="data" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="initWithSize:" swt_gen="true">
			<arg name="aSize" swt_gen="true"></arg>
			<retval swt_gen="true" swt_java_type="NSImage"></retval>
		</method>
		<method selector="lockFocus" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="removeRepresentation:" swt_gen="true">
			<arg name="imageRep" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="representations" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setCacheMode:" swt_gen="true">
			<arg name="mode" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setSize:" swt_gen="true">
			<arg name="aSize" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="size" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="unlockFocus" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSImageCell" swt_superclass="NSCell">
	</class>
	<class name="NSImageRep" swt_gen="mixed">
		<method selector="bitsPerSample" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="colorSpaceName" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="hasAlpha" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="pixelsHigh" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="pixelsWide" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAlpha:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSImageView" swt_gen="mixed" swt_superclass="NSControl">
		<method selector="image" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setImage:" swt_gen="true">
			<arg name="newImage" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setImageAlignment:" swt_gen="true">
			<arg name="newAlign" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setImageScaling:" swt_gen="true">
			<arg name="newScaling" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSInputManager" swt_gen="mixed">
		<method class_method="true" selector="currentInputManager" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="handleMouseEvent:" swt_gen="true">
			<arg name="theMouseEvent" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="wantsToHandleMouseEvents" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSLayoutManager" swt_gen="mixed">
		<method selector="addTemporaryAttribute:value:forCharacterRange:" swt_gen="true">
			<arg name="attrName" swt_gen="true"></arg>
			<arg name="value" swt_gen="true"></arg>
			<arg name="charRange" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="addTextContainer:" swt_gen="true">
			<arg name="container" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="boundingRectForGlyphRange:inTextContainer:" swt_gen="true">
			<arg name="glyphRange" swt_gen="true"></arg>
			<arg name="container" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="characterIndexForGlyphAtIndex:" swt_gen="true">
			<arg name="glyphIndex" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="defaultBaselineOffsetForFont:" swt_gen="true">
			<arg name="theFont" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="defaultLineHeightForFont:" swt_gen="true">
			<arg name="theFont" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="drawBackgroundForGlyphRange:atPoint:" swt_gen="true">
			<arg name="glyphsToShow" swt_gen="true"></arg>
			<arg name="origin" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="drawGlyphsForGlyphRange:atPoint:" swt_gen="true">
			<arg name="glyphsToShow" swt_gen="true"></arg>
			<arg name="origin" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="getGlyphs:range:" swt_gen="true">
			<arg name="glyphArray" swt_gen="true"></arg>
			<arg name="glyphRange" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:" swt_gen="true">
			<arg name="glyphRange" swt_gen="true"></arg>
			<arg name="glyphBuffer" swt_gen="true"></arg>
			<arg name="charIndexBuffer" swt_gen="true"></arg>
			<arg name="inscribeBuffer" swt_gen="true"></arg>
			<arg name="elasticBuffer" swt_gen="true"></arg>
			<arg name="bidiLevelBuffer" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="glyphIndexForCharacterAtIndex:" swt_gen="true">
			<arg name="charIndex" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:" swt_gen="true">
			<arg name="point" swt_gen="true"></arg>
			<arg name="container" swt_gen="true"></arg>
			<arg name="partialFraction" swt_gen="true" swt_java_type="float[]" swt_java_type64="double[]"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="glyphRangeForCharacterRange:actualCharacterRange:" swt_gen="true">
			<arg name="charRange" swt_gen="true"></arg>
			<arg name="actualCharRange" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="glyphRangeForTextContainer:" swt_gen="true">
			<arg name="container" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="lineFragmentUsedRectForGlyphAtIndex:effectiveRange:" swt_gen="true">
			<arg name="glyphIndex" swt_gen="true"></arg>
			<arg name="effectiveGlyphRange" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:" swt_gen="true">
			<arg name="glyphIndex" swt_gen="true"></arg>
			<arg name="effectiveGlyphRange" swt_gen="true"></arg>
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="locationForGlyphAtIndex:" swt_gen="true">
			<arg name="glyphIndex" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="numberOfGlyphs" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="rectArrayForCharacterRange:withinSelectedCharacterRange:inTextContainer:rectCount:" swt_gen="true">
			<arg name="charRange" swt_gen="true"></arg>
			<arg name="selCharRange" swt_gen="true"></arg>
			<arg name="container" swt_gen="true"></arg>
			<arg name="rectCount" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="removeTemporaryAttribute:forCharacterRange:" swt_gen="true">
			<arg name="attrName" swt_gen="true"></arg>
			<arg name="charRange" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setLineFragmentRect:forGlyphRange:usedRect:" swt_gen="true">
			<arg name="fragmentRect" swt_gen="true"></arg>
			<arg name="glyphRange" swt_gen="true"></arg>
			<arg name="usedRect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setTextStorage:" swt_gen="true">
			<arg name="textStorage" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="typesetter" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="usedRectForTextContainer:" swt_gen="true">
			<arg name="container" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSLevelIndicator" swt_superclass="NSControl">
	</class>
	<class name="NSLevelIndicatorCell" swt_superclass="NSActionCell">
	</class>
	<class name="NSMatrix" swt_superclass="NSControl">
	</class>
	<class name="NSMenu" swt_gen="mixed">
		<method selector="addItem:" swt_gen="true">
			<arg name="newItem" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="cancelTracking" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="indexOfItemWithTarget:andAction:" swt_gen="true">
			<arg name="target" swt_gen="true"></arg>
			<arg name="actionSelector" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="initWithTitle:" swt_gen="true">
			<arg name="aTitle" swt_gen="true"></arg>
			<retval swt_gen="true" swt_java_type="NSMenu"></retval>
		</method>
		<method selector="insertItem:atIndex:" swt_gen="true">
			<arg name="newItem" swt_gen="true"></arg>
			<arg name="index" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="itemArray" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="itemAtIndex:" swt_gen="true">
			<arg name="index" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="numberOfItems" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="popUpContextMenu:withEvent:forView:" swt_gen="true">
			<arg name="menu" swt_gen="true"></arg>
			<arg name="event" swt_gen="true"></arg>
			<arg name="view" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="removeItem:" swt_gen="true">
			<arg name="item" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="removeItemAtIndex:" swt_gen="true">
			<arg name="index" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAutoenablesItems:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDelegate:" swt_gen="true">
			<arg name="anObject" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setTitle:" swt_gen="true">
			<arg name="aString" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSMenuItem" swt_gen="mixed">
		<method selector="initWithTitle:action:keyEquivalent:" swt_gen="true">
			<arg name="aString" swt_gen="true"></arg>
			<arg name="aSelector" swt_gen="true"></arg>
			<arg name="charCode" swt_gen="true"></arg>
			<retval swt_gen="true" swt_java_type="NSMenuItem"></retval>
		</method>
		<method selector="isHidden" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="keyEquivalent" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="keyEquivalentModifierMask" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="separatorItem" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAction:" swt_gen="true">
			<arg name="aSelector" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setEnabled:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setHidden:" swt_gen="true">
			<arg name="hidden" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setImage:" swt_gen="true">
			<arg name="menuImage" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setKeyEquivalent:" swt_gen="true">
			<arg name="aKeyEquivalent" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setKeyEquivalentModifierMask:" swt_gen="true">
			<arg name="mask" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setMenu:" swt_gen="true">
			<arg name="menu" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setState:" swt_gen="true">
			<arg name="state" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setSubmenu:" swt_gen="true">
			<arg name="submenu" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setTarget:" swt_gen="true">
			<arg name="anObject" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setTitle:" swt_gen="true">
			<arg name="aString" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="state" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="submenu" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="title" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSMenuItemCell" swt_superclass="NSButtonCell">
	</class>
	<class name="NSMenuView" swt_superclass="NSView">
	</class>
	<class name="NSMovieView" swt_superclass="NSView">
	</class>
	<class name="NSMutableAttributedString" swt_gen="mixed" swt_superclass="NSAttributedString">
		<method selector="appendAttributedString:" swt_gen="true">
			<arg name="attrString" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="mutableString" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="replaceCharactersInRange:withString:" swt_gen="true">
			<arg name="range" swt_gen="true"></arg>
			<arg name="str" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSMutableParagraphStyle" swt_gen="mixed" swt_superclass="NSParagraphStyle">
		<method selector="addTabStop:" swt_gen="true">
			<arg name="anObject" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAlignment:" swt_gen="true">
			<arg name="alignment" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDefaultTabInterval:" swt_gen="true">
			<arg name="aFloat" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setFirstLineHeadIndent:" swt_gen="true">
			<arg name="aFloat" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setLineBreakMode:" swt_gen="true">
			<arg name="mode" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setLineSpacing:" swt_gen="true">
			<arg name="aFloat" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setTabStops:" swt_gen="true">
			<arg name="array" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSNibOutletConnector" swt_superclass="NSNibConnector">
	</class>
	<class name="NSObject" swt_gen="mixed">
		<method selector="accessibilitySetOverrideValue:forAttribute:" swt_gen="true">
			<arg name="value" swt_gen="true"></arg>
			<arg name="attribute" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="applicationShouldTerminate:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="draggedImage" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="draggedImageLocation" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="draggingDestinationWindow" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="draggingEnded:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="draggingEntered:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="draggingExited:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="draggingLocation" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="draggingPasteboard" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="draggingSequenceNumber" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="draggingSource" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="draggingSourceOperationMask" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="namesOfPromisedFilesDroppedAtDestination:" swt_gen="true">
			<arg name="dropDestination" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="outlineView:didClickTableColumn:" swt_gen="true">
			<arg name="outlineView" swt_gen="true"></arg>
			<arg name="tableColumn" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="outlineViewColumnDidMove:" swt_gen="true">
			<arg name="notification" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="outlineViewColumnDidResize:" swt_gen="true">
			<arg name="notification" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="tableView:didClickTableColumn:" swt_gen="true">
			<arg name="tableView" swt_gen="true"></arg>
			<arg name="tableColumn" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="tableViewColumnDidMove:" swt_gen="true">
			<arg name="notification" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="tableViewColumnDidResize:" swt_gen="true">
			<arg name="notification" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSObjectController" swt_superclass="NSController">
	</class>
	<class name="NSOpenGLContext" swt_gen="mixed">
		<method class_method="true" selector="clearCurrentContext" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="currentContext" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="flushBuffer" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="makeCurrentContext" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSOpenGLPixelFormat" swt_gen="mixed">
		<method selector="getValues:forAttribute:forVirtualScreen:" swt_gen="true">
			<arg name="vals" swt_gen="true" swt_java_type="int[]" swt_java_type64="long[]"></arg>
			<arg name="attrib" swt_gen="true"></arg>
			<arg name="screen" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="initWithAttributes:" swt_gen="true">
			<arg name="attribs" swt_gen="true" swt_java_type="int[]"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSOpenGLView" swt_gen="mixed" swt_superclass="NSView">
		<method selector="clearGLContext" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="initWithFrame:pixelFormat:" swt_gen="true">
			<arg name="frameRect" swt_gen="true"></arg>
			<arg name="format" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="openGLContext" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setPixelFormat:" swt_gen="true">
			<arg name="pixelFormat" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSOpenPanel" swt_gen="mixed" swt_superclass="NSSavePanel">
		<method selector="filenames" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="openPanel" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAllowsMultipleSelection:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setCanChooseDirectories:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setCanChooseFiles:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSOutlineView" swt_gen="mixed" swt_superclass="NSTableView">
		<method selector="collapseItem:" swt_gen="true">
			<arg name="item" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="expandItem:" swt_gen="true">
			<arg name="item" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="frameOfOutlineCellAtRow:" swt_gen="true">
			<arg name="row" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="indentationPerLevel" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="isItemExpanded:" swt_gen="true">
			<arg name="item" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="itemAtRow:" swt_gen="true">
			<arg name="row" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="levelForItem:" swt_gen="true">
			<arg name="item" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="outlineTableColumn" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="reloadItem:reloadChildren:" swt_gen="true">
			<arg name="item" swt_gen="true"></arg>
			<arg name="reloadChildren" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="rowForItem:" swt_gen="true">
			<arg name="item" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAutoresizesOutlineColumn:" swt_gen="true">
			<arg name="resize" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAutosaveExpandedItems:" swt_gen="true">
			<arg name="save" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDropItem:dropChildIndex:" swt_gen="true">
			<arg name="item" swt_gen="true"></arg>
			<arg name="index" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setOutlineTableColumn:" swt_gen="true">
			<arg name="outlineTableColumn" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSPDFImageRep" swt_superclass="NSImageRep">
	</class>
	<class name="NSPICTImageRep" swt_superclass="NSImageRep">
	</class>
	<class name="NSPanel" swt_gen="mixed" swt_superclass="NSWindow">
		<method selector="setWorksWhenModal:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="worksWhenModal" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSParagraphStyle" swt_gen="mixed">
		<method selector="alignment" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="tabStops" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSPasteboard" swt_gen="mixed">
		<method selector="addTypes:owner:" swt_gen="true">
			<arg name="newTypes" swt_gen="true"></arg>
			<arg name="newOwner" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="availableTypeFromArray:" swt_gen="true">
			<arg name="types" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="dataForType:" swt_gen="true">
			<arg name="dataType" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="declareTypes:owner:" swt_gen="true">
			<arg name="newTypes" swt_gen="true"></arg>
			<arg name="newOwner" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="generalPasteboard" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="pasteboardWithName:" swt_gen="true">
			<arg name="name" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="propertyListForType:" swt_gen="true">
			<arg name="dataType" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setData:forType:" swt_gen="true">
			<arg name="data" swt_gen="true"></arg>
			<arg name="dataType" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setPropertyList:forType:" swt_gen="true">
			<arg name="plist" swt_gen="true"></arg>
			<arg name="dataType" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setString:forType:" swt_gen="true">
			<arg name="string" swt_gen="true"></arg>
			<arg name="dataType" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="stringForType:" swt_gen="true">
			<arg name="dataType" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="types" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSPathCell" swt_superclass="NSActionCell">
	</class>
	<class name="NSPathComponentCell" swt_superclass="NSTextFieldCell">
	</class>
	<class name="NSPathControl" swt_superclass="NSControl">
	</class>
	<class name="NSPersistentDocument" swt_superclass="NSDocument">
	</class>
	<class name="NSPopUpButton" swt_gen="mixed" swt_superclass="NSButton">
		<method selector="indexOfSelectedItem" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="initWithFrame:pullsDown:" swt_gen="true">
			<arg name="buttonFrame" swt_gen="true"></arg>
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true" swt_java_type="NSPopUpButton"></retval>
		</method>
		<method selector="itemAtIndex:" swt_gen="true">
			<arg name="index" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="itemTitleAtIndex:" swt_gen="true">
			<arg name="index" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="menu" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="numberOfItems" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="removeAllItems" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="removeItemAtIndex:" swt_gen="true">
			<arg name="index" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="selectItem:" swt_gen="true">
			<arg name="item" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="selectItemAtIndex:" swt_gen="true">
			<arg name="index" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAutoenablesItems:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setPullsDown:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="titleOfSelectedItem" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSPopUpButtonCell" swt_superclass="NSMenuItemCell">
	</class>
	<class name="NSPredicateEditor" swt_superclass="NSRuleEditor">
	</class>
	<class name="NSPrintInfo" swt_gen="mixed">
		<method class_method="true" selector="defaultPrinter" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="dictionary" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="imageablePageBounds" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="initWithDictionary:" swt_gen="true">
			<arg name="attributes" swt_gen="true"></arg>
			<retval swt_gen="true" swt_java_type="NSPrintInfo"></retval>
		</method>
		<method selector="jobDisposition" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="paperSize" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="printer" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setJobDisposition:" swt_gen="true">
			<arg name="disposition" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setPrinter:" swt_gen="true">
			<arg name="printer" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setUpPrintOperationDefaultValues" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="sharedPrintInfo" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSPrintOperation" swt_gen="mixed">
		<method selector="cleanUpOperation" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="context" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="createContext" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="deliverResult" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="destroyContext" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="printOperationWithView:printInfo:" swt_gen="true">
			<arg name="view" swt_gen="true"></arg>
			<arg name="printInfo" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="runOperation" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="setCurrentOperation:" swt_gen="true">
			<arg name="operation" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setJobTitle:" swt_gen="true">
			<arg name="jobTitle" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setShowsPrintPanel:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setShowsProgressPanel:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSPrintPanel" swt_gen="mixed">
		<method selector="options" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="printPanel" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="runModalWithPrintInfo:" swt_gen="true">
			<arg name="printInfo" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setOptions:" swt_gen="true">
			<arg name="options" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSPrinter" swt_gen="mixed">
		<method selector="name" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="printerNames" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="printerWithName:" swt_gen="true">
			<arg name="name" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSProgressIndicator" swt_gen="mixed" swt_superclass="NSView">
		<method selector="controlSize" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="doubleValue" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="maxValue" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="minValue" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setControlSize:" swt_gen="true">
			<arg name="size" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDoubleValue:" swt_gen="true">
			<arg name="doubleValue" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setIndeterminate:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setMaxValue:" swt_gen="true">
			<arg name="newMaximum" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setMinValue:" swt_gen="true">
			<arg name="newMinimum" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setUsesThreadedAnimation:" swt_gen="true">
			<arg name="threadedAnimation" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="sizeToFit" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="startAnimation:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="stopAnimation:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSQuickDrawView" swt_superclass="NSView">
	</class>
	<class name="NSResponder" swt_gen="mixed">
		<method selector="acceptsFirstResponder" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="becomeFirstResponder" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="cursorUpdate:" swt_gen="true">
			<arg name="event" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="doCommandBySelector:" swt_gen="true">
			<arg name="aSelector" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="flagsChanged:" swt_gen="true">
			<arg name="theEvent" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="helpRequested:" swt_gen="true">
			<arg name="eventPtr" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="insertText:" swt_gen="true">
			<arg name="insertString" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="interpretKeyEvents:" swt_gen="true">
			<arg name="eventArray" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="keyDown:" swt_gen="true">
			<arg name="theEvent" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="keyUp:" swt_gen="true">
			<arg name="theEvent" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="mouseDown:" swt_gen="true">
			<arg name="theEvent" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="mouseDragged:" swt_gen="true">
			<arg name="theEvent" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="mouseEntered:" swt_gen="true">
			<arg name="theEvent" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="mouseExited:" swt_gen="true">
			<arg name="theEvent" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="mouseMoved:" swt_gen="true">
			<arg name="theEvent" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="mouseUp:" swt_gen="true">
			<arg name="theEvent" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="moveToBeginningOfParagraph:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="moveToEndOfParagraph:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="moveUp:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="noResponderFor:" swt_gen="true">
			<arg name="eventSelector" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="otherMouseDown:" swt_gen="true">
			<arg name="theEvent" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="otherMouseDragged:" swt_gen="true">
			<arg name="theEvent" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="otherMouseUp:" swt_gen="true">
			<arg name="theEvent" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="pageDown:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="pageUp:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="resignFirstResponder" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="rightMouseDown:" swt_gen="true">
			<arg name="theEvent" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="rightMouseDragged:" swt_gen="true">
			<arg name="theEvent" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="rightMouseUp:" swt_gen="true">
			<arg name="theEvent" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="scrollWheel:" swt_gen="true">
			<arg name="theEvent" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSRuleEditor" swt_superclass="NSControl">
	</class>
	<class name="NSRulerView" swt_superclass="NSView">
	</class>
	<class name="NSSavePanel" swt_gen="mixed" swt_superclass="NSPanel">
		<method selector="filename" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="runModal" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="savePanel" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setCanCreateDirectories:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDirectory:" swt_gen="true">
			<arg name="path" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setTitle:" swt_gen="true">
			<arg name="title" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSScreen" swt_gen="mixed">
		<method selector="depth" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="deviceDescription" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="frame" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="mainScreen" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="screens" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="visibleFrame" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSScrollView" swt_gen="mixed" swt_superclass="NSView">
		<method selector="contentSize" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="contentSizeForFrameSize:hasHorizontalScroller:hasVerticalScroller:borderType:" swt_gen="true">
			<arg name="fSize" swt_gen="true"></arg>
			<arg name="hFlag" swt_gen="true"></arg>
			<arg name="vFlag" swt_gen="true"></arg>
			<arg name="aType" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="contentView" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="documentView" swt_gen="true">
			<retval swt_gen="true" swt_java_type="NSView"></retval>
		</method>
		<method selector="documentVisibleRect" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="frameSizeForContentSize:hasHorizontalScroller:hasVerticalScroller:borderType:" swt_gen="true">
			<arg name="cSize" swt_gen="true"></arg>
			<arg name="hFlag" swt_gen="true"></arg>
			<arg name="vFlag" swt_gen="true"></arg>
			<arg name="aType" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="reflectScrolledClipView:" swt_gen="true">
			<arg name="cView" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAutohidesScrollers:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setBorderType:" swt_gen="true">
			<arg name="aType" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDocumentView:" swt_gen="true">
			<arg name="aView" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDrawsBackground:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setHasHorizontalScroller:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setHasVerticalScroller:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setHorizontalScroller:" swt_gen="true">
			<arg name="anObject" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setVerticalScroller:" swt_gen="true">
			<arg name="anObject" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSScroller" swt_gen="mixed" swt_superclass="NSControl">
		<method selector="controlSize" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="hitPart" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="scrollerWidth" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="scrollerWidthForControlSize:" swt_gen="true">
			<arg name="controlSize" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setControlSize:" swt_gen="true">
			<arg name="controlSize" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setFloatValue:knobProportion:" swt_gen="true">
			<arg name="aFloat" swt_gen="true"></arg>
			<arg name="proportion" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSSearchField" swt_gen="mixed" swt_superclass="NSTextField">
		<method selector="recentSearches" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSSearchFieldCell" swt_gen="mixed" swt_superclass="NSTextFieldCell">
		<method selector="cancelButtonCell" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="searchButtonCell" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="searchTextRectForBounds:" swt_gen="true">
			<arg name="rect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setCancelButtonCell:" swt_gen="true">
			<arg name="cell" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setSearchButtonCell:" swt_gen="true">
			<arg name="cell" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSSecureTextFieldCell" swt_superclass="NSTextFieldCell">
	</class>
	<class name="NSSegmentedCell" swt_superclass="NSActionCell">
	</class>
	<class name="NSSegmentedControl" swt_superclass="NSControl">
	</class>
	<class name="NSSlider" swt_gen="mixed" swt_superclass="NSControl">
		<method selector="knobThickness" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="maxValue" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="minValue" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setMaxValue:" swt_gen="true">
			<arg name="aDouble" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setMinValue:" swt_gen="true">
			<arg name="aDouble" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSSliderCell" swt_superclass="NSActionCell">
	</class>
	<class name="NSSplitView" swt_superclass="NSView">
	</class>
	<class name="NSStatusBar" swt_gen="mixed">
		<method selector="removeStatusItem:" swt_gen="true">
			<arg name="item" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="statusItemWithLength:" swt_gen="true">
			<arg name="length" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="systemStatusBar" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSStatusItem" swt_gen="mixed">
		<method selector="drawStatusBarBackgroundInRect:withHighlight:" swt_gen="true">
			<arg name="rect" swt_gen="true"></arg>
			<arg name="highlight" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setHighlightMode:" swt_gen="true">
			<arg name="highlightMode" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setLength:" swt_gen="true">
			<arg name="length" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setView:" swt_gen="true">
			<arg name="view" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSStepper" swt_gen="mixed" swt_superclass="NSControl">
		<method selector="increment" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="maxValue" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="minValue" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setIncrement:" swt_gen="true">
			<arg name="increment" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setMaxValue:" swt_gen="true">
			<arg name="maxValue" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setMinValue:" swt_gen="true">
			<arg name="minValue" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setValueWraps:" swt_gen="true">
			<arg name="valueWraps" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSStepperCell" swt_superclass="NSActionCell">
	</class>
	<class name="NSTabView" swt_gen="mixed" swt_superclass="NSView">
		<method selector="addTabViewItem:" swt_gen="true">
			<arg name="tabViewItem" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="contentRect" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="insertTabViewItem:atIndex:" swt_gen="true">
			<arg name="tabViewItem" swt_gen="true"></arg>
			<arg name="index" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="minimumSize" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="removeTabViewItem:" swt_gen="true">
			<arg name="tabViewItem" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="selectTabViewItemAtIndex:" swt_gen="true">
			<arg name="index" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="selectedTabViewItem" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setControlSize:" swt_gen="true">
			<arg name="controlSize" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDelegate:" swt_gen="true">
			<arg name="anObject" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setFont:" swt_gen="true">
			<arg name="font" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setTabViewType:" swt_gen="true">
			<arg name="tabViewType" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="tabViewItemAtPoint:" swt_gen="true">
			<arg name="point" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSTabViewItem" swt_gen="mixed">
		<method selector="initWithIdentifier:" swt_gen="true">
			<arg name="identifier" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setLabel:" swt_gen="true">
			<arg name="label" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setView:" swt_gen="true">
			<arg name="view" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSTableColumn" swt_gen="mixed">
		<method selector="dataCell" swt_gen="true">
			<retval swt_gen="true" swt_java_type="NSCell"></retval>
		</method>
		<method selector="headerCell" swt_gen="true">
			<retval swt_gen="true" swt_java_type="NSTableHeaderCell"></retval>
		</method>
		<method selector="initWithIdentifier:" swt_gen="true">
			<arg name="identifier" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="resizingMask" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDataCell:" swt_gen="true">
			<arg name="cell" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setEditable:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setHeaderCell:" swt_gen="true">
			<arg name="cell" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setIdentifier:" swt_gen="true">
			<arg name="identifier" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setMinWidth:" swt_gen="true">
			<arg name="minWidth" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setResizingMask:" swt_gen="true">
			<arg name="resizingMask" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setWidth:" swt_gen="true">
			<arg name="width" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="width" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSTableHeaderCell" swt_gen="true" swt_superclass="NSTextFieldCell">
		<method selector="drawSortIndicatorWithFrame:inView:ascending:priority:" swt_gen="true">
			<arg name="cellFrame" swt_gen="true"></arg>
			<arg name="controlView" swt_gen="true"></arg>
			<arg name="ascending" swt_gen="true"></arg>
			<arg name="priority" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="sortIndicatorRectForBounds:" swt_gen="true">
			<arg name="theRect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSTableHeaderView" swt_gen="mixed" swt_superclass="NSView">
		<method selector="columnAtPoint:" swt_gen="true">
			<arg name="point" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="headerRectOfColumn:" swt_gen="true">
			<arg name="column" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSTableView" swt_gen="mixed" swt_superclass="NSControl">
		<method selector="addTableColumn:" swt_gen="true">
			<arg name="column" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="allowsColumnReordering" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="clickedColumn" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="clickedRow" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="columnAtPoint:" swt_gen="true">
			<arg name="point" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="columnIndexesInRect:" swt_gen="true">
			<arg name="rect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="columnWithIdentifier:" swt_gen="true">
			<arg name="identifier" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="deselectAll:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="deselectRow:" swt_gen="true">
			<arg name="row" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="dragImageForRowsWithIndexes:tableColumns:event:offset:" swt_gen="true">
			<arg name="dragRows" swt_gen="true"></arg>
			<arg name="tableColumns" swt_gen="true"></arg>
			<arg name="dragEvent" swt_gen="true"></arg>
			<arg name="dragImageOffset" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="frameOfCellAtColumn:row:" swt_gen="true">
			<arg name="column" swt_gen="true"></arg>
			<arg name="row" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="headerView" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="highlightSelectionInClipRect:" swt_gen="true">
			<arg name="clipRect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="intercellSpacing" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="isRowSelected:" swt_gen="true">
			<arg name="row" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="moveColumn:toColumn:" swt_gen="true">
			<arg name="column" swt_gen="true"></arg>
			<arg name="newIndex" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="noteNumberOfRowsChanged" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="numberOfColumns" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="numberOfRows" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="numberOfSelectedRows" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="rectOfColumn:" swt_gen="true">
			<arg name="column" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="rectOfRow:" swt_gen="true">
			<arg name="row" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="reloadData" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="removeTableColumn:" swt_gen="true">
			<arg name="column" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="rowAtPoint:" swt_gen="true">
			<arg name="point" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="rowHeight" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="rowsInRect:" swt_gen="true">
			<arg name="rect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="scrollColumnToVisible:" swt_gen="true">
			<arg name="column" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="scrollRowToVisible:" swt_gen="true">
			<arg name="row" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="selectAll:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="selectRowIndexes:byExtendingSelection:" swt_gen="true">
			<arg name="indexes" swt_gen="true"></arg>
			<arg name="extend" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="selectedRow" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="selectedRowIndexes" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAllowsColumnReordering:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAllowsMultipleSelection:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setBackgroundColor:" swt_gen="true">
			<arg name="color" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setColumnAutoresizingStyle:" swt_gen="true">
			<arg name="style" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDataSource:" swt_gen="true">
			<arg name="aSource" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDelegate:" swt_gen="true">
			<arg name="delegate" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDoubleAction:" swt_gen="true">
			<arg name="aSelector" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDropRow:dropOperation:" swt_gen="true">
			<arg name="row" swt_gen="true"></arg>
			<arg name="op" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setHeaderView:" swt_gen="true">
			<arg name="headerView" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setHighlightedTableColumn:" swt_gen="true">
			<arg name="tc" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setIntercellSpacing:" swt_gen="true">
			<arg name="aSize" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setRowHeight:" swt_gen="true">
			<arg name="rowHeight" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setUsesAlternatingRowBackgroundColors:" swt_gen="true">
			<arg name="useAlternatingRowColors" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="tableColumns" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="tile" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="usesAlternatingRowBackgroundColors" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSText" swt_gen="mixed" swt_superclass="NSView">
		<method selector="copy:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="cut:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="delegate" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="font" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="paste:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="replaceCharactersInRange:withString:" swt_gen="true">
			<arg name="range" swt_gen="true"></arg>
			<arg name="aString" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="scrollRangeToVisible:" swt_gen="true">
			<arg name="range" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="selectAll:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="selectedRange" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAlignment:" swt_gen="true">
			<arg name="mode" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setBackgroundColor:" swt_gen="true">
			<arg name="color" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDelegate:" swt_gen="true">
			<arg name="anObject" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDrawsBackground:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setEditable:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setFont:" swt_gen="true">
			<arg name="obj" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setHorizontallyResizable:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setMaxSize:" swt_gen="true">
			<arg name="newMaxSize" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setMinSize:" swt_gen="true">
			<arg name="newMinSize" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setSelectable:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setSelectedRange:" swt_gen="true">
			<arg name="range" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setString:" swt_gen="true">
			<arg name="string" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setTextColor:" swt_gen="true">
			<arg name="color" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="sizeToFit" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="string" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSTextAttachment" swt_gen="mixed">
		<method selector="initWithFileWrapper:" swt_gen="true">
			<arg name="fileWrapper" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSTextContainer" swt_gen="mixed">
		<method selector="containerSize" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="initWithContainerSize:" swt_gen="mixed">
			<arg name="size" swt_gen="true"></arg>
			<retval swt_java_type="NSTextContainer"></retval>
		</method>
		<method selector="setContainerSize:" swt_gen="true">
			<arg name="size" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setLineFragmentPadding:" swt_gen="true">
			<arg name="pad" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setWidthTracksTextView:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSTextField" swt_gen="mixed" swt_superclass="NSControl">
		<method selector="selectText:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setBackgroundColor:" swt_gen="true">
			<arg name="color" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setBordered:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDelegate:" swt_gen="true">
			<arg name="anObject" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDrawsBackground:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setEditable:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setSelectable:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setTextColor:" swt_gen="true">
			<arg name="color" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSTextFieldCell" swt_gen="mixed" swt_superclass="NSActionCell">
		<method selector="setPlaceholderString:" swt_gen="true">
			<arg name="string" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setTextColor:" swt_gen="true">
			<arg name="color" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="textColor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSTextStorage" swt_gen="mixed" swt_superclass="NSMutableAttributedString">
		<method selector="addLayoutManager:" swt_gen="true">
			<arg name="obj" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="paragraphs" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSTextTab" swt_gen="mixed">
		<method selector="initWithType:location:" swt_gen="true">
			<arg name="type" swt_gen="true"></arg>
			<arg name="loc" swt_gen="true"></arg>
			<retval swt_gen="true" swt_java_type="NSTextTab"></retval>
		</method>
		<method selector="location" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="tabStopType" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSTextTable" swt_superclass="NSTextBlock">
	</class>
	<class name="NSTextTableBlock" swt_superclass="NSTextBlock">
	</class>
	<class name="NSTextView" swt_gen="mixed" swt_superclass="NSText">
		<method selector="characterIndexForInsertionAtPoint:" swt_gen="true">
			<arg name="point" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="defaultParagraphStyle" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="dragSelectionWithEvent:offset:slideBack:" swt_gen="true">
			<arg name="event" swt_gen="true"></arg>
			<arg name="mouseOffset" swt_gen="true"></arg>
			<arg name="slideBack" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="layoutManager" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="linkTextAttributes" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="markedTextAttributes" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDefaultParagraphStyle:" swt_gen="true">
			<arg name="paragraphStyle" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setLinkTextAttributes:" swt_gen="true">
			<arg name="attributeDictionary" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setRichText:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="shouldChangeTextInRange:replacementString:" swt_gen="true">
			<arg name="affectedCharRange" swt_gen="true"></arg>
			<arg name="replacementString" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="textContainer" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="textStorage" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSTokenField" swt_superclass="NSTextField">
	</class>
	<class name="NSTokenFieldCell" swt_superclass="NSTextFieldCell">
	</class>
	<class name="NSToolbar" swt_gen="mixed">
		<method selector="initWithIdentifier:" swt_gen="true">
			<arg name="identifier" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setVisible:" swt_gen="true">
			<arg name="shown" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSToolbarItemGroup" swt_superclass="NSToolbarItem">
	</class>
	<class name="NSTrackingArea" swt_gen="mixed">
		<method selector="initWithRect:options:owner:userInfo:" swt_gen="true">
			<arg name="rect" swt_gen="true"></arg>
			<arg name="options" swt_gen="true"></arg>
			<arg name="owner" swt_gen="true"></arg>
			<arg name="userInfo" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="userInfo" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSTreeController" swt_superclass="NSObjectController">
	</class>
	<class name="NSTypesetter" swt_gen="mixed">
		<method selector="baselineOffsetInLayoutManager:glyphIndex:" swt_gen="true">
			<arg name="layoutMgr" swt_gen="true"></arg>
			<arg name="glyphIndex" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSURL" swt_gen="true">
		<method class_method="true" selector="URLFromPasteboard:" swt_gen="true">
			<arg name="pasteBoard" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="writeToPasteboard:" swt_gen="true">
			<arg name="pasteBoard" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSUserDefaultsController" swt_superclass="NSController">
	</class>
	<class name="NSView" swt_gen="mixed" swt_superclass="NSResponder">
		<method selector="acceptsFirstMouse:" swt_gen="true">
			<arg name="theEvent" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="addSubview:" swt_gen="true">
			<arg name="aView" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="addSubview:positioned:relativeTo:" swt_gen="true">
			<arg name="aView" swt_gen="true"></arg>
			<arg name="place" swt_gen="true"></arg>
			<arg name="otherView" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="addToolTipRect:owner:userData:" swt_gen="true">
			<arg name="aRect" swt_gen="true"></arg>
			<arg name="anObject" swt_gen="true"></arg>
			<arg name="data" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="beginDocument" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="beginPageInRect:atPlacement:" swt_gen="true">
			<arg name="aRect" swt_gen="true"></arg>
			<arg name="location" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="bounds" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="convertPoint:fromView:" swt_gen="true">
			<arg name="aPoint" swt_gen="true"></arg>
			<arg name="aView" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="convertPoint:toView:" swt_gen="true">
			<arg name="aPoint" swt_gen="true"></arg>
			<arg name="aView" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="convertPointFromBase:" swt_gen="true">
			<arg name="aPoint" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="convertPointToBase:" swt_gen="true">
			<arg name="aPoint" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="convertRect:fromView:" swt_gen="true">
			<arg name="aRect" swt_gen="true"></arg>
			<arg name="aView" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="convertRect:toView:" swt_gen="true">
			<arg name="aRect" swt_gen="true"></arg>
			<arg name="aView" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="convertRectFromBase:" swt_gen="true">
			<arg name="aRect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="convertRectToBase:" swt_gen="true">
			<arg name="aRect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="convertSize:fromView:" swt_gen="true">
			<arg name="aSize" swt_gen="true"></arg>
			<arg name="aView" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="convertSize:toView:" swt_gen="true">
			<arg name="aSize" swt_gen="true"></arg>
			<arg name="aView" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="convertSizeFromBase:" swt_gen="true">
			<arg name="aSize" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="convertSizeToBase:" swt_gen="true">
			<arg name="aSize" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="discardCursorRects" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="display" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="displayIfNeeded" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="displayRectIgnoringOpacity:inContext:" swt_gen="true">
			<arg name="aRect" swt_gen="true"></arg>
			<arg name="context" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="dragImage:at:offset:event:pasteboard:source:slideBack:" swt_gen="true">
			<arg name="anImage" swt_gen="true"></arg>
			<arg name="viewLocation" swt_gen="true"></arg>
			<arg name="initialOffset" swt_gen="true"></arg>
			<arg name="event" swt_gen="true"></arg>
			<arg name="pboard" swt_gen="true"></arg>
			<arg name="sourceObj" swt_gen="true"></arg>
			<arg name="slideFlag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="drawRect:" swt_gen="true">
			<arg name="rect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="endDocument" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="endPage" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="frame" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="hitTest:" swt_gen="true">
			<arg name="aPoint" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="initWithFrame:" swt_gen="true">
			<arg name="frameRect" swt_gen="true"></arg>
			<retval swt_gen="true" swt_java_type="NSView"></retval>
		</method>
		<method selector="isFlipped" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="isHidden" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="isHiddenOrHasHiddenAncestor" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="isOpaque" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="lockFocus" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="menuForEvent:" swt_gen="true">
			<arg name="event" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="registerForDraggedTypes:" swt_gen="true">
			<arg name="newTypes" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="removeFromSuperview" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="removeTrackingArea:" swt_gen="true">
			<arg name="trackingArea" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="resetCursorRects" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="scrollPoint:" swt_gen="true">
			<arg name="aPoint" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="scrollRectToVisible:" swt_gen="true">
			<arg name="aRect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAutoresizesSubviews:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAutoresizingMask:" swt_gen="true">
			<arg name="mask" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setFocusRingType:" swt_gen="true">
			<arg name="focusRingType" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setFrame:" swt_gen="true">
			<arg name="frameRect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setFrameOrigin:" swt_gen="true">
			<arg name="newOrigin" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setFrameSize:" swt_gen="true">
			<arg name="newSize" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setHidden:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setNeedsDisplay:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setNeedsDisplayInRect:" swt_gen="true">
			<arg name="invalidRect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setToolTip:" swt_gen="true">
			<arg name="string" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="shouldDelayWindowOrderingForEvent:" swt_gen="true">
			<arg name="theEvent" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="subviews" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="superview" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="trackingAreas" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="unlockFocus" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="unregisterDraggedTypes" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="updateTrackingAreas" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="viewDidMoveToWindow" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="visibleRect" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="window" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSViewAnimation" swt_superclass="NSAnimation">
	</class>
	<class name="NSViewController" swt_superclass="NSResponder">
	</class>
	<class name="NSWindow" swt_gen="mixed" swt_superclass="NSResponder">
		<method selector="addChildWindow:ordered:" swt_gen="true">
			<arg name="childWin" swt_gen="true"></arg>
			<arg name="place" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="alphaValue" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="areCursorRectsEnabled" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="canBecomeKeyWindow" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="cascadeTopLeftFromPoint:" swt_gen="true">
			<arg name="topLeftPoint" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="close" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="contentRectForFrameRect:" swt_gen="true">
			<arg name="frameRect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="contentView" swt_gen="true">
			<retval swt_gen="true" swt_java_type="NSView"></retval>
		</method>
		<method selector="convertBaseToScreen:" swt_gen="true">
			<arg name="aPoint" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="convertScreenToBase:" swt_gen="true">
			<arg name="aPoint" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="defaultButtonCell" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="deminiaturize:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="disableCursorRects" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="display" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="enableCursorRects" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="fieldEditor:forObject:" swt_gen="true">
			<arg name="createFlag" swt_gen="true"></arg>
			<arg name="anObject" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="firstResponder" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="frame" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="frameRectForContentRect:" swt_gen="true">
			<arg name="contentRect" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="graphicsContext" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="hasShadow" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="initWithContentRect:styleMask:backing:defer:" swt_gen="true">
			<arg name="contentRect" swt_gen="true"></arg>
			<arg name="aStyle" swt_gen="true"></arg>
			<arg name="bufferingType" swt_gen="true"></arg>
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true" swt_java_type="NSWindow"></retval>
		</method>
		<method selector="initWithContentRect:styleMask:backing:defer:screen:" swt_gen="true">
			<arg name="contentRect" swt_gen="true"></arg>
			<arg name="aStyle" swt_gen="true"></arg>
			<arg name="bufferingType" swt_gen="true"></arg>
			<arg name="flag" swt_gen="true"></arg>
			<arg name="screen" swt_gen="true"></arg>
			<retval swt_gen="true" swt_java_type="NSWindow"></retval>
		</method>
		<method selector="invalidateShadow" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="isDocumentEdited" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="isKeyWindow" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="isMiniaturized" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="isVisible" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="isZoomed" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="makeFirstResponder:" swt_gen="true">
			<arg name="aResponder" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="makeKeyAndOrderFront:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="minFrameWidthWithTitle:styleMask:" swt_gen="true">
			<arg name="aTitle" swt_gen="true"></arg>
			<arg name="aStyle" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="minSize" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="miniaturize:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="mouseLocationOutsideOfEventStream" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="orderBack:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="orderFront:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="orderFrontRegardless" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="orderOut:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="orderWindow:relativeTo:" swt_gen="true">
			<arg name="place" swt_gen="true"></arg>
			<arg name="otherWin" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="parentWindow" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="removeChildWindow:" swt_gen="true">
			<arg name="childWin" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="screen" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="sendEvent:" swt_gen="true">
			<arg name="theEvent" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAcceptsMouseMovedEvents:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setAlphaValue:" swt_gen="true">
			<arg name="windowAlpha" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setBackgroundColor:" swt_gen="true">
			<arg name="color" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setContentView:" swt_gen="true">
			<arg name="aView" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDefaultButtonCell:" swt_gen="true">
			<arg name="defButt" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDelegate:" swt_gen="true">
			<arg name="anObject" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setDocumentEdited:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setFrame:display:" swt_gen="true">
			<arg name="frameRect" swt_gen="true"></arg>
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setHasShadow:" swt_gen="true">
			<arg name="hasShadow" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setLevel:" swt_gen="true">
			<arg name="newLevel" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setMinSize:" swt_gen="true">
			<arg name="size" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setOpaque:" swt_gen="true">
			<arg name="isOpaque" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setReleasedWhenClosed:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setShowsToolbarButton:" swt_gen="true">
			<arg name="show" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setTitle:" swt_gen="true">
			<arg name="aString" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="setToolbar:" swt_gen="true">
			<arg name="toolbar" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="standardWindowButton:" swt_gen="true">
			<arg name="b" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="styleMask" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="toggleToolbarShown:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="windowNumber" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
		<method selector="zoom:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<class name="NSWindowController" swt_superclass="NSResponder">
	</class>
	<class name="NSWorkspace" swt_gen="mixed">
		<method selector="fullPathForApplication:" swt_gen="true">
			<arg name="appName" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="getInfoForFile:application:type:" swt_gen="true">
			<arg name="fullPath" swt_gen="true"></arg>
			<arg name="appName" swt_gen="true"></arg>
			<arg name="type" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="iconForFile:" swt_gen="true">
			<arg name="fullPath" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="iconForFileType:" swt_gen="true">
			<arg name="fileType" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="isFilePackageAtPath:" swt_gen="true">
			<arg name="fullPath" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="openFile:withApplication:" swt_gen="true">
			<arg name="fullPath" swt_gen="true"></arg>
			<arg name="appName" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="openURL:" swt_gen="true">
			<arg name="url" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method selector="openURLs:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:" swt_gen="true">
			<arg name="urls" swt_gen="true"></arg>
			<arg name="bundleIdentifier" swt_gen="true"></arg>
			<arg name="options" swt_gen="true"></arg>
			<arg name="descriptor" swt_gen="true"></arg>
			<arg name="identifiers" swt_gen="true"></arg>
			<retval swt_gen="true"></retval>
		</method>
		<method class_method="true" selector="sharedWorkspace" swt_gen="true">
			<retval swt_gen="true"></retval>
		</method>
	</class>
	<informal_protocol name="NSAccessibility" swt_gen="true">
		<method selector="accessibilityActionDescription:" swt_gen="true">
			<arg name="action" swt_gen="true"></arg>
		</method>
		<method selector="accessibilityActionNames" swt_gen="true"></method>
		<method selector="accessibilityAttributeNames" swt_gen="true"></method>
		<method selector="accessibilityAttributeValue:" swt_gen="true">
			<arg name="attribute" swt_gen="true"></arg>
		</method>
		<method selector="accessibilityAttributeValue:forParameter:" swt_gen="true">
			<arg name="attribute" swt_gen="true"></arg>
			<arg name="parameter" swt_gen="true"></arg>
		</method>
		<method selector="accessibilityFocusedUIElement" swt_gen="true"></method>
		<method selector="accessibilityHitTest:" swt_gen="true">
			<arg name="point" swt_gen="true"></arg>
		</method>
		<method selector="accessibilityIsAttributeSettable:" swt_gen="true">
			<arg name="attribute" swt_gen="true"></arg>
		</method>
		<method selector="accessibilityIsIgnored" swt_gen="true"></method>
		<method selector="accessibilityParameterizedAttributeNames" swt_gen="true"></method>
		<method selector="accessibilityPerformAction:" swt_gen="true">
			<arg name="action" swt_gen="true"></arg>
		</method>
		<method selector="accessibilitySetValue:forAttribute:" swt_gen="true">
			<arg name="value" swt_gen="true"></arg>
			<arg name="attribute" swt_gen="true"></arg>
		</method>
	</informal_protocol>
	<informal_protocol name="NSAccessibilityAdditions" swt_gen="true">
		<method selector="accessibilitySetOverrideValue:forAttribute:" swt_gen="true">
			<arg name="value" swt_gen="true"></arg>
			<arg name="attribute" swt_gen="true"></arg>
		</method>
	</informal_protocol>
	<informal_protocol name="NSApplicationNotifications" swt_gen="mixed">
		<method selector="applicationDidBecomeActive:" swt_gen="true">
			<arg name="notification" swt_gen="true"></arg>
		</method>
		<method selector="applicationDidResignActive:" swt_gen="true">
			<arg name="notification" swt_gen="true"></arg>
		</method>
		<method selector="applicationWillFinishLaunching:" swt_gen="true">
			<arg name="notification" swt_gen="true"></arg>
		</method>
		<method selector="applicationWillTerminate:" swt_gen="true">
			<arg name="notification" swt_gen="true"></arg>
		</method>
	</informal_protocol>
	<informal_protocol name="NSColorPanelResponderMethod" swt_gen="true">
		<method selector="changeColor:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
		</method>
	</informal_protocol>
	<informal_protocol name="NSComboBoxNotifications" swt_gen="mixed">
		<method selector="comboBoxSelectionDidChange:" swt_gen="true">
			<arg name="notification" swt_gen="true"></arg>
		</method>
		<method selector="comboBoxWillDismiss:" swt_gen="true">
			<arg name="notification" swt_gen="true"></arg>
		</method>
	</informal_protocol>
	<informal_protocol name="NSDraggingDestination" swt_gen="mixed">
		<method selector="draggingEnded:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
		</method>
		<method selector="draggingEntered:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
		</method>
		<method selector="draggingExited:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
		</method>
		<method selector="draggingUpdated:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
		</method>
		<method selector="performDragOperation:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
		</method>
		<method selector="wantsPeriodicDraggingUpdates" swt_gen="true"></method>
	</informal_protocol>
	<informal_protocol name="NSDraggingSource" swt_gen="mixed">
		<method selector="draggedImage:beganAt:" swt_gen="true">
			<arg name="image" swt_gen="true"></arg>
			<arg name="screenPoint" swt_gen="true"></arg>
		</method>
		<method selector="draggedImage:endedAt:operation:" swt_gen="true">
			<arg name="image" swt_gen="true"></arg>
			<arg name="screenPoint" swt_gen="true"></arg>
			<arg name="operation" swt_gen="true"></arg>
		</method>
		<method selector="draggingSourceOperationMaskForLocal:" swt_gen="true">
			<arg name="flag" swt_gen="true"></arg>
		</method>
		<method selector="ignoreModifierKeysWhileDragging" swt_gen="true"></method>
	</informal_protocol>
	<informal_protocol name="NSFontManagerResponderMethod" swt_gen="true">
		<method selector="changeFont:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
		</method>
	</informal_protocol>
	<informal_protocol name="NSMenuDelegate" swt_gen="mixed">
		<method selector="menu:willHighlightItem:" swt_gen="true">
			<arg name="menu" swt_gen="true"></arg>
			<arg name="item" swt_gen="true"></arg>
		</method>
		<method selector="menuDidClose:" swt_gen="true">
			<arg name="menu" swt_gen="true"></arg>
		</method>
		<method selector="menuNeedsUpdate:" swt_gen="true">
			<arg name="menu" swt_gen="true"></arg>
		</method>
		<method selector="menuWillOpen:" swt_gen="true">
			<arg name="menu" swt_gen="true"></arg>
		</method>
	</informal_protocol>
	<informal_protocol name="NSOutlineViewDataSource" swt_gen="mixed">
		<method selector="outlineView:child:ofItem:" swt_gen="true">
			<arg name="outlineView" swt_gen="true"></arg>
			<arg name="index" swt_gen="true"></arg>
			<arg name="item" swt_gen="true"></arg>
		</method>
		<method selector="outlineView:isItemExpandable:" swt_gen="true">
			<arg name="outlineView" swt_gen="true"></arg>
			<arg name="item" swt_gen="true"></arg>
		</method>
		<method selector="outlineView:numberOfChildrenOfItem:" swt_gen="true">
			<arg name="outlineView" swt_gen="true"></arg>
			<arg name="item" swt_gen="true"></arg>
		</method>
		<method selector="outlineView:objectValueForTableColumn:byItem:" swt_gen="true">
			<arg name="outlineView" swt_gen="true"></arg>
			<arg name="tableColumn" swt_gen="true"></arg>
			<arg name="item" swt_gen="true"></arg>
		</method>
		<method selector="outlineView:setObjectValue:forTableColumn:byItem:" swt_gen="true">
			<arg name="outlineView" swt_gen="true"></arg>
			<arg name="object" swt_gen="true"></arg>
			<arg name="tableColumn" swt_gen="true"></arg>
			<arg name="item" swt_gen="true"></arg>
		</method>
	</informal_protocol>
	<informal_protocol name="NSOutlineViewDelegate" swt_gen="mixed">
		<method selector="outlineView:shouldCollapseItem:" swt_gen="true">
			<arg name="outlineView" swt_gen="true"></arg>
			<arg name="item" swt_gen="true"></arg>
		</method>
		<method selector="outlineView:shouldExpandItem:" swt_gen="true">
			<arg name="outlineView" swt_gen="true"></arg>
			<arg name="item" swt_gen="true"></arg>
		</method>
		<method selector="outlineView:willDisplayCell:forTableColumn:item:" swt_gen="true">
			<arg name="outlineView" swt_gen="true"></arg>
			<arg name="cell" swt_gen="true"></arg>
			<arg name="tableColumn" swt_gen="true"></arg>
			<arg name="item" swt_gen="true"></arg>
		</method>
	</informal_protocol>
	<informal_protocol name="NSOutlineViewNotifications" swt_gen="mixed">
		<method selector="outlineViewItemDidExpand:" swt_gen="true">
			<arg name="notification" swt_gen="true"></arg>
		</method>
		<method selector="outlineViewSelectionDidChange:" swt_gen="true">
			<arg name="notification" swt_gen="true"></arg>
		</method>
	</informal_protocol>
	<informal_protocol name="NSPasteboardOwner" swt_gen="mixed">
		<method selector="pasteboard:provideDataForType:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
			<arg name="type" swt_gen="true"></arg>
		</method>
	</informal_protocol>
	<informal_protocol name="NSTabViewDelegate" swt_gen="mixed">
		<method selector="tabView:didSelectTabViewItem:" swt_gen="true">
			<arg name="tabView" swt_gen="true"></arg>
			<arg name="tabViewItem" swt_gen="true"></arg>
		</method>
		<method selector="tabView:willSelectTabViewItem:" swt_gen="true">
			<arg name="tabView" swt_gen="true"></arg>
			<arg name="tabViewItem" swt_gen="true"></arg>
		</method>
	</informal_protocol>
	<informal_protocol name="NSTableDataSource" swt_gen="mixed">
		<method selector="numberOfRowsInTableView:" swt_gen="true">
			<arg name="tableView" swt_gen="true"></arg>
		</method>
		<method selector="tableView:objectValueForTableColumn:row:" swt_gen="true">
			<arg name="tableView" swt_gen="true"></arg>
			<arg name="tableColumn" swt_gen="true"></arg>
			<arg name="row" swt_gen="true"></arg>
		</method>
		<method selector="tableView:setObjectValue:forTableColumn:row:" swt_gen="true">
			<arg name="tableView" swt_gen="true"></arg>
			<arg name="object" swt_gen="true"></arg>
			<arg name="tableColumn" swt_gen="true"></arg>
			<arg name="row" swt_gen="true"></arg>
		</method>
	</informal_protocol>
	<informal_protocol name="NSTableViewDelegate" swt_gen="mixed">
		<method selector="tableView:shouldEditTableColumn:row:" swt_gen="true">
			<arg name="tableView" swt_gen="true"></arg>
			<arg name="tableColumn" swt_gen="true"></arg>
			<arg name="row" swt_gen="true"></arg>
		</method>
		<method selector="tableView:willDisplayCell:forTableColumn:row:" swt_gen="true">
			<arg name="tableView" swt_gen="true"></arg>
			<arg name="cell" swt_gen="true"></arg>
			<arg name="tableColumn" swt_gen="true"></arg>
			<arg name="row" swt_gen="true"></arg>
		</method>
	</informal_protocol>
	<informal_protocol name="NSTableViewNotifications" swt_gen="mixed">
		<method selector="tableViewSelectionDidChange:" swt_gen="true">
			<arg name="notification" swt_gen="true"></arg>
		</method>
	</informal_protocol>
	<informal_protocol name="NSTextDelegate" swt_gen="mixed">
		<method selector="textDidChange:" swt_gen="true">
			<arg name="notification" swt_gen="true"></arg>
		</method>
		<method selector="textDidEndEditing:" swt_gen="true">
			<arg name="notification" swt_gen="true"></arg>
		</method>
	</informal_protocol>
	<informal_protocol name="NSTextViewDelegate" swt_gen="mixed">
		<method selector="textView:clickedOnLink:atIndex:" swt_gen="true">
			<arg name="textView" swt_gen="true"></arg>
			<arg name="link" swt_gen="true"></arg>
			<arg name="charIndex" swt_gen="true"></arg>
		</method>
		<method selector="textView:willChangeSelectionFromCharacterRange:toCharacterRange:" swt_gen="true">
			<arg name="textView" swt_gen="true"></arg>
			<arg name="oldSelectedCharRange" swt_gen="true"></arg>
			<arg name="newSelectedCharRange" swt_gen="true"></arg>
		</method>
		<method selector="textViewDidChangeSelection:" swt_gen="true">
			<arg name="notification" swt_gen="true"></arg>
		</method>
	</informal_protocol>
	<informal_protocol name="NSToolTipOwner" swt_gen="true">
		<method selector="view:stringForToolTip:point:userData:" swt_gen="true">
			<arg name="view" swt_gen="true"></arg>
			<arg name="tag" swt_gen="true"></arg>
			<arg name="point" swt_gen="true"></arg>
			<arg name="data" swt_gen="true"></arg>
		</method>
	</informal_protocol>
	<informal_protocol name="NSWindowDelegate" swt_gen="mixed">
		<method selector="windowShouldClose:" swt_gen="true">
			<arg name="sender" swt_gen="true"></arg>
		</method>
	</informal_protocol>
	<informal_protocol name="NSWindowNotifications" swt_gen="mixed">
		<method selector="windowDidBecomeKey:" swt_gen="true">
			<arg name="notification" swt_gen="true"></arg>
		</method>
		<method selector="windowDidMove:" swt_gen="true">
			<arg name="notification" swt_gen="true"></arg>
		</method>
		<method selector="windowDidResignKey:" swt_gen="true">
			<arg name="notification" swt_gen="true"></arg>
		</method>
		<method selector="windowDidResize:" swt_gen="true">
			<arg name="notification" swt_gen="true"></arg>
		</method>
		<method selector="windowWillClose:" swt_gen="true">
			<arg name="notification" swt_gen="true"></arg>
		</method>
	</informal_protocol>
	<class name="NSSecureTextField" swt_gen="true" swt_superclass="NSTextField"></class>
	<informal_protocol name="NSTextInput" swt_gen="true">
		<method selector="markedRange" swt_gen="true"></method>
		<method selector="insertText:" swt_gen="true">
			<arg name="aString" swt_gen="true"></arg>
		</method>
		<method selector="unmarkText" swt_gen="true"></method>
		<method selector="hasMarkedText" swt_gen="true"></method>
		<method selector="validAttributesForMarkedText" swt_gen="true"></method>
		<method selector="characterIndexForPoint:" swt_gen="true">
			<arg name="thePoint" swt_gen="true"></arg>
		</method>
		<method selector="attributedSubstringFromRange:" swt_gen="true">
			<arg name="theRange" swt_gen="true"></arg>
		</method>
		<method selector="selectedRange" swt_gen="true"></method>
		<method selector="setMarkedText:selectedRange:" swt_gen="true">
			<arg name="selRange" swt_gen="true"></arg>
			<arg name="aString" swt_gen="true"></arg>
		</method>
		<method selector="firstRectForCharacterRange:" swt_gen="true">
			<arg name="theRange" swt_gen="true"></arg>
		</method>
	</informal_protocol>
</signatures>
