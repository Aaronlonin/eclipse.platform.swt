<?xml version="1.0" encoding="UTF8"?>
<signatures swt_gen="mixed">
  <depends_on path="/System/Library/Frameworks/ApplicationServices.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/AudioToolbox.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/AudioUnit.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/CoreData.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/Foundation.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/IOKit.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/QuartzCore.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/Security.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/CoreAudio.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/DiskArbitration.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/CoreServices.framework"></depends_on>
  <depends_on path="/System/Library/Frameworks/CoreFoundation.framework"></depends_on>
  <opaque name="NSModalSession"></opaque>
  <constant name="NSAbortModalException"></constant>
  <constant name="NSAbortPrintingException"></constant>
  <constant name="NSAccessibilityAllowedValuesAttribute"></constant>
  <constant name="NSAccessibilityApplicationActivatedNotification"></constant>
  <constant name="NSAccessibilityApplicationDeactivatedNotification"></constant>
  <constant name="NSAccessibilityApplicationHiddenNotification"></constant>
  <constant name="NSAccessibilityApplicationRole"></constant>
  <constant name="NSAccessibilityApplicationShownNotification"></constant>
  <constant name="NSAccessibilityAscendingSortDirectionValue"></constant>
  <constant name="NSAccessibilityAttachmentTextAttribute"></constant>
  <constant name="NSAccessibilityAttributedStringForRangeParameterizedAttribute"></constant>
  <constant name="NSAccessibilityBackgroundColorTextAttribute"></constant>
  <constant name="NSAccessibilityBoundsForRangeParameterizedAttribute"></constant>
  <constant name="NSAccessibilityBrowserRole"></constant>
  <constant name="NSAccessibilityBusyIndicatorRole"></constant>
  <constant name="NSAccessibilityButtonRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityCancelAction"></constant>
  <constant name="NSAccessibilityCancelButtonAttribute"></constant>
  <constant name="NSAccessibilityCenterTabStopMarkerTypeValue"></constant>
  <constant name="NSAccessibilityCentimetersUnitValue"></constant>
  <constant name="NSAccessibilityCheckBoxRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityChildrenAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityClearButtonAttribute"></constant>
  <constant name="NSAccessibilityCloseButtonAttribute"></constant>
  <constant name="NSAccessibilityCloseButtonSubrole"></constant>
  <constant name="NSAccessibilityColorWellRole"></constant>
  <constant name="NSAccessibilityColumnCountAttribute"></constant>
  <constant name="NSAccessibilityColumnRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityColumnTitlesAttribute"></constant>
  <constant name="NSAccessibilityColumnsAttribute"></constant>
  <constant name="NSAccessibilityComboBoxRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityConfirmAction" swt_gen="true"></constant>
  <constant name="NSAccessibilityContentsAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityCreatedNotification"></constant>
  <constant name="NSAccessibilityDecimalTabStopMarkerTypeValue"></constant>
  <constant name="NSAccessibilityDecrementAction"></constant>
  <constant name="NSAccessibilityDecrementArrowSubrole"></constant>
  <constant name="NSAccessibilityDecrementButtonAttribute"></constant>
  <constant name="NSAccessibilityDecrementPageSubrole"></constant>
  <constant name="NSAccessibilityDefaultButtonAttribute"></constant>
  <constant name="NSAccessibilityDeleteAction"></constant>
  <constant name="NSAccessibilityDescendingSortDirectionValue"></constant>
  <constant name="NSAccessibilityDescriptionAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityDialogSubrole" swt_gen="true"></constant>
  <constant name="NSAccessibilityDisclosedByRowAttribute"></constant>
  <constant name="NSAccessibilityDisclosedRowsAttribute"></constant>
  <constant name="NSAccessibilityDisclosingAttribute"></constant>
  <constant name="NSAccessibilityDisclosureLevelAttribute"></constant>
  <constant name="NSAccessibilityDisclosureTriangleRole"></constant>
  <constant name="NSAccessibilityDocumentAttribute"></constant>
  <constant name="NSAccessibilityDrawerCreatedNotification"></constant>
  <constant name="NSAccessibilityDrawerRole"></constant>
  <constant name="NSAccessibilityEditedAttribute"></constant>
  <constant name="NSAccessibilityEnabledAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityErrorCodeExceptionInfo"></constant>
  <constant name="NSAccessibilityException"></constant>
  <constant name="NSAccessibilityExpandedAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityFilenameAttribute"></constant>
  <constant name="NSAccessibilityFirstLineIndentMarkerTypeValue"></constant>
  <constant name="NSAccessibilityFloatingWindowSubrole" swt_gen="true"></constant>
  <constant name="NSAccessibilityFocusedAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityFocusedUIElementAttribute"></constant>
  <constant name="NSAccessibilityFocusedUIElementChangedNotification" swt_gen="true"></constant>
  <constant name="NSAccessibilityFocusedWindowAttribute"></constant>
  <constant name="NSAccessibilityFocusedWindowChangedNotification"></constant>
  <constant name="NSAccessibilityFontFamilyKey"></constant>
  <constant name="NSAccessibilityFontNameKey"></constant>
  <constant name="NSAccessibilityFontSizeKey"></constant>
  <constant name="NSAccessibilityFontTextAttribute"></constant>
  <constant name="NSAccessibilityForegroundColorTextAttribute"></constant>
  <constant name="NSAccessibilityFrontmostAttribute"></constant>
  <constant name="NSAccessibilityGridRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityGroupRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityGrowAreaAttribute"></constant>
  <constant name="NSAccessibilityGrowAreaRole"></constant>
  <constant name="NSAccessibilityHeadIndentMarkerTypeValue"></constant>
  <constant name="NSAccessibilityHeaderAttribute"></constant>
  <constant name="NSAccessibilityHelpAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityHelpTagCreatedNotification"></constant>
  <constant name="NSAccessibilityHelpTagRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityHiddenAttribute"></constant>
  <constant name="NSAccessibilityHorizontalOrientationValue" swt_gen="true"></constant>
  <constant name="NSAccessibilityHorizontalScrollBarAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityImageRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityInchesUnitValue"></constant>
  <constant name="NSAccessibilityIncrementAction"></constant>
  <constant name="NSAccessibilityIncrementArrowSubrole"></constant>
  <constant name="NSAccessibilityIncrementButtonAttribute"></constant>
  <constant name="NSAccessibilityIncrementPageSubrole"></constant>
  <constant name="NSAccessibilityIncrementorRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityIndexAttribute"></constant>
  <constant name="NSAccessibilityInsertionPointLineNumberAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityLabelUIElementsAttribute"></constant>
  <constant name="NSAccessibilityLabelValueAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityLeftTabStopMarkerTypeValue"></constant>
  <constant name="NSAccessibilityLineForIndexParameterizedAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityLinkRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityLinkTextAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityLinkedUIElementsAttribute"></constant>
  <constant name="NSAccessibilityListRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityMainAttribute"></constant>
  <constant name="NSAccessibilityMainWindowAttribute"></constant>
  <constant name="NSAccessibilityMainWindowChangedNotification"></constant>
  <constant name="NSAccessibilityMarkerGroupUIElementAttribute"></constant>
  <constant name="NSAccessibilityMarkerTypeAttribute"></constant>
  <constant name="NSAccessibilityMarkerTypeDescriptionAttribute"></constant>
  <constant name="NSAccessibilityMarkerUIElementsAttribute"></constant>
  <constant name="NSAccessibilityMarkerValuesAttribute"></constant>
  <constant name="NSAccessibilityMatteContentUIElementAttribute"></constant>
  <constant name="NSAccessibilityMatteHoleAttribute"></constant>
  <constant name="NSAccessibilityMatteRole"></constant>
  <constant name="NSAccessibilityMaxValueAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityMenuBarAttribute"></constant>
  <constant name="NSAccessibilityMenuBarRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityMenuButtonRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityMenuItemRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityMenuRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityMinValueAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityMinimizeButtonAttribute"></constant>
  <constant name="NSAccessibilityMinimizeButtonSubrole"></constant>
  <constant name="NSAccessibilityMinimizedAttribute"></constant>
  <constant name="NSAccessibilityMisspelledTextAttribute"></constant>
  <constant name="NSAccessibilityModalAttribute"></constant>
  <constant name="NSAccessibilityMovedNotification"></constant>
  <constant name="NSAccessibilityNextContentsAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityNumberOfCharactersAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityOrderedByRowAttribute"></constant>
  <constant name="NSAccessibilityOrientationAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityOutlineRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityOutlineRowSubrole" swt_gen="true"></constant>
  <constant name="NSAccessibilityOverflowButtonAttribute"></constant>
  <constant name="NSAccessibilityParentAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityPicasUnitValue"></constant>
  <constant name="NSAccessibilityPickAction"></constant>
  <constant name="NSAccessibilityPointsUnitValue"></constant>
  <constant name="NSAccessibilityPopUpButtonRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityPositionAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityPressAction" swt_gen="true"></constant>
  <constant name="NSAccessibilityPreviousContentsAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityProgressIndicatorRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityProxyAttribute"></constant>
  <constant name="NSAccessibilityRTFForRangeParameterizedAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityRadioButtonRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityRadioGroupRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityRaiseAction"></constant>
  <constant name="NSAccessibilityRangeForIndexParameterizedAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityRangeForLineParameterizedAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityRangeForPositionParameterizedAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityResizedNotification"></constant>
  <constant name="NSAccessibilityRightTabStopMarkerTypeValue"></constant>
  <constant name="NSAccessibilityRoleAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityRoleDescriptionAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityRowCountAttribute"></constant>
  <constant name="NSAccessibilityRowCountChangedNotification"></constant>
  <constant name="NSAccessibilityRowRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityRowsAttribute"></constant>
  <constant name="NSAccessibilityRulerMarkerRole"></constant>
  <constant name="NSAccessibilityRulerRole"></constant>
  <constant name="NSAccessibilityScrollAreaRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityScrollBarRole" swt_gen="true"></constant>
  <constant name="NSAccessibilitySearchButtonAttribute"></constant>
  <constant name="NSAccessibilitySearchFieldSubrole"></constant>
  <constant name="NSAccessibilitySearchMenuAttribute"></constant>
  <constant name="NSAccessibilitySecureTextFieldSubrole"></constant>
  <constant name="NSAccessibilitySelectedAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilitySelectedChildrenAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilitySelectedChildrenChangedNotification" swt_gen="true"></constant>
  <constant name="NSAccessibilitySelectedColumnsAttribute"></constant>
  <constant name="NSAccessibilitySelectedColumnsChangedNotification"></constant>
  <constant name="NSAccessibilitySelectedRowsAttribute"></constant>
  <constant name="NSAccessibilitySelectedRowsChangedNotification"></constant>
  <constant name="NSAccessibilitySelectedTextAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilitySelectedTextChangedNotification" swt_gen="true"></constant>
  <constant name="NSAccessibilitySelectedTextRangeAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilitySelectedTextRangesAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityServesAsTitleForUIElementsAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityShadowTextAttribute"></constant>
  <constant name="NSAccessibilitySharedCharacterRangeAttribute"></constant>
  <constant name="NSAccessibilitySharedTextUIElementsAttribute"></constant>
  <constant name="NSAccessibilitySheetCreatedNotification"></constant>
  <constant name="NSAccessibilitySheetRole"></constant>
  <constant name="NSAccessibilityShowMenuAction"></constant>
  <constant name="NSAccessibilityShownMenuAttribute"></constant>
  <constant name="NSAccessibilitySizeAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilitySliderRole" swt_gen="true"></constant>
  <constant name="NSAccessibilitySortButtonRole" swt_gen="true"></constant>
  <constant name="NSAccessibilitySortDirectionAttribute"></constant>
  <constant name="NSAccessibilitySplitGroupRole"></constant>
  <constant name="NSAccessibilitySplitterRole" swt_gen="true"></constant>
  <constant name="NSAccessibilitySplittersAttribute"></constant>
  <constant name="NSAccessibilityStandardWindowSubrole" swt_gen="true"></constant>
  <constant name="NSAccessibilityStaticTextRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityStrikethroughColorTextAttribute"></constant>
  <constant name="NSAccessibilityStrikethroughTextAttribute"></constant>
  <constant name="NSAccessibilityStringForRangeParameterizedAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityStyleRangeForIndexParameterizedAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilitySubroleAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilitySuperscriptTextAttribute"></constant>
  <constant name="NSAccessibilitySystemDialogSubrole" swt_gen="true"></constant>
  <constant name="NSAccessibilitySystemFloatingWindowSubrole"></constant>
  <constant name="NSAccessibilitySystemWideRole"></constant>
  <constant name="NSAccessibilityTabGroupRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityTableRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityTableRowSubrole" swt_gen="true"></constant>
  <constant name="NSAccessibilityTabsAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityTailIndentMarkerTypeValue"></constant>
  <constant name="NSAccessibilityTextAreaRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityTextAttachmentSubrole"></constant>
  <constant name="NSAccessibilityTextFieldRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityTextLinkSubrole" swt_gen="true"></constant>
  <constant name="NSAccessibilityTimelineSubrole"></constant>
  <constant name="NSAccessibilityTitleAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityTitleChangedNotification"></constant>
  <constant name="NSAccessibilityTitleUIElementAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityToolbarButtonAttribute"></constant>
  <constant name="NSAccessibilityToolbarButtonSubrole"></constant>
  <constant name="NSAccessibilityToolbarRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityTopLevelUIElementAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityUIElementDestroyedNotification"></constant>
  <constant name="NSAccessibilityURLAttribute"></constant>
  <constant name="NSAccessibilityUnderlineColorTextAttribute"></constant>
  <constant name="NSAccessibilityUnderlineTextAttribute"></constant>
  <constant name="NSAccessibilityUnitDescriptionAttribute"></constant>
  <constant name="NSAccessibilityUnitsAttribute"></constant>
  <constant name="NSAccessibilityUnknownMarkerTypeValue"></constant>
  <constant name="NSAccessibilityUnknownRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityUnknownSortDirectionValue"></constant>
  <constant name="NSAccessibilityUnknownSubrole" swt_gen="true"></constant>
  <constant name="NSAccessibilityUnknownUnitValue"></constant>
  <constant name="NSAccessibilityValueAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityValueChangedNotification" swt_gen="true"></constant>
  <constant name="NSAccessibilityValueDescriptionAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityValueIndicatorRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityVerticalOrientationValue" swt_gen="true"></constant>
  <constant name="NSAccessibilityVerticalScrollBarAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityVisibleCharacterRangeAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityVisibleChildrenAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityVisibleColumnsAttribute"></constant>
  <constant name="NSAccessibilityVisibleNameKey"></constant>
  <constant name="NSAccessibilityVisibleRowsAttribute"></constant>
  <constant name="NSAccessibilityWindowAttribute" swt_gen="true"></constant>
  <constant name="NSAccessibilityWindowCreatedNotification"></constant>
  <constant name="NSAccessibilityWindowDeminiaturizedNotification"></constant>
  <constant name="NSAccessibilityWindowMiniaturizedNotification"></constant>
  <constant name="NSAccessibilityWindowMovedNotification"></constant>
  <constant name="NSAccessibilityWindowResizedNotification"></constant>
  <constant name="NSAccessibilityWindowRole" swt_gen="true"></constant>
  <constant name="NSAccessibilityWindowsAttribute"></constant>
  <constant name="NSAccessibilityZoomButtonAttribute"></constant>
  <constant name="NSAccessibilityZoomButtonSubrole"></constant>
  <constant name="NSAlignmentBinding"></constant>
  <constant name="NSAllRomanInputSourcesLocaleIdentifier"></constant>
  <constant name="NSAllowsEditingMultipleValuesSelectionBindingOption"></constant>
  <constant name="NSAllowsNullArgumentBindingOption"></constant>
  <constant name="NSAlternateImageBinding"></constant>
  <constant name="NSAlternateTitleBinding"></constant>
  <constant name="NSAlwaysPresentsApplicationModalAlertsBindingOption"></constant>
  <constant name="NSAnimateBinding"></constant>
  <constant name="NSAnimationDelayBinding"></constant>
  <constant name="NSAnimationProgressMark"></constant>
  <constant name="NSAnimationProgressMarkNotification"></constant>
  <constant name="NSAnimationTriggerOrderIn"></constant>
  <constant name="NSAnimationTriggerOrderOut"></constant>
  <constant name="NSAntialiasThresholdChangedNotification"></constant>
  <constant name="NSApp"></constant>
  <constant name="NSAppKitIgnoredException"></constant>
  <constant name="NSAppKitVersionNumber"></constant>
  <constant name="NSAppKitVirtualMemoryException"></constant>
  <constant name="NSApplicationDidBecomeActiveNotification"></constant>
  <constant name="NSApplicationDidChangeScreenParametersNotification"></constant>
  <constant name="NSApplicationDidFinishLaunchingNotification"></constant>
  <constant name="NSApplicationDidHideNotification"></constant>
  <constant name="NSApplicationDidResignActiveNotification"></constant>
  <constant name="NSApplicationDidUnhideNotification"></constant>
  <constant name="NSApplicationDidUpdateNotification"></constant>
  <constant name="NSApplicationFileType"></constant>
  <constant name="NSApplicationWillBecomeActiveNotification"></constant>
  <constant name="NSApplicationWillFinishLaunchingNotification"></constant>
  <constant name="NSApplicationWillHideNotification"></constant>
  <constant name="NSApplicationWillResignActiveNotification"></constant>
  <constant name="NSApplicationWillTerminateNotification"></constant>
  <constant name="NSApplicationWillUnhideNotification"></constant>
  <constant name="NSApplicationWillUpdateNotification"></constant>
  <constant name="NSArgumentBinding"></constant>
  <constant name="NSAttachmentAttributeName"></constant>
  <constant name="NSAttributedStringBinding"></constant>
  <constant name="NSAuthorDocumentAttribute"></constant>
  <constant name="NSBackgroundColorAttributeName" swt_gen="true"></constant>
  <constant name="NSBackgroundColorDocumentAttribute"></constant>
  <constant name="NSBadBitmapParametersException"></constant>
  <constant name="NSBadComparisonException"></constant>
  <constant name="NSBadRTFColorTableException"></constant>
  <constant name="NSBadRTFDirectiveException"></constant>
  <constant name="NSBadRTFFontTableException"></constant>
  <constant name="NSBadRTFStyleSheetException"></constant>
  <constant name="NSBaseURLDocumentOption"></constant>
  <constant name="NSBaselineOffsetAttributeName" swt_gen="true"></constant>
  <constant name="NSBlack"></constant>
  <constant name="NSBottomMarginDocumentAttribute"></constant>
  <constant name="NSBrowserColumnConfigurationDidChangeNotification"></constant>
  <constant name="NSBrowserIllegalDelegateException"></constant>
  <constant name="NSCalibratedBlackColorSpace"></constant>
  <constant name="NSCalibratedRGBColorSpace" swt_gen="true"></constant>
  <constant name="NSCalibratedWhiteColorSpace"></constant>
  <constant name="NSCharacterEncodingDocumentAttribute"></constant>
  <constant name="NSCharacterEncodingDocumentOption"></constant>
  <constant name="NSCharacterShapeAttributeName"></constant>
  <constant name="NSCocoaVersionDocumentAttribute"></constant>
  <constant name="NSColorListDidChangeNotification"></constant>
  <constant name="NSColorListIOException"></constant>
  <constant name="NSColorListNotEditableException"></constant>
  <constant name="NSColorPanelColorDidChangeNotification"></constant>
  <constant name="NSColorPboardType"></constant>
  <constant name="NSComboBoxSelectionDidChangeNotification"></constant>
  <constant name="NSComboBoxSelectionIsChangingNotification"></constant>
  <constant name="NSComboBoxWillDismissNotification"></constant>
  <constant name="NSComboBoxWillPopUpNotification"></constant>
  <constant name="NSCommentDocumentAttribute"></constant>
  <constant name="NSCompanyDocumentAttribute"></constant>
  <constant name="NSConditionallySetsEditableBindingOption"></constant>
  <constant name="NSConditionallySetsEnabledBindingOption"></constant>
  <constant name="NSConditionallySetsHiddenBindingOption"></constant>
  <constant name="NSContentArrayBinding"></constant>
  <constant name="NSContentArrayForMultipleSelectionBinding"></constant>
  <constant name="NSContentBinding"></constant>
  <constant name="NSContentDictionaryBinding"></constant>
  <constant name="NSContentHeightBinding"></constant>
  <constant name="NSContentObjectBinding"></constant>
  <constant name="NSContentObjectsBinding"></constant>
  <constant name="NSContentPlacementTagBindingOption"></constant>
  <constant name="NSContentSetBinding"></constant>
  <constant name="NSContentValuesBinding"></constant>
  <constant name="NSContentWidthBinding"></constant>
  <constant name="NSContextHelpModeDidActivateNotification"></constant>
  <constant name="NSContextHelpModeDidDeactivateNotification"></constant>
  <constant name="NSContinuouslyUpdatesValueBindingOption"></constant>
  <constant name="NSControlTextDidBeginEditingNotification"></constant>
  <constant name="NSControlTextDidChangeNotification"></constant>
  <constant name="NSControlTextDidEndEditingNotification"></constant>
  <constant name="NSControlTintDidChangeNotification"></constant>
  <constant name="NSConvertedDocumentAttribute"></constant>
  <constant name="NSCopyrightDocumentAttribute"></constant>
  <constant name="NSCreatesSortDescriptorBindingOption"></constant>
  <constant name="NSCreationTimeDocumentAttribute"></constant>
  <constant name="NSCriticalValueBinding"></constant>
  <constant name="NSCursorAttributeName"></constant>
  <constant name="NSCustomColorSpace"></constant>
  <constant name="NSDarkGray"></constant>
  <constant name="NSDataBinding"></constant>
  <constant name="NSDefaultAttributesDocumentOption"></constant>
  <constant name="NSDefaultTabIntervalDocumentAttribute"></constant>
  <constant name="NSDeletesObjectsOnRemoveBindingsOption"></constant>
  <constant name="NSDeviceBitsPerSample"></constant>
  <constant name="NSDeviceBlackColorSpace"></constant>
  <constant name="NSDeviceCMYKColorSpace"></constant>
  <constant name="NSDeviceColorSpaceName"></constant>
  <constant name="NSDeviceIsPrinter"></constant>
  <constant name="NSDeviceIsScreen"></constant>
  <constant name="NSDeviceRGBColorSpace" swt_gen="true"></constant>
  <constant name="NSDeviceResolution" swt_gen="true"></constant>
  <constant name="NSDeviceSize"></constant>
  <constant name="NSDeviceWhiteColorSpace"></constant>
  <constant name="NSDirectoryFileType"></constant>
  <constant name="NSDisplayNameBindingOption"></constant>
  <constant name="NSDisplayPatternBindingOption"></constant>
  <constant name="NSDisplayPatternTitleBinding"></constant>
  <constant name="NSDisplayPatternValueBinding"></constant>
  <constant name="NSDocFormatTextDocumentType"></constant>
  <constant name="NSDocumentEditedBinding"></constant>
  <constant name="NSDocumentTypeDocumentAttribute"></constant>
  <constant name="NSDocumentTypeDocumentOption"></constant>
  <constant name="NSDoubleClickArgumentBinding"></constant>
  <constant name="NSDoubleClickTargetBinding"></constant>
  <constant name="NSDragPboard" swt_gen="true"></constant>
  <constant name="NSDraggingException"></constant>
  <constant name="NSDrawerDidCloseNotification"></constant>
  <constant name="NSDrawerDidOpenNotification"></constant>
  <constant name="NSDrawerWillCloseNotification"></constant>
  <constant name="NSDrawerWillOpenNotification"></constant>
  <constant name="NSEditableBinding"></constant>
  <constant name="NSEditorDocumentAttribute"></constant>
  <constant name="NSEnabledBinding"></constant>
  <constant name="NSEventTrackingRunLoopMode"></constant>
  <constant name="NSExcludedElementsDocumentAttribute"></constant>
  <constant name="NSExcludedKeysBinding"></constant>
  <constant name="NSExpansionAttributeName"></constant>
  <constant name="NSFileContentsPboardType"></constant>
  <constant name="NSFilenamesPboardType" swt_gen="true"></constant>
  <constant name="NSFilesPromisePboardType"></constant>
  <constant name="NSFilesystemFileType"></constant>
  <constant name="NSFilterPredicateBinding"></constant>
  <constant name="NSFindPanelCaseInsensitiveSearch"></constant>
  <constant name="NSFindPanelSearchOptionsPboardType"></constant>
  <constant name="NSFindPanelSubstringMatch"></constant>
  <constant name="NSFindPboard"></constant>
  <constant name="NSFontAttributeName" swt_gen="true"></constant>
  <constant name="NSFontBinding"></constant>
  <constant name="NSFontBoldBinding"></constant>
  <constant name="NSFontCascadeListAttribute"></constant>
  <constant name="NSFontCharacterSetAttribute"></constant>
  <constant name="NSFontFaceAttribute"></constant>
  <constant name="NSFontFamilyAttribute"></constant>
  <constant name="NSFontFamilyNameBinding"></constant>
  <constant name="NSFontFeatureSelectorIdentifierKey"></constant>
  <constant name="NSFontFeatureSettingsAttribute"></constant>
  <constant name="NSFontFeatureTypeIdentifierKey"></constant>
  <constant name="NSFontFixedAdvanceAttribute"></constant>
  <constant name="NSFontIdentityMatrix"></constant>
  <constant name="NSFontItalicBinding"></constant>
  <constant name="NSFontMatrixAttribute"></constant>
  <constant name="NSFontNameAttribute"></constant>
  <constant name="NSFontNameBinding"></constant>
  <constant name="NSFontPboard"></constant>
  <constant name="NSFontPboardType"></constant>
  <constant name="NSFontSetChangedNotification"></constant>
  <constant name="NSFontSizeAttribute"></constant>
  <constant name="NSFontSizeBinding"></constant>
  <constant name="NSFontSlantTrait"></constant>
  <constant name="NSFontSymbolicTrait"></constant>
  <constant name="NSFontTraitsAttribute"></constant>
  <constant name="NSFontUnavailableException"></constant>
  <constant name="NSFontVariationAttribute"></constant>
  <constant name="NSFontVariationAxisDefaultValueKey"></constant>
  <constant name="NSFontVariationAxisIdentifierKey"></constant>
  <constant name="NSFontVariationAxisMaximumValueKey"></constant>
  <constant name="NSFontVariationAxisMinimumValueKey"></constant>
  <constant name="NSFontVariationAxisNameKey"></constant>
  <constant name="NSFontVisibleNameAttribute"></constant>
  <constant name="NSFontWeightTrait"></constant>
  <constant name="NSFontWidthTrait"></constant>
  <constant name="NSForegroundColorAttributeName" swt_gen="true"></constant>
  <constant name="NSFullScreenModeAllScreens"></constant>
  <constant name="NSFullScreenModeSetting"></constant>
  <constant name="NSFullScreenModeWindowLevel"></constant>
  <constant name="NSGeneralPboard"></constant>
  <constant name="NSGlyphInfoAttributeName"></constant>
  <constant name="NSGraphicsContextDestinationAttributeName"></constant>
  <constant name="NSGraphicsContextPDFFormat"></constant>
  <constant name="NSGraphicsContextPSFormat"></constant>
  <constant name="NSGraphicsContextRepresentationFormatAttributeName"></constant>
  <constant name="NSHTMLPboardType" swt_gen="true"></constant>
  <constant name="NSHTMLTextDocumentType"></constant>
  <constant name="NSHandlesContentAsCompoundValueBindingOption"></constant>
  <constant name="NSHeaderTitleBinding"></constant>
  <constant name="NSHiddenBinding"></constant>
  <constant name="NSHyphenationFactorDocumentAttribute"></constant>
  <constant name="NSIllegalSelectorException"></constant>
  <constant name="NSImageBinding"></constant>
  <constant name="NSImageCacheException"></constant>
  <constant name="NSImageColorSyncProfileData"></constant>
  <constant name="NSImageCompressionFactor"></constant>
  <constant name="NSImageCompressionMethod"></constant>
  <constant name="NSImageCurrentFrame"></constant>
  <constant name="NSImageCurrentFrameDuration"></constant>
  <constant name="NSImageDitherTransparency"></constant>
  <constant name="NSImageEXIFData"></constant>
  <constant name="NSImageFallbackBackgroundColor"></constant>
  <constant name="NSImageFrameCount"></constant>
  <constant name="NSImageGamma"></constant>
  <constant name="NSImageInterlaced"></constant>
  <constant name="NSImageLoopCount"></constant>
  <constant name="NSImageNameActionTemplate"></constant>
  <constant name="NSImageNameAddTemplate"></constant>
  <constant name="NSImageNameAdvanced"></constant>
  <constant name="NSImageNameBluetoothTemplate"></constant>
  <constant name="NSImageNameBonjour"></constant>
  <constant name="NSImageNameColorPanel"></constant>
  <constant name="NSImageNameColumnViewTemplate"></constant>
  <constant name="NSImageNameComputer"></constant>
  <constant name="NSImageNameDotMac"></constant>
  <constant name="NSImageNameEnterFullScreenTemplate"></constant>
  <constant name="NSImageNameEveryone"></constant>
  <constant name="NSImageNameExitFullScreenTemplate"></constant>
  <constant name="NSImageNameFlowViewTemplate"></constant>
  <constant name="NSImageNameFolderBurnable"></constant>
  <constant name="NSImageNameFolderSmart"></constant>
  <constant name="NSImageNameFollowLinkFreestandingTemplate"></constant>
  <constant name="NSImageNameFontPanel"></constant>
  <constant name="NSImageNameGoLeftTemplate"></constant>
  <constant name="NSImageNameGoRightTemplate"></constant>
  <constant name="NSImageNameIChatTheaterTemplate"></constant>
  <constant name="NSImageNameIconViewTemplate"></constant>
  <constant name="NSImageNameInfo"></constant>
  <constant name="NSImageNameInvalidDataFreestandingTemplate"></constant>
  <constant name="NSImageNameLeftFacingTriangleTemplate"></constant>
  <constant name="NSImageNameListViewTemplate"></constant>
  <constant name="NSImageNameLockLockedTemplate"></constant>
  <constant name="NSImageNameLockUnlockedTemplate"></constant>
  <constant name="NSImageNameMultipleDocuments"></constant>
  <constant name="NSImageNameNetwork"></constant>
  <constant name="NSImageNamePathTemplate"></constant>
  <constant name="NSImageNamePreferencesGeneral"></constant>
  <constant name="NSImageNameQuickLookTemplate"></constant>
  <constant name="NSImageNameRefreshFreestandingTemplate"></constant>
  <constant name="NSImageNameRefreshTemplate"></constant>
  <constant name="NSImageNameRemoveTemplate"></constant>
  <constant name="NSImageNameRevealFreestandingTemplate"></constant>
  <constant name="NSImageNameRightFacingTriangleTemplate"></constant>
  <constant name="NSImageNameSlideshowTemplate"></constant>
  <constant name="NSImageNameSmartBadgeTemplate"></constant>
  <constant name="NSImageNameStopProgressFreestandingTemplate"></constant>
  <constant name="NSImageNameStopProgressTemplate"></constant>
  <constant name="NSImageNameUser"></constant>
  <constant name="NSImageNameUserAccounts"></constant>
  <constant name="NSImageNameUserGroup"></constant>
  <constant name="NSImageProgressive"></constant>
  <constant name="NSImageRGBColorTable"></constant>
  <constant name="NSImageRepRegistryDidChangeNotification"></constant>
  <constant name="NSIncludedKeysBinding"></constant>
  <constant name="NSInitialKeyBinding"></constant>
  <constant name="NSInitialValueBinding"></constant>
  <constant name="NSInkTextPboardType"></constant>
  <constant name="NSInsertsNullPlaceholderBindingOption"></constant>
  <constant name="NSInterfaceStyleDefault"></constant>
  <constant name="NSInvokesSeparatelyWithArrayObjectsBindingOption"></constant>
  <constant name="NSIsIndeterminateBinding"></constant>
  <constant name="NSKernAttributeName"></constant>
  <constant name="NSKeywordsDocumentAttribute"></constant>
  <constant name="NSLabelBinding"></constant>
  <constant name="NSLeftMarginDocumentAttribute"></constant>
  <constant name="NSLigatureAttributeName"></constant>
  <constant name="NSLightGray"></constant>
  <constant name="NSLinkAttributeName" swt_gen="true"></constant>
  <constant name="NSLocalizedKeyDictionaryBinding"></constant>
  <constant name="NSMacSimpleTextDocumentType"></constant>
  <constant name="NSManagedObjectContextBinding"></constant>
  <constant name="NSMarkedClauseSegmentAttributeName"></constant>
  <constant name="NSMaxValueBinding"></constant>
  <constant name="NSMaxWidthBinding"></constant>
  <constant name="NSMaximumRecentsBinding"></constant>
  <constant name="NSMenuDidAddItemNotification"></constant>
  <constant name="NSMenuDidBeginTrackingNotification"></constant>
  <constant name="NSMenuDidChangeItemNotification"></constant>
  <constant name="NSMenuDidEndTrackingNotification"></constant>
  <constant name="NSMenuDidRemoveItemNotification"></constant>
  <constant name="NSMenuDidSendActionNotification"></constant>
  <constant name="NSMenuWillSendActionNotification"></constant>
  <constant name="NSMinValueBinding"></constant>
  <constant name="NSMinWidthBinding"></constant>
  <constant name="NSMixedStateImageBinding"></constant>
  <constant name="NSModalPanelRunLoopMode"></constant>
  <constant name="NSModificationTimeDocumentAttribute"></constant>
  <constant name="NSMultipleTextSelectionPboardType"></constant>
  <constant name="NSMultipleValuesMarker"></constant>
  <constant name="NSMultipleValuesPlaceholderBindingOption"></constant>
  <constant name="NSNamedColorSpace"></constant>
  <constant name="NSNibLoadingException"></constant>
  <constant name="NSNibOwner"></constant>
  <constant name="NSNibTopLevelObjects"></constant>
  <constant name="NSNoSelectionMarker"></constant>
  <constant name="NSNoSelectionPlaceholderBindingOption"></constant>
  <constant name="NSNotApplicableMarker"></constant>
  <constant name="NSNotApplicablePlaceholderBindingOption"></constant>
  <constant name="NSNullPlaceholderBindingOption"></constant>
  <constant name="NSObliquenessAttributeName"></constant>
  <constant name="NSObservedKeyPathKey"></constant>
  <constant name="NSObservedObjectKey"></constant>
  <constant name="NSOffStateImageBinding"></constant>
  <constant name="NSOfficeOpenXMLTextDocumentType"></constant>
  <constant name="NSOnStateImageBinding"></constant>
  <constant name="NSOpenDocumentTextDocumentType"></constant>
  <constant name="NSOptionsKey"></constant>
  <constant name="NSOutlineViewColumnDidMoveNotification"></constant>
  <constant name="NSOutlineViewColumnDidResizeNotification"></constant>
  <constant name="NSOutlineViewItemDidCollapseNotification"></constant>
  <constant name="NSOutlineViewItemDidExpandNotification"></constant>
  <constant name="NSOutlineViewItemWillCollapseNotification"></constant>
  <constant name="NSOutlineViewItemWillExpandNotification"></constant>
  <constant name="NSOutlineViewSelectionDidChangeNotification"></constant>
  <constant name="NSOutlineViewSelectionIsChangingNotification"></constant>
  <constant name="NSPDFPboardType"></constant>
  <constant name="NSPICTPboardType"></constant>
  <constant name="NSPPDIncludeNotFoundException"></constant>
  <constant name="NSPPDIncludeStackOverflowException"></constant>
  <constant name="NSPPDIncludeStackUnderflowException"></constant>
  <constant name="NSPPDParseException"></constant>
  <constant name="NSPaperSizeDocumentAttribute"></constant>
  <constant name="NSParagraphStyleAttributeName" swt_gen="true"></constant>
  <constant name="NSPasteboardCommunicationException"></constant>
  <constant name="NSPatternColorSpace"></constant>
  <constant name="NSPlainFileType"></constant>
  <constant name="NSPlainTextDocumentType"></constant>
  <constant name="NSPopUpButtonCellWillPopUpNotification"></constant>
  <constant name="NSPopUpButtonWillPopUpNotification"></constant>
  <constant name="NSPostScriptPboardType"></constant>
  <constant name="NSPredicateBinding"></constant>
  <constant name="NSPredicateFormatBindingOption"></constant>
  <constant name="NSPrefixSpacesDocumentAttribute"></constant>
  <constant name="NSPrintAllPages" swt_gen="true"></constant>
  <constant name="NSPrintBottomMargin"></constant>
  <constant name="NSPrintCancelJob"></constant>
  <constant name="NSPrintCopies" swt_gen="true"></constant>
  <constant name="NSPrintDetailedErrorReporting"></constant>
  <constant name="NSPrintFaxCoverSheetName"></constant>
  <constant name="NSPrintFaxHighResolution"></constant>
  <constant name="NSPrintFaxJob"></constant>
  <constant name="NSPrintFaxModem"></constant>
  <constant name="NSPrintFaxNumber"></constant>
  <constant name="NSPrintFaxReceiverNames"></constant>
  <constant name="NSPrintFaxReceiverNumbers"></constant>
  <constant name="NSPrintFaxReturnReceipt"></constant>
  <constant name="NSPrintFaxSendTime"></constant>
  <constant name="NSPrintFaxTrimPageEnds"></constant>
  <constant name="NSPrintFaxUseCoverSheet"></constant>
  <constant name="NSPrintFirstPage" swt_gen="true"></constant>
  <constant name="NSPrintFormName"></constant>
  <constant name="NSPrintHeaderAndFooter"></constant>
  <constant name="NSPrintHorizontalPagination"></constant>
  <constant name="NSPrintHorizontallyCentered"></constant>
  <constant name="NSPrintJobDisposition" swt_gen="true"></constant>
  <constant name="NSPrintJobFeatures"></constant>
  <constant name="NSPrintLastPage" swt_gen="true"></constant>
  <constant name="NSPrintLeftMargin"></constant>
  <constant name="NSPrintManualFeed"></constant>
  <constant name="NSPrintMustCollate" swt_gen="true"></constant>
  <constant name="NSPrintOperationExistsException"></constant>
  <constant name="NSPrintOrientation"></constant>
  <constant name="NSPrintPackageException"></constant>
  <constant name="NSPrintPagesAcross"></constant>
  <constant name="NSPrintPagesDown"></constant>
  <constant name="NSPrintPagesPerSheet"></constant>
  <constant name="NSPrintPanelAccessorySummaryItemDescriptionKey"></constant>
  <constant name="NSPrintPanelAccessorySummaryItemNameKey"></constant>
  <constant name="NSPrintPaperFeed"></constant>
  <constant name="NSPrintPaperName"></constant>
  <constant name="NSPrintPaperSize"></constant>
  <constant name="NSPrintPhotoJobStyleHint"></constant>
  <constant name="NSPrintPreviewJob" swt_gen="true"></constant>
  <constant name="NSPrintPrinter"></constant>
  <constant name="NSPrintPrinterName"></constant>
  <constant name="NSPrintReversePageOrder"></constant>
  <constant name="NSPrintRightMargin"></constant>
  <constant name="NSPrintSaveJob" swt_gen="true"></constant>
  <constant name="NSPrintSavePath" swt_gen="true"></constant>
  <constant name="NSPrintScalingFactor" swt_gen="true"></constant>
  <constant name="NSPrintSpoolJob" swt_gen="true"></constant>
  <constant name="NSPrintTime"></constant>
  <constant name="NSPrintTopMargin"></constant>
  <constant name="NSPrintVerticalPagination"></constant>
  <constant name="NSPrintVerticallyCentered"></constant>
  <constant name="NSPrintingCommunicationException"></constant>
  <constant name="NSRTFDPboardType"></constant>
  <constant name="NSRTFDTextDocumentType"></constant>
  <constant name="NSRTFPboardType" swt_gen="true"></constant>
  <constant name="NSRTFPropertyStackOverflowException"></constant>
  <constant name="NSRTFTextDocumentType"></constant>
  <constant name="NSRaisesForNotApplicableKeysBindingOption"></constant>
  <constant name="NSReadOnlyDocumentAttribute"></constant>
  <constant name="NSRecentSearchesBinding"></constant>
  <constant name="NSRepresentedFilenameBinding"></constant>
  <constant name="NSRightMarginDocumentAttribute"></constant>
  <constant name="NSRowHeightBinding"></constant>
  <constant name="NSRuleEditorPredicateComparisonModifier"></constant>
  <constant name="NSRuleEditorPredicateCompoundType"></constant>
  <constant name="NSRuleEditorPredicateCustomSelector"></constant>
  <constant name="NSRuleEditorPredicateLeftExpression"></constant>
  <constant name="NSRuleEditorPredicateOperatorType"></constant>
  <constant name="NSRuleEditorPredicateOptions"></constant>
  <constant name="NSRuleEditorPredicateRightExpression"></constant>
  <constant name="NSRuleEditorRowsDidChangeNotification"></constant>
  <constant name="NSRulerPboard"></constant>
  <constant name="NSRulerPboardType"></constant>
  <constant name="NSSelectedIdentifierBinding"></constant>
  <constant name="NSSelectedIndexBinding"></constant>
  <constant name="NSSelectedLabelBinding"></constant>
  <constant name="NSSelectedObjectBinding"></constant>
  <constant name="NSSelectedObjectsBinding"></constant>
  <constant name="NSSelectedTagBinding"></constant>
  <constant name="NSSelectedValueBinding"></constant>
  <constant name="NSSelectedValuesBinding"></constant>
  <constant name="NSSelectionIndexPathsBinding"></constant>
  <constant name="NSSelectionIndexesBinding"></constant>
  <constant name="NSSelectorNameBindingOption"></constant>
  <constant name="NSSelectsAllWhenSettingContentBindingOption"></constant>
  <constant name="NSShadowAttributeName"></constant>
  <constant name="NSShellCommandFileType"></constant>
  <constant name="NSSortDescriptorsBinding"></constant>
  <constant name="NSSoundPboardType"></constant>
  <constant name="NSSpeechCharacterModeProperty"></constant>
  <constant name="NSSpeechCommandDelimiterProperty"></constant>
  <constant name="NSSpeechCommandPrefix"></constant>
  <constant name="NSSpeechCommandSuffix"></constant>
  <constant name="NSSpeechCurrentVoiceProperty"></constant>
  <constant name="NSSpeechDictionaryAbbreviations"></constant>
  <constant name="NSSpeechDictionaryEntryPhonemes"></constant>
  <constant name="NSSpeechDictionaryEntrySpelling"></constant>
  <constant name="NSSpeechDictionaryLocaleIdentifier"></constant>
  <constant name="NSSpeechDictionaryModificationDate"></constant>
  <constant name="NSSpeechDictionaryPronunciations"></constant>
  <constant name="NSSpeechErrorCount"></constant>
  <constant name="NSSpeechErrorNewestCharacterOffset"></constant>
  <constant name="NSSpeechErrorNewestCode"></constant>
  <constant name="NSSpeechErrorOldestCharacterOffset"></constant>
  <constant name="NSSpeechErrorOldestCode"></constant>
  <constant name="NSSpeechErrorsProperty"></constant>
  <constant name="NSSpeechInputModeProperty"></constant>
  <constant name="NSSpeechModeLiteral"></constant>
  <constant name="NSSpeechModeNormal"></constant>
  <constant name="NSSpeechModePhoneme"></constant>
  <constant name="NSSpeechModeText"></constant>
  <constant name="NSSpeechNumberModeProperty"></constant>
  <constant name="NSSpeechOutputToFileURLProperty"></constant>
  <constant name="NSSpeechPhonemeInfoExample"></constant>
  <constant name="NSSpeechPhonemeInfoHiliteEnd"></constant>
  <constant name="NSSpeechPhonemeInfoHiliteStart"></constant>
  <constant name="NSSpeechPhonemeInfoOpcode"></constant>
  <constant name="NSSpeechPhonemeInfoSymbol"></constant>
  <constant name="NSSpeechPhonemeSymbolsProperty"></constant>
  <constant name="NSSpeechPitchBaseProperty"></constant>
  <constant name="NSSpeechPitchModProperty"></constant>
  <constant name="NSSpeechRateProperty"></constant>
  <constant name="NSSpeechRecentSyncProperty"></constant>
  <constant name="NSSpeechResetProperty"></constant>
  <constant name="NSSpeechStatusNumberOfCharactersLeft"></constant>
  <constant name="NSSpeechStatusOutputBusy"></constant>
  <constant name="NSSpeechStatusOutputPaused"></constant>
  <constant name="NSSpeechStatusPhonemeCode"></constant>
  <constant name="NSSpeechStatusProperty"></constant>
  <constant name="NSSpeechSynthesizerInfoIdentifier"></constant>
  <constant name="NSSpeechSynthesizerInfoProperty"></constant>
  <constant name="NSSpeechSynthesizerInfoVersion"></constant>
  <constant name="NSSpeechVolumeProperty"></constant>
  <constant name="NSSpellingStateAttributeName"></constant>
  <constant name="NSSplitViewDidResizeSubviewsNotification"></constant>
  <constant name="NSSplitViewWillResizeSubviewsNotification"></constant>
  <constant name="NSStrikethroughColorAttributeName" swt_gen="true"></constant>
  <constant name="NSStrikethroughStyleAttributeName" swt_gen="true"></constant>
  <constant name="NSStringPboardType" swt_gen="true"></constant>
  <constant name="NSStrokeColorAttributeName"></constant>
  <constant name="NSStrokeWidthAttributeName"></constant>
  <constant name="NSSubjectDocumentAttribute"></constant>
  <constant name="NSSuperscriptAttributeName"></constant>
  <constant name="NSSystemColorsDidChangeNotification"></constant>
  <constant name="NSTIFFException"></constant>
  <constant name="NSTIFFPboardType" swt_gen="true"></constant>
  <constant name="NSTabColumnTerminatorsAttributeName"></constant>
  <constant name="NSTableViewColumnDidMoveNotification"></constant>
  <constant name="NSTableViewColumnDidResizeNotification"></constant>
  <constant name="NSTableViewSelectionDidChangeNotification"></constant>
  <constant name="NSTableViewSelectionIsChangingNotification"></constant>
  <constant name="NSTabularTextPboardType"></constant>
  <constant name="NSTargetBinding"></constant>
  <constant name="NSTextColorBinding"></constant>
  <constant name="NSTextDidBeginEditingNotification"></constant>
  <constant name="NSTextDidChangeNotification"></constant>
  <constant name="NSTextDidEndEditingNotification"></constant>
  <constant name="NSTextEncodingNameDocumentAttribute"></constant>
  <constant name="NSTextEncodingNameDocumentOption"></constant>
  <constant name="NSTextLineTooLongException"></constant>
  <constant name="NSTextNoSelectionException"></constant>
  <constant name="NSTextReadException"></constant>
  <constant name="NSTextSizeMultiplierDocumentOption"></constant>
  <constant name="NSTextStorageDidProcessEditingNotification"></constant>
  <constant name="NSTextStorageWillProcessEditingNotification"></constant>
  <constant name="NSTextViewDidChangeSelectionNotification"></constant>
  <constant name="NSTextViewDidChangeTypingAttributesNotification"></constant>
  <constant name="NSTextViewWillChangeNotifyingTextViewNotification"></constant>
  <constant name="NSTextWriteException"></constant>
  <constant name="NSTimeoutDocumentOption"></constant>
  <constant name="NSTitleBinding"></constant>
  <constant name="NSTitleDocumentAttribute"></constant>
  <constant name="NSToolTipAttributeName"></constant>
  <constant name="NSToolTipBinding"></constant>
  <constant name="NSToolbarCustomizeToolbarItemIdentifier"></constant>
  <constant name="NSToolbarDidRemoveItemNotification"></constant>
  <constant name="NSToolbarFlexibleSpaceItemIdentifier"></constant>
  <constant name="NSToolbarPrintItemIdentifier"></constant>
  <constant name="NSToolbarSeparatorItemIdentifier"></constant>
  <constant name="NSToolbarShowColorsItemIdentifier"></constant>
  <constant name="NSToolbarShowFontsItemIdentifier"></constant>
  <constant name="NSToolbarSpaceItemIdentifier"></constant>
  <constant name="NSToolbarWillAddItemNotification"></constant>
  <constant name="NSTopMarginDocumentAttribute"></constant>
  <constant name="NSTransparentBinding"></constant>
  <constant name="NSTypedStreamVersionException"></constant>
  <constant name="NSURLPboardType" swt_gen="true"></constant>
  <constant name="NSUnderlineByWordMask"></constant>
  <constant name="NSUnderlineColorAttributeName" swt_gen="true"></constant>
  <constant name="NSUnderlineStrikethroughMask"></constant>
  <constant name="NSUnderlineStyleAttributeName" swt_gen="true"></constant>
  <constant name="NSVCardPboardType"></constant>
  <constant name="NSValidatesImmediatelyBindingOption"></constant>
  <constant name="NSValueBinding"></constant>
  <constant name="NSValuePathBinding"></constant>
  <constant name="NSValueTransformerBindingOption"></constant>
  <constant name="NSValueTransformerNameBindingOption"></constant>
  <constant name="NSValueURLBinding"></constant>
  <constant name="NSViewAnimationEffectKey"></constant>
  <constant name="NSViewAnimationEndFrameKey"></constant>
  <constant name="NSViewAnimationFadeInEffect"></constant>
  <constant name="NSViewAnimationFadeOutEffect"></constant>
  <constant name="NSViewAnimationStartFrameKey"></constant>
  <constant name="NSViewAnimationTargetKey"></constant>
  <constant name="NSViewBoundsDidChangeNotification"></constant>
  <constant name="NSViewDidUpdateTrackingAreasNotification"></constant>
  <constant name="NSViewFocusDidChangeNotification"></constant>
  <constant name="NSViewFrameDidChangeNotification"></constant>
  <constant name="NSViewGlobalFrameDidChangeNotification"></constant>
  <constant name="NSViewModeDocumentAttribute"></constant>
  <constant name="NSViewSizeDocumentAttribute"></constant>
  <constant name="NSViewZoomDocumentAttribute"></constant>
  <constant name="NSVisibleBinding"></constant>
  <constant name="NSVoiceAge"></constant>
  <constant name="NSVoiceDemoText"></constant>
  <constant name="NSVoiceGender"></constant>
  <constant name="NSVoiceGenderFemale"></constant>
  <constant name="NSVoiceGenderMale"></constant>
  <constant name="NSVoiceGenderNeuter"></constant>
  <constant name="NSVoiceIdentifier"></constant>
  <constant name="NSVoiceIndividuallySpokenCharacters"></constant>
  <constant name="NSVoiceLocaleIdentifier"></constant>
  <constant name="NSVoiceName"></constant>
  <constant name="NSVoiceSupportedCharacters"></constant>
  <constant name="NSWarningValueBinding"></constant>
  <constant name="NSWebArchiveTextDocumentType"></constant>
  <constant name="NSWebPreferencesDocumentOption"></constant>
  <constant name="NSWebResourceLoadDelegateDocumentOption"></constant>
  <constant name="NSWhite"></constant>
  <constant name="NSWidthBinding"></constant>
  <constant name="NSWindowDidBecomeKeyNotification"></constant>
  <constant name="NSWindowDidBecomeMainNotification"></constant>
  <constant name="NSWindowDidChangeScreenNotification"></constant>
  <constant name="NSWindowDidChangeScreenProfileNotification"></constant>
  <constant name="NSWindowDidDeminiaturizeNotification"></constant>
  <constant name="NSWindowDidEndSheetNotification"></constant>
  <constant name="NSWindowDidExposeNotification"></constant>
  <constant name="NSWindowDidMiniaturizeNotification"></constant>
  <constant name="NSWindowDidMoveNotification"></constant>
  <constant name="NSWindowDidResignKeyNotification"></constant>
  <constant name="NSWindowDidResignMainNotification"></constant>
  <constant name="NSWindowDidResizeNotification"></constant>
  <constant name="NSWindowDidUpdateNotification"></constant>
  <constant name="NSWindowServerCommunicationException"></constant>
  <constant name="NSWindowWillBeginSheetNotification"></constant>
  <constant name="NSWindowWillCloseNotification"></constant>
  <constant name="NSWindowWillMiniaturizeNotification"></constant>
  <constant name="NSWindowWillMoveNotification"></constant>
  <constant name="NSWordMLTextDocumentType"></constant>
  <constant name="NSWordTablesReadException"></constant>
  <constant name="NSWordTablesWriteException"></constant>
  <constant name="NSWorkspaceCompressOperation"></constant>
  <constant name="NSWorkspaceCopyOperation"></constant>
  <constant name="NSWorkspaceDecompressOperation"></constant>
  <constant name="NSWorkspaceDecryptOperation"></constant>
  <constant name="NSWorkspaceDestroyOperation"></constant>
  <constant name="NSWorkspaceDidLaunchApplicationNotification"></constant>
  <constant name="NSWorkspaceDidMountNotification"></constant>
  <constant name="NSWorkspaceDidPerformFileOperationNotification"></constant>
  <constant name="NSWorkspaceDidTerminateApplicationNotification"></constant>
  <constant name="NSWorkspaceDidUnmountNotification"></constant>
  <constant name="NSWorkspaceDidWakeNotification"></constant>
  <constant name="NSWorkspaceDuplicateOperation"></constant>
  <constant name="NSWorkspaceEncryptOperation"></constant>
  <constant name="NSWorkspaceLinkOperation"></constant>
  <constant name="NSWorkspaceMoveOperation"></constant>
  <constant name="NSWorkspaceRecycleOperation"></constant>
  <constant name="NSWorkspaceSessionDidBecomeActiveNotification"></constant>
  <constant name="NSWorkspaceSessionDidResignActiveNotification"></constant>
  <constant name="NSWorkspaceWillLaunchApplicationNotification"></constant>
  <constant name="NSWorkspaceWillPowerOffNotification"></constant>
  <constant name="NSWorkspaceWillSleepNotification"></constant>
  <constant name="NSWorkspaceWillUnmountNotification"></constant>
  <enum name="NSAWTEventType" swt_gen="true"></enum>
  <enum name="NSAboveBottom" swt_gen="true"></enum>
  <enum name="NSAboveTop" swt_gen="true"></enum>
  <enum name="NSAddTraitFontAction" swt_gen="true"></enum>
  <enum name="NSAdobeCNS1CharacterCollection" swt_gen="true"></enum>
  <enum name="NSAdobeGB1CharacterCollection" swt_gen="true"></enum>
  <enum name="NSAdobeJapan1CharacterCollection" swt_gen="true"></enum>
  <enum name="NSAdobeJapan2CharacterCollection" swt_gen="true"></enum>
  <enum name="NSAdobeKorea1CharacterCollection" swt_gen="true"></enum>
  <enum name="NSAlertAlternateReturn" swt_gen="true"></enum>
  <enum name="NSAlertDefaultReturn" swt_gen="true"></enum>
  <enum name="NSAlertErrorReturn" swt_gen="true"></enum>
  <enum name="NSAlertFirstButtonReturn" swt_gen="true"></enum>
  <enum name="NSAlertOtherReturn" swt_gen="true"></enum>
  <enum name="NSAlertSecondButtonReturn" swt_gen="true"></enum>
  <enum name="NSAlertThirdButtonReturn" swt_gen="true"></enum>
  <enum name="NSAllScrollerParts" swt_gen="true"></enum>
  <enum name="NSAlphaFirstBitmapFormat" swt_gen="true"></enum>
  <enum name="NSAlphaNonpremultipliedBitmapFormat" swt_gen="true"></enum>
  <enum name="NSAlphaShiftKeyMask" swt_gen="true"></enum>
  <enum name="NSAlternateKeyMask" swt_gen="true"></enum>
  <enum name="NSAnimationBlocking" swt_gen="true"></enum>
  <enum name="NSAnimationEaseIn" swt_gen="true"></enum>
  <enum name="NSAnimationEaseInOut" swt_gen="true"></enum>
  <enum name="NSAnimationEaseOut" swt_gen="true"></enum>
  <enum name="NSAnimationEffectDisappearingItemDefault" swt_gen="true"></enum>
  <enum name="NSAnimationEffectPoof" swt_gen="true"></enum>
  <enum name="NSAnimationLinear" swt_gen="true"></enum>
  <enum name="NSAnimationNonblocking" swt_gen="true"></enum>
  <enum name="NSAnimationNonblockingThreaded" swt_gen="true"></enum>
  <enum name="NSAnyEventMask" swt_gen="true"></enum>
  <enum name="NSAnyType" swt_gen="true"></enum>
  <enum name="NSAppKitDefined" swt_gen="true"></enum>
  <enum name="NSAppKitDefinedMask" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumber10_0" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumber10_1" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumber10_2" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumber10_2_3" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumber10_3" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumber10_3_2" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumber10_3_3" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumber10_3_5" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumber10_3_7" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumber10_3_9" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumber10_4" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumberWithColumnResizingBrowser" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumberWithContinuousScrollingBrowser" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumberWithCursorSizeSupport" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumberWithCustomSheetPosition" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumberWithDirectionalTabs" swt_gen="true"></enum>
  <enum name="NSAppKitVersionNumberWithPatternColorLeakFix" swt_gen="true"></enum>
  <enum name="NSApplicationActivatedEventType" swt_gen="true"></enum>
  <enum name="NSApplicationDeactivatedEventType" swt_gen="true"></enum>
  <enum name="NSApplicationDefined" swt_gen="true"></enum>
  <enum name="NSApplicationDefinedMask" swt_gen="true"></enum>
  <enum name="NSApplicationDelegateReplyCancel" swt_gen="true"></enum>
  <enum name="NSApplicationDelegateReplyFailure" swt_gen="true"></enum>
  <enum name="NSApplicationDelegateReplySuccess" swt_gen="true"></enum>
  <enum name="NSAscendingPageOrder" swt_gen="true"></enum>
  <enum name="NSAtBottom" swt_gen="true"></enum>
  <enum name="NSAtTop" swt_gen="true"></enum>
  <enum name="NSAttachmentCharacter" swt_gen="true"></enum>
  <enum name="NSAutoPagination" swt_gen="true"></enum>
  <enum name="NSAutosaveOperation" swt_gen="true"></enum>
  <enum name="NSBMPFileType" swt_gen="true"></enum>
  <enum name="NSBackTabCharacter" swt_gen="true"></enum>
  <enum name="NSBackgroundStyleDark" swt_gen="true"></enum>
  <enum name="NSBackgroundStyleLight" swt_gen="true"></enum>
  <enum name="NSBackgroundStyleLowered" swt_gen="true"></enum>
  <enum name="NSBackgroundStyleRaised" swt_gen="true"></enum>
  <enum name="NSBackgroundTab" swt_gen="true"></enum>
  <enum name="NSBackingStoreBuffered" swt_gen="true"></enum>
  <enum name="NSBackingStoreNonretained" swt_gen="true"></enum>
  <enum name="NSBackingStoreRetained" swt_gen="true"></enum>
  <enum name="NSBackspaceCharacter" swt_gen="true"></enum>
  <enum name="NSBacktabTextMovement" swt_gen="true"></enum>
  <enum name="NSBeginFunctionKey" swt_gen="true"></enum>
  <enum name="NSBelowBottom" swt_gen="true"></enum>
  <enum name="NSBelowTop" swt_gen="true"></enum>
  <enum name="NSBevelLineJoinStyle" swt_gen="true"></enum>
  <enum name="NSBezelBorder" swt_gen="true"></enum>
  <enum name="NSBlueControlTint" swt_gen="true"></enum>
  <enum name="NSBoldFontMask" swt_gen="true"></enum>
  <enum name="NSBorderlessWindowMask" swt_gen="true"></enum>
  <enum name="NSBottomTabsBezelBorder" swt_gen="true"></enum>
  <enum name="NSBoxCustom" swt_gen="true"></enum>
  <enum name="NSBoxOldStyle" swt_gen="true"></enum>
  <enum name="NSBoxPrimary" swt_gen="true"></enum>
  <enum name="NSBoxSecondary" swt_gen="true"></enum>
  <enum name="NSBoxSeparator" swt_gen="true"></enum>
  <enum name="NSBreakFunctionKey" swt_gen="true"></enum>
  <enum name="NSBrowserAutoColumnResizing" swt_gen="true"></enum>
  <enum name="NSBrowserDropAbove" swt_gen="true"></enum>
  <enum name="NSBrowserDropOn" swt_gen="true"></enum>
  <enum name="NSBrowserNoColumnResizing" swt_gen="true"></enum>
  <enum name="NSBrowserUserColumnResizing" swt_gen="true"></enum>
  <enum name="NSButtLineCapStyle" swt_gen="true"></enum>
  <enum name="NSCMYKColorSpaceModel" swt_gen="true"></enum>
  <enum name="NSCMYKModeColorPanel" swt_gen="true"></enum>
  <enum name="NSCancelButton" swt_gen="true"></enum>
  <enum name="NSCancelTextMovement" swt_gen="true"></enum>
  <enum name="NSCarriageReturnCharacter" swt_gen="true"></enum>
  <enum name="NSCellAllowsMixedState" swt_gen="true"></enum>
  <enum name="NSCellChangesContents" swt_gen="true"></enum>
  <enum name="NSCellDisabled" swt_gen="true"></enum>
  <enum name="NSCellEditable" swt_gen="true"></enum>
  <enum name="NSCellHasImageHorizontal" swt_gen="true"></enum>
  <enum name="NSCellHasImageOnLeftOrBottom" swt_gen="true"></enum>
  <enum name="NSCellHasOverlappingImage" swt_gen="true"></enum>
  <enum name="NSCellHighlighted" swt_gen="true"></enum>
  <enum name="NSCellHitContentArea" swt_gen="true"></enum>
  <enum name="NSCellHitEditableTextArea" swt_gen="true"></enum>
  <enum name="NSCellHitNone" swt_gen="true"></enum>
  <enum name="NSCellHitTrackableArea" swt_gen="true"></enum>
  <enum name="NSCellIsBordered" swt_gen="true"></enum>
  <enum name="NSCellIsInsetButton" swt_gen="true"></enum>
  <enum name="NSCellLightsByBackground" swt_gen="true"></enum>
  <enum name="NSCellLightsByContents" swt_gen="true"></enum>
  <enum name="NSCellLightsByGray" swt_gen="true"></enum>
  <enum name="NSCellState" swt_gen="true"></enum>
  <enum name="NSCenterTabStopType" swt_gen="true"></enum>
  <enum name="NSCenterTextAlignment" swt_gen="true"></enum>
  <enum name="NSChangeAutosaved" swt_gen="true"></enum>
  <enum name="NSChangeBackgroundCell" swt_gen="true"></enum>
  <enum name="NSChangeBackgroundCellMask" swt_gen="true"></enum>
  <enum name="NSChangeCleared" swt_gen="true"></enum>
  <enum name="NSChangeDone" swt_gen="true"></enum>
  <enum name="NSChangeGrayCell" swt_gen="true"></enum>
  <enum name="NSChangeGrayCellMask" swt_gen="true"></enum>
  <enum name="NSChangeReadOtherContents" swt_gen="true"></enum>
  <enum name="NSChangeRedone" swt_gen="true"></enum>
  <enum name="NSChangeUndone" swt_gen="true"></enum>
  <enum name="NSCircularBezelStyle" swt_gen="true"></enum>
  <enum name="NSCircularSlider" swt_gen="true"></enum>
  <enum name="NSClearControlTint" swt_gen="true"></enum>
  <enum name="NSClearDisplayFunctionKey" swt_gen="true"></enum>
  <enum name="NSClearLineFunctionKey" swt_gen="true"></enum>
  <enum name="NSClipPagination" swt_gen="true"></enum>
  <enum name="NSClockAndCalendarDatePickerStyle" swt_gen="true"></enum>
  <enum name="NSClosableWindowMask" swt_gen="true"></enum>
  <enum name="NSClosePathBezierPathElement" swt_gen="true"></enum>
  <enum name="NSColorListModeColorPanel" swt_gen="true"></enum>
  <enum name="NSColorPanelAllModesMask" swt_gen="true"></enum>
  <enum name="NSColorPanelCMYKModeMask" swt_gen="true"></enum>
  <enum name="NSColorPanelColorListModeMask" swt_gen="true"></enum>
  <enum name="NSColorPanelCrayonModeMask" swt_gen="true"></enum>
  <enum name="NSColorPanelCustomPaletteModeMask" swt_gen="true"></enum>
  <enum name="NSColorPanelGrayModeMask" swt_gen="true"></enum>
  <enum name="NSColorPanelHSBModeMask" swt_gen="true"></enum>
  <enum name="NSColorPanelRGBModeMask" swt_gen="true"></enum>
  <enum name="NSColorPanelWheelModeMask" swt_gen="true"></enum>
  <enum name="NSColorRenderingIntentAbsoluteColorimetric" swt_gen="true"></enum>
  <enum name="NSColorRenderingIntentDefault" swt_gen="true"></enum>
  <enum name="NSColorRenderingIntentPerceptual" swt_gen="true"></enum>
  <enum name="NSColorRenderingIntentRelativeColorimetric" swt_gen="true"></enum>
  <enum name="NSColorRenderingIntentSaturation" swt_gen="true"></enum>
  <enum name="NSCommandKeyMask" swt_gen="true"></enum>
  <enum name="NSCompositeClear" swt_gen="true"></enum>
  <enum name="NSCompositeCopy" swt_gen="true"></enum>
  <enum name="NSCompositeDestinationAtop" swt_gen="true"></enum>
  <enum name="NSCompositeDestinationIn" swt_gen="true"></enum>
  <enum name="NSCompositeDestinationOut" swt_gen="true"></enum>
  <enum name="NSCompositeDestinationOver" swt_gen="true"></enum>
  <enum name="NSCompositeHighlight" swt_gen="true"></enum>
  <enum name="NSCompositePlusDarker" swt_gen="true"></enum>
  <enum name="NSCompositePlusLighter" swt_gen="true"></enum>
  <enum name="NSCompositeSourceAtop" swt_gen="true"></enum>
  <enum name="NSCompositeSourceIn" swt_gen="true"></enum>
  <enum name="NSCompositeSourceOut" swt_gen="true"></enum>
  <enum name="NSCompositeSourceOver" swt_gen="true"></enum>
  <enum name="NSCompositeXOR" swt_gen="true"></enum>
  <enum name="NSCompressedFontMask" swt_gen="true"></enum>
  <enum name="NSCondensedFontMask" swt_gen="true"></enum>
  <enum name="NSContentsCellMask" swt_gen="true"></enum>
  <enum name="NSContinuousCapacityLevelIndicatorStyle" swt_gen="true"></enum>
  <enum name="NSControlGlyph" swt_gen="true"></enum>
  <enum name="NSControlKeyMask" swt_gen="true"></enum>
  <enum name="NSCrayonModeColorPanel" swt_gen="true"></enum>
  <enum name="NSCriticalAlertStyle" swt_gen="true"></enum>
  <enum name="NSCriticalRequest" swt_gen="true"></enum>
  <enum name="NSCursorPointingDevice" swt_gen="true"></enum>
  <enum name="NSCursorUpdate" swt_gen="true"></enum>
  <enum name="NSCursorUpdateMask" swt_gen="true"></enum>
  <enum name="NSCurveToBezierPathElement" swt_gen="true"></enum>
  <enum name="NSCustomPaletteModeColorPanel" swt_gen="true"></enum>
  <enum name="NSDecimalTabStopType" swt_gen="true"></enum>
  <enum name="NSDefaultControlTint" swt_gen="true"></enum>
  <enum name="NSDefaultTokenStyle" swt_gen="true"></enum>
  <enum name="NSDeleteCharFunctionKey" swt_gen="true"></enum>
  <enum name="NSDeleteCharacter" swt_gen="true"></enum>
  <enum name="NSDeleteFunctionKey" swt_gen="true"></enum>
  <enum name="NSDeleteLineFunctionKey" swt_gen="true"></enum>
  <enum name="NSDescendingPageOrder" swt_gen="true"></enum>
  <enum name="NSDeviceIndependentModifierFlagsMask" swt_gen="true"></enum>
  <enum name="NSDeviceNColorSpaceModel" swt_gen="true"></enum>
  <enum name="NSDirectSelection" swt_gen="true"></enum>
  <enum name="NSDisclosureBezelStyle" swt_gen="true"></enum>
  <enum name="NSDiscreteCapacityLevelIndicatorStyle" swt_gen="true"></enum>
  <enum name="NSDisplayWindowRunLoopOrdering" swt_gen="true"></enum>
  <enum name="NSDocModalWindowMask" swt_gen="true"></enum>
  <enum name="NSDockWindowLevel" swt_gen="true"></enum>
  <enum name="NSDoubleType" swt_gen="true"></enum>
  <enum name="NSDownArrowFunctionKey" swt_gen="true"></enum>
  <enum name="NSDownTextMovement" swt_gen="true"></enum>
  <enum name="NSDragOperationAll" swt_gen="true"></enum>
  <enum name="NSDragOperationAll_Obsolete" swt_gen="true"></enum>
  <enum name="NSDragOperationCopy" swt_gen="true"></enum>
  <enum name="NSDragOperationDelete" swt_gen="true"></enum>
  <enum name="NSDragOperationEvery" swt_gen="true"></enum>
  <enum name="NSDragOperationGeneric" swt_gen="true"></enum>
  <enum name="NSDragOperationLink" swt_gen="true"></enum>
  <enum name="NSDragOperationMove" swt_gen="true"></enum>
  <enum name="NSDragOperationNone" swt_gen="true"></enum>
  <enum name="NSDragOperationPrivate" swt_gen="true"></enum>
  <enum name="NSDrawerClosedState" swt_gen="true"></enum>
  <enum name="NSDrawerClosingState" swt_gen="true"></enum>
  <enum name="NSDrawerOpenState" swt_gen="true"></enum>
  <enum name="NSDrawerOpeningState" swt_gen="true"></enum>
  <enum name="NSEndFunctionKey" swt_gen="true"></enum>
  <enum name="NSEnterCharacter" swt_gen="true"></enum>
  <enum name="NSEraDatePickerElementFlag" swt_gen="true"></enum>
  <enum name="NSEraserPointingDevice" swt_gen="true"></enum>
  <enum name="NSEvenOddWindingRule" swt_gen="true"></enum>
  <enum name="NSExclude10_4ElementsIconCreationOption" swt_gen="true"></enum>
  <enum name="NSExcludeQuickDrawElementsIconCreationOption" swt_gen="true"></enum>
  <enum name="NSExecuteFunctionKey" swt_gen="true"></enum>
  <enum name="NSExpandedFontMask" swt_gen="true"></enum>
  <enum name="NSF10FunctionKey" swt_gen="true"></enum>
  <enum name="NSF11FunctionKey" swt_gen="true"></enum>
  <enum name="NSF12FunctionKey" swt_gen="true"></enum>
  <enum name="NSF13FunctionKey" swt_gen="true"></enum>
  <enum name="NSF14FunctionKey" swt_gen="true"></enum>
  <enum name="NSF15FunctionKey" swt_gen="true"></enum>
  <enum name="NSF16FunctionKey" swt_gen="true"></enum>
  <enum name="NSF17FunctionKey" swt_gen="true"></enum>
  <enum name="NSF18FunctionKey" swt_gen="true"></enum>
  <enum name="NSF19FunctionKey" swt_gen="true"></enum>
  <enum name="NSF1FunctionKey" swt_gen="true"></enum>
  <enum name="NSF20FunctionKey" swt_gen="true"></enum>
  <enum name="NSF21FunctionKey" swt_gen="true"></enum>
  <enum name="NSF22FunctionKey" swt_gen="true"></enum>
  <enum name="NSF23FunctionKey" swt_gen="true"></enum>
  <enum name="NSF24FunctionKey" swt_gen="true"></enum>
  <enum name="NSF25FunctionKey" swt_gen="true"></enum>
  <enum name="NSF26FunctionKey" swt_gen="true"></enum>
  <enum name="NSF27FunctionKey" swt_gen="true"></enum>
  <enum name="NSF28FunctionKey" swt_gen="true"></enum>
  <enum name="NSF29FunctionKey" swt_gen="true"></enum>
  <enum name="NSF2FunctionKey" swt_gen="true"></enum>
  <enum name="NSF30FunctionKey" swt_gen="true"></enum>
  <enum name="NSF31FunctionKey" swt_gen="true"></enum>
  <enum name="NSF32FunctionKey" swt_gen="true"></enum>
  <enum name="NSF33FunctionKey" swt_gen="true"></enum>
  <enum name="NSF34FunctionKey" swt_gen="true"></enum>
  <enum name="NSF35FunctionKey" swt_gen="true"></enum>
  <enum name="NSF3FunctionKey" swt_gen="true"></enum>
  <enum name="NSF4FunctionKey" swt_gen="true"></enum>
  <enum name="NSF5FunctionKey" swt_gen="true"></enum>
  <enum name="NSF6FunctionKey" swt_gen="true"></enum>
  <enum name="NSF7FunctionKey" swt_gen="true"></enum>
  <enum name="NSF8FunctionKey" swt_gen="true"></enum>
  <enum name="NSF9FunctionKey" swt_gen="true"></enum>
  <enum name="NSFPCurrentField" swt_gen="true"></enum>
  <enum name="NSFPPreviewButton" swt_gen="true"></enum>
  <enum name="NSFPPreviewField" swt_gen="true"></enum>
  <enum name="NSFPRevertButton" swt_gen="true"></enum>
  <enum name="NSFPSetButton" swt_gen="true"></enum>
  <enum name="NSFPSizeField" swt_gen="true"></enum>
  <enum name="NSFPSizeTitle" swt_gen="true"></enum>
  <enum name="NSFileHandlingPanelCancelButton" swt_gen="true"></enum>
  <enum name="NSFileHandlingPanelOKButton" swt_gen="true"></enum>
  <enum name="NSFindFunctionKey" swt_gen="true"></enum>
  <enum name="NSFindPanelActionNext" swt_gen="true"></enum>
  <enum name="NSFindPanelActionPrevious" swt_gen="true"></enum>
  <enum name="NSFindPanelActionReplace" swt_gen="true"></enum>
  <enum name="NSFindPanelActionReplaceAll" swt_gen="true"></enum>
  <enum name="NSFindPanelActionReplaceAllInSelection" swt_gen="true"></enum>
  <enum name="NSFindPanelActionReplaceAndFind" swt_gen="true"></enum>
  <enum name="NSFindPanelActionSelectAll" swt_gen="true"></enum>
  <enum name="NSFindPanelActionSelectAllInSelection" swt_gen="true"></enum>
  <enum name="NSFindPanelActionSetFindString" swt_gen="true"></enum>
  <enum name="NSFindPanelActionShowFindPanel" swt_gen="true"></enum>
  <enum name="NSFindPanelSubstringMatchTypeContains" swt_gen="true"></enum>
  <enum name="NSFindPanelSubstringMatchTypeEndsWith" swt_gen="true"></enum>
  <enum name="NSFindPanelSubstringMatchTypeFullWord" swt_gen="true"></enum>
  <enum name="NSFindPanelSubstringMatchTypeStartsWith" swt_gen="true"></enum>
  <enum name="NSFitPagination" swt_gen="true"></enum>
  <enum name="NSFixedPitchFontMask" swt_gen="true"></enum>
  <enum name="NSFlagsChanged" swt_gen="true"></enum>
  <enum name="NSFlagsChangedMask" swt_gen="true"></enum>
  <enum name="NSFloatType" swt_gen="true"></enum>
  <enum name="NSFloatingPointSamplesBitmapFormat" swt_gen="true"></enum>
  <enum name="NSFloatingWindowLevel" swt_gen="true"></enum>
  <enum name="NSFocusRingAbove" swt_gen="true"></enum>
  <enum name="NSFocusRingBelow" swt_gen="true"></enum>
  <enum name="NSFocusRingOnly" swt_gen="true"></enum>
  <enum name="NSFocusRingTypeDefault" swt_gen="true"></enum>
  <enum name="NSFocusRingTypeExterior" swt_gen="true"></enum>
  <enum name="NSFocusRingTypeNone" swt_gen="true"></enum>
  <enum name="NSFontAntialiasedIntegerAdvancementsRenderingMode" swt_gen="true"></enum>
  <enum name="NSFontAntialiasedRenderingMode" swt_gen="true"></enum>
  <enum name="NSFontBoldTrait" swt_gen="true"></enum>
  <enum name="NSFontClarendonSerifsClass" swt_gen="true"></enum>
  <enum name="NSFontCollectionApplicationOnlyMask" swt_gen="true"></enum>
  <enum name="NSFontCondensedTrait" swt_gen="true"></enum>
  <enum name="NSFontDefaultRenderingMode" swt_gen="true"></enum>
  <enum name="NSFontExpandedTrait" swt_gen="true"></enum>
  <enum name="NSFontFamilyClassMask" swt_gen="true"></enum>
  <enum name="NSFontFreeformSerifsClass" swt_gen="true"></enum>
  <enum name="NSFontIntegerAdvancementsRenderingMode" swt_gen="true"></enum>
  <enum name="NSFontItalicTrait" swt_gen="true"></enum>
  <enum name="NSFontModernSerifsClass" swt_gen="true"></enum>
  <enum name="NSFontMonoSpaceTrait" swt_gen="true"></enum>
  <enum name="NSFontOldStyleSerifsClass" swt_gen="true"></enum>
  <enum name="NSFontOrnamentalsClass" swt_gen="true"></enum>
  <enum name="NSFontPanelAllEffectsModeMask" swt_gen="true"></enum>
  <enum name="NSFontPanelAllModesMask" swt_gen="true"></enum>
  <enum name="NSFontPanelCollectionModeMask" swt_gen="true"></enum>
  <enum name="NSFontPanelDocumentColorEffectModeMask" swt_gen="true"></enum>
  <enum name="NSFontPanelFaceModeMask" swt_gen="true"></enum>
  <enum name="NSFontPanelShadowEffectModeMask" swt_gen="true"></enum>
  <enum name="NSFontPanelSizeModeMask" swt_gen="true"></enum>
  <enum name="NSFontPanelStandardModesMask" swt_gen="true"></enum>
  <enum name="NSFontPanelStrikethroughEffectModeMask" swt_gen="true"></enum>
  <enum name="NSFontPanelTextColorEffectModeMask" swt_gen="true"></enum>
  <enum name="NSFontPanelUnderlineEffectModeMask" swt_gen="true"></enum>
  <enum name="NSFontSansSerifClass" swt_gen="true"></enum>
  <enum name="NSFontScriptsClass" swt_gen="true"></enum>
  <enum name="NSFontSlabSerifsClass" swt_gen="true"></enum>
  <enum name="NSFontSymbolicClass" swt_gen="true"></enum>
  <enum name="NSFontTransitionalSerifsClass" swt_gen="true"></enum>
  <enum name="NSFontUIOptimizedTrait" swt_gen="true"></enum>
  <enum name="NSFontUnknownClass" swt_gen="true"></enum>
  <enum name="NSFontVerticalTrait" swt_gen="true"></enum>
  <enum name="NSFormFeedCharacter" swt_gen="true"></enum>
  <enum name="NSFunctionKeyMask" swt_gen="true"></enum>
  <enum name="NSGIFFileType" swt_gen="true"></enum>
  <enum name="NSGlyphAttributeBidiLevel" swt_gen="true"></enum>
  <enum name="NSGlyphAttributeElastic" swt_gen="true"></enum>
  <enum name="NSGlyphAttributeInscribe" swt_gen="true"></enum>
  <enum name="NSGlyphAttributeSoft" swt_gen="true"></enum>
  <enum name="NSGlyphInscribeAbove" swt_gen="true"></enum>
  <enum name="NSGlyphInscribeBase" swt_gen="true"></enum>
  <enum name="NSGlyphInscribeBelow" swt_gen="true"></enum>
  <enum name="NSGlyphInscribeOverBelow" swt_gen="true"></enum>
  <enum name="NSGlyphInscribeOverstrike" swt_gen="true"></enum>
  <enum name="NSGradientConcaveStrong" swt_gen="true"></enum>
  <enum name="NSGradientConcaveWeak" swt_gen="true"></enum>
  <enum name="NSGradientConvexStrong" swt_gen="true"></enum>
  <enum name="NSGradientConvexWeak" swt_gen="true"></enum>
  <enum name="NSGradientDrawsAfterEndingLocation" swt_gen="true"></enum>
  <enum name="NSGradientDrawsBeforeStartingLocation" swt_gen="true"></enum>
  <enum name="NSGradientNone" swt_gen="true"></enum>
  <enum name="NSGraphiteControlTint" swt_gen="true"></enum>
  <enum name="NSGrayColorSpaceModel" swt_gen="true"></enum>
  <enum name="NSGrayModeColorPanel" swt_gen="true"></enum>
  <enum name="NSGrooveBorder" swt_gen="true"></enum>
  <enum name="NSHSBModeColorPanel" swt_gen="true"></enum>
  <enum name="NSHUDWindowMask" swt_gen="true"></enum>
  <enum name="NSHeavierFontAction" swt_gen="true"></enum>
  <enum name="NSHelpButtonBezelStyle" swt_gen="true"></enum>
  <enum name="NSHelpFunctionKey" swt_gen="true"></enum>
  <enum name="NSHelpKeyMask" swt_gen="true"></enum>
  <enum name="NSHighlightModeMatrix" swt_gen="true"></enum>
  <enum name="NSHomeFunctionKey" swt_gen="true"></enum>
  <enum name="NSHorizontalRuler" swt_gen="true"></enum>
  <enum name="NSHourMinuteDatePickerElementFlag" swt_gen="true"></enum>
  <enum name="NSHourMinuteSecondDatePickerElementFlag" swt_gen="true"></enum>
  <enum name="NSIdentityMappingCharacterCollection" swt_gen="true"></enum>
  <enum name="NSIllegalTextMovement" swt_gen="true"></enum>
  <enum name="NSImageAbove" swt_gen="true"></enum>
  <enum name="NSImageAlignBottom" swt_gen="true"></enum>
  <enum name="NSImageAlignBottomLeft" swt_gen="true"></enum>
  <enum name="NSImageAlignBottomRight" swt_gen="true"></enum>
  <enum name="NSImageAlignCenter" swt_gen="true"></enum>
  <enum name="NSImageAlignLeft" swt_gen="true"></enum>
  <enum name="NSImageAlignRight" swt_gen="true"></enum>
  <enum name="NSImageAlignTop" swt_gen="true"></enum>
  <enum name="NSImageAlignTopLeft" swt_gen="true"></enum>
  <enum name="NSImageAlignTopRight" swt_gen="true"></enum>
  <enum name="NSImageBelow" swt_gen="true"></enum>
  <enum name="NSImageCacheAlways" swt_gen="true"></enum>
  <enum name="NSImageCacheBySize" swt_gen="true"></enum>
  <enum name="NSImageCacheDefault" swt_gen="true"></enum>
  <enum name="NSImageCacheNever" swt_gen="true"></enum>
  <enum name="NSImageCellType" swt_gen="true"></enum>
  <enum name="NSImageFrameButton" swt_gen="true"></enum>
  <enum name="NSImageFrameGrayBezel" swt_gen="true"></enum>
  <enum name="NSImageFrameGroove" swt_gen="true"></enum>
  <enum name="NSImageFrameNone" swt_gen="true"></enum>
  <enum name="NSImageFramePhoto" swt_gen="true"></enum>
  <enum name="NSImageInterpolationDefault" swt_gen="true"></enum>
  <enum name="NSImageInterpolationHigh" swt_gen="true"></enum>
  <enum name="NSImageInterpolationLow" swt_gen="true"></enum>
  <enum name="NSImageInterpolationNone" swt_gen="true"></enum>
  <enum name="NSImageLeft" swt_gen="true"></enum>
  <enum name="NSImageLoadStatusCancelled" swt_gen="true"></enum>
  <enum name="NSImageLoadStatusCompleted" swt_gen="true"></enum>
  <enum name="NSImageLoadStatusInvalidData" swt_gen="true"></enum>
  <enum name="NSImageLoadStatusReadError" swt_gen="true"></enum>
  <enum name="NSImageLoadStatusUnexpectedEOF" swt_gen="true"></enum>
  <enum name="NSImageOnly" swt_gen="true"></enum>
  <enum name="NSImageOverlaps" swt_gen="true"></enum>
  <enum name="NSImageRepLoadStatusCompleted" swt_gen="true"></enum>
  <enum name="NSImageRepLoadStatusInvalidData" swt_gen="true"></enum>
  <enum name="NSImageRepLoadStatusReadingHeader" swt_gen="true"></enum>
  <enum name="NSImageRepLoadStatusUnexpectedEOF" swt_gen="true"></enum>
  <enum name="NSImageRepLoadStatusUnknownType" swt_gen="true"></enum>
  <enum name="NSImageRepLoadStatusWillNeedAllData" swt_gen="true"></enum>
  <enum name="NSImageRepMatchesDevice" swt_gen="true"></enum>
  <enum name="NSImageRight" swt_gen="true"></enum>
  <enum name="NSImageScaleAxesIndependently" swt_gen="true"></enum>
  <enum name="NSImageScaleNone" swt_gen="true"></enum>
  <enum name="NSImageScaleProportionallyDown" swt_gen="true"></enum>
  <enum name="NSImageScaleProportionallyUpOrDown" swt_gen="true"></enum>
  <enum name="NSIndexedColorSpaceModel" swt_gen="true"></enum>
  <enum name="NSInformationalAlertStyle" swt_gen="true"></enum>
  <enum name="NSInformationalRequest" swt_gen="true"></enum>
  <enum name="NSInsertCharFunctionKey" swt_gen="true"></enum>
  <enum name="NSInsertFunctionKey" swt_gen="true"></enum>
  <enum name="NSInsertLineFunctionKey" swt_gen="true"></enum>
  <enum name="NSIntType" swt_gen="true"></enum>
  <enum name="NSItalicFontMask" swt_gen="true"></enum>
  <enum name="NSJPEG2000FileType" swt_gen="true"></enum>
  <enum name="NSJPEGFileType" swt_gen="true"></enum>
  <enum name="NSJustifiedTextAlignment" swt_gen="true"></enum>
  <enum name="NSKeyDown" swt_gen="true"></enum>
  <enum name="NSKeyDownMask" swt_gen="true"></enum>
  <enum name="NSKeyUp" swt_gen="true"></enum>
  <enum name="NSKeyUpMask" swt_gen="true"></enum>
  <enum name="NSLABColorSpaceModel" swt_gen="true"></enum>
  <enum name="NSLandscapeOrientation" swt_gen="true"></enum>
  <enum name="NSLeftArrowFunctionKey" swt_gen="true"></enum>
  <enum name="NSLeftMouseDown" swt_gen="true"></enum>
  <enum name="NSLeftMouseDownMask" swt_gen="true"></enum>
  <enum name="NSLeftMouseDragged" swt_gen="true"></enum>
  <enum name="NSLeftMouseDraggedMask" swt_gen="true"></enum>
  <enum name="NSLeftMouseUp" swt_gen="true"></enum>
  <enum name="NSLeftMouseUpMask" swt_gen="true"></enum>
  <enum name="NSLeftTabStopType" swt_gen="true"></enum>
  <enum name="NSLeftTabsBezelBorder" swt_gen="true"></enum>
  <enum name="NSLeftTextAlignment" swt_gen="true"></enum>
  <enum name="NSLeftTextMovement" swt_gen="true"></enum>
  <enum name="NSLighterFontAction" swt_gen="true"></enum>
  <enum name="NSLineBorder" swt_gen="true"></enum>
  <enum name="NSLineBreakByCharWrapping" swt_gen="true"></enum>
  <enum name="NSLineBreakByClipping" swt_gen="true"></enum>
  <enum name="NSLineBreakByTruncatingHead" swt_gen="true"></enum>
  <enum name="NSLineBreakByTruncatingMiddle" swt_gen="true"></enum>
  <enum name="NSLineBreakByTruncatingTail" swt_gen="true"></enum>
  <enum name="NSLineBreakByWordWrapping" swt_gen="true"></enum>
  <enum name="NSLineDoesntMove" swt_gen="true"></enum>
  <enum name="NSLineMovesDown" swt_gen="true"></enum>
  <enum name="NSLineMovesLeft" swt_gen="true"></enum>
  <enum name="NSLineMovesRight" swt_gen="true"></enum>
  <enum name="NSLineMovesUp" swt_gen="true"></enum>
  <enum name="NSLineSeparatorCharacter" swt_gen="true"></enum>
  <enum name="NSLineSweepDown" swt_gen="true"></enum>
  <enum name="NSLineSweepLeft" swt_gen="true"></enum>
  <enum name="NSLineSweepRight" swt_gen="true"></enum>
  <enum name="NSLineSweepUp" swt_gen="true"></enum>
  <enum name="NSLineToBezierPathElement" swt_gen="true"></enum>
  <enum name="NSLinearSlider" swt_gen="true"></enum>
  <enum name="NSListModeMatrix" swt_gen="true"></enum>
  <enum name="NSMacintoshInterfaceStyle" swt_gen="true"></enum>
  <enum name="NSMainMenuWindowLevel" swt_gen="true"></enum>
  <enum name="NSMenuFunctionKey" swt_gen="true"></enum>
  <enum name="NSMiniControlSize" swt_gen="true"></enum>
  <enum name="NSMiniaturizableWindowMask" swt_gen="true"></enum>
  <enum name="NSMiterLineJoinStyle" swt_gen="true"></enum>
  <enum name="NSMixedState" swt_gen="true"></enum>
  <enum name="NSModalPanelWindowLevel" swt_gen="true"></enum>
  <enum name="NSModeSwitchFunctionKey" swt_gen="true"></enum>
  <enum name="NSMomentaryChangeButton" swt_gen="true"></enum>
  <enum name="NSMomentaryLight" swt_gen="true"></enum>
  <enum name="NSMomentaryLightButton" swt_gen="true"></enum>
  <enum name="NSMomentaryPushButton" swt_gen="true"></enum>
  <enum name="NSMomentaryPushInButton" swt_gen="true"></enum>
  <enum name="NSMouseEntered" swt_gen="true"></enum>
  <enum name="NSMouseEnteredMask" swt_gen="true"></enum>
  <enum name="NSMouseEventSubtype" swt_gen="true"></enum>
  <enum name="NSMouseExited" swt_gen="true"></enum>
  <enum name="NSMouseExitedMask" swt_gen="true"></enum>
  <enum name="NSMouseMoved" swt_gen="true"></enum>
  <enum name="NSMouseMovedMask" swt_gen="true"></enum>
  <enum name="NSMoveToBezierPathElement" swt_gen="true"></enum>
  <enum name="NSNarrowFontMask" swt_gen="true"></enum>
  <enum name="NSNativeShortGlyphPacking" swt_gen="true"></enum>
  <enum name="NSNaturalTextAlignment" swt_gen="true"></enum>
  <enum name="NSNewlineCharacter" swt_gen="true"></enum>
  <enum name="NSNextFunctionKey" swt_gen="true"></enum>
  <enum name="NSNextStepInterfaceStyle" swt_gen="true"></enum>
  <enum name="NSNoBorder" swt_gen="true"></enum>
  <enum name="NSNoCellMask" swt_gen="true"></enum>
  <enum name="NSNoFontChangeAction" swt_gen="true"></enum>
  <enum name="NSNoImage" swt_gen="true"></enum>
  <enum name="NSNoInterfaceStyle" swt_gen="true"></enum>
  <enum name="NSNoModeColorPanel" swt_gen="true"></enum>
  <enum name="NSNoScrollerParts" swt_gen="true"></enum>
  <enum name="NSNoTabsBezelBorder" swt_gen="true"></enum>
  <enum name="NSNoTabsLineBorder" swt_gen="true"></enum>
  <enum name="NSNoTabsNoBorder" swt_gen="true"></enum>
  <enum name="NSNoTitle" swt_gen="true"></enum>
  <enum name="NSNoUnderlineStyle" swt_gen="true"></enum>
  <enum name="NSNonStandardCharacterSetFontMask" swt_gen="true"></enum>
  <enum name="NSNonZeroWindingRule" swt_gen="true"></enum>
  <enum name="NSNonactivatingPanelMask" swt_gen="true"></enum>
  <enum name="NSNormalWindowLevel" swt_gen="true"></enum>
  <enum name="NSNullCellType" swt_gen="true"></enum>
  <enum name="NSNullGlyph" swt_gen="true"></enum>
  <enum name="NSNumericPadKeyMask" swt_gen="true"></enum>
  <enum name="NSOKButton" swt_gen="true"></enum>
  <enum name="NSOPENGL_CURRENT_VERSION" swt_gen="true"></enum>
  <enum name="NSOffState" swt_gen="true"></enum>
  <enum name="NSOnOffButton" swt_gen="true"></enum>
  <enum name="NSOnState" swt_gen="true"></enum>
  <enum name="NSOnlyScrollerArrows" swt_gen="true"></enum>
  <enum name="NSOpenGLCPRasterizationEnable" swt_gen="true"></enum>
  <enum name="NSOpenGLCPStateValidation" swt_gen="true"></enum>
  <enum name="NSOpenGLCPSurfaceOpacity" swt_gen="true"></enum>
  <enum name="NSOpenGLCPSurfaceOrder" swt_gen="true"></enum>
  <enum name="NSOpenGLCPSwapInterval" swt_gen="true"></enum>
  <enum name="NSOpenGLCPSwapRectangle" swt_gen="true"></enum>
  <enum name="NSOpenGLCPSwapRectangleEnable" swt_gen="true"></enum>
  <enum name="NSOpenGLGOClearFormatCache" swt_gen="true"></enum>
  <enum name="NSOpenGLGOFormatCacheSize" swt_gen="true"></enum>
  <enum name="NSOpenGLGOResetLibrary" swt_gen="true"></enum>
  <enum name="NSOpenGLGORetainRenderers" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAAccelerated" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAAccumSize" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAAllRenderers" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAAllowOfflineRenderers" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAAlphaSize" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAAuxBuffers" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAAuxDepthStencil" swt_gen="true"></enum>
  <enum name="NSOpenGLPFABackingStore" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAClosestPolicy" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAColorFloat" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAColorSize" swt_gen="true"></enum>
  <enum name="NSOpenGLPFACompliant" swt_gen="true"></enum>
  <enum name="NSOpenGLPFADepthSize" swt_gen="true"></enum>
  <enum name="NSOpenGLPFADoubleBuffer" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAFullScreen" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAMPSafe" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAMaximumPolicy" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAMinimumPolicy" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAMultiScreen" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAMultisample" swt_gen="true"></enum>
  <enum name="NSOpenGLPFANoRecovery" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAOffScreen" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAPixelBuffer" swt_gen="true"></enum>
  <enum name="NSOpenGLPFARendererID" swt_gen="true"></enum>
  <enum name="NSOpenGLPFARobust" swt_gen="true"></enum>
  <enum name="NSOpenGLPFASampleAlpha" swt_gen="true"></enum>
  <enum name="NSOpenGLPFASampleBuffers" swt_gen="true"></enum>
  <enum name="NSOpenGLPFASamples" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAScreenMask" swt_gen="true"></enum>
  <enum name="NSOpenGLPFASingleRenderer" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAStencilSize" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAStereo" swt_gen="true"></enum>
  <enum name="NSOpenGLPFASupersample" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAVirtualScreenCount" swt_gen="true"></enum>
  <enum name="NSOpenGLPFAWindow" swt_gen="true"></enum>
  <enum name="NSOtherMouseDown" swt_gen="true"></enum>
  <enum name="NSOtherMouseDownMask" swt_gen="true"></enum>
  <enum name="NSOtherMouseDragged" swt_gen="true"></enum>
  <enum name="NSOtherMouseDraggedMask" swt_gen="true"></enum>
  <enum name="NSOtherMouseUp" swt_gen="true"></enum>
  <enum name="NSOtherMouseUpMask" swt_gen="true"></enum>
  <enum name="NSOtherTextMovement" swt_gen="true"></enum>
  <enum name="NSOutlineViewDropOnItemIndex" swt_gen="true"></enum>
  <enum name="NSPNGFileType" swt_gen="true"></enum>
  <enum name="NSPageDownFunctionKey" swt_gen="true"></enum>
  <enum name="NSPageUpFunctionKey" swt_gen="true"></enum>
  <enum name="NSParagraphSeparatorCharacter" swt_gen="true"></enum>
  <enum name="NSPathStyleNavigationBar" swt_gen="true"></enum>
  <enum name="NSPathStylePopUp" swt_gen="true"></enum>
  <enum name="NSPathStyleStandard" swt_gen="true"></enum>
  <enum name="NSPatternColorSpaceModel" swt_gen="true"></enum>
  <enum name="NSPauseFunctionKey" swt_gen="true"></enum>
  <enum name="NSPenLowerSideMask" swt_gen="true"></enum>
  <enum name="NSPenPointingDevice" swt_gen="true"></enum>
  <enum name="NSPenTipMask" swt_gen="true"></enum>
  <enum name="NSPenUpperSideMask" swt_gen="true"></enum>
  <enum name="NSPeriodic" swt_gen="true"></enum>
  <enum name="NSPeriodicMask" swt_gen="true"></enum>
  <enum name="NSPlainTextTokenStyle" swt_gen="true"></enum>
  <enum name="NSPopUpArrowAtBottom" swt_gen="true"></enum>
  <enum name="NSPopUpArrowAtCenter" swt_gen="true"></enum>
  <enum name="NSPopUpMenuWindowLevel" swt_gen="true"></enum>
  <enum name="NSPopUpNoArrow" swt_gen="true"></enum>
  <enum name="NSPortraitOrientation" swt_gen="true"></enum>
  <enum name="NSPositiveDoubleType" swt_gen="true"></enum>
  <enum name="NSPositiveFloatType" swt_gen="true"></enum>
  <enum name="NSPositiveIntType" swt_gen="true"></enum>
  <enum name="NSPosterFontMask" swt_gen="true"></enum>
  <enum name="NSPowerOffEventType" swt_gen="true"></enum>
  <enum name="NSPressedTab" swt_gen="true"></enum>
  <enum name="NSPrevFunctionKey" swt_gen="true"></enum>
  <enum name="NSPrintFunctionKey" swt_gen="true"></enum>
  <enum name="NSPrintPanelShowsCopies" swt_gen="true"></enum>
  <enum name="NSPrintPanelShowsOrientation" swt_gen="true"></enum>
  <enum name="NSPrintPanelShowsPageRange" swt_gen="true"></enum>
  <enum name="NSPrintPanelShowsPageSetupAccessory" swt_gen="true"></enum>
  <enum name="NSPrintPanelShowsPaperSize" swt_gen="true"></enum>
  <enum name="NSPrintPanelShowsPreview" swt_gen="true"></enum>
  <enum name="NSPrintPanelShowsScaling" swt_gen="true"></enum>
  <enum name="NSPrintScreenFunctionKey" swt_gen="true"></enum>
  <enum name="NSPrinterTableError" swt_gen="true"></enum>
  <enum name="NSPrinterTableNotFound" swt_gen="true"></enum>
  <enum name="NSPrinterTableOK" swt_gen="true"></enum>
  <enum name="NSPrintingCancelled" swt_gen="true"></enum>
  <enum name="NSPrintingFailure" swt_gen="true"></enum>
  <enum name="NSPrintingReplyLater" swt_gen="true"></enum>
  <enum name="NSPrintingSuccess" swt_gen="true"></enum>
  <enum name="NSProgressIndicatorBarStyle" swt_gen="true"></enum>
  <enum name="NSProgressIndicatorPreferredAquaThickness" swt_gen="true"></enum>
  <enum name="NSProgressIndicatorPreferredLargeThickness" swt_gen="true"></enum>
  <enum name="NSProgressIndicatorPreferredSmallThickness" swt_gen="true"></enum>
  <enum name="NSProgressIndicatorPreferredThickness" swt_gen="true"></enum>
  <enum name="NSProgressIndicatorSpinningStyle" swt_gen="true"></enum>
  <enum name="NSPushInCell" swt_gen="true"></enum>
  <enum name="NSPushInCellMask" swt_gen="true"></enum>
  <enum name="NSPushOnPushOffButton" swt_gen="true"></enum>
  <enum name="NSQTMovieLoopingBackAndForthPlayback" swt_gen="true"></enum>
  <enum name="NSQTMovieLoopingPlayback" swt_gen="true"></enum>
  <enum name="NSQTMovieNormalPlayback" swt_gen="true"></enum>
  <enum name="NSRGBColorSpaceModel" swt_gen="true"></enum>
  <enum name="NSRGBModeColorPanel" swt_gen="true"></enum>
  <enum name="NSRadioButton" swt_gen="true"></enum>
  <enum name="NSRadioModeMatrix" swt_gen="true"></enum>
  <enum name="NSRangeDateMode" swt_gen="true"></enum>
  <enum name="NSRatingLevelIndicatorStyle" swt_gen="true"></enum>
  <enum name="NSRecessedBezelStyle" swt_gen="true"></enum>
  <enum name="NSRedoFunctionKey" swt_gen="true"></enum>
  <enum name="NSRegularControlSize" swt_gen="true"></enum>
  <enum name="NSRegularSquareBezelStyle" swt_gen="true"></enum>
  <enum name="NSRelevancyLevelIndicatorStyle" swt_gen="true"></enum>
  <enum name="NSRemoveTraitFontAction" swt_gen="true"></enum>
  <enum name="NSResetCursorRectsRunLoopOrdering" swt_gen="true"></enum>
  <enum name="NSResetFunctionKey" swt_gen="true"></enum>
  <enum name="NSResizableWindowMask" swt_gen="true"></enum>
  <enum name="NSReturnTextMovement" swt_gen="true"></enum>
  <enum name="NSRightArrowFunctionKey" swt_gen="true"></enum>
  <enum name="NSRightMouseDown" swt_gen="true"></enum>
  <enum name="NSRightMouseDownMask" swt_gen="true"></enum>
  <enum name="NSRightMouseDragged" swt_gen="true"></enum>
  <enum name="NSRightMouseDraggedMask" swt_gen="true"></enum>
  <enum name="NSRightMouseUp" swt_gen="true"></enum>
  <enum name="NSRightMouseUpMask" swt_gen="true"></enum>
  <enum name="NSRightTabStopType" swt_gen="true"></enum>
  <enum name="NSRightTabsBezelBorder" swt_gen="true"></enum>
  <enum name="NSRightTextAlignment" swt_gen="true"></enum>
  <enum name="NSRightTextMovement" swt_gen="true"></enum>
  <enum name="NSRoundLineCapStyle" swt_gen="true"></enum>
  <enum name="NSRoundLineJoinStyle" swt_gen="true"></enum>
  <enum name="NSRoundRectBezelStyle" swt_gen="true"></enum>
  <enum name="NSRoundedBezelStyle" swt_gen="true"></enum>
  <enum name="NSRoundedDisclosureBezelStyle" swt_gen="true"></enum>
  <enum name="NSRoundedTokenStyle" swt_gen="true"></enum>
  <enum name="NSRuleEditorNestingModeCompound" swt_gen="true"></enum>
  <enum name="NSRuleEditorNestingModeList" swt_gen="true"></enum>
  <enum name="NSRuleEditorNestingModeSimple" swt_gen="true"></enum>
  <enum name="NSRuleEditorNestingModeSingle" swt_gen="true"></enum>
  <enum name="NSRuleEditorRowTypeCompound" swt_gen="true"></enum>
  <enum name="NSRuleEditorRowTypeSimple" swt_gen="true"></enum>
  <enum name="NSRunAbortedResponse" swt_gen="true"></enum>
  <enum name="NSRunContinuesResponse" swt_gen="true"></enum>
  <enum name="NSRunStoppedResponse" swt_gen="true"></enum>
  <enum name="NSSaveAsOperation" swt_gen="true"></enum>
  <enum name="NSSaveOperation" swt_gen="true"></enum>
  <enum name="NSSaveToOperation" swt_gen="true"></enum>
  <enum name="NSScaleNone" swt_gen="true"></enum>
  <enum name="NSScaleProportionally" swt_gen="true"></enum>
  <enum name="NSScaleToFit" swt_gen="true"></enum>
  <enum name="NSScreenChangedEventType" swt_gen="true"></enum>
  <enum name="NSScreenSaverWindowLevel" swt_gen="true"></enum>
  <enum name="NSScrollLockFunctionKey" swt_gen="true"></enum>
  <enum name="NSScrollWheel" swt_gen="true"></enum>
  <enum name="NSScrollWheelMask" swt_gen="true"></enum>
  <enum name="NSScrollerArrowsDefaultSetting" swt_gen="true"></enum>
  <enum name="NSScrollerArrowsMaxEnd" swt_gen="true"></enum>
  <enum name="NSScrollerArrowsMinEnd" swt_gen="true"></enum>
  <enum name="NSScrollerArrowsNone" swt_gen="true"></enum>
  <enum name="NSScrollerDecrementArrow" swt_gen="true"></enum>
  <enum name="NSScrollerDecrementLine" swt_gen="true"></enum>
  <enum name="NSScrollerDecrementPage" swt_gen="true"></enum>
  <enum name="NSScrollerIncrementArrow" swt_gen="true"></enum>
  <enum name="NSScrollerIncrementLine" swt_gen="true"></enum>
  <enum name="NSScrollerIncrementPage" swt_gen="true"></enum>
  <enum name="NSScrollerKnob" swt_gen="true"></enum>
  <enum name="NSScrollerKnobSlot" swt_gen="true"></enum>
  <enum name="NSScrollerNoPart" swt_gen="true"></enum>
  <enum name="NSSearchFieldClearRecentsMenuItemTag" swt_gen="true"></enum>
  <enum name="NSSearchFieldNoRecentsMenuItemTag" swt_gen="true"></enum>
  <enum name="NSSearchFieldRecentsMenuItemTag" swt_gen="true"></enum>
  <enum name="NSSearchFieldRecentsTitleMenuItemTag" swt_gen="true"></enum>
  <enum name="NSSegmentStyleAutomatic" swt_gen="true"></enum>
  <enum name="NSSegmentStyleCapsule" swt_gen="true"></enum>
  <enum name="NSSegmentStyleRoundRect" swt_gen="true"></enum>
  <enum name="NSSegmentStyleRounded" swt_gen="true"></enum>
  <enum name="NSSegmentStyleSmallSquare" swt_gen="true"></enum>
  <enum name="NSSegmentStyleTexturedRounded" swt_gen="true"></enum>
  <enum name="NSSegmentStyleTexturedSquare" swt_gen="true"></enum>
  <enum name="NSSegmentSwitchTrackingMomentary" swt_gen="true"></enum>
  <enum name="NSSegmentSwitchTrackingSelectAny" swt_gen="true"></enum>
  <enum name="NSSegmentSwitchTrackingSelectOne" swt_gen="true"></enum>
  <enum name="NSSelectByCharacter" swt_gen="true"></enum>
  <enum name="NSSelectByParagraph" swt_gen="true"></enum>
  <enum name="NSSelectByWord" swt_gen="true"></enum>
  <enum name="NSSelectFunctionKey" swt_gen="true"></enum>
  <enum name="NSSelectedTab" swt_gen="true"></enum>
  <enum name="NSSelectingNext" swt_gen="true"></enum>
  <enum name="NSSelectingPrevious" swt_gen="true"></enum>
  <enum name="NSSelectionAffinityDownstream" swt_gen="true"></enum>
  <enum name="NSSelectionAffinityUpstream" swt_gen="true"></enum>
  <enum name="NSServiceApplicationLaunchFailedError" swt_gen="true"></enum>
  <enum name="NSServiceApplicationNotFoundError" swt_gen="true"></enum>
  <enum name="NSServiceErrorMaximum" swt_gen="true"></enum>
  <enum name="NSServiceErrorMinimum" swt_gen="true"></enum>
  <enum name="NSServiceInvalidPasteboardDataError" swt_gen="true"></enum>
  <enum name="NSServiceMalformedServiceDictionaryError" swt_gen="true"></enum>
  <enum name="NSServiceMiscellaneousError" swt_gen="true"></enum>
  <enum name="NSServiceRequestTimedOutError" swt_gen="true"></enum>
  <enum name="NSShadowlessSquareBezelStyle" swt_gen="true"></enum>
  <enum name="NSShiftKeyMask" swt_gen="true"></enum>
  <enum name="NSShowControlGlyphs" swt_gen="true"></enum>
  <enum name="NSShowInvisibleGlyphs" swt_gen="true"></enum>
  <enum name="NSSingleDateMode" swt_gen="true"></enum>
  <enum name="NSSingleUnderlineStyle" swt_gen="true"></enum>
  <enum name="NSSizeDownFontAction" swt_gen="true"></enum>
  <enum name="NSSizeUpFontAction" swt_gen="true"></enum>
  <enum name="NSSmallCapsFontMask" swt_gen="true"></enum>
  <enum name="NSSmallControlSize" swt_gen="true"></enum>
  <enum name="NSSmallIconButtonBezelStyle" swt_gen="true"></enum>
  <enum name="NSSmallSquareBezelStyle" swt_gen="true"></enum>
  <enum name="NSSpecialPageOrder" swt_gen="true"></enum>
  <enum name="NSSpeechImmediateBoundary" swt_gen="true"></enum>
  <enum name="NSSpeechSentenceBoundary" swt_gen="true"></enum>
  <enum name="NSSpeechWordBoundary" swt_gen="true"></enum>
  <enum name="NSSpellingStateGrammarFlag" swt_gen="true"></enum>
  <enum name="NSSpellingStateSpellingFlag" swt_gen="true"></enum>
  <enum name="NSSplitViewDividerStyleThick" swt_gen="true"></enum>
  <enum name="NSSplitViewDividerStyleThin" swt_gen="true"></enum>
  <enum name="NSSquareLineCapStyle" swt_gen="true"></enum>
  <enum name="NSSquareStatusItemLength" swt_gen="true"></enum>
  <enum name="NSStatusWindowLevel" swt_gen="true"></enum>
  <enum name="NSStopFunctionKey" swt_gen="true"></enum>
  <enum name="NSStringDrawingDisableScreenFontSubstitution" swt_gen="true"></enum>
  <enum name="NSStringDrawingOneShot" swt_gen="true"></enum>
  <enum name="NSStringDrawingTruncatesLastVisibleLine" swt_gen="true"></enum>
  <enum name="NSStringDrawingUsesDeviceMetrics" swt_gen="true"></enum>
  <enum name="NSStringDrawingUsesFontLeading" swt_gen="true"></enum>
  <enum name="NSStringDrawingUsesLineFragmentOrigin" swt_gen="true"></enum>
  <enum name="NSSubmenuWindowLevel" swt_gen="true"></enum>
  <enum name="NSSwitchButton" swt_gen="true"></enum>
  <enum name="NSSysReqFunctionKey" swt_gen="true"></enum>
  <enum name="NSSystemDefined" swt_gen="true"></enum>
  <enum name="NSSystemDefinedMask" swt_gen="true"></enum>
  <enum name="NSSystemFunctionKey" swt_gen="true"></enum>
  <enum name="NSTIFFCompressionCCITTFAX3" swt_gen="true"></enum>
  <enum name="NSTIFFCompressionCCITTFAX4" swt_gen="true"></enum>
  <enum name="NSTIFFCompressionJPEG" swt_gen="true"></enum>
  <enum name="NSTIFFCompressionLZW" swt_gen="true"></enum>
  <enum name="NSTIFFCompressionNEXT" swt_gen="true"></enum>
  <enum name="NSTIFFCompressionNone" swt_gen="true"></enum>
  <enum name="NSTIFFCompressionOldJPEG" swt_gen="true"></enum>
  <enum name="NSTIFFCompressionPackBits" swt_gen="true"></enum>
  <enum name="NSTIFFFileType" swt_gen="true"></enum>
  <enum name="NSTabCharacter" swt_gen="true"></enum>
  <enum name="NSTabTextMovement" swt_gen="true"></enum>
  <enum name="NSTableColumnAutoresizingMask" swt_gen="true"></enum>
  <enum name="NSTableColumnNoResizing" swt_gen="true"></enum>
  <enum name="NSTableColumnUserResizingMask" swt_gen="true"></enum>
  <enum name="NSTableViewDropAbove" swt_gen="true"></enum>
  <enum name="NSTableViewDropOn" swt_gen="true"></enum>
  <enum name="NSTableViewFirstColumnOnlyAutoresizingStyle" swt_gen="true"></enum>
  <enum name="NSTableViewGridNone" swt_gen="true"></enum>
  <enum name="NSTableViewLastColumnOnlyAutoresizingStyle" swt_gen="true"></enum>
  <enum name="NSTableViewNoColumnAutoresizing" swt_gen="true"></enum>
  <enum name="NSTableViewReverseSequentialColumnAutoresizingStyle" swt_gen="true"></enum>
  <enum name="NSTableViewSelectionHighlightStyleRegular" swt_gen="true"></enum>
  <enum name="NSTableViewSelectionHighlightStyleSourceList" swt_gen="true"></enum>
  <enum name="NSTableViewSequentialColumnAutoresizingStyle" swt_gen="true"></enum>
  <enum name="NSTableViewSolidHorizontalGridLineMask" swt_gen="true"></enum>
  <enum name="NSTableViewSolidVerticalGridLineMask" swt_gen="true"></enum>
  <enum name="NSTableViewUniformColumnAutoresizingStyle" swt_gen="true"></enum>
  <enum name="NSTabletPoint" swt_gen="true"></enum>
  <enum name="NSTabletPointEventSubtype" swt_gen="true"></enum>
  <enum name="NSTabletPointMask" swt_gen="true"></enum>
  <enum name="NSTabletProximity" swt_gen="true"></enum>
  <enum name="NSTabletProximityEventSubtype" swt_gen="true"></enum>
  <enum name="NSTabletProximityMask" swt_gen="true"></enum>
  <enum name="NSTerminateCancel" swt_gen="true"></enum>
  <enum name="NSTerminateLater" swt_gen="true"></enum>
  <enum name="NSTerminateNow" swt_gen="true"></enum>
  <enum name="NSTextBlockAbsoluteValueType" swt_gen="true"></enum>
  <enum name="NSTextBlockBaselineAlignment" swt_gen="true"></enum>
  <enum name="NSTextBlockBorder" swt_gen="true"></enum>
  <enum name="NSTextBlockBottomAlignment" swt_gen="true"></enum>
  <enum name="NSTextBlockHeight" swt_gen="true"></enum>
  <enum name="NSTextBlockMargin" swt_gen="true"></enum>
  <enum name="NSTextBlockMaximumHeight" swt_gen="true"></enum>
  <enum name="NSTextBlockMaximumWidth" swt_gen="true"></enum>
  <enum name="NSTextBlockMiddleAlignment" swt_gen="true"></enum>
  <enum name="NSTextBlockMinimumHeight" swt_gen="true"></enum>
  <enum name="NSTextBlockMinimumWidth" swt_gen="true"></enum>
  <enum name="NSTextBlockPadding" swt_gen="true"></enum>
  <enum name="NSTextBlockPercentageValueType" swt_gen="true"></enum>
  <enum name="NSTextBlockTopAlignment" swt_gen="true"></enum>
  <enum name="NSTextBlockWidth" swt_gen="true"></enum>
  <enum name="NSTextCellType" swt_gen="true"></enum>
  <enum name="NSTextFieldAndStepperDatePickerStyle" swt_gen="true"></enum>
  <enum name="NSTextFieldDatePickerStyle" swt_gen="true"></enum>
  <enum name="NSTextFieldRoundedBezel" swt_gen="true"></enum>
  <enum name="NSTextFieldSquareBezel" swt_gen="true"></enum>
  <enum name="NSTextListPrependEnclosingMarker" swt_gen="true"></enum>
  <enum name="NSTextReadInapplicableDocumentTypeError" swt_gen="true"></enum>
  <enum name="NSTextReadWriteErrorMaximum" swt_gen="true"></enum>
  <enum name="NSTextReadWriteErrorMinimum" swt_gen="true"></enum>
  <enum name="NSTextStorageEditedAttributes" swt_gen="true"></enum>
  <enum name="NSTextStorageEditedCharacters" swt_gen="true"></enum>
  <enum name="NSTextTableAutomaticLayoutAlgorithm" swt_gen="true"></enum>
  <enum name="NSTextTableFixedLayoutAlgorithm" swt_gen="true"></enum>
  <enum name="NSTextWriteInapplicableDocumentTypeError" swt_gen="true"></enum>
  <enum name="NSTexturedBackgroundWindowMask" swt_gen="true"></enum>
  <enum name="NSTexturedRoundedBezelStyle" swt_gen="true"></enum>
  <enum name="NSTexturedSquareBezelStyle" swt_gen="true"></enum>
  <enum name="NSThickSquareBezelStyle" swt_gen="true"></enum>
  <enum name="NSThickerSquareBezelStyle" swt_gen="true"></enum>
  <enum name="NSTickMarkAbove" swt_gen="true"></enum>
  <enum name="NSTickMarkBelow" swt_gen="true"></enum>
  <enum name="NSTickMarkLeft" swt_gen="true"></enum>
  <enum name="NSTickMarkRight" swt_gen="true"></enum>
  <enum name="NSTimeZoneDatePickerElementFlag" swt_gen="true"></enum>
  <enum name="NSTitledWindowMask" swt_gen="true"></enum>
  <enum name="NSToggleButton" swt_gen="true"></enum>
  <enum name="NSToolbarDisplayModeDefault" swt_gen="true"></enum>
  <enum name="NSToolbarDisplayModeIconAndLabel" swt_gen="true"></enum>
  <enum name="NSToolbarDisplayModeIconOnly" swt_gen="true"></enum>
  <enum name="NSToolbarDisplayModeLabelOnly" swt_gen="true"></enum>
  <enum name="NSToolbarItemVisibilityPriorityHigh" swt_gen="true"></enum>
  <enum name="NSToolbarItemVisibilityPriorityLow" swt_gen="true"></enum>
  <enum name="NSToolbarItemVisibilityPriorityStandard" swt_gen="true"></enum>
  <enum name="NSToolbarItemVisibilityPriorityUser" swt_gen="true"></enum>
  <enum name="NSToolbarSizeModeDefault" swt_gen="true"></enum>
  <enum name="NSToolbarSizeModeRegular" swt_gen="true"></enum>
  <enum name="NSToolbarSizeModeSmall" swt_gen="true"></enum>
  <enum name="NSTopTabsBezelBorder" swt_gen="true"></enum>
  <enum name="NSTornOffMenuWindowLevel" swt_gen="true"></enum>
  <enum name="NSTrackModeMatrix" swt_gen="true"></enum>
  <enum name="NSTrackingActiveAlways" swt_gen="true"></enum>
  <enum name="NSTrackingActiveInActiveApp" swt_gen="true"></enum>
  <enum name="NSTrackingActiveInKeyWindow" swt_gen="true"></enum>
  <enum name="NSTrackingActiveWhenFirstResponder" swt_gen="true"></enum>
  <enum name="NSTrackingAssumeInside" swt_gen="true"></enum>
  <enum name="NSTrackingCursorUpdate" swt_gen="true"></enum>
  <enum name="NSTrackingEnabledDuringMouseDrag" swt_gen="true"></enum>
  <enum name="NSTrackingInVisibleRect" swt_gen="true"></enum>
  <enum name="NSTrackingMouseEnteredAndExited" swt_gen="true"></enum>
  <enum name="NSTrackingMouseMoved" swt_gen="true"></enum>
  <enum name="NSTypesetterBehavior_10_2" swt_gen="true"></enum>
  <enum name="NSTypesetterBehavior_10_2_WithCompatibility" swt_gen="true"></enum>
  <enum name="NSTypesetterBehavior_10_3" swt_gen="true"></enum>
  <enum name="NSTypesetterBehavior_10_4" swt_gen="true"></enum>
  <enum name="NSTypesetterContainerBreakAction" swt_gen="true"></enum>
  <enum name="NSTypesetterHorizontalTabAction" swt_gen="true"></enum>
  <enum name="NSTypesetterLatestBehavior" swt_gen="true"></enum>
  <enum name="NSTypesetterLineBreakAction" swt_gen="true"></enum>
  <enum name="NSTypesetterOriginalBehavior" swt_gen="true"></enum>
  <enum name="NSTypesetterParagraphBreakAction" swt_gen="true"></enum>
  <enum name="NSTypesetterWhitespaceAction" swt_gen="true"></enum>
  <enum name="NSTypesetterZeroAdvancementAction" swt_gen="true"></enum>
  <enum name="NSUnboldFontMask" swt_gen="true"></enum>
  <enum name="NSUnderlinePatternDash" swt_gen="true"></enum>
  <enum name="NSUnderlinePatternDashDot" swt_gen="true"></enum>
  <enum name="NSUnderlinePatternDashDotDot" swt_gen="true"></enum>
  <enum name="NSUnderlinePatternDot" swt_gen="true"></enum>
  <enum name="NSUnderlinePatternSolid" swt_gen="true"></enum>
  <enum name="NSUnderlineStyleDouble" swt_gen="true"></enum>
  <enum name="NSUnderlineStyleNone" swt_gen="true"></enum>
  <enum name="NSUnderlineStyleSingle" swt_gen="true"></enum>
  <enum name="NSUnderlineStyleThick" swt_gen="true"></enum>
  <enum name="NSUndoFunctionKey" swt_gen="true"></enum>
  <enum name="NSUnifiedTitleAndToolbarWindowMask" swt_gen="true"></enum>
  <enum name="NSUnitalicFontMask" swt_gen="true"></enum>
  <enum name="NSUnknownColorSpaceModel" swt_gen="true"></enum>
  <enum name="NSUnknownPageOrder" swt_gen="true"></enum>
  <enum name="NSUnknownPointingDevice" swt_gen="true"></enum>
  <enum name="NSUnscaledWindowMask" swt_gen="true"></enum>
  <enum name="NSUpArrowFunctionKey" swt_gen="true"></enum>
  <enum name="NSUpTextMovement" swt_gen="true"></enum>
  <enum name="NSUpdateWindowsRunLoopOrdering" swt_gen="true"></enum>
  <enum name="NSUserFunctionKey" swt_gen="true"></enum>
  <enum name="NSUtilityWindowMask" swt_gen="true"></enum>
  <enum name="NSVariableStatusItemLength" swt_gen="true"></enum>
  <enum name="NSVerticalRuler" swt_gen="true"></enum>
  <enum name="NSViaPanelFontAction" swt_gen="true"></enum>
  <enum name="NSViewHeightSizable" swt_gen="true"></enum>
  <enum name="NSViewMaxXMargin" swt_gen="true"></enum>
  <enum name="NSViewMaxYMargin" swt_gen="true"></enum>
  <enum name="NSViewMinXMargin" swt_gen="true"></enum>
  <enum name="NSViewMinYMargin" swt_gen="true"></enum>
  <enum name="NSViewNotSizable" swt_gen="true"></enum>
  <enum name="NSViewWidthSizable" swt_gen="true"></enum>
  <enum name="NSWantsBidiLevels" swt_gen="true"></enum>
  <enum name="NSWarningAlertStyle" swt_gen="true"></enum>
  <enum name="NSWheelModeColorPanel" swt_gen="true"></enum>
  <enum name="NSWindowAbove" swt_gen="true"></enum>
  <enum name="NSWindowBackingLocationDefault" swt_gen="true"></enum>
  <enum name="NSWindowBackingLocationMainMemory" swt_gen="true"></enum>
  <enum name="NSWindowBackingLocationVideoMemory" swt_gen="true"></enum>
  <enum name="NSWindowBelow" swt_gen="true"></enum>
  <enum name="NSWindowCloseButton" swt_gen="true"></enum>
  <enum name="NSWindowCollectionBehaviorCanJoinAllSpaces" swt_gen="true"></enum>
  <enum name="NSWindowCollectionBehaviorDefault" swt_gen="true"></enum>
  <enum name="NSWindowCollectionBehaviorMoveToActiveSpace" swt_gen="true"></enum>
  <enum name="NSWindowDocumentIconButton" swt_gen="true"></enum>
  <enum name="NSWindowExposedEventType" swt_gen="true"></enum>
  <enum name="NSWindowMiniaturizeButton" swt_gen="true"></enum>
  <enum name="NSWindowMovedEventType" swt_gen="true"></enum>
  <enum name="NSWindowOut" swt_gen="true"></enum>
  <enum name="NSWindowSharingNone" swt_gen="true"></enum>
  <enum name="NSWindowSharingReadOnly" swt_gen="true"></enum>
  <enum name="NSWindowSharingReadWrite" swt_gen="true"></enum>
  <enum name="NSWindowToolbarButton" swt_gen="true"></enum>
  <enum name="NSWindowZoomButton" swt_gen="true"></enum>
  <enum name="NSWindows95InterfaceStyle" swt_gen="true"></enum>
  <enum name="NSWorkspaceLaunchAllowingClassicStartup" swt_gen="true"></enum>
  <enum name="NSWorkspaceLaunchAndHide" swt_gen="true"></enum>
  <enum name="NSWorkspaceLaunchAndHideOthers" swt_gen="true"></enum>
  <enum name="NSWorkspaceLaunchAndPrint" swt_gen="true"></enum>
  <enum name="NSWorkspaceLaunchAsync" swt_gen="true"></enum>
  <enum name="NSWorkspaceLaunchDefault" swt_gen="true"></enum>
  <enum name="NSWorkspaceLaunchInhibitingBackgroundOnly" swt_gen="true"></enum>
  <enum name="NSWorkspaceLaunchNewInstance" swt_gen="true"></enum>
  <enum name="NSWorkspaceLaunchPreferringClassic" swt_gen="true"></enum>
  <enum name="NSWorkspaceLaunchWithoutActivation" swt_gen="true"></enum>
  <enum name="NSWorkspaceLaunchWithoutAddingToRecents" swt_gen="true"></enum>
  <enum name="NSWritingDirectionLeftToRight" swt_gen="true"></enum>
  <enum name="NSWritingDirectionNatural" swt_gen="true"></enum>
  <enum name="NSWritingDirectionRightToLeft" swt_gen="true"></enum>
  <enum name="NSYearMonthDatePickerElementFlag" swt_gen="true"></enum>
  <enum name="NSYearMonthDayDatePickerElementFlag" swt_gen="true"></enum>
  <function name="NSAccessibilityActionDescription" swt_gen="true">
    <arg name="action" swt_gen="true"></arg>
    <retval swt_gen="true"></retval>
  </function>
  <function name="NSAccessibilityPostNotification" swt_gen="true">
    <arg name="element" swt_gen="true"></arg>
    <arg name="notification" swt_gen="true"></arg>
  </function>
  <function name="NSAccessibilityRaiseBadArgumentException" swt_gen="true">
    <arg name="element" swt_gen="true"></arg>
    <arg name="attribute" swt_gen="true"></arg>
    <arg name="value" swt_gen="true"></arg>
  </function>
  <function name="NSAccessibilityRoleDescription" swt_gen="true">
    <arg name="role" swt_gen="true"></arg>
    <arg name="subrole" swt_gen="true"></arg>
    <retval swt_gen="true"></retval>
  </function>
  <function name="NSAccessibilityRoleDescriptionForUIElement" swt_gen="true">
    <arg name="element" swt_gen="true"></arg>
    <retval swt_gen="true"></retval>
  </function>
  <function name="NSAccessibilityUnignoredAncestor" swt_gen="true">
    <arg name="element" swt_gen="true"></arg>
    <retval swt_gen="true"></retval>
  </function>
  <function name="NSAccessibilityUnignoredChildren" swt_gen="true">
    <arg name="originalChildren" swt_gen="true"></arg>
    <retval swt_gen="true"></retval>
  </function>
  <function name="NSAccessibilityUnignoredChildrenForOnlyChild" swt_gen="true">
    <arg name="originalChild" swt_gen="true"></arg>
    <retval swt_gen="true"></retval>
  </function>
  <function name="NSAccessibilityUnignoredDescendant" swt_gen="true">
    <arg name="element" swt_gen="true"></arg>
    <retval swt_gen="true"></retval>
  </function>
  <function name="NSApplicationLoad">
    <retval></retval>
  </function>
  <function name="NSApplicationMain">
    <arg name="argc"></arg>
    <arg name="argv"></arg>
    <retval></retval>
  </function>
  <function name="NSAvailableWindowDepths">
    <retval></retval>
  </function>
  <function name="NSBeep" swt_gen="true"></function>
  <function name="NSBeginAlertSheet">
    <arg name="title"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <arg name="docWindow"></arg>
    <arg name="modalDelegate"></arg>
    <arg name="didEndSelector"></arg>
    <arg name="didDismissSelector"></arg>
    <arg name="contextInfo"></arg>
    <arg name="msgFormat"></arg>
  </function>
  <function name="NSBeginCriticalAlertSheet">
    <arg name="title"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <arg name="docWindow"></arg>
    <arg name="modalDelegate"></arg>
    <arg name="didEndSelector"></arg>
    <arg name="didDismissSelector"></arg>
    <arg name="contextInfo"></arg>
    <arg name="msgFormat"></arg>
  </function>
  <function name="NSBeginInformationalAlertSheet">
    <arg name="title"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <arg name="docWindow"></arg>
    <arg name="modalDelegate"></arg>
    <arg name="didEndSelector"></arg>
    <arg name="didDismissSelector"></arg>
    <arg name="contextInfo"></arg>
    <arg name="msgFormat"></arg>
  </function>
  <function name="NSBestDepth">
    <arg name="colorSpace"></arg>
    <arg name="bps"></arg>
    <arg name="bpp"></arg>
    <arg name="planar"></arg>
    <arg name="exactMatch"></arg>
    <retval></retval>
  </function>
  <function name="NSBitsPerPixelFromDepth" swt_gen="true">
    <arg name="depth" swt_gen="true"></arg>
    <retval swt_gen="true"></retval>
  </function>
  <function name="NSBitsPerSampleFromDepth">
    <arg name="depth"></arg>
    <retval></retval>
  </function>
  <function name="NSColorSpaceFromDepth">
    <arg name="depth"></arg>
    <retval></retval>
  </function>
  <function name="NSConvertGlyphsToPackedGlyphs">
    <arg name="glBuf"></arg>
    <arg name="count"></arg>
    <arg name="packing"></arg>
    <arg name="packedGlyphs"></arg>
    <retval></retval>
  </function>
  <function name="NSCopyBits" swt_gen="true">
    <arg name="srcGState" swt_gen="true"></arg>
    <arg name="srcRect" swt_gen="true"></arg>
    <arg name="destPoint" swt_gen="true"></arg>
  </function>
  <function name="NSCountWindows">
    <arg name="count"></arg>
  </function>
  <function name="NSCountWindowsForContext">
    <arg name="context"></arg>
    <arg name="count"></arg>
  </function>
  <function name="NSCreateFileContentsPboardType">
    <arg name="fileType"></arg>
    <retval></retval>
  </function>
  <function name="NSCreateFilenamePboardType">
    <arg name="fileType"></arg>
    <retval></retval>
  </function>
  <function name="NSDisableScreenUpdates"></function>
  <function name="NSDottedFrameRect">
    <arg name="aRect"></arg>
  </function>
  <function name="NSDrawBitmap">
    <arg name="rect"></arg>
    <arg name="width"></arg>
    <arg name="height"></arg>
    <arg name="bps"></arg>
    <arg name="spp"></arg>
    <arg name="bpp"></arg>
    <arg name="bpr"></arg>
    <arg name="isPlanar"></arg>
    <arg name="hasAlpha"></arg>
    <arg name="colorSpaceName"></arg>
    <arg name="data"></arg>
  </function>
  <function name="NSDrawButton">
    <arg name="aRect"></arg>
    <arg name="clipRect"></arg>
  </function>
  <function name="NSDrawColorTiledRects">
    <arg name="boundsRect"></arg>
    <arg name="clipRect"></arg>
    <arg name="sides"></arg>
    <arg name="colors"></arg>
    <arg name="count"></arg>
    <retval></retval>
  </function>
  <function name="NSDrawDarkBezel">
    <arg name="aRect"></arg>
    <arg name="clipRect"></arg>
  </function>
  <function name="NSDrawGrayBezel">
    <arg name="aRect"></arg>
    <arg name="clipRect"></arg>
  </function>
  <function name="NSDrawGroove">
    <arg name="aRect"></arg>
    <arg name="clipRect"></arg>
  </function>
  <function name="NSDrawLightBezel">
    <arg name="aRect"></arg>
    <arg name="clipRect"></arg>
  </function>
  <function name="NSDrawNinePartImage">
    <arg name="frame"></arg>
    <arg name="topLeftCorner"></arg>
    <arg name="topEdgeFill"></arg>
    <arg name="topRightCorner"></arg>
    <arg name="leftEdgeFill"></arg>
    <arg name="centerFill"></arg>
    <arg name="rightEdgeFill"></arg>
    <arg name="bottomLeftCorner"></arg>
    <arg name="bottomEdgeFill"></arg>
    <arg name="bottomRightCorner"></arg>
    <arg name="op"></arg>
    <arg name="alphaFraction"></arg>
    <arg name="flipped"></arg>
  </function>
  <function name="NSDrawThreePartImage">
    <arg name="frame"></arg>
    <arg name="startCap"></arg>
    <arg name="centerFill"></arg>
    <arg name="endCap"></arg>
    <arg name="vertical"></arg>
    <arg name="op"></arg>
    <arg name="alphaFraction"></arg>
    <arg name="flipped"></arg>
  </function>
  <function name="NSDrawTiledRects">
    <arg name="boundsRect"></arg>
    <arg name="clipRect"></arg>
    <arg name="sides"></arg>
    <arg name="grays"></arg>
    <arg name="count"></arg>
    <retval></retval>
  </function>
  <function name="NSDrawWhiteBezel">
    <arg name="aRect"></arg>
    <arg name="clipRect"></arg>
  </function>
  <function name="NSDrawWindowBackground">
    <arg name="aRect"></arg>
  </function>
  <function name="NSEnableScreenUpdates"></function>
  <function name="NSEraseRect">
    <arg name="aRect"></arg>
  </function>
  <function name="NSEventMaskFromType">
    <arg name="type"></arg>
    <retval></retval>
  </function>
  <function name="NSFrameRect">
    <arg name="aRect"></arg>
  </function>
  <function name="NSFrameRectWithWidth">
    <arg name="aRect"></arg>
    <arg name="frameWidth"></arg>
  </function>
  <function name="NSFrameRectWithWidthUsingOperation">
    <arg name="aRect"></arg>
    <arg name="frameWidth"></arg>
    <arg name="op"></arg>
  </function>
  <function name="NSGetAlertPanel">
    <arg name="title"></arg>
    <arg name="msgFormat"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <retval></retval>
  </function>
  <function name="NSGetCriticalAlertPanel">
    <arg name="title"></arg>
    <arg name="msgFormat"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <retval></retval>
  </function>
  <function name="NSGetFileType">
    <arg name="pboardType"></arg>
    <retval></retval>
  </function>
  <function name="NSGetFileTypes">
    <arg name="pboardTypes"></arg>
    <retval></retval>
  </function>
  <function name="NSGetInformationalAlertPanel">
    <arg name="title"></arg>
    <arg name="msgFormat"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <retval></retval>
  </function>
  <function name="NSGetWindowServerMemory">
    <arg name="context"></arg>
    <arg name="virtualMemory"></arg>
    <arg name="windowBackingMemory"></arg>
    <arg name="windowDumpString"></arg>
    <retval></retval>
  </function>
  <function name="NSHighlightRect">
    <arg name="aRect"></arg>
  </function>
  <function name="NSInterfaceStyleForKey">
    <arg name="key"></arg>
    <arg name="responder"></arg>
    <retval></retval>
  </function>
  <function name="NSIsControllerMarker">
    <arg name="object"></arg>
    <retval></retval>
  </function>
  <function name="NSNumberOfColorComponents" swt_gen="true">
    <arg name="colorSpaceName" swt_gen="true"></arg>
    <retval swt_gen="true"></retval>
  </function>
  <function name="NSOpenGLGetOption">
    <arg name="pname"></arg>
    <arg name="param"></arg>
  </function>
  <function name="NSOpenGLGetVersion">
    <arg name="major"></arg>
    <arg name="minor"></arg>
  </function>
  <function name="NSOpenGLSetOption">
    <arg name="pname"></arg>
    <arg name="param"></arg>
  </function>
  <function name="NSPerformService">
    <arg name="itemName"></arg>
    <arg name="pboard"></arg>
    <retval></retval>
  </function>
  <function name="NSPlanarFromDepth">
    <arg name="depth"></arg>
    <retval></retval>
  </function>
  <function name="NSReadPixel">
    <arg name="passedPoint"></arg>
    <retval></retval>
  </function>
  <function name="NSRectClip">
    <arg name="aRect"></arg>
  </function>
  <function name="NSRectClipList">
    <arg name="rects"></arg>
    <arg name="count"></arg>
  </function>
  <function name="NSRectFill">
    <arg name="aRect"></arg>
  </function>
  <function name="NSRectFillList">
    <arg name="rects"></arg>
    <arg name="count"></arg>
  </function>
  <function name="NSRectFillListUsingOperation">
    <arg name="rects"></arg>
    <arg name="count"></arg>
    <arg name="op"></arg>
  </function>
  <function name="NSRectFillListWithColors">
    <arg name="rects"></arg>
    <arg name="colors"></arg>
    <arg name="num"></arg>
  </function>
  <function name="NSRectFillListWithColorsUsingOperation">
    <arg name="rects"></arg>
    <arg name="colors"></arg>
    <arg name="num"></arg>
    <arg name="op"></arg>
  </function>
  <function name="NSRectFillListWithGrays">
    <arg name="rects"></arg>
    <arg name="grays"></arg>
    <arg name="num"></arg>
  </function>
  <function name="NSRectFillUsingOperation">
    <arg name="aRect"></arg>
    <arg name="op"></arg>
  </function>
  <function name="NSRegisterServicesProvider">
    <arg name="provider"></arg>
    <arg name="name"></arg>
  </function>
  <function name="NSReleaseAlertPanel">
    <arg name="panel"></arg>
  </function>
  <function name="NSRunAlertPanel">
    <arg name="title"></arg>
    <arg name="msgFormat"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <retval></retval>
  </function>
  <function name="NSRunAlertPanelRelativeToWindow">
    <arg name="title"></arg>
    <arg name="msgFormat"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <arg name="docWindow"></arg>
    <retval></retval>
  </function>
  <function name="NSRunCriticalAlertPanel">
    <arg name="title"></arg>
    <arg name="msgFormat"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <retval></retval>
  </function>
  <function name="NSRunCriticalAlertPanelRelativeToWindow">
    <arg name="title"></arg>
    <arg name="msgFormat"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <arg name="docWindow"></arg>
    <retval></retval>
  </function>
  <function name="NSRunInformationalAlertPanel">
    <arg name="title"></arg>
    <arg name="msgFormat"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <retval></retval>
  </function>
  <function name="NSRunInformationalAlertPanelRelativeToWindow">
    <arg name="title"></arg>
    <arg name="msgFormat"></arg>
    <arg name="defaultButton"></arg>
    <arg name="alternateButton"></arg>
    <arg name="otherButton"></arg>
    <arg name="docWindow"></arg>
    <retval></retval>
  </function>
  <function name="NSSetFocusRingStyle">
    <arg name="placement"></arg>
  </function>
  <function name="NSSetShowsServicesMenuItem">
    <arg name="itemName"></arg>
    <arg name="enabled"></arg>
    <retval></retval>
  </function>
  <function name="NSShowAnimationEffect">
    <arg name="animationEffect"></arg>
    <arg name="centerLocation"></arg>
    <arg name="size"></arg>
    <arg name="animationDelegate"></arg>
    <arg name="didEndSelector"></arg>
    <arg name="contextInfo"></arg>
  </function>
  <function name="NSShowsServicesMenuItem">
    <arg name="itemName"></arg>
    <retval></retval>
  </function>
  <function name="NSUnregisterServicesProvider">
    <arg name="name"></arg>
  </function>
  <function name="NSUpdateDynamicServices"></function>
  <function name="NSWindowList">
    <arg name="size"></arg>
    <arg name="list"></arg>
  </function>
  <function name="NSWindowListForContext">
    <arg name="context"></arg>
    <arg name="size"></arg>
    <arg name="list"></arg>
  </function>
  <class name="CIColor">
    <method selector="initWithColor:">
      <arg name="color"></arg>
      <retval swt_java_type="CIColor"></retval>
    </method>
  </class>
  <class name="CIImage">
    <method selector="drawAtPoint:fromRect:operation:fraction:">
      <arg name="point"></arg>
      <arg name="fromRect"></arg>
      <arg name="op"></arg>
      <arg name="delta"></arg>
      <retval></retval>
    </method>
    <method selector="drawInRect:fromRect:operation:fraction:">
      <arg name="rect"></arg>
      <arg name="fromRect"></arg>
      <arg name="op"></arg>
      <arg name="delta"></arg>
      <retval></retval>
    </method>
    <method selector="initWithBitmapImageRep:">
      <arg name="bitmapImageRep"></arg>
      <retval swt_java_type="CIImage"></retval>
    </method>
  </class>
  <class name="NSATSTypesetter" swt_superclass="NSTypesetter">
    <method selector="lineFragmentRectForProposedRect:remainingRect:">
      <arg name="proposedRect"></arg>
      <arg name="remainingRect"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="sharedTypesetter">
      <retval></retval>
    </method>
  </class>
  <class name="NSActionCell" swt_gen="mixed" swt_superclass="NSCell">
    <method selector="action">
      <retval></retval>
    </method>
    <method selector="controlView">
      <retval></retval>
    </method>
    <method selector="doubleValue">
      <retval></retval>
    </method>
    <method selector="floatValue">
      <retval></retval>
    </method>
    <method selector="intValue">
      <retval></retval>
    </method>
    <method selector="integerValue">
      <retval></retval>
    </method>
    <method selector="setAction:">
      <arg name="aSelector"></arg>
      <retval></retval>
    </method>
    <method selector="setAlignment:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBezeled:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setBordered:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setControlView:">
      <arg name="view"></arg>
      <retval></retval>
    </method>
    <method selector="setEnabled:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setFloatingPointFormat:left:right:">
      <arg name="autoRange"></arg>
      <arg name="leftDigits"></arg>
      <arg name="rightDigits"></arg>
      <retval></retval>
    </method>
    <method selector="setFont:">
      <arg name="fontObj"></arg>
      <retval></retval>
    </method>
    <method selector="setImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setObjectValue:">
      <arg name="obj"></arg>
      <retval></retval>
    </method>
    <method selector="setTag:">
      <arg name="anInt"></arg>
      <retval></retval>
    </method>
    <method selector="setTarget:">
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
    <method selector="stringValue">
      <retval></retval>
    </method>
    <method selector="tag">
      <retval></retval>
    </method>
    <method selector="target">
      <retval></retval>
    </method>
  </class>
  <class name="NSAffineTransform" swt_gen="mixed">
    <method selector="appendTransform:">
      <arg name="transform"></arg>
      <retval></retval>
    </method>
    <method selector="concat" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithTransform:" swt_gen="true">
      <arg name="transform" swt_gen="true"></arg>
      <retval swt_gen="true" swt_java_type="NSAffineTransform"></retval>
    </method>
    <method selector="invert" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="prependTransform:" swt_gen="true">
      <arg name="transform" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rotateByDegrees:" swt_gen="true">
      <arg name="angle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rotateByRadians:">
      <arg name="angle"></arg>
      <retval></retval>
    </method>
    <method selector="scaleBy:">
      <arg name="scale"></arg>
      <retval></retval>
    </method>
    <method selector="scaleXBy:yBy:" swt_gen="true">
      <arg name="scaleX" swt_gen="true"></arg>
      <arg name="scaleY" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="set" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTransformStruct:" swt_gen="true">
      <arg name="transformStruct" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="transform" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="transformBezierPath:">
      <arg name="aPath"></arg>
      <retval></retval>
    </method>
    <method selector="transformPoint:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="transformSize:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="transformStruct" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="translateXBy:yBy:" swt_gen="true">
      <arg name="deltaX" swt_gen="true"></arg>
      <arg name="deltaY" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSAlert" swt_gen="mixed">
    <method selector="accessoryView">
      <retval></retval>
    </method>
    <method selector="addButtonWithTitle:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alertStyle">
      <retval></retval>
    </method>
    <method class_method="true" selector="alertWithError:">
      <arg name="error"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="alertWithMessageText:defaultButton:alternateButton:otherButton:informativeTextWithFormat:">
      <arg name="message"></arg>
      <arg name="defaultButton"></arg>
      <arg name="alternateButton"></arg>
      <arg name="otherButton"></arg>
      <arg name="informativeTextWithFormat"></arg>
      <retval></retval>
    </method>
    <method selector="beginSheetModalForWindow:modalDelegate:didEndSelector:contextInfo:">
      <arg name="window"></arg>
      <arg name="delegate"></arg>
      <arg name="didEndSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="buttons">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="helpAnchor">
      <retval></retval>
    </method>
    <method selector="icon">
      <retval></retval>
    </method>
    <method selector="informativeText">
      <retval></retval>
    </method>
    <method selector="layout">
      <retval></retval>
    </method>
    <method selector="messageText">
      <retval></retval>
    </method>
    <method selector="runModal" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAccessoryView:">
      <arg name="view"></arg>
      <retval></retval>
    </method>
    <method selector="setAlertStyle:" swt_gen="true">
      <arg name="style" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:">
      <arg name="delegate"></arg>
      <retval></retval>
    </method>
    <method selector="setHelpAnchor:">
      <arg name="anchor"></arg>
      <retval></retval>
    </method>
    <method selector="setIcon:">
      <arg name="icon"></arg>
      <retval></retval>
    </method>
    <method selector="setInformativeText:">
      <arg name="informativeText"></arg>
      <retval></retval>
    </method>
    <method selector="setMessageText:" swt_gen="true">
      <arg name="messageText" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShowsHelp:">
      <arg name="showsHelp"></arg>
      <retval></retval>
    </method>
    <method selector="setShowsSuppressionButton:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="showsHelp">
      <retval></retval>
    </method>
    <method selector="showsSuppressionButton">
      <retval></retval>
    </method>
    <method selector="suppressionButton">
      <retval></retval>
    </method>
    <method selector="window" swt_gen="true">
      <retval swt_gen="true" swt_java_type="NSWindow"></retval>
    </method>
  </class>
  <class name="NSAnimation">
    <method selector="addProgressMark:">
      <arg name="progressMark"></arg>
      <retval></retval>
    </method>
    <method selector="animationBlockingMode">
      <retval></retval>
    </method>
    <method selector="animationCurve">
      <retval></retval>
    </method>
    <method selector="clearStartAnimation">
      <retval></retval>
    </method>
    <method selector="clearStopAnimation">
      <retval></retval>
    </method>
    <method selector="currentProgress">
      <retval></retval>
    </method>
    <method selector="currentValue">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="duration">
      <retval></retval>
    </method>
    <method selector="frameRate">
      <retval></retval>
    </method>
    <method selector="initWithDuration:animationCurve:">
      <arg name="duration"></arg>
      <arg name="animationCurve"></arg>
      <retval swt_java_type="NSAnimation"></retval>
    </method>
    <method selector="isAnimating">
      <retval></retval>
    </method>
    <method selector="progressMarks">
      <retval></retval>
    </method>
    <method selector="removeProgressMark:">
      <arg name="progressMark"></arg>
      <retval></retval>
    </method>
    <method selector="runLoopModesForAnimating">
      <retval></retval>
    </method>
    <method selector="setAnimationBlockingMode:">
      <arg name="animationBlockingMode"></arg>
      <retval></retval>
    </method>
    <method selector="setAnimationCurve:">
      <arg name="curve"></arg>
      <retval></retval>
    </method>
    <method selector="setCurrentProgress:">
      <arg name="progress"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:">
      <arg name="delegate"></arg>
      <retval></retval>
    </method>
    <method selector="setDuration:">
      <arg name="duration"></arg>
      <retval></retval>
    </method>
    <method selector="setFrameRate:">
      <arg name="framesPerSecond"></arg>
      <retval></retval>
    </method>
    <method selector="setProgressMarks:">
      <arg name="progressMarks"></arg>
      <retval></retval>
    </method>
    <method selector="startAnimation">
      <retval></retval>
    </method>
    <method selector="startWhenAnimation:reachesProgress:">
      <arg name="animation"></arg>
      <arg name="startProgress"></arg>
      <retval></retval>
    </method>
    <method selector="stopAnimation">
      <retval></retval>
    </method>
    <method selector="stopWhenAnimation:reachesProgress:">
      <arg name="animation"></arg>
      <arg name="stopProgress"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSAnimationContext">
    <method class_method="true" selector="beginGrouping">
      <retval></retval>
    </method>
    <method class_method="true" selector="currentContext">
      <retval></retval>
    </method>
    <method selector="duration">
      <retval></retval>
    </method>
    <method class_method="true" selector="endGrouping">
      <retval></retval>
    </method>
    <method selector="setDuration:">
      <arg name="duration"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSAppleScript">
    <method selector="richTextSource">
      <retval></retval>
    </method>
  </class>
  <class name="NSApplication" swt_gen="mixed" swt_superclass="NSResponder">
    <method selector="abortModal">
      <retval></retval>
    </method>
    <method selector="activateContextHelpMode:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="activateIgnoringOtherApps:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addWindowsItem:title:filename:">
      <arg name="win"></arg>
      <arg name="aString"></arg>
      <arg name="isFilename"></arg>
      <retval></retval>
    </method>
    <method selector="applicationIconImage">
      <retval></retval>
    </method>
    <method selector="arrangeInFront:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="beginModalSessionForWindow:">
      <arg name="theWindow"></arg>
      <retval></retval>
    </method>
    <method selector="beginModalSessionForWindow:relativeToWindow:">
      <arg name="theWindow"></arg>
      <arg name="docWindow"></arg>
      <retval></retval>
    </method>
    <method selector="beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:">
      <arg name="sheet"></arg>
      <arg name="docWindow"></arg>
      <arg name="modalDelegate"></arg>
      <arg name="didEndSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="cancelUserAttentionRequest:">
      <arg name="request"></arg>
      <retval></retval>
    </method>
    <method selector="changeWindowsItem:title:filename:">
      <arg name="win"></arg>
      <arg name="aString"></arg>
      <arg name="isFilename"></arg>
      <retval></retval>
    </method>
    <method selector="context">
      <retval></retval>
    </method>
    <method selector="currentEvent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deactivate">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method class_method="true" selector="detachDrawingThread:toTarget:withObject:">
      <arg name="selector"></arg>
      <arg name="target"></arg>
      <arg name="argument"></arg>
      <retval></retval>
    </method>
    <method selector="discardEventsMatchingMask:beforeEvent:">
      <arg name="mask"></arg>
      <arg name="lastEvent"></arg>
      <retval></retval>
    </method>
    <method selector="dockTile">
      <retval></retval>
    </method>
    <method selector="endModalSession:">
      <arg name="session"></arg>
      <retval></retval>
    </method>
    <method selector="endSheet:">
      <arg name="sheet"></arg>
      <retval></retval>
    </method>
    <method selector="endSheet:returnCode:">
      <arg name="sheet"></arg>
      <arg name="returnCode"></arg>
      <retval></retval>
    </method>
    <method selector="finishLaunching" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hide:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hideOtherApplications:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isActive">
      <retval></retval>
    </method>
    <method selector="isHidden">
      <retval></retval>
    </method>
    <method selector="isRunning" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mainMenu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mainWindow">
      <retval></retval>
    </method>
    <method selector="makeWindowsPerform:inOrder:">
      <arg name="aSelector"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="miniaturizeAll:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="modalWindow">
      <retval></retval>
    </method>
    <method selector="nextEventMatchingMask:untilDate:inMode:dequeue:" swt_gen="true">
      <arg name="mask" swt_gen="true"></arg>
      <arg name="expiration" swt_gen="true"></arg>
      <arg name="mode" swt_gen="true"></arg>
      <arg name="deqFlag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderFrontCharacterPalette:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="orderFrontColorPanel:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="orderFrontStandardAboutPanel:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderFrontStandardAboutPanelWithOptions:">
      <arg name="optionsDictionary"></arg>
      <retval></retval>
    </method>
    <method selector="orderedDocuments">
      <retval></retval>
    </method>
    <method selector="orderedWindows" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="postEvent:atStart:">
      <arg name="event"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="preventWindowOrdering">
      <retval></retval>
    </method>
    <method selector="registerServicesMenuSendTypes:returnTypes:">
      <arg name="sendTypes"></arg>
      <arg name="returnTypes"></arg>
      <retval></retval>
    </method>
    <method selector="removeWindowsItem:">
      <arg name="win"></arg>
      <retval></retval>
    </method>
    <method selector="replyToApplicationShouldTerminate:">
      <arg name="shouldTerminate"></arg>
      <retval></retval>
    </method>
    <method selector="replyToOpenOrPrint:">
      <arg name="reply"></arg>
      <retval></retval>
    </method>
    <method selector="reportException:">
      <arg name="theException"></arg>
      <retval></retval>
    </method>
    <method selector="requestUserAttention:">
      <arg name="requestType"></arg>
      <retval></retval>
    </method>
    <method selector="run" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runModalForWindow:" swt_gen="true">
      <arg name="theWindow" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runModalForWindow:relativeToWindow:">
      <arg name="theWindow"></arg>
      <arg name="docWindow"></arg>
      <retval></retval>
    </method>
    <method selector="runModalSession:">
      <arg name="session"></arg>
      <retval></retval>
    </method>
    <method selector="runPageLayout:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="sendAction:to:from:">
      <arg name="theAction"></arg>
      <arg name="theTarget"></arg>
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="sendEvent:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="servicesMenu">
      <retval></retval>
    </method>
    <method selector="servicesProvider">
      <retval></retval>
    </method>
    <method selector="setApplicationIconImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMainMenu:">
      <arg name="aMenu"></arg>
      <retval></retval>
    </method>
    <method selector="setServicesMenu:">
      <arg name="aMenu"></arg>
      <retval></retval>
    </method>
    <method selector="setServicesProvider:">
      <arg name="provider"></arg>
      <retval></retval>
    </method>
    <method selector="setWindowsMenu:">
      <arg name="aMenu"></arg>
      <retval></retval>
    </method>
    <method selector="setWindowsNeedUpdate:">
      <arg name="needUpdate"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="sharedApplication" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showHelp:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="stop:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stopModal">
      <retval></retval>
    </method>
    <method selector="stopModalWithCode:">
      <arg name="returnCode"></arg>
      <retval></retval>
    </method>
    <method selector="targetForAction:">
      <arg name="theAction"></arg>
      <retval></retval>
    </method>
    <method selector="targetForAction:to:from:">
      <arg name="theAction"></arg>
      <arg name="theTarget"></arg>
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="terminate:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tryToPerform:with:">
      <arg name="anAction"></arg>
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
    <method selector="unhide:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="unhideAllApplications:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unhideWithoutActivation">
      <retval></retval>
    </method>
    <method selector="updateWindows">
      <retval></retval>
    </method>
    <method selector="updateWindowsItem:">
      <arg name="win"></arg>
      <retval></retval>
    </method>
    <method selector="validRequestorForSendType:returnType:">
      <arg name="sendType"></arg>
      <arg name="returnType"></arg>
      <retval></retval>
    </method>
    <method selector="windowWithWindowNumber:">
      <arg name="windowNum"></arg>
      <retval></retval>
    </method>
    <method selector="windows" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowsMenu">
      <retval></retval>
    </method>
  </class>
  <class name="NSArrayController" swt_superclass="NSObjectController">
    <method selector="add:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="addObject:">
      <arg name="object"></arg>
      <retval></retval>
    </method>
    <method selector="addObjects:">
      <arg name="objects"></arg>
      <retval></retval>
    </method>
    <method selector="addSelectedObjects:">
      <arg name="objects"></arg>
      <retval></retval>
    </method>
    <method selector="addSelectionIndexes:">
      <arg name="indexes"></arg>
      <retval></retval>
    </method>
    <method selector="alwaysUsesMultipleValuesMarker">
      <retval></retval>
    </method>
    <method selector="arrangeObjects:">
      <arg name="objects"></arg>
      <retval></retval>
    </method>
    <method selector="arrangedObjects">
      <retval></retval>
    </method>
    <method selector="automaticRearrangementKeyPaths">
      <retval></retval>
    </method>
    <method selector="automaticallyRearrangesObjects">
      <retval></retval>
    </method>
    <method selector="avoidsEmptySelection">
      <retval></retval>
    </method>
    <method selector="canInsert">
      <retval></retval>
    </method>
    <method selector="canSelectNext">
      <retval></retval>
    </method>
    <method selector="canSelectPrevious">
      <retval></retval>
    </method>
    <method selector="clearsFilterPredicateOnInsertion">
      <retval></retval>
    </method>
    <method selector="didChangeArrangementCriteria">
      <retval></retval>
    </method>
    <method selector="filterPredicate">
      <retval></retval>
    </method>
    <method selector="insert:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="insertObject:atArrangedObjectIndex:">
      <arg name="object"></arg>
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="insertObjects:atArrangedObjectIndexes:">
      <arg name="objects"></arg>
      <arg name="indexes"></arg>
      <retval></retval>
    </method>
    <method selector="preservesSelection">
      <retval></retval>
    </method>
    <method selector="rearrangeObjects">
      <retval></retval>
    </method>
    <method selector="remove:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="removeObject:">
      <arg name="object"></arg>
      <retval></retval>
    </method>
    <method selector="removeObjectAtArrangedObjectIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="removeObjects:">
      <arg name="objects"></arg>
      <retval></retval>
    </method>
    <method selector="removeObjectsAtArrangedObjectIndexes:">
      <arg name="indexes"></arg>
      <retval></retval>
    </method>
    <method selector="removeSelectedObjects:">
      <arg name="objects"></arg>
      <retval></retval>
    </method>
    <method selector="removeSelectionIndexes:">
      <arg name="indexes"></arg>
      <retval></retval>
    </method>
    <method selector="selectNext:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="selectPrevious:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="selectedObjects">
      <retval></retval>
    </method>
    <method selector="selectionIndex">
      <retval></retval>
    </method>
    <method selector="selectionIndexes">
      <retval></retval>
    </method>
    <method selector="selectsInsertedObjects">
      <retval></retval>
    </method>
    <method selector="setAlwaysUsesMultipleValuesMarker:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setAutomaticallyRearrangesObjects:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setAvoidsEmptySelection:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setClearsFilterPredicateOnInsertion:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setFilterPredicate:">
      <arg name="filterPredicate"></arg>
      <retval></retval>
    </method>
    <method selector="setPreservesSelection:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectedObjects:">
      <arg name="objects"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectionIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectionIndexes:">
      <arg name="indexes"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectsInsertedObjects:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setSortDescriptors:">
      <arg name="sortDescriptors"></arg>
      <retval></retval>
    </method>
    <method selector="sortDescriptors">
      <retval></retval>
    </method>
  </class>
  <class name="NSAttributedString" swt_gen="mixed">
    <method selector="RTFDFileWrapperFromRange:documentAttributes:">
      <arg name="range"></arg>
      <arg name="dict"></arg>
      <retval></retval>
    </method>
    <method selector="RTFDFromRange:documentAttributes:">
      <arg name="range"></arg>
      <arg name="dict"></arg>
      <retval></retval>
    </method>
    <method selector="RTFFromRange:documentAttributes:">
      <arg name="range"></arg>
      <arg name="dict"></arg>
      <retval></retval>
    </method>
    <method selector="URLAtIndex:effectiveRange:">
      <arg name="location"></arg>
      <arg name="effectiveRange"></arg>
      <retval></retval>
    </method>
    <method selector="attribute:atIndex:effectiveRange:">
      <arg name="attrName"></arg>
      <arg name="location"></arg>
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="attribute:atIndex:longestEffectiveRange:inRange:">
      <arg name="attrName"></arg>
      <arg name="location"></arg>
      <arg name="range"></arg>
      <arg name="rangeLimit"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="attributedStringWithAttachment:" swt_gen="true">
      <arg name="attachment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributedSubstringFromRange:">
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="attributesAtIndex:effectiveRange:">
      <arg name="location"></arg>
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="attributesAtIndex:longestEffectiveRange:inRange:" swt_gen="true">
      <arg name="location" swt_gen="true"></arg>
      <arg name="range" swt_gen="true"></arg>
      <arg name="rangeLimit" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="boundingRectWithSize:options:">
      <arg name="size"></arg>
      <arg name="options"></arg>
      <retval></retval>
    </method>
    <method selector="containsAttachments">
      <retval></retval>
    </method>
    <method selector="dataFromRange:documentAttributes:error:">
      <arg name="range"></arg>
      <arg name="dict"></arg>
      <arg name="error"></arg>
      <retval></retval>
    </method>
    <method selector="docFormatFromRange:documentAttributes:">
      <arg name="range"></arg>
      <arg name="dict"></arg>
      <retval></retval>
    </method>
    <method selector="doubleClickAtIndex:" swt_gen="true">
      <arg name="location" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawAtPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawInRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawWithRect:options:">
      <arg name="rect"></arg>
      <arg name="options"></arg>
      <retval></retval>
    </method>
    <method selector="fileWrapperFromRange:documentAttributes:error:">
      <arg name="range"></arg>
      <arg name="dict"></arg>
      <arg name="error"></arg>
      <retval></retval>
    </method>
    <method selector="fontAttributesInRange:">
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="initWithAttributedString:">
      <arg name="attrStr"></arg>
      <retval swt_java_type="NSAttributedString"></retval>
    </method>
    <method selector="initWithData:options:documentAttributes:error:">
      <arg name="data"></arg>
      <arg name="options"></arg>
      <arg name="dict"></arg>
      <arg name="error"></arg>
      <retval swt_java_type="NSAttributedString"></retval>
    </method>
    <method selector="initWithDocFormat:documentAttributes:">
      <arg name="data"></arg>
      <arg name="dict"></arg>
      <retval swt_java_type="NSAttributedString"></retval>
    </method>
    <method selector="initWithHTML:baseURL:documentAttributes:">
      <arg name="data"></arg>
      <arg name="base"></arg>
      <arg name="dict"></arg>
      <retval swt_java_type="NSAttributedString"></retval>
    </method>
    <method selector="initWithHTML:documentAttributes:">
      <arg name="data"></arg>
      <arg name="dict"></arg>
      <retval swt_java_type="NSAttributedString"></retval>
    </method>
    <method selector="initWithHTML:options:documentAttributes:">
      <arg name="data"></arg>
      <arg name="options"></arg>
      <arg name="dict"></arg>
      <retval swt_java_type="NSAttributedString"></retval>
    </method>
    <method selector="initWithPath:documentAttributes:">
      <arg name="path"></arg>
      <arg name="dict"></arg>
      <retval swt_java_type="NSAttributedString"></retval>
    </method>
    <method selector="initWithRTF:documentAttributes:">
      <arg name="data"></arg>
      <arg name="dict"></arg>
      <retval swt_java_type="NSAttributedString"></retval>
    </method>
    <method selector="initWithRTFD:documentAttributes:">
      <arg name="data"></arg>
      <arg name="dict"></arg>
      <retval swt_java_type="NSAttributedString"></retval>
    </method>
    <method selector="initWithRTFDFileWrapper:documentAttributes:">
      <arg name="wrapper"></arg>
      <arg name="dict"></arg>
      <retval swt_java_type="NSAttributedString"></retval>
    </method>
    <method selector="initWithString:">
      <arg name="str"></arg>
      <retval swt_java_type="NSAttributedString"></retval>
    </method>
    <method selector="initWithString:attributes:" swt_gen="true">
      <arg name="str" swt_gen="true"></arg>
      <arg name="attrs" swt_gen="true"></arg>
      <retval swt_gen="true" swt_java_type="NSAttributedString"></retval>
    </method>
    <method selector="initWithURL:documentAttributes:">
      <arg name="url"></arg>
      <arg name="dict"></arg>
      <retval swt_java_type="NSAttributedString"></retval>
    </method>
    <method selector="initWithURL:options:documentAttributes:error:">
      <arg name="url"></arg>
      <arg name="options"></arg>
      <arg name="dict"></arg>
      <arg name="error"></arg>
      <retval swt_java_type="NSAttributedString"></retval>
    </method>
    <method selector="isEqualToAttributedString:">
      <arg name="other"></arg>
      <retval></retval>
    </method>
    <method selector="itemNumberInTextList:atIndex:">
      <arg name="list"></arg>
      <arg name="location"></arg>
      <retval></retval>
    </method>
    <method selector="length">
      <retval></retval>
    </method>
    <method selector="lineBreakBeforeIndex:withinRange:">
      <arg name="location"></arg>
      <arg name="aRange"></arg>
      <retval></retval>
    </method>
    <method selector="lineBreakByHyphenatingBeforeIndex:withinRange:">
      <arg name="location"></arg>
      <arg name="aRange"></arg>
      <retval></retval>
    </method>
    <method selector="nextWordFromIndex:forward:" swt_gen="true">
      <arg name="location" swt_gen="true"></arg>
      <arg name="isForward" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeOfTextBlock:atIndex:">
      <arg name="block"></arg>
      <arg name="location"></arg>
      <retval></retval>
    </method>
    <method selector="rangeOfTextList:atIndex:">
      <arg name="list"></arg>
      <arg name="location"></arg>
      <retval></retval>
    </method>
    <method selector="rangeOfTextTable:atIndex:">
      <arg name="table"></arg>
      <arg name="location"></arg>
      <retval></retval>
    </method>
    <method selector="rulerAttributesInRange:">
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="size" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="string">
      <retval></retval>
    </method>
    <method class_method="true" selector="textFileTypes">
      <retval></retval>
    </method>
    <method class_method="true" selector="textPasteboardTypes">
      <retval></retval>
    </method>
    <method class_method="true" selector="textTypes">
      <retval></retval>
    </method>
    <method class_method="true" selector="textUnfilteredFileTypes">
      <retval></retval>
    </method>
    <method class_method="true" selector="textUnfilteredPasteboardTypes">
      <retval></retval>
    </method>
    <method class_method="true" selector="textUnfilteredTypes">
      <retval></retval>
    </method>
  </class>
  <class name="NSBezierPath" swt_gen="mixed">
    <method selector="addClip" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appendBezierPath:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appendBezierPathWithArcFromPoint:toPoint:radius:">
      <arg name="point1"></arg>
      <arg name="point2"></arg>
      <arg name="radius"></arg>
      <retval></retval>
    </method>
    <method selector="appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:" swt_gen="true">
      <arg name="center" swt_gen="true"></arg>
      <arg name="radius" swt_gen="true"></arg>
      <arg name="startAngle" swt_gen="true"></arg>
      <arg name="endAngle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:clockwise:" swt_gen="true">
      <arg name="center" swt_gen="true"></arg>
      <arg name="radius" swt_gen="true"></arg>
      <arg name="startAngle" swt_gen="true"></arg>
      <arg name="endAngle" swt_gen="true"></arg>
      <arg name="clockwise" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appendBezierPathWithGlyph:inFont:">
      <arg name="glyph"></arg>
      <arg name="font"></arg>
      <retval></retval>
    </method>
    <method selector="appendBezierPathWithGlyphs:count:inFont:" swt_gen="true">
      <arg name="glyphs" swt_gen="true"></arg>
      <arg name="count" swt_gen="true"></arg>
      <arg name="font" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appendBezierPathWithOvalInRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appendBezierPathWithPackedGlyphs:">
      <arg name="packedGlyphs"></arg>
      <retval></retval>
    </method>
    <method selector="appendBezierPathWithPoints:count:">
      <arg name="points"></arg>
      <arg name="count"></arg>
      <retval></retval>
    </method>
    <method selector="appendBezierPathWithRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="appendBezierPathWithRoundedRect:xRadius:yRadius:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="xRadius" swt_gen="true"></arg>
      <arg name="yRadius" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="bezierPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bezierPathByFlatteningPath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bezierPathByReversingPath">
      <retval></retval>
    </method>
    <method class_method="true" selector="bezierPathWithOvalInRect:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="bezierPathWithRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="bezierPathWithRoundedRect:xRadius:yRadius:">
      <arg name="rect"></arg>
      <arg name="xRadius"></arg>
      <arg name="yRadius"></arg>
      <retval></retval>
    </method>
    <method selector="bounds" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cachesBezierPath">
      <retval></retval>
    </method>
    <method class_method="true" selector="clipRect:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="closePath" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="containsPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlPointBounds" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentPoint" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="curveToPoint:controlPoint1:controlPoint2:" swt_gen="true">
      <arg name="endPoint" swt_gen="true"></arg>
      <arg name="controlPoint1" swt_gen="true"></arg>
      <arg name="controlPoint2" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="defaultFlatness" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="defaultLineCapStyle">
      <retval></retval>
    </method>
    <method class_method="true" selector="defaultLineJoinStyle">
      <retval></retval>
    </method>
    <method class_method="true" selector="defaultLineWidth">
      <retval></retval>
    </method>
    <method class_method="true" selector="defaultMiterLimit">
      <retval></retval>
    </method>
    <method class_method="true" selector="defaultWindingRule">
      <retval></retval>
    </method>
    <method class_method="true" selector="drawPackedGlyphs:atPoint:">
      <arg name="packedGlyphs"></arg>
      <arg name="point"></arg>
      <retval></retval>
    </method>
    <method selector="elementAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="elementAtIndex:associatedPoints:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <arg name="points" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="elementCount" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fill" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="fillRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="flatness">
      <retval></retval>
    </method>
    <method selector="getLineDash:count:phase:">
      <arg name="pattern"></arg>
      <arg name="count"></arg>
      <arg name="phase"></arg>
      <retval></retval>
    </method>
    <method selector="isEmpty" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineCapStyle">
      <retval></retval>
    </method>
    <method selector="lineJoinStyle">
      <retval></retval>
    </method>
    <method selector="lineToPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineWidth">
      <retval></retval>
    </method>
    <method selector="miterLimit">
      <retval></retval>
    </method>
    <method selector="moveToPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="relativeCurveToPoint:controlPoint1:controlPoint2:">
      <arg name="endPoint"></arg>
      <arg name="controlPoint1"></arg>
      <arg name="controlPoint2"></arg>
      <retval></retval>
    </method>
    <method selector="relativeLineToPoint:">
      <arg name="point"></arg>
      <retval></retval>
    </method>
    <method selector="relativeMoveToPoint:">
      <arg name="point"></arg>
      <retval></retval>
    </method>
    <method selector="removeAllPoints" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAssociatedPoints:atIndex:">
      <arg name="points"></arg>
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="setCachesBezierPath:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setClip" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="setDefaultFlatness:" swt_gen="true">
      <arg name="flatness" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="setDefaultLineCapStyle:">
      <arg name="lineCapStyle"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="setDefaultLineJoinStyle:">
      <arg name="lineJoinStyle"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="setDefaultLineWidth:">
      <arg name="lineWidth"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="setDefaultMiterLimit:">
      <arg name="limit"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="setDefaultWindingRule:">
      <arg name="windingRule"></arg>
      <retval></retval>
    </method>
    <method selector="setFlatness:">
      <arg name="flatness"></arg>
      <retval></retval>
    </method>
    <method selector="setLineCapStyle:" swt_gen="true">
      <arg name="lineCapStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLineDash:count:phase:" swt_gen="true">
      <arg name="pattern" swt_gen="true" swt_java_type="float[]" swt_java_type64="double[]"></arg>
      <arg name="count" swt_gen="true"></arg>
      <arg name="phase" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLineJoinStyle:" swt_gen="true">
      <arg name="lineJoinStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLineWidth:" swt_gen="true">
      <arg name="lineWidth" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMiterLimit:" swt_gen="true">
      <arg name="miterLimit" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setWindingRule:" swt_gen="true">
      <arg name="windingRule" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stroke" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="strokeLineFromPoint:toPoint:">
      <arg name="point1"></arg>
      <arg name="point2"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="strokeRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="transformUsingAffineTransform:" swt_gen="true">
      <arg name="transform" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windingRule">
      <retval></retval>
    </method>
  </class>
  <class name="NSBitmapImageRep" swt_gen="mixed" swt_superclass="NSImageRep">
    <method selector="CGImage">
      <retval></retval>
    </method>
    <method selector="TIFFRepresentation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="TIFFRepresentationOfImageRepsInArray:">
      <arg name="array"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="TIFFRepresentationOfImageRepsInArray:usingCompression:factor:">
      <arg name="array"></arg>
      <arg name="comp"></arg>
      <arg name="factor"></arg>
      <retval></retval>
    </method>
    <method selector="TIFFRepresentationUsingCompression:factor:">
      <arg name="comp"></arg>
      <arg name="factor"></arg>
      <retval></retval>
    </method>
    <method selector="bitmapData" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bitmapFormat" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bitsPerPixel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bytesPerPlane" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bytesPerRow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canBeCompressedUsing:">
      <arg name="compression"></arg>
      <retval></retval>
    </method>
    <method selector="colorAtX:y:" swt_gen="true">
      <arg name="x" swt_gen="true"></arg>
      <arg name="y" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorizeByMappingGray:toColor:blackMapping:whiteMapping:">
      <arg name="midPoint"></arg>
      <arg name="midPointColor"></arg>
      <arg name="shadowColor"></arg>
      <arg name="lightColor"></arg>
      <retval></retval>
    </method>
    <method selector="getBitmapDataPlanes:" swt_gen="true">
      <arg name="data" swt_gen="true" swt_java_type="int[]" swt_java_type64="long[]"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getCompression:factor:">
      <arg name="compression"></arg>
      <arg name="factor"></arg>
      <retval></retval>
    </method>
    <method selector="getPixel:atX:y:">
      <arg name="p"></arg>
      <arg name="x"></arg>
      <arg name="y"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="getTIFFCompressionTypes:count:">
      <arg name="list"></arg>
      <arg name="numTypes"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="imageRepWithData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="imageRepsWithData:">
      <arg name="data"></arg>
      <retval></retval>
    </method>
    <method selector="incrementalLoadFromData:complete:">
      <arg name="data"></arg>
      <arg name="complete"></arg>
      <retval></retval>
    </method>
    <method selector="initForIncrementalLoad">
      <retval swt_java_type="NSBitmapImageRep"></retval>
    </method>
    <method selector="initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bitmapFormat:bytesPerRow:bitsPerPixel:" swt_gen="true">
      <arg name="planes" swt_gen="true"></arg>
      <arg name="width" swt_gen="true"></arg>
      <arg name="height" swt_gen="true"></arg>
      <arg name="bps" swt_gen="true"></arg>
      <arg name="spp" swt_gen="true"></arg>
      <arg name="alpha" swt_gen="true"></arg>
      <arg name="isPlanar" swt_gen="true"></arg>
      <arg name="colorSpaceName" swt_gen="true"></arg>
      <arg name="bitmapFormat" swt_gen="true"></arg>
      <arg name="rBytes" swt_gen="true"></arg>
      <arg name="pBits" swt_gen="true"></arg>
      <retval swt_gen="true" swt_java_type="NSBitmapImageRep"></retval>
    </method>
    <method selector="initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bytesPerRow:bitsPerPixel:" swt_gen="true">
      <arg name="planes" swt_gen="true"></arg>
      <arg name="width" swt_gen="true"></arg>
      <arg name="height" swt_gen="true"></arg>
      <arg name="bps" swt_gen="true"></arg>
      <arg name="spp" swt_gen="true"></arg>
      <arg name="alpha" swt_gen="true"></arg>
      <arg name="isPlanar" swt_gen="true"></arg>
      <arg name="colorSpaceName" swt_gen="true"></arg>
      <arg name="rBytes" swt_gen="true"></arg>
      <arg name="pBits" swt_gen="true"></arg>
      <retval swt_gen="true" swt_java_type="NSBitmapImageRep"></retval>
    </method>
    <method selector="initWithCGImage:">
      <arg name="cgImage"></arg>
      <retval swt_java_type="NSBitmapImageRep"></retval>
    </method>
    <method selector="initWithCIImage:">
      <arg name="ciImage"></arg>
      <retval swt_java_type="NSBitmapImageRep"></retval>
    </method>
    <method selector="initWithData:">
      <arg name="data"></arg>
      <retval swt_java_type="NSBitmapImageRep"></retval>
    </method>
    <method selector="initWithFocusedViewRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true" swt_java_type="NSBitmapImageRep"></retval>
    </method>
    <method selector="isPlanar" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="localizedNameForTIFFCompressionType:">
      <arg name="compression"></arg>
      <retval></retval>
    </method>
    <method selector="numberOfPlanes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="representationOfImageRepsInArray:usingType:properties:">
      <arg name="imageReps"></arg>
      <arg name="storageType"></arg>
      <arg name="properties"></arg>
      <retval></retval>
    </method>
    <method selector="representationUsingType:properties:">
      <arg name="storageType"></arg>
      <arg name="properties"></arg>
      <retval></retval>
    </method>
    <method selector="samplesPerPixel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setColor:atX:y:">
      <arg name="color"></arg>
      <arg name="x"></arg>
      <arg name="y"></arg>
      <retval></retval>
    </method>
    <method selector="setCompression:factor:">
      <arg name="compression"></arg>
      <arg name="factor"></arg>
      <retval></retval>
    </method>
    <method selector="setPixel:atX:y:">
      <arg name="p"></arg>
      <arg name="x"></arg>
      <arg name="y"></arg>
      <retval></retval>
    </method>
    <method selector="setProperty:withValue:">
      <arg name="property"></arg>
      <arg name="value"></arg>
      <retval></retval>
    </method>
    <method selector="valueForProperty:">
      <arg name="property"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSBox" swt_gen="mixed" swt_superclass="NSView">
    <method selector="borderColor">
      <retval></retval>
    </method>
    <method selector="borderRect">
      <retval></retval>
    </method>
    <method selector="borderType">
      <retval></retval>
    </method>
    <method selector="borderWidth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="boxType">
      <retval></retval>
    </method>
    <method selector="contentView">
      <retval swt_java_type="NSView"></retval>
    </method>
    <method selector="contentViewMargins" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cornerRadius">
      <retval></retval>
    </method>
    <method selector="fillColor">
      <retval></retval>
    </method>
    <method selector="isTransparent">
      <retval></retval>
    </method>
    <method selector="setBorderColor:">
      <arg name="borderColor"></arg>
      <retval></retval>
    </method>
    <method selector="setBorderType:" swt_gen="true">
      <arg name="aType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBorderWidth:" swt_gen="true">
      <arg name="borderWidth" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBoxType:" swt_gen="true">
      <arg name="boxType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContentView:" swt_gen="true">
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContentViewMargins:" swt_gen="true">
      <arg name="offsetSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCornerRadius:">
      <arg name="cornerRadius"></arg>
      <retval></retval>
    </method>
    <method selector="setFillColor:">
      <arg name="fillColor"></arg>
      <retval></retval>
    </method>
    <method selector="setFrameFromContentFrame:">
      <arg name="contentFrame"></arg>
      <retval></retval>
    </method>
    <method selector="setTitle:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleFont:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitlePosition:" swt_gen="true">
      <arg name="aPosition" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleWithMnemonic:">
      <arg name="stringWithAmpersand"></arg>
      <retval></retval>
    </method>
    <method selector="setTransparent:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="sizeToFit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="title">
      <retval></retval>
    </method>
    <method selector="titleCell" swt_gen="true">
      <retval swt_gen="true" swt_java_type="NSCell"></retval>
    </method>
    <method selector="titleFont">
      <retval></retval>
    </method>
    <method selector="titlePosition">
      <retval></retval>
    </method>
    <method selector="titleRect">
      <retval></retval>
    </method>
  </class>
  <class name="NSBrowser" swt_superclass="NSControl">
    <method selector="acceptsArrowKeys">
      <retval></retval>
    </method>
    <method selector="addColumn">
      <retval></retval>
    </method>
    <method selector="allowsBranchSelection">
      <retval></retval>
    </method>
    <method selector="allowsEmptySelection">
      <retval></retval>
    </method>
    <method selector="allowsMultipleSelection">
      <retval></retval>
    </method>
    <method selector="allowsTypeSelect">
      <retval></retval>
    </method>
    <method selector="backgroundColor">
      <retval></retval>
    </method>
    <method selector="canDragRowsWithIndexes:inColumn:withEvent:">
      <arg name="rowIndexes"></arg>
      <arg name="column"></arg>
      <arg name="event"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="cellClass">
      <retval></retval>
    </method>
    <method selector="cellPrototype">
      <retval></retval>
    </method>
    <method selector="columnContentWidthForColumnWidth:">
      <arg name="columnWidth"></arg>
      <retval></retval>
    </method>
    <method selector="columnOfMatrix:">
      <arg name="matrix"></arg>
      <retval></retval>
    </method>
    <method selector="columnResizingType">
      <retval></retval>
    </method>
    <method selector="columnWidthForColumnContentWidth:">
      <arg name="columnContentWidth"></arg>
      <retval></retval>
    </method>
    <method selector="columnsAutosaveName">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="displayAllColumns">
      <retval></retval>
    </method>
    <method selector="displayColumn:">
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="doClick:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="doDoubleClick:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="doubleAction">
      <retval></retval>
    </method>
    <method selector="draggingImageForRowsWithIndexes:inColumn:withEvent:offset:">
      <arg name="rowIndexes"></arg>
      <arg name="column"></arg>
      <arg name="event"></arg>
      <arg name="dragImageOffset"></arg>
      <retval></retval>
    </method>
    <method selector="drawTitleOfColumn:inRect:">
      <arg name="column"></arg>
      <arg name="aRect"></arg>
      <retval></retval>
    </method>
    <method selector="firstVisibleColumn">
      <retval></retval>
    </method>
    <method selector="frameOfColumn:">
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="frameOfInsideOfColumn:">
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="hasHorizontalScroller">
      <retval></retval>
    </method>
    <method selector="isLoaded">
      <retval></retval>
    </method>
    <method selector="isTitled">
      <retval></retval>
    </method>
    <method selector="lastColumn">
      <retval></retval>
    </method>
    <method selector="lastVisibleColumn">
      <retval></retval>
    </method>
    <method selector="loadColumnZero">
      <retval></retval>
    </method>
    <method selector="loadedCellAtRow:column:">
      <arg name="row"></arg>
      <arg name="col"></arg>
      <retval></retval>
    </method>
    <method selector="matrixClass">
      <retval></retval>
    </method>
    <method selector="matrixInColumn:">
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="maxVisibleColumns">
      <retval></retval>
    </method>
    <method selector="minColumnWidth">
      <retval></retval>
    </method>
    <method selector="numberOfVisibleColumns">
      <retval></retval>
    </method>
    <method selector="path">
      <retval></retval>
    </method>
    <method selector="pathSeparator">
      <retval></retval>
    </method>
    <method selector="pathToColumn:">
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="prefersAllColumnUserResizing">
      <retval></retval>
    </method>
    <method selector="reloadColumn:">
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="removeSavedColumnsWithAutosaveName:">
      <arg name="name"></arg>
      <retval></retval>
    </method>
    <method selector="reusesColumns">
      <retval></retval>
    </method>
    <method selector="scrollColumnToVisible:">
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="scrollColumnsLeftBy:">
      <arg name="shiftAmount"></arg>
      <retval></retval>
    </method>
    <method selector="scrollColumnsRightBy:">
      <arg name="shiftAmount"></arg>
      <retval></retval>
    </method>
    <method selector="scrollViaScroller:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="selectAll:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="selectRow:inColumn:">
      <arg name="row"></arg>
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="selectRowIndexes:inColumn:">
      <arg name="indexes"></arg>
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="selectedCell">
      <retval></retval>
    </method>
    <method selector="selectedCellInColumn:">
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="selectedCells">
      <retval></retval>
    </method>
    <method selector="selectedColumn">
      <retval></retval>
    </method>
    <method selector="selectedRowInColumn:">
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="selectedRowIndexesInColumn:">
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="sendAction">
      <retval></retval>
    </method>
    <method selector="sendsActionOnArrowKeys">
      <retval></retval>
    </method>
    <method selector="separatesColumns">
      <retval></retval>
    </method>
    <method selector="setAcceptsArrowKeys:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setAllowsBranchSelection:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setAllowsEmptySelection:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setAllowsMultipleSelection:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setAllowsTypeSelect:">
      <arg name="value"></arg>
      <retval></retval>
    </method>
    <method selector="setBackgroundColor:">
      <arg name="color"></arg>
      <retval></retval>
    </method>
    <method selector="setCellClass:">
      <arg name="factoryId"></arg>
      <retval></retval>
    </method>
    <method selector="setCellPrototype:">
      <arg name="aCell"></arg>
      <retval></retval>
    </method>
    <method selector="setColumnResizingType:">
      <arg name="columnResizingType"></arg>
      <retval></retval>
    </method>
    <method selector="setColumnsAutosaveName:">
      <arg name="name"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:">
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
    <method selector="setDoubleAction:">
      <arg name="aSelector"></arg>
      <retval></retval>
    </method>
    <method selector="setDraggingSourceOperationMask:forLocal:">
      <arg name="mask"></arg>
      <arg name="isLocal"></arg>
      <retval></retval>
    </method>
    <method selector="setHasHorizontalScroller:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setLastColumn:">
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="setMatrixClass:">
      <arg name="factoryId"></arg>
      <retval></retval>
    </method>
    <method selector="setMaxVisibleColumns:">
      <arg name="columnCount"></arg>
      <retval></retval>
    </method>
    <method selector="setMinColumnWidth:">
      <arg name="columnWidth"></arg>
      <retval></retval>
    </method>
    <method selector="setPath:">
      <arg name="path"></arg>
      <retval></retval>
    </method>
    <method selector="setPathSeparator:">
      <arg name="newString"></arg>
      <retval></retval>
    </method>
    <method selector="setPrefersAllColumnUserResizing:">
      <arg name="prefersAllColumnResizing"></arg>
      <retval></retval>
    </method>
    <method selector="setReusesColumns:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setSendsActionOnArrowKeys:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setSeparatesColumns:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setTakesTitleFromPreviousColumn:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setTitle:ofColumn:">
      <arg name="aString"></arg>
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="setTitled:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setWidth:ofColumn:">
      <arg name="columnWidth"></arg>
      <arg name="columnIndex"></arg>
      <retval></retval>
    </method>
    <method selector="takesTitleFromPreviousColumn">
      <retval></retval>
    </method>
    <method selector="tile">
      <retval></retval>
    </method>
    <method selector="titleFrameOfColumn:">
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="titleHeight">
      <retval></retval>
    </method>
    <method selector="titleOfColumn:">
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="updateScroller">
      <retval></retval>
    </method>
    <method selector="validateVisibleColumns">
      <retval></retval>
    </method>
    <method selector="widthOfColumn:">
      <arg name="column"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSBrowserCell" swt_gen="mixed" swt_superclass="NSCell">
    <method selector="alternateImage">
      <retval></retval>
    </method>
    <method class_method="true" selector="branchImage">
      <retval></retval>
    </method>
    <method selector="highlightColorInView:" swt_gen="true">
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="highlightedBranchImage">
      <retval></retval>
    </method>
    <method selector="image">
      <retval></retval>
    </method>
    <method selector="isLeaf">
      <retval></retval>
    </method>
    <method selector="isLoaded">
      <retval></retval>
    </method>
    <method selector="reset">
      <retval></retval>
    </method>
    <method selector="set">
      <retval></retval>
    </method>
    <method selector="setAlternateImage:">
      <arg name="newAltImage"></arg>
      <retval></retval>
    </method>
    <method selector="setImage:">
      <arg name="image"></arg>
      <retval></retval>
    </method>
    <method selector="setLeaf:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLoaded:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSBundle" swt_gen="mixed">
    <method selector="contextHelpForKey:">
      <arg name="key"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="loadNibFile:externalNameTable:withZone:" swt_gen="true">
      <arg name="fileName" swt_gen="true"></arg>
      <arg name="context" swt_gen="true"></arg>
      <arg name="zone" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="loadNibFile:externalNameTable:withZone:">
      <arg name="fileName"></arg>
      <arg name="context"></arg>
      <arg name="zone"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="loadNibNamed:owner:">
      <arg name="nibName"></arg>
      <arg name="owner"></arg>
      <retval></retval>
    </method>
    <method selector="pathForImageResource:">
      <arg name="name"></arg>
      <retval></retval>
    </method>
    <method selector="pathForSoundResource:">
      <arg name="name"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSButton" swt_gen="mixed" swt_superclass="NSControl">
    <method selector="allowsMixedState">
      <retval></retval>
    </method>
    <method selector="alternateImage">
      <retval></retval>
    </method>
    <method selector="alternateTitle">
      <retval></retval>
    </method>
    <method selector="attributedAlternateTitle">
      <retval></retval>
    </method>
    <method selector="attributedTitle">
      <retval></retval>
    </method>
    <method selector="bezelStyle">
      <retval></retval>
    </method>
    <method selector="getPeriodicDelay:interval:">
      <arg name="delay"></arg>
      <arg name="interval"></arg>
      <retval></retval>
    </method>
    <method selector="highlight:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="image">
      <retval></retval>
    </method>
    <method selector="imagePosition">
      <retval></retval>
    </method>
    <method selector="isBordered">
      <retval></retval>
    </method>
    <method selector="isTransparent">
      <retval></retval>
    </method>
    <method selector="keyEquivalent">
      <retval></retval>
    </method>
    <method selector="keyEquivalentModifierMask">
      <retval></retval>
    </method>
    <method selector="performKeyEquivalent:">
      <arg name="key"></arg>
      <retval></retval>
    </method>
    <method selector="setAllowsMixedState:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlternateImage:">
      <arg name="image"></arg>
      <retval></retval>
    </method>
    <method selector="setAlternateTitle:">
      <arg name="aString"></arg>
      <retval></retval>
    </method>
    <method selector="setAttributedAlternateTitle:">
      <arg name="obj"></arg>
      <retval></retval>
    </method>
    <method selector="setAttributedTitle:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBezelStyle:" swt_gen="true">
      <arg name="bezelStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBordered:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setButtonType:" swt_gen="true">
      <arg name="aType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImagePosition:" swt_gen="true">
      <arg name="aPosition" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setKeyEquivalent:">
      <arg name="charCode"></arg>
      <retval></retval>
    </method>
    <method selector="setKeyEquivalentModifierMask:">
      <arg name="mask"></arg>
      <retval></retval>
    </method>
    <method selector="setNextState">
      <retval></retval>
    </method>
    <method selector="setPeriodicDelay:interval:">
      <arg name="delay"></arg>
      <arg name="interval"></arg>
      <retval></retval>
    </method>
    <method selector="setShowsBorderOnlyWhileMouseInside:">
      <arg name="show"></arg>
      <retval></retval>
    </method>
    <method selector="setSound:">
      <arg name="aSound"></arg>
      <retval></retval>
    </method>
    <method selector="setState:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitle:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleWithMnemonic:">
      <arg name="stringWithAmpersand"></arg>
      <retval></retval>
    </method>
    <method selector="setTransparent:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="showsBorderOnlyWhileMouseInside">
      <retval></retval>
    </method>
    <method selector="sound">
      <retval></retval>
    </method>
    <method selector="state" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="title">
      <retval></retval>
    </method>
  </class>
  <class name="NSButtonCell" swt_gen="mixed" swt_superclass="NSActionCell">
    <method selector="alternateImage">
      <retval></retval>
    </method>
    <method selector="alternateMnemonic">
      <retval></retval>
    </method>
    <method selector="alternateMnemonicLocation">
      <retval></retval>
    </method>
    <method selector="alternateTitle">
      <retval></retval>
    </method>
    <method selector="attributedAlternateTitle">
      <retval></retval>
    </method>
    <method selector="attributedTitle">
      <retval></retval>
    </method>
    <method selector="backgroundColor">
      <retval></retval>
    </method>
    <method selector="bezelStyle">
      <retval></retval>
    </method>
    <method selector="drawBezelWithFrame:inView:">
      <arg name="frame"></arg>
      <arg name="controlView"></arg>
      <retval></retval>
    </method>
    <method selector="drawImage:withFrame:inView:">
      <arg name="image"></arg>
      <arg name="frame"></arg>
      <arg name="controlView"></arg>
      <retval></retval>
    </method>
    <method selector="drawTitle:withFrame:inView:">
      <arg name="title"></arg>
      <arg name="frame"></arg>
      <arg name="controlView"></arg>
      <retval></retval>
    </method>
    <method selector="getPeriodicDelay:interval:">
      <arg name="delay"></arg>
      <arg name="interval"></arg>
      <retval></retval>
    </method>
    <method selector="gradientType">
      <retval></retval>
    </method>
    <method selector="highlightsBy">
      <retval></retval>
    </method>
    <method selector="imageDimsWhenDisabled">
      <retval></retval>
    </method>
    <method selector="imagePosition">
      <retval></retval>
    </method>
    <method selector="imageScaling">
      <retval></retval>
    </method>
    <method selector="isOpaque">
      <retval></retval>
    </method>
    <method selector="isTransparent">
      <retval></retval>
    </method>
    <method selector="keyEquivalent">
      <retval></retval>
    </method>
    <method selector="keyEquivalentFont">
      <retval></retval>
    </method>
    <method selector="keyEquivalentModifierMask">
      <retval></retval>
    </method>
    <method selector="mouseEntered:">
      <arg name="event"></arg>
      <retval></retval>
    </method>
    <method selector="mouseExited:">
      <arg name="event"></arg>
      <retval></retval>
    </method>
    <method selector="performClick:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="setAlternateImage:">
      <arg name="image"></arg>
      <retval></retval>
    </method>
    <method selector="setAlternateMnemonicLocation:">
      <arg name="location"></arg>
      <retval></retval>
    </method>
    <method selector="setAlternateTitle:">
      <arg name="aString"></arg>
      <retval></retval>
    </method>
    <method selector="setAlternateTitleWithMnemonic:">
      <arg name="stringWithAmpersand"></arg>
      <retval></retval>
    </method>
    <method selector="setAttributedAlternateTitle:">
      <arg name="obj"></arg>
      <retval></retval>
    </method>
    <method selector="setAttributedTitle:">
      <arg name="obj"></arg>
      <retval></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBezelStyle:">
      <arg name="bezelStyle"></arg>
      <retval></retval>
    </method>
    <method selector="setButtonType:" swt_gen="true">
      <arg name="aType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFont:">
      <arg name="fontObj"></arg>
      <retval></retval>
    </method>
    <method selector="setGradientType:">
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="setHighlightsBy:">
      <arg name="aType"></arg>
      <retval></retval>
    </method>
    <method selector="setImageDimsWhenDisabled:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setImagePosition:" swt_gen="true">
      <arg name="aPosition" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImageScaling:">
      <arg name="scaling"></arg>
      <retval></retval>
    </method>
    <method selector="setKeyEquivalent:">
      <arg name="aKeyEquivalent"></arg>
      <retval></retval>
    </method>
    <method selector="setKeyEquivalentFont:">
      <arg name="fontObj"></arg>
      <retval></retval>
    </method>
    <method selector="setKeyEquivalentFont:size:">
      <arg name="fontName"></arg>
      <arg name="fontSize"></arg>
      <retval></retval>
    </method>
    <method selector="setKeyEquivalentModifierMask:">
      <arg name="mask"></arg>
      <retval></retval>
    </method>
    <method selector="setPeriodicDelay:interval:">
      <arg name="delay"></arg>
      <arg name="interval"></arg>
      <retval></retval>
    </method>
    <method selector="setShowsBorderOnlyWhileMouseInside:">
      <arg name="show"></arg>
      <retval></retval>
    </method>
    <method selector="setShowsStateBy:">
      <arg name="aType"></arg>
      <retval></retval>
    </method>
    <method selector="setSound:">
      <arg name="aSound"></arg>
      <retval></retval>
    </method>
    <method selector="setTitle:">
      <arg name="aString"></arg>
      <retval></retval>
    </method>
    <method selector="setTitleWithMnemonic:">
      <arg name="stringWithAmpersand"></arg>
      <retval></retval>
    </method>
    <method selector="setTransparent:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="showsBorderOnlyWhileMouseInside">
      <retval></retval>
    </method>
    <method selector="showsStateBy">
      <retval></retval>
    </method>
    <method selector="sound">
      <retval></retval>
    </method>
    <method selector="title" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSCIImageRep" swt_superclass="NSImageRep">
    <method selector="CIImage">
      <retval></retval>
    </method>
    <method class_method="true" selector="imageRepWithCIImage:">
      <arg name="image"></arg>
      <retval></retval>
    </method>
    <method selector="initWithCIImage:">
      <arg name="image"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSCachedImageRep" swt_superclass="NSImageRep">
    <method selector="initWithSize:depth:separate:alpha:">
      <arg name="size"></arg>
      <arg name="depth"></arg>
      <arg name="flag"></arg>
      <arg name="alpha"></arg>
      <retval></retval>
    </method>
    <method selector="initWithWindow:rect:">
      <arg name="win"></arg>
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="rect">
      <retval></retval>
    </method>
    <method selector="window">
      <retval></retval>
    </method>
  </class>
  <class name="NSCell" swt_gen="mixed">
    <method selector="acceptsFirstResponder">
      <retval></retval>
    </method>
    <method selector="action">
      <retval></retval>
    </method>
    <method selector="alignment">
      <retval></retval>
    </method>
    <method selector="allowsEditingTextAttributes">
      <retval></retval>
    </method>
    <method selector="allowsMixedState">
      <retval></retval>
    </method>
    <method selector="allowsUndo">
      <retval></retval>
    </method>
    <method selector="attributedStringValue">
      <retval></retval>
    </method>
    <method selector="backgroundStyle">
      <retval></retval>
    </method>
    <method selector="baseWritingDirection">
      <retval></retval>
    </method>
    <method selector="calcDrawInfo:">
      <arg name="aRect"></arg>
      <retval></retval>
    </method>
    <method selector="cellAttribute:">
      <arg name="aParameter"></arg>
      <retval></retval>
    </method>
    <method selector="cellSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cellSizeForBounds:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="compare:">
      <arg name="otherCell"></arg>
      <retval></retval>
    </method>
    <method selector="continueTracking:at:inView:">
      <arg name="lastPoint"></arg>
      <arg name="currentPoint"></arg>
      <arg name="controlView"></arg>
      <retval></retval>
    </method>
    <method selector="controlSize">
      <retval></retval>
    </method>
    <method selector="controlTint">
      <retval></retval>
    </method>
    <method selector="controlView">
      <retval></retval>
    </method>
    <method class_method="true" selector="defaultFocusRingType">
      <retval></retval>
    </method>
    <method class_method="true" selector="defaultMenu">
      <retval></retval>
    </method>
    <method selector="doubleValue">
      <retval></retval>
    </method>
    <method selector="drawInteriorWithFrame:inView:" swt_gen="true">
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawWithExpansionFrame:inView:">
      <arg name="cellFrame"></arg>
      <arg name="view"></arg>
      <retval></retval>
    </method>
    <method selector="drawWithFrame:inView:">
      <arg name="cellFrame"></arg>
      <arg name="controlView"></arg>
      <retval></retval>
    </method>
    <method selector="drawingRectForBounds:" swt_gen="true">
      <arg name="theRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="editWithFrame:inView:editor:delegate:event:">
      <arg name="aRect"></arg>
      <arg name="controlView"></arg>
      <arg name="textObj"></arg>
      <arg name="anObject"></arg>
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method selector="endEditing:">
      <arg name="textObj"></arg>
      <retval></retval>
    </method>
    <method selector="entryType">
      <retval></retval>
    </method>
    <method selector="expansionFrameWithFrame:inView:">
      <arg name="cellFrame"></arg>
      <arg name="view"></arg>
      <retval></retval>
    </method>
    <method selector="floatValue">
      <retval></retval>
    </method>
    <method selector="focusRingType">
      <retval></retval>
    </method>
    <method selector="font" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="formatter">
      <retval></retval>
    </method>
    <method selector="getPeriodicDelay:interval:">
      <arg name="delay"></arg>
      <arg name="interval"></arg>
      <retval></retval>
    </method>
    <method selector="hasValidObjectValue">
      <retval></retval>
    </method>
    <method selector="highlight:withFrame:inView:">
      <arg name="flag"></arg>
      <arg name="cellFrame"></arg>
      <arg name="controlView"></arg>
      <retval></retval>
    </method>
    <method selector="highlightColorWithFrame:inView:">
      <arg name="cellFrame"></arg>
      <arg name="controlView"></arg>
      <retval></retval>
    </method>
    <method selector="hitTestForEvent:inRect:ofView:">
      <arg name="event"></arg>
      <arg name="cellFrame"></arg>
      <arg name="controlView"></arg>
      <retval></retval>
    </method>
    <method selector="image">
      <retval></retval>
    </method>
    <method selector="imageRectForBounds:">
      <arg name="theRect"></arg>
      <retval></retval>
    </method>
    <method selector="importsGraphics">
      <retval></retval>
    </method>
    <method selector="initImageCell:">
      <arg name="image"></arg>
      <retval></retval>
    </method>
    <method selector="initTextCell:">
      <arg name="aString"></arg>
      <retval></retval>
    </method>
    <method selector="intValue">
      <retval></retval>
    </method>
    <method selector="integerValue">
      <retval></retval>
    </method>
    <method selector="interiorBackgroundStyle">
      <retval></retval>
    </method>
    <method selector="isBezeled">
      <retval></retval>
    </method>
    <method selector="isBordered">
      <retval></retval>
    </method>
    <method selector="isContinuous">
      <retval></retval>
    </method>
    <method selector="isEditable">
      <retval></retval>
    </method>
    <method selector="isEnabled">
      <retval></retval>
    </method>
    <method selector="isEntryAcceptable:">
      <arg name="aString"></arg>
      <retval></retval>
    </method>
    <method selector="isHighlighted">
      <retval></retval>
    </method>
    <method selector="isOpaque">
      <retval></retval>
    </method>
    <method selector="isScrollable">
      <retval></retval>
    </method>
    <method selector="isSelectable">
      <retval></retval>
    </method>
    <method selector="keyEquivalent">
      <retval></retval>
    </method>
    <method selector="lineBreakMode">
      <retval></retval>
    </method>
    <method selector="menu">
      <retval></retval>
    </method>
    <method selector="menuForEvent:inRect:ofView:">
      <arg name="event"></arg>
      <arg name="cellFrame"></arg>
      <arg name="view"></arg>
      <retval></retval>
    </method>
    <method selector="mnemonic">
      <retval></retval>
    </method>
    <method selector="mnemonicLocation">
      <retval></retval>
    </method>
    <method selector="mouseDownFlags">
      <retval></retval>
    </method>
    <method selector="nextState" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectValue">
      <retval></retval>
    </method>
    <method selector="performClick:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="prefersTrackingUntilMouseUp">
      <retval></retval>
    </method>
    <method selector="refusesFirstResponder">
      <retval></retval>
    </method>
    <method selector="representedObject">
      <retval></retval>
    </method>
    <method selector="resetCursorRect:inView:">
      <arg name="cellFrame"></arg>
      <arg name="controlView"></arg>
      <retval></retval>
    </method>
    <method selector="selectWithFrame:inView:editor:delegate:start:length:">
      <arg name="aRect"></arg>
      <arg name="controlView"></arg>
      <arg name="textObj"></arg>
      <arg name="anObject"></arg>
      <arg name="selStart"></arg>
      <arg name="selLength"></arg>
      <retval></retval>
    </method>
    <method selector="sendActionOn:">
      <arg name="mask"></arg>
      <retval></retval>
    </method>
    <method selector="sendsActionOnEndEditing">
      <retval></retval>
    </method>
    <method selector="setAction:">
      <arg name="aSelector"></arg>
      <retval></retval>
    </method>
    <method selector="setAlignment:">
      <arg name="mode"></arg>
      <retval></retval>
    </method>
    <method selector="setAllowsEditingTextAttributes:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setAllowsMixedState:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsUndo:">
      <arg name="allowsUndo"></arg>
      <retval></retval>
    </method>
    <method selector="setAttributedStringValue:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundStyle:">
      <arg name="style"></arg>
      <retval></retval>
    </method>
    <method selector="setBaseWritingDirection:">
      <arg name="writingDirection"></arg>
      <retval></retval>
    </method>
    <method selector="setBezeled:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setBordered:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setCellAttribute:to:">
      <arg name="aParameter"></arg>
      <arg name="value"></arg>
      <retval></retval>
    </method>
    <method selector="setContinuous:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setControlSize:">
      <arg name="size"></arg>
      <retval></retval>
    </method>
    <method selector="setControlTint:">
      <arg name="controlTint"></arg>
      <retval></retval>
    </method>
    <method selector="setControlView:">
      <arg name="view"></arg>
      <retval></retval>
    </method>
    <method selector="setDoubleValue:">
      <arg name="aDouble"></arg>
      <retval></retval>
    </method>
    <method selector="setEditable:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setEnabled:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setEntryType:">
      <arg name="aType"></arg>
      <retval></retval>
    </method>
    <method selector="setFloatValue:">
      <arg name="aFloat"></arg>
      <retval></retval>
    </method>
    <method selector="setFloatingPointFormat:left:right:">
      <arg name="autoRange"></arg>
      <arg name="leftDigits"></arg>
      <arg name="rightDigits"></arg>
      <retval></retval>
    </method>
    <method selector="setFocusRingType:">
      <arg name="focusRingType"></arg>
      <retval></retval>
    </method>
    <method selector="setFont:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFormatter:" swt_gen="true">
      <arg name="newFormatter" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHighlighted:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImportsGraphics:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setIntValue:">
      <arg name="anInt"></arg>
      <retval></retval>
    </method>
    <method selector="setIntegerValue:">
      <arg name="anInteger"></arg>
      <retval></retval>
    </method>
    <method selector="setLineBreakMode:">
      <arg name="mode"></arg>
      <retval></retval>
    </method>
    <method selector="setMenu:">
      <arg name="aMenu"></arg>
      <retval></retval>
    </method>
    <method selector="setMnemonicLocation:">
      <arg name="location"></arg>
      <retval></retval>
    </method>
    <method selector="setNextState">
      <retval></retval>
    </method>
    <method selector="setObjectValue:">
      <arg name="obj"></arg>
      <retval></retval>
    </method>
    <method selector="setRefusesFirstResponder:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setRepresentedObject:">
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
    <method selector="setScrollable:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectable:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setSendsActionOnEndEditing:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setShowsFirstResponder:">
      <arg name="showFR"></arg>
      <retval></retval>
    </method>
    <method selector="setState:">
      <arg name="value"></arg>
      <retval></retval>
    </method>
    <method selector="setStringValue:">
      <arg name="aString"></arg>
      <retval></retval>
    </method>
    <method selector="setTag:">
      <arg name="anInt"></arg>
      <retval></retval>
    </method>
    <method selector="setTarget:">
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
    <method selector="setTitle:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleWithMnemonic:">
      <arg name="stringWithAmpersand"></arg>
      <retval></retval>
    </method>
    <method selector="setTruncatesLastVisibleLine:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setType:">
      <arg name="aType"></arg>
      <retval></retval>
    </method>
    <method selector="setUpFieldEditorAttributes:">
      <arg name="textObj"></arg>
      <retval></retval>
    </method>
    <method selector="setWraps:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showsFirstResponder">
      <retval></retval>
    </method>
    <method selector="startTrackingAt:inView:">
      <arg name="startPoint"></arg>
      <arg name="controlView"></arg>
      <retval></retval>
    </method>
    <method selector="state">
      <retval></retval>
    </method>
    <method selector="stopTracking:at:inView:mouseIsUp:">
      <arg name="lastPoint"></arg>
      <arg name="stopPoint"></arg>
      <arg name="controlView"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="stringValue">
      <retval></retval>
    </method>
    <method selector="tag">
      <retval></retval>
    </method>
    <method selector="takeDoubleValueFrom:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="takeFloatValueFrom:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="takeIntValueFrom:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="takeIntegerValueFrom:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="takeObjectValueFrom:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="takeStringValueFrom:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="target">
      <retval></retval>
    </method>
    <method selector="title" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="titleRectForBounds:" swt_gen="true">
      <arg name="theRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="trackMouse:inRect:ofView:untilMouseUp:">
      <arg name="theEvent"></arg>
      <arg name="cellFrame"></arg>
      <arg name="controlView"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="truncatesLastVisibleLine">
      <retval></retval>
    </method>
    <method selector="type">
      <retval></retval>
    </method>
    <method selector="wantsNotificationForMarkedText">
      <retval></retval>
    </method>
    <method selector="wraps" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSClipView" swt_gen="mixed" swt_superclass="NSView">
    <method selector="autoscroll:">
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method selector="backgroundColor">
      <retval></retval>
    </method>
    <method selector="constrainScrollPoint:">
      <arg name="newOrigin"></arg>
      <retval></retval>
    </method>
    <method selector="copiesOnScroll">
      <retval></retval>
    </method>
    <method selector="documentCursor">
      <retval></retval>
    </method>
    <method selector="documentRect">
      <retval></retval>
    </method>
    <method selector="documentView">
      <retval></retval>
    </method>
    <method selector="documentVisibleRect">
      <retval></retval>
    </method>
    <method selector="drawsBackground">
      <retval></retval>
    </method>
    <method selector="scrollToPoint:" swt_gen="true">
      <arg name="newOrigin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundColor:">
      <arg name="color"></arg>
      <retval></retval>
    </method>
    <method selector="setCopiesOnScroll:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setDocumentCursor:">
      <arg name="anObj"></arg>
      <retval></retval>
    </method>
    <method selector="setDocumentView:">
      <arg name="aView"></arg>
      <retval></retval>
    </method>
    <method selector="setDrawsBackground:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="viewBoundsChanged:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="viewFrameChanged:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSCoder">
    <method selector="decodeNXColor">
      <retval></retval>
    </method>
  </class>
  <class name="NSCollectionView" swt_superclass="NSView">
    <method selector="allowsMultipleSelection">
      <retval></retval>
    </method>
    <method selector="backgroundColors">
      <retval></retval>
    </method>
    <method selector="content">
      <retval></retval>
    </method>
    <method selector="isFirstResponder">
      <retval></retval>
    </method>
    <method selector="isSelectable">
      <retval></retval>
    </method>
    <method selector="itemPrototype">
      <retval></retval>
    </method>
    <method selector="maxItemSize">
      <retval></retval>
    </method>
    <method selector="maxNumberOfColumns">
      <retval></retval>
    </method>
    <method selector="maxNumberOfRows">
      <retval></retval>
    </method>
    <method selector="minItemSize">
      <retval></retval>
    </method>
    <method selector="newItemForRepresentedObject:">
      <arg name="object"></arg>
      <retval></retval>
    </method>
    <method selector="selectionIndexes">
      <retval></retval>
    </method>
    <method selector="setAllowsMultipleSelection:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setBackgroundColors:">
      <arg name="colors"></arg>
      <retval></retval>
    </method>
    <method selector="setContent:">
      <arg name="content"></arg>
      <retval></retval>
    </method>
    <method selector="setItemPrototype:">
      <arg name="prototype"></arg>
      <retval></retval>
    </method>
    <method selector="setMaxItemSize:">
      <arg name="size"></arg>
      <retval></retval>
    </method>
    <method selector="setMaxNumberOfColumns:">
      <arg name="number"></arg>
      <retval></retval>
    </method>
    <method selector="setMaxNumberOfRows:">
      <arg name="number"></arg>
      <retval></retval>
    </method>
    <method selector="setMinItemSize:">
      <arg name="size"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectable:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectionIndexes:">
      <arg name="indexes"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSCollectionViewItem">
    <method selector="collectionView">
      <retval></retval>
    </method>
    <method selector="isSelected">
      <retval></retval>
    </method>
    <method selector="representedObject">
      <retval></retval>
    </method>
    <method selector="setRepresentedObject:">
      <arg name="object"></arg>
      <retval></retval>
    </method>
    <method selector="setSelected:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setView:">
      <arg name="view"></arg>
      <retval></retval>
    </method>
    <method selector="view">
      <retval></retval>
    </method>
  </class>
  <class name="NSColor" swt_gen="mixed">
    <method selector="alphaComponent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="alternateSelectedControlColor">
      <retval></retval>
    </method>
    <method class_method="true" selector="alternateSelectedControlTextColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="blackColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="blackComponent">
      <retval></retval>
    </method>
    <method selector="blendedColorWithFraction:ofColor:">
      <arg name="fraction"></arg>
      <arg name="color"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="blueColor">
      <retval></retval>
    </method>
    <method selector="blueComponent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="brightnessComponent">
      <retval></retval>
    </method>
    <method class_method="true" selector="brownColor">
      <retval></retval>
    </method>
    <method selector="catalogNameComponent">
      <retval></retval>
    </method>
    <method class_method="true" selector="clearColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="colorForControlTint:">
      <arg name="controlTint"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="colorFromPasteboard:">
      <arg name="pasteBoard"></arg>
      <retval></retval>
    </method>
    <method selector="colorNameComponent">
      <retval></retval>
    </method>
    <method selector="colorSpace">
      <retval></retval>
    </method>
    <method selector="colorSpaceName">
      <retval></retval>
    </method>
    <method selector="colorUsingColorSpace:" swt_gen="true">
      <arg name="space" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorUsingColorSpaceName:" swt_gen="true">
      <arg name="colorSpace" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="colorUsingColorSpaceName:device:">
      <arg name="colorSpace"></arg>
      <arg name="deviceDescription"></arg>
      <retval></retval>
    </method>
    <method selector="colorWithAlphaComponent:">
      <arg name="alpha"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="colorWithCIColor:">
      <arg name="color"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="colorWithCalibratedHue:saturation:brightness:alpha:">
      <arg name="hue"></arg>
      <arg name="saturation"></arg>
      <arg name="brightness"></arg>
      <arg name="alpha"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="colorWithCalibratedRed:green:blue:alpha:">
      <arg name="red"></arg>
      <arg name="green"></arg>
      <arg name="blue"></arg>
      <arg name="alpha"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="colorWithCalibratedWhite:alpha:">
      <arg name="white"></arg>
      <arg name="alpha"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="colorWithCatalogName:colorName:">
      <arg name="listName"></arg>
      <arg name="colorName"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="colorWithColorSpace:components:count:">
      <arg name="space"></arg>
      <arg name="components"></arg>
      <arg name="numberOfComponents"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="colorWithDeviceCyan:magenta:yellow:black:alpha:">
      <arg name="cyan"></arg>
      <arg name="magenta"></arg>
      <arg name="yellow"></arg>
      <arg name="black"></arg>
      <arg name="alpha"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="colorWithDeviceHue:saturation:brightness:alpha:">
      <arg name="hue"></arg>
      <arg name="saturation"></arg>
      <arg name="brightness"></arg>
      <arg name="alpha"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="colorWithDeviceRed:green:blue:alpha:" swt_gen="true">
      <arg name="red" swt_gen="true"></arg>
      <arg name="green" swt_gen="true"></arg>
      <arg name="blue" swt_gen="true"></arg>
      <arg name="alpha" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="colorWithDeviceWhite:alpha:">
      <arg name="white"></arg>
      <arg name="alpha"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="colorWithPatternImage:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="controlAlternatingRowBackgroundColors">
      <retval></retval>
    </method>
    <method class_method="true" selector="controlBackgroundColor">
      <retval></retval>
    </method>
    <method class_method="true" selector="controlColor">
      <retval></retval>
    </method>
    <method class_method="true" selector="controlDarkShadowColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="controlHighlightColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="controlLightHighlightColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="controlShadowColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="controlTextColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="currentControlTint">
      <retval></retval>
    </method>
    <method class_method="true" selector="cyanColor">
      <retval></retval>
    </method>
    <method selector="cyanComponent">
      <retval></retval>
    </method>
    <method class_method="true" selector="darkGrayColor">
      <retval></retval>
    </method>
    <method class_method="true" selector="disabledControlTextColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawSwatchInRect:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="getComponents:" swt_gen="true">
      <arg name="components" swt_gen="true" swt_java_type="float[]" swt_java_type64="double[]"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getCyan:magenta:yellow:black:alpha:">
      <arg name="cyan"></arg>
      <arg name="magenta"></arg>
      <arg name="yellow"></arg>
      <arg name="black"></arg>
      <arg name="alpha"></arg>
      <retval></retval>
    </method>
    <method selector="getHue:saturation:brightness:alpha:">
      <arg name="hue"></arg>
      <arg name="saturation"></arg>
      <arg name="brightness"></arg>
      <arg name="alpha"></arg>
      <retval></retval>
    </method>
    <method selector="getRed:green:blue:alpha:">
      <arg name="red"></arg>
      <arg name="green"></arg>
      <arg name="blue"></arg>
      <arg name="alpha"></arg>
      <retval></retval>
    </method>
    <method selector="getWhite:alpha:">
      <arg name="white"></arg>
      <arg name="alpha"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="grayColor">
      <retval></retval>
    </method>
    <method class_method="true" selector="greenColor">
      <retval></retval>
    </method>
    <method selector="greenComponent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="gridColor">
      <retval></retval>
    </method>
    <method class_method="true" selector="headerColor">
      <retval></retval>
    </method>
    <method class_method="true" selector="headerTextColor">
      <retval></retval>
    </method>
    <method class_method="true" selector="highlightColor">
      <retval></retval>
    </method>
    <method selector="highlightWithLevel:">
      <arg name="val"></arg>
      <retval></retval>
    </method>
    <method selector="hueComponent">
      <retval></retval>
    </method>
    <method class_method="true" selector="ignoresAlpha">
      <retval></retval>
    </method>
    <method class_method="true" selector="keyboardFocusIndicatorColor">
      <retval></retval>
    </method>
    <method class_method="true" selector="knobColor">
      <retval></retval>
    </method>
    <method class_method="true" selector="lightGrayColor">
      <retval></retval>
    </method>
    <method selector="localizedCatalogNameComponent">
      <retval></retval>
    </method>
    <method selector="localizedColorNameComponent">
      <retval></retval>
    </method>
    <method class_method="true" selector="magentaColor">
      <retval></retval>
    </method>
    <method selector="magentaComponent">
      <retval></retval>
    </method>
    <method selector="numberOfComponents" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="orangeColor">
      <retval></retval>
    </method>
    <method selector="patternImage">
      <retval></retval>
    </method>
    <method class_method="true" selector="purpleColor">
      <retval></retval>
    </method>
    <method class_method="true" selector="redColor">
      <retval></retval>
    </method>
    <method selector="redComponent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="saturationComponent">
      <retval></retval>
    </method>
    <method class_method="true" selector="scrollBarColor">
      <retval></retval>
    </method>
    <method class_method="true" selector="secondarySelectedControlColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="selectedControlColor">
      <retval></retval>
    </method>
    <method class_method="true" selector="selectedControlTextColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="selectedKnobColor">
      <retval></retval>
    </method>
    <method class_method="true" selector="selectedMenuItemColor">
      <retval></retval>
    </method>
    <method class_method="true" selector="selectedMenuItemTextColor">
      <retval></retval>
    </method>
    <method class_method="true" selector="selectedTextBackgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="selectedTextColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="set" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFill" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="setIgnoresAlpha:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setStroke" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="shadowColor">
      <retval></retval>
    </method>
    <method selector="shadowWithLevel:">
      <arg name="val"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="textBackgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="textColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="whiteColor">
      <retval></retval>
    </method>
    <method selector="whiteComponent">
      <retval></retval>
    </method>
    <method class_method="true" selector="windowBackgroundColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="windowFrameColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="windowFrameTextColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToPasteboard:">
      <arg name="pasteBoard"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="yellowColor">
      <retval></retval>
    </method>
    <method selector="yellowComponent">
      <retval></retval>
    </method>
  </class>
  <class name="NSColorList">
    <method selector="allKeys">
      <retval></retval>
    </method>
    <method class_method="true" selector="availableColorLists">
      <retval></retval>
    </method>
    <method class_method="true" selector="colorListNamed:">
      <arg name="name"></arg>
      <retval></retval>
    </method>
    <method selector="colorWithKey:">
      <arg name="key"></arg>
      <retval></retval>
    </method>
    <method selector="initWithName:">
      <arg name="name"></arg>
      <retval></retval>
    </method>
    <method selector="initWithName:fromFile:">
      <arg name="name"></arg>
      <arg name="path"></arg>
      <retval></retval>
    </method>
    <method selector="insertColor:key:atIndex:">
      <arg name="color"></arg>
      <arg name="key"></arg>
      <arg name="loc"></arg>
      <retval></retval>
    </method>
    <method selector="isEditable">
      <retval></retval>
    </method>
    <method selector="name">
      <retval></retval>
    </method>
    <method selector="removeColorWithKey:">
      <arg name="key"></arg>
      <retval></retval>
    </method>
    <method selector="removeFile">
      <retval></retval>
    </method>
    <method selector="setColor:forKey:">
      <arg name="color"></arg>
      <arg name="key"></arg>
      <retval></retval>
    </method>
    <method selector="writeToFile:">
      <arg name="path"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSColorPanel" swt_gen="mixed" swt_superclass="NSPanel">
    <method selector="accessoryView">
      <retval></retval>
    </method>
    <method selector="alpha">
      <retval></retval>
    </method>
    <method selector="attachColorList:">
      <arg name="colorList"></arg>
      <retval></retval>
    </method>
    <method selector="color" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="detachColorList:">
      <arg name="colorList"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="dragColor:withEvent:fromView:">
      <arg name="color"></arg>
      <arg name="theEvent"></arg>
      <arg name="sourceView"></arg>
      <retval></retval>
    </method>
    <method selector="isContinuous">
      <retval></retval>
    </method>
    <method selector="mode">
      <retval></retval>
    </method>
    <method selector="setAccessoryView:">
      <arg name="aView"></arg>
      <retval></retval>
    </method>
    <method selector="setAction:">
      <arg name="aSelector"></arg>
      <retval></retval>
    </method>
    <method selector="setColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContinuous:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setMode:">
      <arg name="mode"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="setPickerMask:">
      <arg name="mask"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="setPickerMode:">
      <arg name="mode"></arg>
      <retval></retval>
    </method>
    <method selector="setShowsAlpha:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setTarget:">
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="sharedColorPanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="sharedColorPanelExists">
      <retval></retval>
    </method>
    <method selector="showsAlpha">
      <retval></retval>
    </method>
  </class>
  <class name="NSColorPicker">
    <method selector="attachColorList:">
      <arg name="colorList"></arg>
      <retval></retval>
    </method>
    <method selector="buttonToolTip">
      <retval></retval>
    </method>
    <method selector="colorPanel">
      <retval></retval>
    </method>
    <method selector="detachColorList:">
      <arg name="colorList"></arg>
      <retval></retval>
    </method>
    <method selector="initWithPickerMask:colorPanel:">
      <arg name="mask"></arg>
      <arg name="owningColorPanel"></arg>
      <retval></retval>
    </method>
    <method selector="insertNewButtonImage:in:">
      <arg name="newButtonImage"></arg>
      <arg name="buttonCell"></arg>
      <retval></retval>
    </method>
    <method selector="minContentSize">
      <retval></retval>
    </method>
    <method selector="provideNewButtonImage">
      <retval></retval>
    </method>
    <method selector="setMode:">
      <arg name="mode"></arg>
      <retval></retval>
    </method>
    <method selector="viewSizeChanged:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSColorSpace" swt_gen="mixed">
    <method selector="CGColorSpace">
      <retval></retval>
    </method>
    <method selector="ICCProfileData">
      <retval></retval>
    </method>
    <method class_method="true" selector="adobeRGB1998ColorSpace">
      <retval></retval>
    </method>
    <method selector="colorSpaceModel">
      <retval></retval>
    </method>
    <method selector="colorSyncProfile">
      <retval></retval>
    </method>
    <method class_method="true" selector="deviceCMYKColorSpace">
      <retval></retval>
    </method>
    <method class_method="true" selector="deviceGrayColorSpace">
      <retval></retval>
    </method>
    <method class_method="true" selector="deviceRGBColorSpace" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="genericCMYKColorSpace">
      <retval></retval>
    </method>
    <method class_method="true" selector="genericGrayColorSpace">
      <retval></retval>
    </method>
    <method class_method="true" selector="genericRGBColorSpace">
      <retval></retval>
    </method>
    <method selector="initWithCGColorSpace:">
      <arg name="cgColorSpace"></arg>
      <retval></retval>
    </method>
    <method selector="initWithColorSyncProfile:">
      <arg name="prof"></arg>
      <retval></retval>
    </method>
    <method selector="initWithICCProfileData:">
      <arg name="iccData"></arg>
      <retval></retval>
    </method>
    <method selector="localizedName">
      <retval></retval>
    </method>
    <method selector="numberOfColorComponents">
      <retval></retval>
    </method>
    <method class_method="true" selector="sRGBColorSpace">
      <retval></retval>
    </method>
  </class>
  <class name="NSColorWell" swt_superclass="NSControl">
    <method selector="activate:">
      <arg name="exclusive"></arg>
      <retval></retval>
    </method>
    <method selector="color">
      <retval></retval>
    </method>
    <method selector="deactivate">
      <retval></retval>
    </method>
    <method selector="drawWellInside:">
      <arg name="insideRect"></arg>
      <retval></retval>
    </method>
    <method selector="isActive">
      <retval></retval>
    </method>
    <method selector="isBordered">
      <retval></retval>
    </method>
    <method selector="setBordered:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setColor:">
      <arg name="color"></arg>
      <retval></retval>
    </method>
    <method selector="takeColorFrom:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSComboBox" swt_gen="mixed" swt_superclass="NSTextField">
    <method selector="addItemWithObjectValue:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addItemsWithObjectValues:">
      <arg name="objects"></arg>
      <retval></retval>
    </method>
    <method selector="completes">
      <retval></retval>
    </method>
    <method selector="dataSource">
      <retval></retval>
    </method>
    <method selector="deselectItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasVerticalScroller">
      <retval></retval>
    </method>
    <method selector="indexOfItemWithObjectValue:">
      <arg name="object"></arg>
      <retval></retval>
    </method>
    <method selector="indexOfSelectedItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertItemWithObjectValue:atIndex:" swt_gen="true">
      <arg name="object" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="intercellSpacing">
      <retval></retval>
    </method>
    <method selector="isButtonBordered">
      <retval></retval>
    </method>
    <method selector="itemHeight">
      <retval></retval>
    </method>
    <method selector="itemObjectValueAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="noteNumberOfItemsChanged">
      <retval></retval>
    </method>
    <method selector="numberOfItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfVisibleItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="objectValueOfSelectedItem">
      <retval></retval>
    </method>
    <method selector="objectValues">
      <retval></retval>
    </method>
    <method selector="reloadData">
      <retval></retval>
    </method>
    <method selector="removeAllItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeItemWithObjectValue:">
      <arg name="object"></arg>
      <retval></retval>
    </method>
    <method selector="scrollItemAtIndexToTop:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="scrollItemAtIndexToVisible:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="selectItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectItemWithObjectValue:">
      <arg name="object"></arg>
      <retval></retval>
    </method>
    <method selector="setButtonBordered:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setCompletes:">
      <arg name="completes"></arg>
      <retval></retval>
    </method>
    <method selector="setDataSource:">
      <arg name="aSource"></arg>
      <retval></retval>
    </method>
    <method selector="setHasVerticalScroller:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setIntercellSpacing:">
      <arg name="aSize"></arg>
      <retval></retval>
    </method>
    <method selector="setItemHeight:">
      <arg name="itemHeight"></arg>
      <retval></retval>
    </method>
    <method selector="setNumberOfVisibleItems:" swt_gen="true">
      <arg name="visibleItems" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUsesDataSource:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="usesDataSource">
      <retval></retval>
    </method>
  </class>
  <class name="NSComboBoxCell" swt_superclass="NSTextFieldCell">
    <method selector="addItemWithObjectValue:">
      <arg name="object"></arg>
      <retval></retval>
    </method>
    <method selector="addItemsWithObjectValues:">
      <arg name="objects"></arg>
      <retval></retval>
    </method>
    <method selector="completedString:">
      <arg name="string"></arg>
      <retval></retval>
    </method>
    <method selector="completes">
      <retval></retval>
    </method>
    <method selector="dataSource">
      <retval></retval>
    </method>
    <method selector="deselectItemAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="hasVerticalScroller">
      <retval></retval>
    </method>
    <method selector="indexOfItemWithObjectValue:">
      <arg name="object"></arg>
      <retval></retval>
    </method>
    <method selector="indexOfSelectedItem">
      <retval></retval>
    </method>
    <method selector="insertItemWithObjectValue:atIndex:">
      <arg name="object"></arg>
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="intercellSpacing">
      <retval></retval>
    </method>
    <method selector="isButtonBordered">
      <retval></retval>
    </method>
    <method selector="itemHeight">
      <retval></retval>
    </method>
    <method selector="itemObjectValueAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="noteNumberOfItemsChanged">
      <retval></retval>
    </method>
    <method selector="numberOfItems">
      <retval></retval>
    </method>
    <method selector="numberOfVisibleItems">
      <retval></retval>
    </method>
    <method selector="objectValueOfSelectedItem">
      <retval></retval>
    </method>
    <method selector="objectValues">
      <retval></retval>
    </method>
    <method selector="reloadData">
      <retval></retval>
    </method>
    <method selector="removeAllItems">
      <retval></retval>
    </method>
    <method selector="removeItemAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="removeItemWithObjectValue:">
      <arg name="object"></arg>
      <retval></retval>
    </method>
    <method selector="scrollItemAtIndexToTop:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="scrollItemAtIndexToVisible:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="selectItemAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="selectItemWithObjectValue:">
      <arg name="object"></arg>
      <retval></retval>
    </method>
    <method selector="setButtonBordered:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setCompletes:">
      <arg name="completes"></arg>
      <retval></retval>
    </method>
    <method selector="setDataSource:">
      <arg name="aSource"></arg>
      <retval></retval>
    </method>
    <method selector="setHasVerticalScroller:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setIntercellSpacing:">
      <arg name="aSize"></arg>
      <retval></retval>
    </method>
    <method selector="setItemHeight:">
      <arg name="itemHeight"></arg>
      <retval></retval>
    </method>
    <method selector="setNumberOfVisibleItems:">
      <arg name="visibleItems"></arg>
      <retval></retval>
    </method>
    <method selector="setUsesDataSource:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="usesDataSource">
      <retval></retval>
    </method>
  </class>
  <class name="NSControl" swt_gen="mixed" swt_superclass="NSView">
    <method selector="abortEditing">
      <retval></retval>
    </method>
    <method selector="action" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="alignment">
      <retval></retval>
    </method>
    <method selector="attributedStringValue">
      <retval></retval>
    </method>
    <method selector="baseWritingDirection">
      <retval></retval>
    </method>
    <method selector="calcSize">
      <retval></retval>
    </method>
    <method selector="cell" swt_gen="true">
      <retval swt_gen="true" swt_java_type="NSCell"></retval>
    </method>
    <method class_method="true" selector="cellClass" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentEditor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doubleValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawCell:">
      <arg name="aCell"></arg>
      <retval></retval>
    </method>
    <method selector="drawCellInside:">
      <arg name="aCell"></arg>
      <retval></retval>
    </method>
    <method selector="floatValue">
      <retval></retval>
    </method>
    <method selector="font" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="formatter">
      <retval></retval>
    </method>
    <method selector="ignoresMultiClick">
      <retval></retval>
    </method>
    <method selector="initWithFrame:">
      <arg name="frameRect"></arg>
      <retval></retval>
    </method>
    <method selector="intValue">
      <retval></retval>
    </method>
    <method selector="integerValue">
      <retval></retval>
    </method>
    <method selector="isContinuous">
      <retval></retval>
    </method>
    <method selector="isEnabled">
      <retval></retval>
    </method>
    <method selector="mouseDown:">
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method selector="objectValue">
      <retval></retval>
    </method>
    <method selector="performClick:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="refusesFirstResponder">
      <retval></retval>
    </method>
    <method selector="selectCell:">
      <arg name="aCell"></arg>
      <retval></retval>
    </method>
    <method selector="selectedCell">
      <retval></retval>
    </method>
    <method selector="selectedTag">
      <retval></retval>
    </method>
    <method selector="sendAction:to:" swt_gen="true">
      <arg name="theAction" swt_gen="true"></arg>
      <arg name="theTarget" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sendActionOn:">
      <arg name="mask"></arg>
      <retval></retval>
    </method>
    <method selector="setAction:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlignment:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttributedStringValue:">
      <arg name="obj"></arg>
      <retval></retval>
    </method>
    <method selector="setBaseWritingDirection:">
      <arg name="writingDirection"></arg>
      <retval></retval>
    </method>
    <method selector="setCell:">
      <arg name="aCell"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="setCellClass:" swt_gen="true">
      <arg name="factoryId" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContinuous:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setDoubleValue:" swt_gen="true">
      <arg name="aDouble" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEnabled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFloatValue:">
      <arg name="aFloat"></arg>
      <retval></retval>
    </method>
    <method selector="setFloatingPointFormat:left:right:">
      <arg name="autoRange"></arg>
      <arg name="leftDigits"></arg>
      <arg name="rightDigits"></arg>
      <retval></retval>
    </method>
    <method selector="setFont:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFormatter:" swt_gen="true">
      <arg name="newFormatter" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIgnoresMultiClick:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setIntValue:">
      <arg name="anInt"></arg>
      <retval></retval>
    </method>
    <method selector="setIntegerValue:">
      <arg name="anInteger"></arg>
      <retval></retval>
    </method>
    <method selector="setNeedsDisplay">
      <retval></retval>
    </method>
    <method selector="setObjectValue:">
      <arg name="obj"></arg>
      <retval></retval>
    </method>
    <method selector="setRefusesFirstResponder:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setStringValue:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTag:">
      <arg name="anInt"></arg>
      <retval></retval>
    </method>
    <method selector="setTarget:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sizeToFit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tag">
      <retval></retval>
    </method>
    <method selector="takeDoubleValueFrom:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="takeFloatValueFrom:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="takeIntValueFrom:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="takeIntegerValueFrom:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="takeObjectValueFrom:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="takeStringValueFrom:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="target" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="updateCell:">
      <arg name="aCell"></arg>
      <retval></retval>
    </method>
    <method selector="updateCellInside:">
      <arg name="aCell"></arg>
      <retval></retval>
    </method>
    <method selector="validateEditing">
      <retval></retval>
    </method>
  </class>
  <class name="NSController">
    <method selector="commitEditing">
      <retval></retval>
    </method>
    <method selector="commitEditingWithDelegate:didCommitSelector:contextInfo:">
      <arg name="delegate"></arg>
      <arg name="didCommitSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="discardEditing">
      <retval></retval>
    </method>
    <method selector="isEditing">
      <retval></retval>
    </method>
    <method selector="objectDidBeginEditing:">
      <arg name="editor"></arg>
      <retval></retval>
    </method>
    <method selector="objectDidEndEditing:">
      <arg name="editor"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSCursor" swt_gen="mixed">
    <method class_method="true" selector="IBeamCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="arrowCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="closedHandCursor">
      <retval></retval>
    </method>
    <method class_method="true" selector="crosshairCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="currentCursor">
      <retval></retval>
    </method>
    <method class_method="true" selector="disappearingItemCursor">
      <retval></retval>
    </method>
    <method class_method="true" selector="hide">
      <retval></retval>
    </method>
    <method selector="hotSpot">
      <retval></retval>
    </method>
    <method selector="image">
      <retval></retval>
    </method>
    <method selector="initWithImage:foregroundColorHint:backgroundColorHint:hotSpot:">
      <arg name="newImage"></arg>
      <arg name="fg"></arg>
      <arg name="bg"></arg>
      <arg name="hotSpot"></arg>
      <retval></retval>
    </method>
    <method selector="initWithImage:hotSpot:" swt_gen="true">
      <arg name="newImage" swt_gen="true"></arg>
      <arg name="aPoint" swt_gen="true"></arg>
      <retval swt_gen="true" swt_java_type="NSCursor"></retval>
    </method>
    <method selector="isSetOnMouseEntered">
      <retval></retval>
    </method>
    <method selector="isSetOnMouseExited">
      <retval></retval>
    </method>
    <method selector="mouseEntered:">
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method selector="mouseExited:">
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="openHandCursor">
      <retval></retval>
    </method>
    <method class_method="true" selector="pointingHandCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pop">
      <retval></retval>
    </method>
    <method class_method="true" selector="pop">
      <retval></retval>
    </method>
    <method selector="push">
      <retval></retval>
    </method>
    <method class_method="true" selector="resizeDownCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="resizeLeftCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="resizeLeftRightCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="resizeRightCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="resizeUpCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="resizeUpDownCursor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="set" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="setHiddenUntilMouseMoves:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setOnMouseEntered:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setOnMouseExited:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="unhide">
      <retval></retval>
    </method>
  </class>
  <class name="NSCustomImageRep">
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="drawSelector">
      <retval></retval>
    </method>
    <method selector="initWithDrawSelector:delegate:">
      <arg name="aMethod"></arg>
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSDatePicker" swt_gen="mixed" swt_superclass="NSControl">
    <method selector="backgroundColor">
      <retval></retval>
    </method>
    <method selector="calendar">
      <retval></retval>
    </method>
    <method selector="datePickerElements">
      <retval></retval>
    </method>
    <method selector="datePickerMode">
      <retval></retval>
    </method>
    <method selector="datePickerStyle">
      <retval></retval>
    </method>
    <method selector="dateValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="drawsBackground">
      <retval></retval>
    </method>
    <method selector="isBezeled">
      <retval></retval>
    </method>
    <method selector="isBordered">
      <retval></retval>
    </method>
    <method selector="locale">
      <retval></retval>
    </method>
    <method selector="maxDate">
      <retval></retval>
    </method>
    <method selector="minDate">
      <retval></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBezeled:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setBordered:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setCalendar:">
      <arg name="newCalendar"></arg>
      <retval></retval>
    </method>
    <method selector="setDatePickerElements:" swt_gen="true">
      <arg name="elementFlags" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDatePickerMode:">
      <arg name="newMode"></arg>
      <retval></retval>
    </method>
    <method selector="setDatePickerStyle:" swt_gen="true">
      <arg name="newStyle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDateValue:" swt_gen="true">
      <arg name="newStartDate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:">
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
    <method selector="setDrawsBackground:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLocale:">
      <arg name="newLocale"></arg>
      <retval></retval>
    </method>
    <method selector="setMaxDate:">
      <arg name="date"></arg>
      <retval></retval>
    </method>
    <method selector="setMinDate:">
      <arg name="date"></arg>
      <retval></retval>
    </method>
    <method selector="setTextColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTimeInterval:">
      <arg name="newTimeInterval"></arg>
      <retval></retval>
    </method>
    <method selector="setTimeZone:">
      <arg name="newTimeZone"></arg>
      <retval></retval>
    </method>
    <method selector="textColor">
      <retval></retval>
    </method>
    <method selector="timeInterval">
      <retval></retval>
    </method>
    <method selector="timeZone">
      <retval></retval>
    </method>
  </class>
  <class name="NSDatePickerCell" swt_superclass="NSActionCell">
    <method selector="backgroundColor">
      <retval></retval>
    </method>
    <method selector="calendar">
      <retval></retval>
    </method>
    <method selector="datePickerElements">
      <retval></retval>
    </method>
    <method selector="datePickerMode">
      <retval></retval>
    </method>
    <method selector="datePickerStyle">
      <retval></retval>
    </method>
    <method selector="dateValue">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="drawsBackground">
      <retval></retval>
    </method>
    <method selector="locale">
      <retval></retval>
    </method>
    <method selector="maxDate">
      <retval></retval>
    </method>
    <method selector="minDate">
      <retval></retval>
    </method>
    <method selector="setBackgroundColor:">
      <arg name="color"></arg>
      <retval></retval>
    </method>
    <method selector="setCalendar:">
      <arg name="newCalendar"></arg>
      <retval></retval>
    </method>
    <method selector="setDatePickerElements:">
      <arg name="elementFlags"></arg>
      <retval></retval>
    </method>
    <method selector="setDatePickerMode:">
      <arg name="newMode"></arg>
      <retval></retval>
    </method>
    <method selector="setDatePickerStyle:">
      <arg name="newStyle"></arg>
      <retval></retval>
    </method>
    <method selector="setDateValue:">
      <arg name="newStartDate"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:">
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
    <method selector="setDrawsBackground:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setLocale:">
      <arg name="newLocale"></arg>
      <retval></retval>
    </method>
    <method selector="setMaxDate:">
      <arg name="date"></arg>
      <retval></retval>
    </method>
    <method selector="setMinDate:">
      <arg name="date"></arg>
      <retval></retval>
    </method>
    <method selector="setTextColor:">
      <arg name="color"></arg>
      <retval></retval>
    </method>
    <method selector="setTimeInterval:">
      <arg name="newTimeInterval"></arg>
      <retval></retval>
    </method>
    <method selector="setTimeZone:">
      <arg name="newTimeZone"></arg>
      <retval></retval>
    </method>
    <method selector="textColor">
      <retval></retval>
    </method>
    <method selector="timeInterval">
      <retval></retval>
    </method>
    <method selector="timeZone">
      <retval></retval>
    </method>
  </class>
  <class name="NSDictionaryController" swt_superclass="NSArrayController">
    <method selector="excludedKeys">
      <retval></retval>
    </method>
    <method selector="includedKeys">
      <retval></retval>
    </method>
    <method selector="initialKey">
      <retval></retval>
    </method>
    <method selector="initialValue">
      <retval></retval>
    </method>
    <method selector="localizedKeyDictionary">
      <retval></retval>
    </method>
    <method selector="localizedKeyTable">
      <retval></retval>
    </method>
    <method selector="newObject">
      <retval></retval>
    </method>
    <method selector="setExcludedKeys:">
      <arg name="keys"></arg>
      <retval></retval>
    </method>
    <method selector="setIncludedKeys:">
      <arg name="keys"></arg>
      <retval></retval>
    </method>
    <method selector="setInitialKey:">
      <arg name="key"></arg>
      <retval></retval>
    </method>
    <method selector="setInitialValue:">
      <arg name="value"></arg>
      <retval></retval>
    </method>
    <method selector="setLocalizedKeyDictionary:">
      <arg name="dictionary"></arg>
      <retval></retval>
    </method>
    <method selector="setLocalizedKeyTable:">
      <arg name="stringsFileName"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSDockTile">
    <method selector="badgeLabel">
      <retval></retval>
    </method>
    <method selector="contentView">
      <retval></retval>
    </method>
    <method selector="display">
      <retval></retval>
    </method>
    <method selector="owner">
      <retval></retval>
    </method>
    <method selector="setBadgeLabel:">
      <arg name="string"></arg>
      <retval></retval>
    </method>
    <method selector="setContentView:">
      <arg name="view"></arg>
      <retval></retval>
    </method>
    <method selector="setShowsApplicationBadge:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="showsApplicationBadge">
      <retval></retval>
    </method>
    <method selector="size">
      <retval></retval>
    </method>
  </class>
  <class name="NSDocument">
    <method selector="addWindowController:">
      <arg name="windowController"></arg>
      <retval></retval>
    </method>
    <method selector="autosaveDocumentWithDelegate:didAutosaveSelector:contextInfo:">
      <arg name="delegate"></arg>
      <arg name="didAutosaveSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="autosavedContentsFileURL">
      <retval></retval>
    </method>
    <method selector="autosavingFileType">
      <retval></retval>
    </method>
    <method selector="canCloseDocumentWithDelegate:shouldCloseSelector:contextInfo:">
      <arg name="delegate"></arg>
      <arg name="shouldCloseSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="close">
      <retval></retval>
    </method>
    <method selector="dataOfType:error:">
      <arg name="typeName"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="dataRepresentationOfType:">
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="displayName">
      <retval></retval>
    </method>
    <method selector="fileAttributesToWriteToFile:ofType:saveOperation:">
      <arg name="fullDocumentPath"></arg>
      <arg name="documentTypeName"></arg>
      <arg name="saveOperationType"></arg>
      <retval></retval>
    </method>
    <method selector="fileAttributesToWriteToURL:ofType:forSaveOperation:originalContentsURL:error:">
      <arg name="absoluteURL"></arg>
      <arg name="typeName"></arg>
      <arg name="saveOperation"></arg>
      <arg name="absoluteOriginalContentsURL"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="fileModificationDate">
      <retval></retval>
    </method>
    <method selector="fileName">
      <retval></retval>
    </method>
    <method selector="fileNameExtensionForType:saveOperation:">
      <arg name="typeName"></arg>
      <arg name="saveOperation"></arg>
      <retval></retval>
    </method>
    <method selector="fileNameExtensionWasHiddenInLastRunSavePanel">
      <retval></retval>
    </method>
    <method selector="fileType">
      <retval></retval>
    </method>
    <method selector="fileTypeFromLastRunSavePanel">
      <retval></retval>
    </method>
    <method selector="fileURL">
      <retval></retval>
    </method>
    <method selector="fileWrapperOfType:error:">
      <arg name="typeName"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="fileWrapperRepresentationOfType:">
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="handleCloseScriptCommand:">
      <arg name="command"></arg>
      <retval></retval>
    </method>
    <method selector="handlePrintScriptCommand:">
      <arg name="command"></arg>
      <retval></retval>
    </method>
    <method selector="handleSaveScriptCommand:">
      <arg name="command"></arg>
      <retval></retval>
    </method>
    <method selector="hasUnautosavedChanges">
      <retval></retval>
    </method>
    <method selector="hasUndoManager">
      <retval></retval>
    </method>
    <method selector="init">
      <retval></retval>
    </method>
    <method selector="initForURL:withContentsOfURL:ofType:error:">
      <arg name="absoluteDocumentURL"></arg>
      <arg name="absoluteDocumentContentsURL"></arg>
      <arg name="typeName"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="initWithContentsOfFile:ofType:">
      <arg name="absolutePath"></arg>
      <arg name="typeName"></arg>
      <retval></retval>
    </method>
    <method selector="initWithContentsOfURL:ofType:">
      <arg name="absoluteURL"></arg>
      <arg name="typeName"></arg>
      <retval></retval>
    </method>
    <method selector="initWithContentsOfURL:ofType:error:">
      <arg name="absoluteURL"></arg>
      <arg name="typeName"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="initWithType:error:">
      <arg name="typeName"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="isDocumentEdited">
      <retval></retval>
    </method>
    <method class_method="true" selector="isNativeType:">
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="keepBackupFile">
      <retval></retval>
    </method>
    <method selector="lastComponentOfFileName">
      <retval></retval>
    </method>
    <method selector="loadDataRepresentation:ofType:">
      <arg name="data"></arg>
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="loadFileWrapperRepresentation:ofType:">
      <arg name="wrapper"></arg>
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="makeWindowControllers">
      <retval></retval>
    </method>
    <method selector="objectSpecifier">
      <retval></retval>
    </method>
    <method selector="preparePageLayout:">
      <arg name="pageLayout"></arg>
      <retval></retval>
    </method>
    <method selector="prepareSavePanel:">
      <arg name="savePanel"></arg>
      <retval></retval>
    </method>
    <method selector="presentError:">
      <arg name="error"></arg>
      <retval></retval>
    </method>
    <method selector="presentError:modalForWindow:delegate:didPresentSelector:contextInfo:">
      <arg name="error"></arg>
      <arg name="window"></arg>
      <arg name="delegate"></arg>
      <arg name="didPresentSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="printDocument:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="printDocumentWithSettings:showPrintPanel:delegate:didPrintSelector:contextInfo:">
      <arg name="printSettings"></arg>
      <arg name="showPrintPanel"></arg>
      <arg name="delegate"></arg>
      <arg name="didPrintSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="printInfo">
      <retval></retval>
    </method>
    <method selector="printOperationWithSettings:error:">
      <arg name="printSettings"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="printShowingPrintPanel:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="readFromData:ofType:error:">
      <arg name="data"></arg>
      <arg name="typeName"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="readFromFile:ofType:">
      <arg name="fileName"></arg>
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="readFromFileWrapper:ofType:error:">
      <arg name="fileWrapper"></arg>
      <arg name="typeName"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="readFromURL:ofType:">
      <arg name="url"></arg>
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="readFromURL:ofType:error:">
      <arg name="absoluteURL"></arg>
      <arg name="typeName"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="readableTypes">
      <retval></retval>
    </method>
    <method selector="removeWindowController:">
      <arg name="windowController"></arg>
      <retval></retval>
    </method>
    <method selector="revertDocumentToSaved:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="revertToContentsOfURL:ofType:error:">
      <arg name="absoluteURL"></arg>
      <arg name="typeName"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="revertToSavedFromFile:ofType:">
      <arg name="fileName"></arg>
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="revertToSavedFromURL:ofType:">
      <arg name="url"></arg>
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="runModalPageLayoutWithPrintInfo:">
      <arg name="printInfo"></arg>
      <retval></retval>
    </method>
    <method selector="runModalPageLayoutWithPrintInfo:delegate:didRunSelector:contextInfo:">
      <arg name="printInfo"></arg>
      <arg name="delegate"></arg>
      <arg name="didRunSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="runModalPrintOperation:delegate:didRunSelector:contextInfo:">
      <arg name="printOperation"></arg>
      <arg name="delegate"></arg>
      <arg name="didRunSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:">
      <arg name="saveOperation"></arg>
      <arg name="delegate"></arg>
      <arg name="didSaveSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="runPageLayout:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="saveDocument:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="saveDocumentAs:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="saveDocumentTo:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="saveDocumentWithDelegate:didSaveSelector:contextInfo:">
      <arg name="delegate"></arg>
      <arg name="didSaveSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="saveToFile:saveOperation:delegate:didSaveSelector:contextInfo:">
      <arg name="fileName"></arg>
      <arg name="saveOperation"></arg>
      <arg name="delegate"></arg>
      <arg name="didSaveSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:">
      <arg name="absoluteURL"></arg>
      <arg name="typeName"></arg>
      <arg name="saveOperation"></arg>
      <arg name="delegate"></arg>
      <arg name="didSaveSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="saveToURL:ofType:forSaveOperation:error:">
      <arg name="absoluteURL"></arg>
      <arg name="typeName"></arg>
      <arg name="saveOperation"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="setAutosavedContentsFileURL:">
      <arg name="absoluteURL"></arg>
      <retval></retval>
    </method>
    <method selector="setFileModificationDate:">
      <arg name="modificationDate"></arg>
      <retval></retval>
    </method>
    <method selector="setFileName:">
      <arg name="fileName"></arg>
      <retval></retval>
    </method>
    <method selector="setFileType:">
      <arg name="typeName"></arg>
      <retval></retval>
    </method>
    <method selector="setFileURL:">
      <arg name="absoluteURL"></arg>
      <retval></retval>
    </method>
    <method selector="setHasUndoManager:">
      <arg name="hasUndoManager"></arg>
      <retval></retval>
    </method>
    <method selector="setLastComponentOfFileName:">
      <arg name="str"></arg>
      <retval></retval>
    </method>
    <method selector="setPrintInfo:">
      <arg name="printInfo"></arg>
      <retval></retval>
    </method>
    <method selector="setUndoManager:">
      <arg name="undoManager"></arg>
      <retval></retval>
    </method>
    <method selector="setWindow:">
      <arg name="window"></arg>
      <retval></retval>
    </method>
    <method selector="shouldChangePrintInfo:">
      <arg name="newPrintInfo"></arg>
      <retval></retval>
    </method>
    <method selector="shouldCloseWindowController:delegate:shouldCloseSelector:contextInfo:">
      <arg name="windowController"></arg>
      <arg name="delegate"></arg>
      <arg name="shouldCloseSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="shouldRunSavePanelWithAccessoryView">
      <retval></retval>
    </method>
    <method selector="showWindows">
      <retval></retval>
    </method>
    <method selector="undoManager">
      <retval></retval>
    </method>
    <method selector="updateChangeCount:">
      <arg name="change"></arg>
      <retval></retval>
    </method>
    <method selector="validateUserInterfaceItem:">
      <arg name="anItem"></arg>
      <retval></retval>
    </method>
    <method selector="willPresentError:">
      <arg name="error"></arg>
      <retval></retval>
    </method>
    <method selector="windowControllerDidLoadNib:">
      <arg name="windowController"></arg>
      <retval></retval>
    </method>
    <method selector="windowControllerWillLoadNib:">
      <arg name="windowController"></arg>
      <retval></retval>
    </method>
    <method selector="windowControllers">
      <retval></retval>
    </method>
    <method selector="windowForSheet">
      <retval></retval>
    </method>
    <method selector="windowNibName">
      <retval></retval>
    </method>
    <method class_method="true" selector="writableTypes">
      <retval></retval>
    </method>
    <method selector="writableTypesForSaveOperation:">
      <arg name="saveOperation"></arg>
      <retval></retval>
    </method>
    <method selector="writeSafelyToURL:ofType:forSaveOperation:error:">
      <arg name="absoluteURL"></arg>
      <arg name="typeName"></arg>
      <arg name="saveOperation"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="writeToFile:ofType:">
      <arg name="fileName"></arg>
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="writeToFile:ofType:originalFile:saveOperation:">
      <arg name="fullDocumentPath"></arg>
      <arg name="documentTypeName"></arg>
      <arg name="fullOriginalDocumentPath"></arg>
      <arg name="saveOperationType"></arg>
      <retval></retval>
    </method>
    <method selector="writeToURL:ofType:">
      <arg name="url"></arg>
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="writeToURL:ofType:error:">
      <arg name="absoluteURL"></arg>
      <arg name="typeName"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="writeToURL:ofType:forSaveOperation:originalContentsURL:error:">
      <arg name="absoluteURL"></arg>
      <arg name="typeName"></arg>
      <arg name="saveOperation"></arg>
      <arg name="absoluteOriginalContentsURL"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="writeWithBackupToFile:ofType:saveOperation:">
      <arg name="fullDocumentPath"></arg>
      <arg name="documentTypeName"></arg>
      <arg name="saveOperationType"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSDocumentController">
    <method selector="URLsFromRunningOpenPanel">
      <retval></retval>
    </method>
    <method selector="addDocument:">
      <arg name="document"></arg>
      <retval></retval>
    </method>
    <method selector="autosavingDelay">
      <retval></retval>
    </method>
    <method selector="clearRecentDocuments:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="closeAllDocumentsWithDelegate:didCloseAllSelector:contextInfo:">
      <arg name="delegate"></arg>
      <arg name="didCloseAllSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="currentDirectory">
      <retval></retval>
    </method>
    <method selector="currentDocument">
      <retval></retval>
    </method>
    <method selector="defaultType">
      <retval></retval>
    </method>
    <method selector="displayNameForType:">
      <arg name="typeName"></arg>
      <retval></retval>
    </method>
    <method selector="documentClassForType:">
      <arg name="typeName"></arg>
      <retval></retval>
    </method>
    <method selector="documentClassNames">
      <retval></retval>
    </method>
    <method selector="documentForFileName:">
      <arg name="fileName"></arg>
      <retval></retval>
    </method>
    <method selector="documentForURL:">
      <arg name="absoluteURL"></arg>
      <retval></retval>
    </method>
    <method selector="documentForWindow:">
      <arg name="window"></arg>
      <retval></retval>
    </method>
    <method selector="documents">
      <retval></retval>
    </method>
    <method selector="fileExtensionsFromType:">
      <arg name="typeName"></arg>
      <retval></retval>
    </method>
    <method selector="fileNamesFromRunningOpenPanel">
      <retval></retval>
    </method>
    <method selector="hasEditedDocuments">
      <retval></retval>
    </method>
    <method selector="init">
      <retval></retval>
    </method>
    <method selector="makeDocumentForURL:withContentsOfURL:ofType:error:">
      <arg name="absoluteDocumentURL"></arg>
      <arg name="absoluteDocumentContentsURL"></arg>
      <arg name="typeName"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="makeDocumentWithContentsOfFile:ofType:">
      <arg name="fileName"></arg>
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="makeDocumentWithContentsOfURL:ofType:">
      <arg name="url"></arg>
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="makeDocumentWithContentsOfURL:ofType:error:">
      <arg name="absoluteURL"></arg>
      <arg name="typeName"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="makeUntitledDocumentOfType:">
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="makeUntitledDocumentOfType:error:">
      <arg name="typeName"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="maximumRecentDocumentCount">
      <retval></retval>
    </method>
    <method selector="newDocument:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="noteNewRecentDocument:">
      <arg name="document"></arg>
      <retval></retval>
    </method>
    <method selector="noteNewRecentDocumentURL:">
      <arg name="absoluteURL"></arg>
      <retval></retval>
    </method>
    <method selector="openDocument:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="openDocumentWithContentsOfFile:display:">
      <arg name="fileName"></arg>
      <arg name="display"></arg>
      <retval></retval>
    </method>
    <method selector="openDocumentWithContentsOfURL:display:">
      <arg name="url"></arg>
      <arg name="display"></arg>
      <retval></retval>
    </method>
    <method selector="openDocumentWithContentsOfURL:display:error:">
      <arg name="absoluteURL"></arg>
      <arg name="displayDocument"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="openUntitledDocumentAndDisplay:error:">
      <arg name="displayDocument"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="openUntitledDocumentOfType:display:">
      <arg name="type"></arg>
      <arg name="display"></arg>
      <retval></retval>
    </method>
    <method selector="presentError:">
      <arg name="error"></arg>
      <retval></retval>
    </method>
    <method selector="presentError:modalForWindow:delegate:didPresentSelector:contextInfo:">
      <arg name="error"></arg>
      <arg name="window"></arg>
      <arg name="delegate"></arg>
      <arg name="didPresentSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="recentDocumentURLs">
      <retval></retval>
    </method>
    <method selector="removeDocument:">
      <arg name="document"></arg>
      <retval></retval>
    </method>
    <method selector="reopenDocumentForURL:withContentsOfURL:error:">
      <arg name="absoluteDocumentURL"></arg>
      <arg name="absoluteDocumentContentsURL"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="reviewUnsavedDocumentsWithAlertTitle:cancellable:delegate:didReviewAllSelector:contextInfo:">
      <arg name="title"></arg>
      <arg name="cancellable"></arg>
      <arg name="delegate"></arg>
      <arg name="didReviewAllSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="runModalOpenPanel:forTypes:">
      <arg name="openPanel"></arg>
      <arg name="types"></arg>
      <retval></retval>
    </method>
    <method selector="saveAllDocuments:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="setAutosavingDelay:">
      <arg name="autosavingDelay"></arg>
      <retval></retval>
    </method>
    <method selector="setShouldCreateUI:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="sharedDocumentController">
      <retval></retval>
    </method>
    <method selector="shouldCreateUI">
      <retval></retval>
    </method>
    <method selector="typeForContentsOfURL:error:">
      <arg name="inAbsoluteURL"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="typeFromFileExtension:">
      <arg name="fileNameExtensionOrHFSFileType"></arg>
      <retval></retval>
    </method>
    <method selector="validateUserInterfaceItem:">
      <arg name="anItem"></arg>
      <retval></retval>
    </method>
    <method selector="willPresentError:">
      <arg name="error"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSDrawer" swt_superclass="NSResponder">
    <method selector="close">
      <retval></retval>
    </method>
    <method selector="close:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="contentSize">
      <retval></retval>
    </method>
    <method selector="contentView">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="edge">
      <retval></retval>
    </method>
    <method selector="initWithContentSize:preferredEdge:">
      <arg name="contentSize"></arg>
      <arg name="edge"></arg>
      <retval></retval>
    </method>
    <method selector="leadingOffset">
      <retval></retval>
    </method>
    <method selector="maxContentSize">
      <retval></retval>
    </method>
    <method selector="minContentSize">
      <retval></retval>
    </method>
    <method selector="open">
      <retval></retval>
    </method>
    <method selector="open:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="openOnEdge:">
      <arg name="edge"></arg>
      <retval></retval>
    </method>
    <method selector="parentWindow">
      <retval></retval>
    </method>
    <method selector="preferredEdge">
      <retval></retval>
    </method>
    <method selector="setContentSize:">
      <arg name="size"></arg>
      <retval></retval>
    </method>
    <method selector="setContentView:">
      <arg name="aView"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:">
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
    <method selector="setLeadingOffset:">
      <arg name="offset"></arg>
      <retval></retval>
    </method>
    <method selector="setMaxContentSize:">
      <arg name="size"></arg>
      <retval></retval>
    </method>
    <method selector="setMinContentSize:">
      <arg name="size"></arg>
      <retval></retval>
    </method>
    <method selector="setParentWindow:">
      <arg name="parent"></arg>
      <retval></retval>
    </method>
    <method selector="setPreferredEdge:">
      <arg name="edge"></arg>
      <retval></retval>
    </method>
    <method selector="setTrailingOffset:">
      <arg name="offset"></arg>
      <retval></retval>
    </method>
    <method selector="state">
      <retval></retval>
    </method>
    <method selector="toggle:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="trailingOffset">
      <retval></retval>
    </method>
  </class>
  <class name="NSEPSImageRep" swt_superclass="NSImageRep">
    <method selector="EPSRepresentation">
      <retval></retval>
    </method>
    <method selector="boundingBox">
      <retval></retval>
    </method>
    <method class_method="true" selector="imageRepWithData:">
      <arg name="epsData"></arg>
      <retval></retval>
    </method>
    <method selector="initWithData:">
      <arg name="epsData"></arg>
      <retval></retval>
    </method>
    <method selector="prepareGState">
      <retval></retval>
    </method>
  </class>
  <class name="NSEvent" swt_gen="mixed">
    <method selector="CGEvent">
      <retval></retval>
    </method>
    <method selector="absoluteX">
      <retval></retval>
    </method>
    <method selector="absoluteY">
      <retval></retval>
    </method>
    <method selector="absoluteZ">
      <retval></retval>
    </method>
    <method selector="buttonMask">
      <retval></retval>
    </method>
    <method selector="buttonNumber" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="capabilityMask">
      <retval></retval>
    </method>
    <method selector="characters" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="charactersIgnoringModifiers" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="clickCount" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="context">
      <retval></retval>
    </method>
    <method selector="data1">
      <retval></retval>
    </method>
    <method selector="data2">
      <retval></retval>
    </method>
    <method selector="deltaX" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deltaY" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deltaZ">
      <retval></retval>
    </method>
    <method selector="deviceID">
      <retval></retval>
    </method>
    <method class_method="true" selector="enterExitEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:trackingNumber:userData:">
      <arg name="type"></arg>
      <arg name="location"></arg>
      <arg name="flags"></arg>
      <arg name="time"></arg>
      <arg name="wNum"></arg>
      <arg name="context"></arg>
      <arg name="eNum"></arg>
      <arg name="tNum"></arg>
      <arg name="data"></arg>
      <retval></retval>
    </method>
    <method selector="eventNumber">
      <retval></retval>
    </method>
    <method selector="eventRef">
      <retval></retval>
    </method>
    <method class_method="true" selector="eventWithCGEvent:">
      <arg name="cgEvent"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="eventWithEventRef:">
      <arg name="eventRef"></arg>
      <retval></retval>
    </method>
    <method selector="isARepeat">
      <retval></retval>
    </method>
    <method selector="isEnteringProximity">
      <retval></retval>
    </method>
    <method class_method="true" selector="isMouseCoalescingEnabled">
      <retval></retval>
    </method>
    <method selector="keyCode" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="keyEventWithType:location:modifierFlags:timestamp:windowNumber:context:characters:charactersIgnoringModifiers:isARepeat:keyCode:">
      <arg name="type"></arg>
      <arg name="location"></arg>
      <arg name="flags"></arg>
      <arg name="time"></arg>
      <arg name="wNum"></arg>
      <arg name="context"></arg>
      <arg name="keys"></arg>
      <arg name="ukeys"></arg>
      <arg name="flag"></arg>
      <arg name="code"></arg>
      <retval></retval>
    </method>
    <method selector="locationInWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="modifierFlags" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="mouseEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:clickCount:pressure:">
      <arg name="type"></arg>
      <arg name="location"></arg>
      <arg name="flags"></arg>
      <arg name="time"></arg>
      <arg name="wNum"></arg>
      <arg name="context"></arg>
      <arg name="eNum"></arg>
      <arg name="cNum"></arg>
      <arg name="pressure"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="mouseLocation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <arg name="flags" swt_gen="true"></arg>
      <arg name="time" swt_gen="true"></arg>
      <arg name="wNum" swt_gen="true"></arg>
      <arg name="context" swt_gen="true"></arg>
      <arg name="subtype" swt_gen="true"></arg>
      <arg name="d1" swt_gen="true"></arg>
      <arg name="d2" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pointingDeviceID">
      <retval></retval>
    </method>
    <method selector="pointingDeviceSerialNumber">
      <retval></retval>
    </method>
    <method selector="pointingDeviceType">
      <retval></retval>
    </method>
    <method selector="pressure">
      <retval></retval>
    </method>
    <method selector="rotation">
      <retval></retval>
    </method>
    <method class_method="true" selector="setMouseCoalescingEnabled:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="startPeriodicEventsAfterDelay:withPeriod:">
      <arg name="delay"></arg>
      <arg name="period"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="stopPeriodicEvents">
      <retval></retval>
    </method>
    <method selector="subtype">
      <retval></retval>
    </method>
    <method selector="systemTabletID">
      <retval></retval>
    </method>
    <method selector="tabletID">
      <retval></retval>
    </method>
    <method selector="tangentialPressure">
      <retval></retval>
    </method>
    <method selector="tilt">
      <retval></retval>
    </method>
    <method selector="timestamp">
      <retval></retval>
    </method>
    <method selector="trackingArea">
      <retval></retval>
    </method>
    <method selector="trackingNumber">
      <retval></retval>
    </method>
    <method selector="type" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="uniqueID">
      <retval></retval>
    </method>
    <method selector="userData">
      <retval></retval>
    </method>
    <method selector="vendorDefined">
      <retval></retval>
    </method>
    <method selector="vendorID">
      <retval></retval>
    </method>
    <method selector="vendorPointingDeviceType">
      <retval></retval>
    </method>
    <method selector="window" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowNumber">
      <retval></retval>
    </method>
  </class>
  <class name="NSFileWrapper" swt_gen="mixed">
    <method selector="addFileWithPath:">
      <arg name="path"></arg>
      <retval></retval>
    </method>
    <method selector="addFileWrapper:">
      <arg name="doc"></arg>
      <retval></retval>
    </method>
    <method selector="addRegularFileWithContents:preferredFilename:">
      <arg name="data"></arg>
      <arg name="filename"></arg>
      <retval></retval>
    </method>
    <method selector="addSymbolicLinkWithDestination:preferredFilename:">
      <arg name="path"></arg>
      <arg name="filename"></arg>
      <retval></retval>
    </method>
    <method selector="fileAttributes">
      <retval></retval>
    </method>
    <method selector="fileWrappers">
      <retval></retval>
    </method>
    <method selector="filename">
      <retval></retval>
    </method>
    <method selector="icon">
      <retval></retval>
    </method>
    <method selector="initDirectoryWithFileWrappers:">
      <arg name="docs"></arg>
      <retval></retval>
    </method>
    <method selector="initRegularFileWithContents:">
      <arg name="data"></arg>
      <retval></retval>
    </method>
    <method selector="initSymbolicLinkWithDestination:">
      <arg name="path"></arg>
      <retval></retval>
    </method>
    <method selector="initWithPath:">
      <arg name="path"></arg>
      <retval></retval>
    </method>
    <method selector="initWithSerializedRepresentation:">
      <arg name="data"></arg>
      <retval></retval>
    </method>
    <method selector="isDirectory">
      <retval></retval>
    </method>
    <method selector="isRegularFile">
      <retval></retval>
    </method>
    <method selector="isSymbolicLink">
      <retval></retval>
    </method>
    <method selector="keyForFileWrapper:">
      <arg name="doc"></arg>
      <retval></retval>
    </method>
    <method selector="needsToBeUpdatedFromPath:">
      <arg name="path"></arg>
      <retval></retval>
    </method>
    <method selector="preferredFilename">
      <retval></retval>
    </method>
    <method selector="regularFileContents">
      <retval></retval>
    </method>
    <method selector="removeFileWrapper:">
      <arg name="doc"></arg>
      <retval></retval>
    </method>
    <method selector="serializedRepresentation">
      <retval></retval>
    </method>
    <method selector="setFileAttributes:">
      <arg name="attributes"></arg>
      <retval></retval>
    </method>
    <method selector="setFilename:">
      <arg name="filename"></arg>
      <retval></retval>
    </method>
    <method selector="setIcon:" swt_gen="true">
      <arg name="icon" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPreferredFilename:">
      <arg name="filename"></arg>
      <retval></retval>
    </method>
    <method selector="symbolicLinkDestination">
      <retval></retval>
    </method>
    <method selector="updateFromPath:">
      <arg name="path"></arg>
      <retval></retval>
    </method>
    <method selector="writeToFile:atomically:updateFilenames:">
      <arg name="path"></arg>
      <arg name="atomicFlag"></arg>
      <arg name="updateFilenamesFlag"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSFont" swt_gen="mixed">
    <method selector="advancementForGlyph:">
      <arg name="ag"></arg>
      <retval></retval>
    </method>
    <method selector="afmDictionary">
      <retval></retval>
    </method>
    <method selector="ascender" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="boldSystemFontOfSize:">
      <arg name="fontSize"></arg>
      <retval></retval>
    </method>
    <method selector="boundingRectForFont">
      <retval></retval>
    </method>
    <method selector="boundingRectForGlyph:">
      <arg name="aGlyph"></arg>
      <retval></retval>
    </method>
    <method selector="capHeight">
      <retval></retval>
    </method>
    <method class_method="true" selector="controlContentFontOfSize:">
      <arg name="fontSize"></arg>
      <retval></retval>
    </method>
    <method selector="coveredCharacterSet">
      <retval></retval>
    </method>
    <method selector="defaultLineHeightForFont">
      <retval></retval>
    </method>
    <method selector="descender" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displayName">
      <retval></retval>
    </method>
    <method selector="encodingScheme">
      <retval></retval>
    </method>
    <method selector="familyName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="fontDescriptor">
      <retval></retval>
    </method>
    <method selector="fontName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="fontWithDescriptor:size:">
      <arg name="fontDescriptor"></arg>
      <arg name="fontSize"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="fontWithDescriptor:textTransform:">
      <arg name="fontDescriptor"></arg>
      <arg name="textTransform"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="fontWithName:matrix:">
      <arg name="fontName"></arg>
      <arg name="fontMatrix"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="fontWithName:size:" swt_gen="true">
      <arg name="fontName" swt_gen="true"></arg>
      <arg name="fontSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getAdvancements:forGlyphs:count:">
      <arg name="advancements"></arg>
      <arg name="glyphs"></arg>
      <arg name="glyphCount"></arg>
      <retval></retval>
    </method>
    <method selector="getAdvancements:forPackedGlyphs:length:">
      <arg name="advancements"></arg>
      <arg name="packedGlyphs"></arg>
      <arg name="length"></arg>
      <retval></retval>
    </method>
    <method selector="getBoundingRects:forGlyphs:count:">
      <arg name="bounds"></arg>
      <arg name="glyphs"></arg>
      <arg name="glyphCount"></arg>
      <retval></retval>
    </method>
    <method selector="glyphIsEncoded:">
      <arg name="aGlyph"></arg>
      <retval></retval>
    </method>
    <method selector="glyphPacking">
      <retval></retval>
    </method>
    <method selector="glyphWithName:">
      <arg name="aName"></arg>
      <retval></retval>
    </method>
    <method selector="isBaseFont">
      <retval></retval>
    </method>
    <method selector="isFixedPitch">
      <retval></retval>
    </method>
    <method selector="italicAngle">
      <retval></retval>
    </method>
    <method class_method="true" selector="labelFontOfSize:">
      <arg name="fontSize"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="labelFontSize">
      <retval></retval>
    </method>
    <method selector="leading" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="matrix">
      <retval></retval>
    </method>
    <method selector="maximumAdvancement">
      <retval></retval>
    </method>
    <method class_method="true" selector="menuBarFontOfSize:">
      <arg name="fontSize"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="menuFontOfSize:">
      <arg name="fontSize"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="messageFontOfSize:">
      <arg name="fontSize"></arg>
      <retval></retval>
    </method>
    <method selector="mostCompatibleStringEncoding">
      <retval></retval>
    </method>
    <method selector="numberOfGlyphs">
      <retval></retval>
    </method>
    <method class_method="true" selector="paletteFontOfSize:">
      <arg name="fontSize"></arg>
      <retval></retval>
    </method>
    <method selector="pointSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="positionOfGlyph:forCharacter:struckOverRect:">
      <arg name="aGlyph"></arg>
      <arg name="aChar"></arg>
      <arg name="aRect"></arg>
      <retval></retval>
    </method>
    <method selector="positionOfGlyph:precededByGlyph:isNominal:">
      <arg name="curGlyph"></arg>
      <arg name="prevGlyph"></arg>
      <arg name="nominal"></arg>
      <retval></retval>
    </method>
    <method selector="positionOfGlyph:struckOverGlyph:metricsExist:">
      <arg name="curGlyph"></arg>
      <arg name="prevGlyph"></arg>
      <arg name="exist"></arg>
      <retval></retval>
    </method>
    <method selector="positionOfGlyph:struckOverRect:metricsExist:">
      <arg name="aGlyph"></arg>
      <arg name="aRect"></arg>
      <arg name="exist"></arg>
      <retval></retval>
    </method>
    <method selector="positionOfGlyph:withRelation:toBaseGlyph:totalAdvancement:metricsExist:">
      <arg name="thisGlyph"></arg>
      <arg name="rel"></arg>
      <arg name="baseGlyph"></arg>
      <arg name="adv"></arg>
      <arg name="exist"></arg>
      <retval></retval>
    </method>
    <method selector="positionsForCompositeSequence:numberOfGlyphs:pointArray:">
      <arg name="someGlyphs"></arg>
      <arg name="numGlyphs"></arg>
      <arg name="points"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="preferredFontNames">
      <retval></retval>
    </method>
    <method selector="printerFont">
      <retval></retval>
    </method>
    <method selector="renderingMode">
      <retval></retval>
    </method>
    <method selector="screenFont">
      <retval></retval>
    </method>
    <method selector="screenFontWithRenderingMode:">
      <arg name="renderingMode"></arg>
      <retval></retval>
    </method>
    <method selector="set">
      <retval></retval>
    </method>
    <method selector="setInContext:">
      <arg name="graphicsContext"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="setPreferredFontNames:">
      <arg name="fontNameArray"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="setUserFixedPitchFont:">
      <arg name="aFont"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="setUserFont:">
      <arg name="aFont"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="smallSystemFontSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="systemFontOfSize:" swt_gen="true">
      <arg name="fontSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="systemFontSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="systemFontSizeForControlSize:" swt_gen="true">
      <arg name="controlSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textTransform">
      <retval></retval>
    </method>
    <method class_method="true" selector="titleBarFontOfSize:">
      <arg name="fontSize"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="toolTipsFontOfSize:">
      <arg name="fontSize"></arg>
      <retval></retval>
    </method>
    <method selector="underlinePosition">
      <retval></retval>
    </method>
    <method selector="underlineThickness">
      <retval></retval>
    </method>
    <method class_method="true" selector="useFont:">
      <arg name="fontName"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="userFixedPitchFontOfSize:">
      <arg name="fontSize"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="userFontOfSize:">
      <arg name="fontSize"></arg>
      <retval></retval>
    </method>
    <method selector="widthOfString:">
      <arg name="string"></arg>
      <retval></retval>
    </method>
    <method selector="xHeight">
      <retval></retval>
    </method>
  </class>
  <class name="NSFontDescriptor">
    <method selector="fontAttributes">
      <retval></retval>
    </method>
    <method selector="fontDescriptorByAddingAttributes:">
      <arg name="attributes"></arg>
      <retval></retval>
    </method>
    <method selector="fontDescriptorWithFace:">
      <arg name="newFace"></arg>
      <retval></retval>
    </method>
    <method selector="fontDescriptorWithFamily:">
      <arg name="newFamily"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="fontDescriptorWithFontAttributes:">
      <arg name="attributes"></arg>
      <retval></retval>
    </method>
    <method selector="fontDescriptorWithMatrix:">
      <arg name="matrix"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="fontDescriptorWithName:matrix:">
      <arg name="fontName"></arg>
      <arg name="matrix"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="fontDescriptorWithName:size:">
      <arg name="fontName"></arg>
      <arg name="size"></arg>
      <retval></retval>
    </method>
    <method selector="fontDescriptorWithSize:">
      <arg name="newPointSize"></arg>
      <retval></retval>
    </method>
    <method selector="fontDescriptorWithSymbolicTraits:">
      <arg name="symbolicTraits"></arg>
      <retval></retval>
    </method>
    <method selector="initWithFontAttributes:">
      <arg name="attributes"></arg>
      <retval></retval>
    </method>
    <method selector="matchingFontDescriptorWithMandatoryKeys:">
      <arg name="mandatoryKeys"></arg>
      <retval></retval>
    </method>
    <method selector="matchingFontDescriptorsWithMandatoryKeys:">
      <arg name="mandatoryKeys"></arg>
      <retval></retval>
    </method>
    <method selector="matrix">
      <retval></retval>
    </method>
    <method selector="objectForKey:">
      <arg name="anAttribute"></arg>
      <retval></retval>
    </method>
    <method selector="pointSize">
      <retval></retval>
    </method>
    <method selector="postscriptName">
      <retval></retval>
    </method>
    <method selector="symbolicTraits">
      <retval></retval>
    </method>
  </class>
  <class name="NSFontManager" swt_gen="mixed">
    <method selector="action">
      <retval></retval>
    </method>
    <method selector="addCollection:options:">
      <arg name="collectionName"></arg>
      <arg name="collectionOptions"></arg>
      <retval></retval>
    </method>
    <method selector="addFontDescriptors:toCollection:">
      <arg name="descriptors"></arg>
      <arg name="collectionName"></arg>
      <retval></retval>
    </method>
    <method selector="addFontTrait:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="availableFontFamilies" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="availableFontNamesMatchingFontDescriptor:">
      <arg name="descriptor"></arg>
      <retval></retval>
    </method>
    <method selector="availableFontNamesWithTraits:">
      <arg name="someTraits"></arg>
      <retval></retval>
    </method>
    <method selector="availableFonts" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="availableMembersOfFontFamily:" swt_gen="true">
      <arg name="fam" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="collectionNames">
      <retval></retval>
    </method>
    <method selector="convertAttributes:">
      <arg name="attributes"></arg>
      <retval></retval>
    </method>
    <method selector="convertFont:">
      <arg name="fontObj"></arg>
      <retval></retval>
    </method>
    <method selector="convertFont:toFace:">
      <arg name="fontObj"></arg>
      <arg name="typeface"></arg>
      <retval></retval>
    </method>
    <method selector="convertFont:toFamily:">
      <arg name="fontObj"></arg>
      <arg name="family"></arg>
      <retval></retval>
    </method>
    <method selector="convertFont:toHaveTrait:">
      <arg name="fontObj"></arg>
      <arg name="trait"></arg>
      <retval></retval>
    </method>
    <method selector="convertFont:toNotHaveTrait:">
      <arg name="fontObj"></arg>
      <arg name="trait"></arg>
      <retval></retval>
    </method>
    <method selector="convertFont:toSize:">
      <arg name="fontObj"></arg>
      <arg name="size"></arg>
      <retval></retval>
    </method>
    <method selector="convertFontTraits:">
      <arg name="traits"></arg>
      <retval></retval>
    </method>
    <method selector="convertWeight:ofFont:">
      <arg name="upFlag"></arg>
      <arg name="fontObj"></arg>
      <retval></retval>
    </method>
    <method selector="currentFontAction">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="fontDescriptorsInCollection:">
      <arg name="collectionNames"></arg>
      <retval></retval>
    </method>
    <method selector="fontMenu:">
      <arg name="create"></arg>
      <retval></retval>
    </method>
    <method selector="fontNamed:hasTraits:">
      <arg name="fName"></arg>
      <arg name="someTraits"></arg>
      <retval></retval>
    </method>
    <method selector="fontPanel:">
      <arg name="create"></arg>
      <retval></retval>
    </method>
    <method selector="fontWithFamily:traits:weight:size:">
      <arg name="family"></arg>
      <arg name="traits"></arg>
      <arg name="weight"></arg>
      <arg name="size"></arg>
      <retval></retval>
    </method>
    <method selector="isEnabled">
      <retval></retval>
    </method>
    <method selector="isMultiple">
      <retval></retval>
    </method>
    <method selector="localizedNameForFamily:face:">
      <arg name="family"></arg>
      <arg name="faceKey"></arg>
      <retval></retval>
    </method>
    <method selector="modifyFont:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="modifyFontViaPanel:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="orderFrontFontPanel:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="orderFrontStylesPanel:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="removeCollection:">
      <arg name="collectionName"></arg>
      <retval></retval>
    </method>
    <method selector="removeFontDescriptor:fromCollection:">
      <arg name="descriptor"></arg>
      <arg name="collection"></arg>
      <retval></retval>
    </method>
    <method selector="removeFontTrait:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="selectedFont">
      <retval></retval>
    </method>
    <method selector="sendAction">
      <retval></retval>
    </method>
    <method selector="setAction:">
      <arg name="aSelector"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:">
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
    <method selector="setEnabled:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="setFontManagerFactory:">
      <arg name="factoryId"></arg>
      <retval></retval>
    </method>
    <method selector="setFontMenu:">
      <arg name="newMenu"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="setFontPanelFactory:">
      <arg name="factoryId"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectedAttributes:isMultiple:">
      <arg name="attributes"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectedFont:isMultiple:">
      <arg name="fontObj"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setTarget:">
      <arg name="aTarget"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="sharedFontManager" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="target">
      <retval></retval>
    </method>
    <method selector="traitsOfFont:">
      <arg name="fontObj"></arg>
      <retval></retval>
    </method>
    <method selector="weightOfFont:">
      <arg name="fontObj"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSFontPanel" swt_gen="mixed" swt_superclass="NSPanel">
    <method selector="accessoryView">
      <retval></retval>
    </method>
    <method selector="isEnabled">
      <retval></retval>
    </method>
    <method selector="panelConvertFont:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reloadDefaultFontFamilies">
      <retval></retval>
    </method>
    <method selector="setAccessoryView:">
      <arg name="aView"></arg>
      <retval></retval>
    </method>
    <method selector="setEnabled:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setPanelFont:isMultiple:" swt_gen="true">
      <arg name="fontObj" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="sharedFontPanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="sharedFontPanelExists">
      <retval></retval>
    </method>
    <method selector="worksWhenModal">
      <retval></retval>
    </method>
  </class>
  <class name="NSForm" swt_superclass="NSMatrix">
    <method selector="addEntry:">
      <arg name="title"></arg>
      <retval></retval>
    </method>
    <method selector="cellAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="drawCellAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="indexOfCellWithTag:">
      <arg name="aTag"></arg>
      <retval></retval>
    </method>
    <method selector="indexOfSelectedItem">
      <retval></retval>
    </method>
    <method selector="insertEntry:atIndex:">
      <arg name="title"></arg>
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="removeEntryAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="selectTextAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="setBezeled:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setBordered:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setEntryWidth:">
      <arg name="width"></arg>
      <retval></retval>
    </method>
    <method selector="setFrameSize:">
      <arg name="newSize"></arg>
      <retval></retval>
    </method>
    <method selector="setInterlineSpacing:">
      <arg name="spacing"></arg>
      <retval></retval>
    </method>
    <method selector="setTextAlignment:">
      <arg name="mode"></arg>
      <retval></retval>
    </method>
    <method selector="setTextBaseWritingDirection:">
      <arg name="writingDirection"></arg>
      <retval></retval>
    </method>
    <method selector="setTextFont:">
      <arg name="fontObj"></arg>
      <retval></retval>
    </method>
    <method selector="setTitleAlignment:">
      <arg name="mode"></arg>
      <retval></retval>
    </method>
    <method selector="setTitleBaseWritingDirection:">
      <arg name="writingDirection"></arg>
      <retval></retval>
    </method>
    <method selector="setTitleFont:">
      <arg name="fontObj"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSFormCell" swt_superclass="NSActionCell">
    <method selector="attributedTitle">
      <retval></retval>
    </method>
    <method selector="initTextCell:">
      <arg name="aString"></arg>
      <retval></retval>
    </method>
    <method selector="isOpaque">
      <retval></retval>
    </method>
    <method selector="placeholderAttributedString">
      <retval></retval>
    </method>
    <method selector="placeholderString">
      <retval></retval>
    </method>
    <method selector="setAttributedTitle:">
      <arg name="obj"></arg>
      <retval></retval>
    </method>
    <method selector="setPlaceholderAttributedString:">
      <arg name="string"></arg>
      <retval></retval>
    </method>
    <method selector="setPlaceholderString:">
      <arg name="string"></arg>
      <retval></retval>
    </method>
    <method selector="setTitle:">
      <arg name="aString"></arg>
      <retval></retval>
    </method>
    <method selector="setTitleAlignment:">
      <arg name="mode"></arg>
      <retval></retval>
    </method>
    <method selector="setTitleBaseWritingDirection:">
      <arg name="writingDirection"></arg>
      <retval></retval>
    </method>
    <method selector="setTitleFont:">
      <arg name="fontObj"></arg>
      <retval></retval>
    </method>
    <method selector="setTitleWidth:">
      <arg name="width"></arg>
      <retval></retval>
    </method>
    <method selector="setTitleWithMnemonic:">
      <arg name="stringWithAmpersand"></arg>
      <retval></retval>
    </method>
    <method selector="title">
      <retval></retval>
    </method>
    <method selector="titleAlignment">
      <retval></retval>
    </method>
    <method selector="titleBaseWritingDirection">
      <retval></retval>
    </method>
    <method selector="titleFont">
      <retval></retval>
    </method>
    <method selector="titleWidth">
      <retval></retval>
    </method>
    <method selector="titleWidth:">
      <arg name="aSize"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSGlyphGenerator">
    <method selector="generateGlyphsForGlyphStorage:desiredNumberOfCharacters:glyphIndex:characterIndex:">
      <arg name="glyphStorage"></arg>
      <arg name="nChars"></arg>
      <arg name="glyphIndex"></arg>
      <arg name="charIndex"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="sharedGlyphGenerator">
      <retval></retval>
    </method>
  </class>
  <class name="NSGlyphInfo">
    <method selector="characterCollection">
      <retval></retval>
    </method>
    <method selector="characterIdentifier">
      <retval></retval>
    </method>
    <method class_method="true" selector="glyphInfoWithCharacterIdentifier:collection:baseString:">
      <arg name="cid"></arg>
      <arg name="characterCollection"></arg>
      <arg name="theString"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="glyphInfoWithGlyph:forFont:baseString:">
      <arg name="glyph"></arg>
      <arg name="font"></arg>
      <arg name="theString"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="glyphInfoWithGlyphName:forFont:baseString:">
      <arg name="glyphName"></arg>
      <arg name="font"></arg>
      <arg name="theString"></arg>
      <retval></retval>
    </method>
    <method selector="glyphName">
      <retval></retval>
    </method>
  </class>
  <class name="NSGradient" swt_gen="mixed">
    <method selector="colorSpace">
      <retval></retval>
    </method>
    <method selector="drawFromCenter:radius:toCenter:radius:options:">
      <arg name="startCenter"></arg>
      <arg name="startRadius"></arg>
      <arg name="endCenter"></arg>
      <arg name="endRadius"></arg>
      <arg name="options"></arg>
      <retval></retval>
    </method>
    <method selector="drawFromPoint:toPoint:options:" swt_gen="true">
      <arg name="startingPoint" swt_gen="true"></arg>
      <arg name="endingPoint" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawInBezierPath:angle:">
      <arg name="path"></arg>
      <arg name="angle"></arg>
      <retval></retval>
    </method>
    <method selector="drawInBezierPath:relativeCenterPosition:">
      <arg name="path"></arg>
      <arg name="relativeCenterPosition"></arg>
      <retval></retval>
    </method>
    <method selector="drawInRect:angle:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="angle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawInRect:relativeCenterPosition:">
      <arg name="rect"></arg>
      <arg name="relativeCenterPosition"></arg>
      <retval></retval>
    </method>
    <method selector="getColor:location:atIndex:">
      <arg name="color"></arg>
      <arg name="location"></arg>
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="initWithColors:">
      <arg name="colorArray"></arg>
      <retval></retval>
    </method>
    <method selector="initWithColors:atLocations:colorSpace:">
      <arg name="colorArray"></arg>
      <arg name="locations"></arg>
      <arg name="colorSpace"></arg>
      <retval></retval>
    </method>
    <method selector="initWithColorsAndLocations:">
      <arg name="initWithColorsAndLocations"></arg>
      <retval></retval>
    </method>
    <method selector="initWithStartingColor:endingColor:" swt_gen="true">
      <arg name="startingColor" swt_gen="true"></arg>
      <arg name="endingColor" swt_gen="true"></arg>
      <retval swt_gen="true" swt_java_type="NSGradient"></retval>
    </method>
    <method selector="interpolatedColorAtLocation:">
      <arg name="location"></arg>
      <retval></retval>
    </method>
    <method selector="numberOfColorStops">
      <retval></retval>
    </method>
  </class>
  <class name="NSGraphicsContext" swt_gen="mixed">
    <method selector="CIContext">
      <retval></retval>
    </method>
    <method selector="attributes">
      <retval></retval>
    </method>
    <method selector="colorRenderingIntent">
      <retval></retval>
    </method>
    <method selector="compositingOperation">
      <retval></retval>
    </method>
    <method class_method="true" selector="currentContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="currentContextDrawingToScreen">
      <retval></retval>
    </method>
    <method selector="flushGraphics" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="focusStack">
      <retval></retval>
    </method>
    <method class_method="true" selector="graphicsContextWithAttributes:">
      <arg name="attributes"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="graphicsContextWithBitmapImageRep:" swt_gen="true">
      <arg name="bitmapRep" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="graphicsContextWithGraphicsPort:flipped:" swt_gen="true">
      <arg name="graphicsPort" swt_gen="true"></arg>
      <arg name="initialFlippedState" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="graphicsContextWithWindow:" swt_gen="true">
      <arg name="window" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="graphicsPort" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="imageInterpolation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isDrawingToScreen" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isFlipped">
      <retval></retval>
    </method>
    <method selector="patternPhase">
      <retval></retval>
    </method>
    <method selector="restoreGraphicsState" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="restoreGraphicsState" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="saveGraphicsState" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="saveGraphicsState" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setColorRenderingIntent:">
      <arg name="renderingIntent"></arg>
      <retval></retval>
    </method>
    <method selector="setCompositingOperation:" swt_gen="true">
      <arg name="operation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="setCurrentContext:" swt_gen="true">
      <arg name="context" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFocusStack:">
      <arg name="stack"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="setGraphicsState:">
      <arg name="gState"></arg>
      <retval></retval>
    </method>
    <method selector="setImageInterpolation:" swt_gen="true">
      <arg name="interpolation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPatternPhase:" swt_gen="true">
      <arg name="phase" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShouldAntialias:" swt_gen="true">
      <arg name="antialias" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shouldAntialias">
      <retval></retval>
    </method>
  </class>
  <class name="NSHelpManager">
    <method selector="contextHelpForObject:">
      <arg name="object"></arg>
      <retval></retval>
    </method>
    <method selector="findString:inBook:">
      <arg name="query"></arg>
      <arg name="book"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="isContextHelpModeActive">
      <retval></retval>
    </method>
    <method selector="openHelpAnchor:inBook:">
      <arg name="anchor"></arg>
      <arg name="book"></arg>
      <retval></retval>
    </method>
    <method selector="removeContextHelpForObject:">
      <arg name="object"></arg>
      <retval></retval>
    </method>
    <method selector="setContextHelp:forObject:">
      <arg name="attrString"></arg>
      <arg name="object"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="setContextHelpModeActive:">
      <arg name="active"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="sharedHelpManager">
      <retval></retval>
    </method>
    <method selector="showContextHelpForObject:locationHint:">
      <arg name="object"></arg>
      <arg name="pt"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSImage" swt_gen="mixed">
    <method selector="TIFFRepresentation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="TIFFRepresentationUsingCompression:factor:">
      <arg name="comp"></arg>
      <arg name="aFloat"></arg>
      <retval></retval>
    </method>
    <method selector="addRepresentation:" swt_gen="true">
      <arg name="imageRep" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addRepresentations:">
      <arg name="imageReps"></arg>
      <retval></retval>
    </method>
    <method selector="alignmentRect">
      <retval></retval>
    </method>
    <method selector="backgroundColor">
      <retval></retval>
    </method>
    <method selector="bestRepresentationForDevice:" swt_gen="true">
      <arg name="deviceDescription" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cacheDepthMatchesImageDepth">
      <retval></retval>
    </method>
    <method selector="cacheMode">
      <retval></retval>
    </method>
    <method class_method="true" selector="canInitWithPasteboard:">
      <arg name="pasteboard"></arg>
      <retval></retval>
    </method>
    <method selector="cancelIncrementalLoad">
      <retval></retval>
    </method>
    <method selector="compositeToPoint:fromRect:operation:">
      <arg name="point"></arg>
      <arg name="rect"></arg>
      <arg name="op"></arg>
      <retval></retval>
    </method>
    <method selector="compositeToPoint:fromRect:operation:fraction:">
      <arg name="point"></arg>
      <arg name="rect"></arg>
      <arg name="op"></arg>
      <arg name="delta"></arg>
      <retval></retval>
    </method>
    <method selector="compositeToPoint:operation:">
      <arg name="point"></arg>
      <arg name="op"></arg>
      <retval></retval>
    </method>
    <method selector="compositeToPoint:operation:fraction:">
      <arg name="point"></arg>
      <arg name="op"></arg>
      <arg name="delta"></arg>
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="dissolveToPoint:fraction:">
      <arg name="point"></arg>
      <arg name="aFloat"></arg>
      <retval></retval>
    </method>
    <method selector="dissolveToPoint:fromRect:fraction:">
      <arg name="point"></arg>
      <arg name="rect"></arg>
      <arg name="aFloat"></arg>
      <retval></retval>
    </method>
    <method selector="drawAtPoint:fromRect:operation:fraction:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <arg name="fromRect" swt_gen="true"></arg>
      <arg name="op" swt_gen="true"></arg>
      <arg name="delta" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawInRect:fromRect:operation:fraction:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="fromRect" swt_gen="true"></arg>
      <arg name="op" swt_gen="true"></arg>
      <arg name="delta" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawRepresentation:inRect:">
      <arg name="imageRep"></arg>
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="imageFileTypes">
      <retval></retval>
    </method>
    <method class_method="true" selector="imageNamed:">
      <arg name="name"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="imagePasteboardTypes">
      <retval></retval>
    </method>
    <method class_method="true" selector="imageTypes">
      <retval></retval>
    </method>
    <method class_method="true" selector="imageUnfilteredFileTypes">
      <retval></retval>
    </method>
    <method class_method="true" selector="imageUnfilteredPasteboardTypes">
      <retval></retval>
    </method>
    <method class_method="true" selector="imageUnfilteredTypes">
      <retval></retval>
    </method>
    <method selector="initByReferencingFile:" swt_gen="true">
      <arg name="fileName" swt_gen="true"></arg>
      <retval swt_gen="true" swt_java_type="NSImage"></retval>
    </method>
    <method selector="initByReferencingURL:">
      <arg name="url"></arg>
      <retval></retval>
    </method>
    <method selector="initWithContentsOfFile:" swt_gen="true">
      <arg name="fileName" swt_gen="true"></arg>
      <retval swt_gen="true" swt_java_type="NSImage"></retval>
    </method>
    <method selector="initWithContentsOfURL:">
      <arg name="url"></arg>
      <retval></retval>
    </method>
    <method selector="initWithData:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithIconRef:">
      <arg name="iconRef"></arg>
      <retval></retval>
    </method>
    <method selector="initWithPasteboard:">
      <arg name="pasteboard"></arg>
      <retval></retval>
    </method>
    <method selector="initWithSize:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <retval swt_gen="true" swt_java_type="NSImage"></retval>
    </method>
    <method selector="isCachedSeparately">
      <retval></retval>
    </method>
    <method selector="isDataRetained">
      <retval></retval>
    </method>
    <method selector="isFlipped">
      <retval></retval>
    </method>
    <method selector="isTemplate">
      <retval></retval>
    </method>
    <method selector="isValid">
      <retval></retval>
    </method>
    <method selector="lockFocus" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lockFocusOnRepresentation:">
      <arg name="imageRepresentation"></arg>
      <retval></retval>
    </method>
    <method selector="matchesOnMultipleResolution">
      <retval></retval>
    </method>
    <method selector="name">
      <retval></retval>
    </method>
    <method selector="prefersColorMatch">
      <retval></retval>
    </method>
    <method selector="recache">
      <retval></retval>
    </method>
    <method selector="removeRepresentation:" swt_gen="true">
      <arg name="imageRep" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="representations" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scalesWhenResized">
      <retval></retval>
    </method>
    <method selector="setAlignmentRect:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="setBackgroundColor:">
      <arg name="aColor"></arg>
      <retval></retval>
    </method>
    <method selector="setCacheDepthMatchesImageDepth:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setCacheMode:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCachedSeparately:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setDataRetained:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:">
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
    <method selector="setFlipped:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setMatchesOnMultipleResolution:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setName:">
      <arg name="string"></arg>
      <retval></retval>
    </method>
    <method selector="setPrefersColorMatch:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setScalesWhenResized:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setSize:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTemplate:">
      <arg name="isTemplate"></arg>
      <retval></retval>
    </method>
    <method selector="setUsesEPSOnResolutionMismatch:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="size" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unlockFocus" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesEPSOnResolutionMismatch">
      <retval></retval>
    </method>
  </class>
  <class name="NSImageCell" swt_superclass="NSCell">
    <method selector="imageAlignment">
      <retval></retval>
    </method>
    <method selector="imageFrameStyle">
      <retval></retval>
    </method>
    <method selector="imageScaling">
      <retval></retval>
    </method>
    <method selector="setImageAlignment:">
      <arg name="newAlign"></arg>
      <retval></retval>
    </method>
    <method selector="setImageFrameStyle:">
      <arg name="newStyle"></arg>
      <retval></retval>
    </method>
    <method selector="setImageScaling:">
      <arg name="newScaling"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSImageRep" swt_gen="mixed">
    <method selector="bitsPerSample" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="canInitWithData:">
      <arg name="data"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="canInitWithPasteboard:">
      <arg name="pasteboard"></arg>
      <retval></retval>
    </method>
    <method selector="colorSpaceName" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draw">
      <retval></retval>
    </method>
    <method selector="drawAtPoint:">
      <arg name="point"></arg>
      <retval></retval>
    </method>
    <method selector="drawInRect:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="hasAlpha" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="imageFileTypes">
      <retval></retval>
    </method>
    <method class_method="true" selector="imagePasteboardTypes">
      <retval></retval>
    </method>
    <method class_method="true" selector="imageRepClassForData:">
      <arg name="data"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="imageRepClassForFileType:">
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="imageRepClassForPasteboardType:">
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="imageRepClassForType:">
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="imageRepWithContentsOfFile:">
      <arg name="filename"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="imageRepWithContentsOfURL:">
      <arg name="url"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="imageRepWithPasteboard:">
      <arg name="pasteboard"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="imageRepsWithContentsOfFile:">
      <arg name="filename"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="imageRepsWithContentsOfURL:">
      <arg name="url"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="imageRepsWithPasteboard:">
      <arg name="pasteboard"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="imageTypes">
      <retval></retval>
    </method>
    <method class_method="true" selector="imageUnfilteredFileTypes">
      <retval></retval>
    </method>
    <method class_method="true" selector="imageUnfilteredPasteboardTypes">
      <retval></retval>
    </method>
    <method class_method="true" selector="imageUnfilteredTypes">
      <retval></retval>
    </method>
    <method selector="isOpaque">
      <retval></retval>
    </method>
    <method selector="pixelsHigh" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pixelsWide" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="registerImageRepClass:">
      <arg name="imageRepClass"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="registeredImageRepClasses">
      <retval></retval>
    </method>
    <method selector="setAlpha:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setBitsPerSample:">
      <arg name="anInt"></arg>
      <retval></retval>
    </method>
    <method selector="setColorSpaceName:">
      <arg name="string"></arg>
      <retval></retval>
    </method>
    <method selector="setOpaque:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setPixelsHigh:">
      <arg name="anInt"></arg>
      <retval></retval>
    </method>
    <method selector="setPixelsWide:">
      <arg name="anInt"></arg>
      <retval></retval>
    </method>
    <method selector="setSize:">
      <arg name="aSize"></arg>
      <retval></retval>
    </method>
    <method selector="size">
      <retval></retval>
    </method>
    <method class_method="true" selector="unregisterImageRepClass:">
      <arg name="imageRepClass"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSImageView" swt_gen="mixed" swt_superclass="NSControl">
    <method selector="allowsCutCopyPaste">
      <retval></retval>
    </method>
    <method selector="animates">
      <retval></retval>
    </method>
    <method selector="image">
      <retval></retval>
    </method>
    <method selector="imageAlignment">
      <retval></retval>
    </method>
    <method selector="imageFrameStyle">
      <retval></retval>
    </method>
    <method selector="imageScaling">
      <retval></retval>
    </method>
    <method selector="isEditable">
      <retval></retval>
    </method>
    <method selector="setAllowsCutCopyPaste:">
      <arg name="allow"></arg>
      <retval></retval>
    </method>
    <method selector="setAnimates:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setEditable:">
      <arg name="yn"></arg>
      <retval></retval>
    </method>
    <method selector="setImage:" swt_gen="true">
      <arg name="newImage" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImageAlignment:" swt_gen="true">
      <arg name="newAlign" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImageFrameStyle:">
      <arg name="newStyle"></arg>
      <retval></retval>
    </method>
    <method selector="setImageScaling:" swt_gen="true">
      <arg name="newScaling" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSInputManager" swt_gen="mixed">
    <method class_method="true" selector="currentInputManager" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="cycleToNextInputLanguage:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="cycleToNextInputServerInLanguage:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="handleMouseEvent:" swt_gen="true">
      <arg name="theMouseEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="image">
      <retval></retval>
    </method>
    <method selector="initWithName:host:">
      <arg name="inputServerName"></arg>
      <arg name="hostName"></arg>
      <retval></retval>
    </method>
    <method selector="language">
      <retval></retval>
    </method>
    <method selector="localizedInputManagerName">
      <retval></retval>
    </method>
    <method selector="markedTextAbandoned:">
      <arg name="cli"></arg>
      <retval></retval>
    </method>
    <method selector="markedTextSelectionChanged:client:">
      <arg name="newSel"></arg>
      <arg name="cli"></arg>
      <retval></retval>
    </method>
    <method selector="server">
      <retval></retval>
    </method>
    <method selector="wantsToDelayTextChangeNotifications">
      <retval></retval>
    </method>
    <method selector="wantsToHandleMouseEvents" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="wantsToInterpretAllKeystrokes">
      <retval></retval>
    </method>
  </class>
  <class name="NSInputServer">
    <method selector="initWithDelegate:name:">
      <arg name="aDelegate"></arg>
      <arg name="name"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSLayoutManager" swt_gen="mixed">
    <method selector="addTemporaryAttribute:value:forCharacterRange:" swt_gen="true">
      <arg name="attrName" swt_gen="true"></arg>
      <arg name="value" swt_gen="true"></arg>
      <arg name="charRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addTemporaryAttributes:forCharacterRange:">
      <arg name="attrs"></arg>
      <arg name="charRange"></arg>
      <retval></retval>
    </method>
    <method selector="addTextContainer:" swt_gen="true">
      <arg name="container" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsNonContiguousLayout">
      <retval></retval>
    </method>
    <method selector="attachmentSizeForGlyphAtIndex:">
      <arg name="glyphIndex"></arg>
      <retval></retval>
    </method>
    <method selector="attributedString">
      <retval></retval>
    </method>
    <method selector="backgroundLayoutEnabled">
      <retval></retval>
    </method>
    <method selector="boundingRectForGlyphRange:inTextContainer:" swt_gen="true">
      <arg name="glyphRange" swt_gen="true"></arg>
      <arg name="container" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="boundsRectForTextBlock:atIndex:effectiveRange:">
      <arg name="block"></arg>
      <arg name="glyphIndex"></arg>
      <arg name="effectiveGlyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="boundsRectForTextBlock:glyphRange:">
      <arg name="block"></arg>
      <arg name="glyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="characterIndexForGlyphAtIndex:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="characterRangeForGlyphRange:actualGlyphRange:">
      <arg name="glyphRange"></arg>
      <arg name="actualGlyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="defaultAttachmentScaling">
      <retval></retval>
    </method>
    <method selector="defaultBaselineOffsetForFont:">
      <arg name="theFont"></arg>
      <retval></retval>
    </method>
    <method selector="defaultLineHeightForFont:" swt_gen="true">
      <arg name="theFont" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="deleteGlyphsInRange:">
      <arg name="glyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="drawBackgroundForGlyphRange:atPoint:" swt_gen="true">
      <arg name="glyphsToShow" swt_gen="true"></arg>
      <arg name="origin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawGlyphsForGlyphRange:atPoint:" swt_gen="true">
      <arg name="glyphsToShow" swt_gen="true"></arg>
      <arg name="origin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:">
      <arg name="glyphRange"></arg>
      <arg name="strikethroughVal"></arg>
      <arg name="baselineOffset"></arg>
      <arg name="lineRect"></arg>
      <arg name="lineGlyphRange"></arg>
      <arg name="containerOrigin"></arg>
      <retval></retval>
    </method>
    <method selector="drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:">
      <arg name="glyphRange"></arg>
      <arg name="underlineVal"></arg>
      <arg name="baselineOffset"></arg>
      <arg name="lineRect"></arg>
      <arg name="lineGlyphRange"></arg>
      <arg name="containerOrigin"></arg>
      <retval></retval>
    </method>
    <method selector="drawsOutsideLineFragmentForGlyphAtIndex:">
      <arg name="glyphIndex"></arg>
      <retval></retval>
    </method>
    <method selector="ensureGlyphsForCharacterRange:">
      <arg name="charRange"></arg>
      <retval></retval>
    </method>
    <method selector="ensureGlyphsForGlyphRange:">
      <arg name="glyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="ensureLayoutForBoundingRect:inTextContainer:">
      <arg name="bounds"></arg>
      <arg name="container"></arg>
      <retval></retval>
    </method>
    <method selector="ensureLayoutForCharacterRange:">
      <arg name="charRange"></arg>
      <retval></retval>
    </method>
    <method selector="ensureLayoutForGlyphRange:">
      <arg name="glyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="ensureLayoutForTextContainer:">
      <arg name="container"></arg>
      <retval></retval>
    </method>
    <method selector="extraLineFragmentRect">
      <retval></retval>
    </method>
    <method selector="extraLineFragmentTextContainer">
      <retval></retval>
    </method>
    <method selector="extraLineFragmentUsedRect">
      <retval></retval>
    </method>
    <method selector="firstTextView">
      <retval></retval>
    </method>
    <method selector="firstUnlaidCharacterIndex">
      <retval></retval>
    </method>
    <method selector="firstUnlaidGlyphIndex">
      <retval></retval>
    </method>
    <method selector="fractionOfDistanceThroughGlyphForPoint:inTextContainer:">
      <arg name="point"></arg>
      <arg name="container"></arg>
      <retval></retval>
    </method>
    <method selector="getFirstUnlaidCharacterIndex:glyphIndex:">
      <arg name="charIndex"></arg>
      <arg name="glyphIndex"></arg>
      <retval></retval>
    </method>
    <method selector="getGlyphs:range:" swt_gen="true">
      <arg name="glyphArray" swt_gen="true"></arg>
      <arg name="glyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:">
      <arg name="glyphRange"></arg>
      <arg name="glyphBuffer"></arg>
      <arg name="charIndexBuffer"></arg>
      <arg name="inscribeBuffer"></arg>
      <arg name="elasticBuffer"></arg>
      <retval></retval>
    </method>
    <method selector="getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:" swt_gen="true">
      <arg name="glyphRange" swt_gen="true"></arg>
      <arg name="glyphBuffer" swt_gen="true"></arg>
      <arg name="charIndexBuffer" swt_gen="true"></arg>
      <arg name="inscribeBuffer" swt_gen="true"></arg>
      <arg name="elasticBuffer" swt_gen="true"></arg>
      <arg name="bidiLevelBuffer" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:">
      <arg name="charIndex"></arg>
      <arg name="aFlag"></arg>
      <arg name="dFlag"></arg>
      <arg name="positions"></arg>
      <arg name="charIndexes"></arg>
      <retval></retval>
    </method>
    <method selector="glyphAtIndex:">
      <arg name="glyphIndex"></arg>
      <retval></retval>
    </method>
    <method selector="glyphAtIndex:isValidIndex:">
      <arg name="glyphIndex"></arg>
      <arg name="isValidIndex"></arg>
      <retval></retval>
    </method>
    <method selector="glyphGenerator">
      <retval></retval>
    </method>
    <method selector="glyphIndexForCharacterAtIndex:" swt_gen="true">
      <arg name="charIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="glyphIndexForPoint:inTextContainer:">
      <arg name="point"></arg>
      <arg name="container"></arg>
      <retval></retval>
    </method>
    <method selector="glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <arg name="container" swt_gen="true"></arg>
      <arg name="partialFraction" swt_gen="true" swt_java_type="float[]" swt_java_type64="double[]"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="glyphRangeForBoundingRect:inTextContainer:">
      <arg name="bounds"></arg>
      <arg name="container"></arg>
      <retval></retval>
    </method>
    <method selector="glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:">
      <arg name="bounds"></arg>
      <arg name="container"></arg>
      <retval></retval>
    </method>
    <method selector="glyphRangeForCharacterRange:actualCharacterRange:" swt_gen="true">
      <arg name="charRange" swt_gen="true"></arg>
      <arg name="actualCharRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="glyphRangeForTextContainer:" swt_gen="true">
      <arg name="container" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasNonContiguousLayout">
      <retval></retval>
    </method>
    <method selector="hyphenationFactor">
      <retval></retval>
    </method>
    <method selector="init">
      <retval></retval>
    </method>
    <method selector="insertGlyph:atGlyphIndex:characterIndex:">
      <arg name="glyph"></arg>
      <arg name="glyphIndex"></arg>
      <arg name="charIndex"></arg>
      <retval></retval>
    </method>
    <method selector="insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:">
      <arg name="glyphs"></arg>
      <arg name="length"></arg>
      <arg name="glyphIndex"></arg>
      <arg name="charIndex"></arg>
      <retval></retval>
    </method>
    <method selector="insertTextContainer:atIndex:">
      <arg name="container"></arg>
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="intAttribute:forGlyphAtIndex:">
      <arg name="attributeTag"></arg>
      <arg name="glyphIndex"></arg>
      <retval></retval>
    </method>
    <method selector="invalidateDisplayForCharacterRange:">
      <arg name="charRange"></arg>
      <retval></retval>
    </method>
    <method selector="invalidateDisplayForGlyphRange:">
      <arg name="glyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:">
      <arg name="charRange"></arg>
      <arg name="delta"></arg>
      <arg name="actualCharRange"></arg>
      <retval></retval>
    </method>
    <method selector="invalidateGlyphsOnLayoutInvalidationForGlyphRange:">
      <arg name="glyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="invalidateLayoutForCharacterRange:actualCharacterRange:">
      <arg name="charRange"></arg>
      <arg name="actualCharRange"></arg>
      <retval></retval>
    </method>
    <method selector="invalidateLayoutForCharacterRange:isSoft:actualCharacterRange:">
      <arg name="charRange"></arg>
      <arg name="flag"></arg>
      <arg name="actualCharRange"></arg>
      <retval></retval>
    </method>
    <method selector="isValidGlyphIndex:">
      <arg name="glyphIndex"></arg>
      <retval></retval>
    </method>
    <method selector="layoutManagerOwnsFirstResponderInWindow:">
      <arg name="window"></arg>
      <retval></retval>
    </method>
    <method selector="layoutOptions">
      <retval></retval>
    </method>
    <method selector="layoutRectForTextBlock:atIndex:effectiveRange:">
      <arg name="block"></arg>
      <arg name="glyphIndex"></arg>
      <arg name="effectiveGlyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="layoutRectForTextBlock:glyphRange:">
      <arg name="block"></arg>
      <arg name="glyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="lineFragmentRectForGlyphAtIndex:effectiveRange:">
      <arg name="glyphIndex"></arg>
      <arg name="effectiveGlyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:">
      <arg name="glyphIndex"></arg>
      <arg name="effectiveGlyphRange"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="lineFragmentUsedRectForGlyphAtIndex:effectiveRange:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <arg name="effectiveGlyphRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <arg name="effectiveGlyphRange" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="locationForGlyphAtIndex:" swt_gen="true">
      <arg name="glyphIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="notShownAttributeForGlyphAtIndex:">
      <arg name="glyphIndex"></arg>
      <retval></retval>
    </method>
    <method selector="numberOfGlyphs" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rangeOfNominallySpacedGlyphsContainingIndex:">
      <arg name="glyphIndex"></arg>
      <retval></retval>
    </method>
    <method selector="rectArrayForCharacterRange:withinSelectedCharacterRange:inTextContainer:rectCount:" swt_gen="true">
      <arg name="charRange" swt_gen="true"></arg>
      <arg name="selCharRange" swt_gen="true"></arg>
      <arg name="container" swt_gen="true"></arg>
      <arg name="rectCount" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rectArrayForGlyphRange:withinSelectedGlyphRange:inTextContainer:rectCount:">
      <arg name="glyphRange"></arg>
      <arg name="selGlyphRange"></arg>
      <arg name="container"></arg>
      <arg name="rectCount"></arg>
      <retval></retval>
    </method>
    <method selector="removeTemporaryAttribute:forCharacterRange:" swt_gen="true">
      <arg name="attrName" swt_gen="true"></arg>
      <arg name="charRange" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeTextContainerAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="replaceGlyphAtIndex:withGlyph:">
      <arg name="glyphIndex"></arg>
      <arg name="newGlyph"></arg>
      <retval></retval>
    </method>
    <method selector="replaceTextStorage:">
      <arg name="newTextStorage"></arg>
      <retval></retval>
    </method>
    <method selector="rulerAccessoryViewForTextView:paragraphStyle:ruler:enabled:">
      <arg name="view"></arg>
      <arg name="style"></arg>
      <arg name="ruler"></arg>
      <arg name="isEnabled"></arg>
      <retval></retval>
    </method>
    <method selector="rulerMarkersForTextView:paragraphStyle:ruler:">
      <arg name="view"></arg>
      <arg name="style"></arg>
      <arg name="ruler"></arg>
      <retval></retval>
    </method>
    <method selector="setAllowsNonContiguousLayout:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setAttachmentSize:forGlyphRange:">
      <arg name="attachmentSize"></arg>
      <arg name="glyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="setBackgroundLayoutEnabled:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setBoundsRect:forTextBlock:glyphRange:">
      <arg name="rect"></arg>
      <arg name="block"></arg>
      <arg name="glyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="setCharacterIndex:forGlyphAtIndex:">
      <arg name="charIndex"></arg>
      <arg name="glyphIndex"></arg>
      <retval></retval>
    </method>
    <method selector="setDefaultAttachmentScaling:">
      <arg name="scaling"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:">
      <arg name="delegate"></arg>
      <retval></retval>
    </method>
    <method selector="setDrawsOutsideLineFragment:forGlyphAtIndex:">
      <arg name="flag"></arg>
      <arg name="glyphIndex"></arg>
      <retval></retval>
    </method>
    <method selector="setExtraLineFragmentRect:usedRect:textContainer:">
      <arg name="fragmentRect"></arg>
      <arg name="usedRect"></arg>
      <arg name="container"></arg>
      <retval></retval>
    </method>
    <method selector="setGlyphGenerator:">
      <arg name="glyphGenerator"></arg>
      <retval></retval>
    </method>
    <method selector="setHyphenationFactor:">
      <arg name="factor"></arg>
      <retval></retval>
    </method>
    <method selector="setIntAttribute:value:forGlyphAtIndex:">
      <arg name="attributeTag"></arg>
      <arg name="val"></arg>
      <arg name="glyphIndex"></arg>
      <retval></retval>
    </method>
    <method selector="setLayoutRect:forTextBlock:glyphRange:">
      <arg name="rect"></arg>
      <arg name="block"></arg>
      <arg name="glyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="setLineFragmentRect:forGlyphRange:usedRect:" swt_gen="true">
      <arg name="fragmentRect" swt_gen="true"></arg>
      <arg name="glyphRange" swt_gen="true"></arg>
      <arg name="usedRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLocation:forStartOfGlyphRange:">
      <arg name="location"></arg>
      <arg name="glyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="setLocations:startingGlyphIndexes:count:forGlyphRange:">
      <arg name="locations"></arg>
      <arg name="glyphIndexes"></arg>
      <arg name="count"></arg>
      <arg name="glyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="setNotShownAttribute:forGlyphAtIndex:">
      <arg name="flag"></arg>
      <arg name="glyphIndex"></arg>
      <retval></retval>
    </method>
    <method selector="setShowsControlCharacters:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setShowsInvisibleCharacters:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setTemporaryAttributes:forCharacterRange:">
      <arg name="attrs"></arg>
      <arg name="charRange"></arg>
      <retval></retval>
    </method>
    <method selector="setTextContainer:forGlyphRange:">
      <arg name="container"></arg>
      <arg name="glyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="setTextStorage:" swt_gen="true">
      <arg name="textStorage" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTypesetter:">
      <arg name="typesetter"></arg>
      <retval></retval>
    </method>
    <method selector="setTypesetterBehavior:">
      <arg name="theBehavior"></arg>
      <retval></retval>
    </method>
    <method selector="setUsesFontLeading:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setUsesScreenFonts:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="showAttachmentCell:inRect:characterIndex:">
      <arg name="cell"></arg>
      <arg name="rect"></arg>
      <arg name="attachmentIndex"></arg>
      <retval></retval>
    </method>
    <method selector="showPackedGlyphs:length:glyphRange:atPoint:font:color:printingAdjustment:">
      <arg name="glyphs"></arg>
      <arg name="glyphLen"></arg>
      <arg name="glyphRange"></arg>
      <arg name="point"></arg>
      <arg name="font"></arg>
      <arg name="color"></arg>
      <arg name="printingAdjustment"></arg>
      <retval></retval>
    </method>
    <method selector="showsControlCharacters">
      <retval></retval>
    </method>
    <method selector="showsInvisibleCharacters">
      <retval></retval>
    </method>
    <method selector="strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:">
      <arg name="glyphRange"></arg>
      <arg name="strikethroughVal"></arg>
      <arg name="lineRect"></arg>
      <arg name="lineGlyphRange"></arg>
      <arg name="containerOrigin"></arg>
      <retval></retval>
    </method>
    <method selector="substituteFontForFont:">
      <arg name="originalFont"></arg>
      <retval></retval>
    </method>
    <method selector="temporaryAttribute:atCharacterIndex:effectiveRange:">
      <arg name="attrName"></arg>
      <arg name="location"></arg>
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="temporaryAttribute:atCharacterIndex:longestEffectiveRange:inRange:">
      <arg name="attrName"></arg>
      <arg name="location"></arg>
      <arg name="range"></arg>
      <arg name="rangeLimit"></arg>
      <retval></retval>
    </method>
    <method selector="temporaryAttributesAtCharacterIndex:effectiveRange:">
      <arg name="charIndex"></arg>
      <arg name="effectiveCharRange"></arg>
      <retval></retval>
    </method>
    <method selector="temporaryAttributesAtCharacterIndex:longestEffectiveRange:inRange:">
      <arg name="location"></arg>
      <arg name="range"></arg>
      <arg name="rangeLimit"></arg>
      <retval></retval>
    </method>
    <method selector="textContainerChangedGeometry:">
      <arg name="container"></arg>
      <retval></retval>
    </method>
    <method selector="textContainerChangedTextView:">
      <arg name="container"></arg>
      <retval></retval>
    </method>
    <method selector="textContainerForGlyphAtIndex:effectiveRange:">
      <arg name="glyphIndex"></arg>
      <arg name="effectiveGlyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:">
      <arg name="glyphIndex"></arg>
      <arg name="effectiveGlyphRange"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="textContainers">
      <retval></retval>
    </method>
    <method selector="textStorage">
      <retval></retval>
    </method>
    <method selector="textStorage:edited:range:changeInLength:invalidatedRange:">
      <arg name="str"></arg>
      <arg name="editedMask"></arg>
      <arg name="newCharRange"></arg>
      <arg name="delta"></arg>
      <arg name="invalidatedCharRange"></arg>
      <retval></retval>
    </method>
    <method selector="textViewForBeginningOfSelection">
      <retval></retval>
    </method>
    <method selector="typesetter" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="typesetterBehavior">
      <retval></retval>
    </method>
    <method selector="underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:">
      <arg name="glyphRange"></arg>
      <arg name="underlineVal"></arg>
      <arg name="lineRect"></arg>
      <arg name="lineGlyphRange"></arg>
      <arg name="containerOrigin"></arg>
      <retval></retval>
    </method>
    <method selector="usedRectForTextContainer:" swt_gen="true">
      <arg name="container" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesFontLeading">
      <retval></retval>
    </method>
    <method selector="usesScreenFonts">
      <retval></retval>
    </method>
  </class>
  <class name="NSLevelIndicator" swt_superclass="NSControl">
    <method selector="criticalValue">
      <retval></retval>
    </method>
    <method selector="maxValue">
      <retval></retval>
    </method>
    <method selector="minValue">
      <retval></retval>
    </method>
    <method selector="numberOfMajorTickMarks">
      <retval></retval>
    </method>
    <method selector="numberOfTickMarks">
      <retval></retval>
    </method>
    <method selector="rectOfTickMarkAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="setCriticalValue:">
      <arg name="criticalValue"></arg>
      <retval></retval>
    </method>
    <method selector="setMaxValue:">
      <arg name="maxValue"></arg>
      <retval></retval>
    </method>
    <method selector="setMinValue:">
      <arg name="minValue"></arg>
      <retval></retval>
    </method>
    <method selector="setNumberOfMajorTickMarks:">
      <arg name="count"></arg>
      <retval></retval>
    </method>
    <method selector="setNumberOfTickMarks:">
      <arg name="count"></arg>
      <retval></retval>
    </method>
    <method selector="setTickMarkPosition:">
      <arg name="position"></arg>
      <retval></retval>
    </method>
    <method selector="setWarningValue:">
      <arg name="warningValue"></arg>
      <retval></retval>
    </method>
    <method selector="tickMarkPosition">
      <retval></retval>
    </method>
    <method selector="tickMarkValueAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="warningValue">
      <retval></retval>
    </method>
  </class>
  <class name="NSLevelIndicatorCell" swt_superclass="NSActionCell">
    <method selector="criticalValue">
      <retval></retval>
    </method>
    <method selector="initWithLevelIndicatorStyle:">
      <arg name="levelIndicatorStyle"></arg>
      <retval></retval>
    </method>
    <method selector="levelIndicatorStyle">
      <retval></retval>
    </method>
    <method selector="maxValue">
      <retval></retval>
    </method>
    <method selector="minValue">
      <retval></retval>
    </method>
    <method selector="numberOfMajorTickMarks">
      <retval></retval>
    </method>
    <method selector="numberOfTickMarks">
      <retval></retval>
    </method>
    <method selector="rectOfTickMarkAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="setCriticalValue:">
      <arg name="criticalValue"></arg>
      <retval></retval>
    </method>
    <method selector="setImage:">
      <arg name="image"></arg>
      <retval></retval>
    </method>
    <method selector="setLevelIndicatorStyle:">
      <arg name="levelIndicatorStyle"></arg>
      <retval></retval>
    </method>
    <method selector="setMaxValue:">
      <arg name="maxValue"></arg>
      <retval></retval>
    </method>
    <method selector="setMinValue:">
      <arg name="minValue"></arg>
      <retval></retval>
    </method>
    <method selector="setNumberOfMajorTickMarks:">
      <arg name="count"></arg>
      <retval></retval>
    </method>
    <method selector="setNumberOfTickMarks:">
      <arg name="count"></arg>
      <retval></retval>
    </method>
    <method selector="setTickMarkPosition:">
      <arg name="position"></arg>
      <retval></retval>
    </method>
    <method selector="setWarningValue:">
      <arg name="warningValue"></arg>
      <retval></retval>
    </method>
    <method selector="tickMarkPosition">
      <retval></retval>
    </method>
    <method selector="tickMarkValueAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="warningValue">
      <retval></retval>
    </method>
  </class>
  <class name="NSMatrix" swt_superclass="NSControl">
    <method selector="acceptsFirstMouse:">
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method selector="addColumn">
      <retval></retval>
    </method>
    <method selector="addColumnWithCells:">
      <arg name="newCells"></arg>
      <retval></retval>
    </method>
    <method selector="addRow">
      <retval></retval>
    </method>
    <method selector="addRowWithCells:">
      <arg name="newCells"></arg>
      <retval></retval>
    </method>
    <method selector="allowsEmptySelection">
      <retval></retval>
    </method>
    <method selector="autosizesCells">
      <retval></retval>
    </method>
    <method selector="backgroundColor">
      <retval></retval>
    </method>
    <method selector="cellAtRow:column:">
      <arg name="row"></arg>
      <arg name="col"></arg>
      <retval></retval>
    </method>
    <method selector="cellBackgroundColor">
      <retval></retval>
    </method>
    <method selector="cellClass">
      <retval></retval>
    </method>
    <method selector="cellFrameAtRow:column:">
      <arg name="row"></arg>
      <arg name="col"></arg>
      <retval></retval>
    </method>
    <method selector="cellSize">
      <retval></retval>
    </method>
    <method selector="cellWithTag:">
      <arg name="anInt"></arg>
      <retval></retval>
    </method>
    <method selector="cells">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="deselectAllCells">
      <retval></retval>
    </method>
    <method selector="deselectSelectedCell">
      <retval></retval>
    </method>
    <method selector="doubleAction">
      <retval></retval>
    </method>
    <method selector="drawCellAtRow:column:">
      <arg name="row"></arg>
      <arg name="col"></arg>
      <retval></retval>
    </method>
    <method selector="drawsBackground">
      <retval></retval>
    </method>
    <method selector="drawsCellBackground">
      <retval></retval>
    </method>
    <method selector="getNumberOfRows:columns:">
      <arg name="rowCount"></arg>
      <arg name="colCount"></arg>
      <retval></retval>
    </method>
    <method selector="getRow:column:forPoint:">
      <arg name="row"></arg>
      <arg name="col"></arg>
      <arg name="aPoint"></arg>
      <retval></retval>
    </method>
    <method selector="getRow:column:ofCell:">
      <arg name="row"></arg>
      <arg name="col"></arg>
      <arg name="aCell"></arg>
      <retval></retval>
    </method>
    <method selector="highlightCell:atRow:column:">
      <arg name="flag"></arg>
      <arg name="row"></arg>
      <arg name="col"></arg>
      <retval></retval>
    </method>
    <method selector="initWithFrame:">
      <arg name="frameRect"></arg>
      <retval></retval>
    </method>
    <method selector="initWithFrame:mode:cellClass:numberOfRows:numberOfColumns:">
      <arg name="frameRect"></arg>
      <arg name="aMode"></arg>
      <arg name="factoryId"></arg>
      <arg name="rowsHigh"></arg>
      <arg name="colsWide"></arg>
      <retval></retval>
    </method>
    <method selector="initWithFrame:mode:prototype:numberOfRows:numberOfColumns:">
      <arg name="frameRect"></arg>
      <arg name="aMode"></arg>
      <arg name="aCell"></arg>
      <arg name="rowsHigh"></arg>
      <arg name="colsWide"></arg>
      <retval></retval>
    </method>
    <method selector="insertColumn:">
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="insertColumn:withCells:">
      <arg name="column"></arg>
      <arg name="newCells"></arg>
      <retval></retval>
    </method>
    <method selector="insertRow:">
      <arg name="row"></arg>
      <retval></retval>
    </method>
    <method selector="insertRow:withCells:">
      <arg name="row"></arg>
      <arg name="newCells"></arg>
      <retval></retval>
    </method>
    <method selector="intercellSpacing">
      <retval></retval>
    </method>
    <method selector="isAutoscroll">
      <retval></retval>
    </method>
    <method selector="isSelectionByRect">
      <retval></retval>
    </method>
    <method selector="keyCell">
      <retval></retval>
    </method>
    <method selector="makeCellAtRow:column:">
      <arg name="row"></arg>
      <arg name="col"></arg>
      <retval></retval>
    </method>
    <method selector="mode">
      <retval></retval>
    </method>
    <method selector="mouseDown:">
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method selector="mouseDownFlags">
      <retval></retval>
    </method>
    <method selector="numberOfColumns">
      <retval></retval>
    </method>
    <method selector="numberOfRows">
      <retval></retval>
    </method>
    <method selector="performKeyEquivalent:">
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method selector="prototype">
      <retval></retval>
    </method>
    <method selector="putCell:atRow:column:">
      <arg name="newCell"></arg>
      <arg name="row"></arg>
      <arg name="col"></arg>
      <retval></retval>
    </method>
    <method selector="removeColumn:">
      <arg name="col"></arg>
      <retval></retval>
    </method>
    <method selector="removeRow:">
      <arg name="row"></arg>
      <retval></retval>
    </method>
    <method selector="renewRows:columns:">
      <arg name="newRows"></arg>
      <arg name="newCols"></arg>
      <retval></retval>
    </method>
    <method selector="resetCursorRects">
      <retval></retval>
    </method>
    <method selector="scrollCellToVisibleAtRow:column:">
      <arg name="row"></arg>
      <arg name="col"></arg>
      <retval></retval>
    </method>
    <method selector="selectAll:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="selectCellAtRow:column:">
      <arg name="row"></arg>
      <arg name="col"></arg>
      <retval></retval>
    </method>
    <method selector="selectCellWithTag:">
      <arg name="anInt"></arg>
      <retval></retval>
    </method>
    <method selector="selectText:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="selectTextAtRow:column:">
      <arg name="row"></arg>
      <arg name="col"></arg>
      <retval></retval>
    </method>
    <method selector="selectedCell">
      <retval></retval>
    </method>
    <method selector="selectedCells">
      <retval></retval>
    </method>
    <method selector="selectedColumn">
      <retval></retval>
    </method>
    <method selector="selectedRow">
      <retval></retval>
    </method>
    <method selector="sendAction">
      <retval></retval>
    </method>
    <method selector="sendAction:to:forAllCells:">
      <arg name="aSelector"></arg>
      <arg name="anObject"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="sendDoubleAction">
      <retval></retval>
    </method>
    <method selector="setAllowsEmptySelection:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setAutoscroll:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setAutosizesCells:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setBackgroundColor:">
      <arg name="color"></arg>
      <retval></retval>
    </method>
    <method selector="setCellBackgroundColor:">
      <arg name="color"></arg>
      <retval></retval>
    </method>
    <method selector="setCellClass:">
      <arg name="factoryId"></arg>
      <retval></retval>
    </method>
    <method selector="setCellSize:">
      <arg name="aSize"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:">
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
    <method selector="setDoubleAction:">
      <arg name="aSelector"></arg>
      <retval></retval>
    </method>
    <method selector="setDrawsBackground:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setDrawsCellBackground:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setIntercellSpacing:">
      <arg name="aSize"></arg>
      <retval></retval>
    </method>
    <method selector="setKeyCell:">
      <arg name="keyCell"></arg>
      <retval></retval>
    </method>
    <method selector="setMode:">
      <arg name="aMode"></arg>
      <retval></retval>
    </method>
    <method selector="setPrototype:">
      <arg name="aCell"></arg>
      <retval></retval>
    </method>
    <method selector="setScrollable:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectionByRect:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectionFrom:to:anchor:highlight:">
      <arg name="startPos"></arg>
      <arg name="endPos"></arg>
      <arg name="anchorPos"></arg>
      <arg name="lit"></arg>
      <retval></retval>
    </method>
    <method selector="setState:atRow:column:">
      <arg name="value"></arg>
      <arg name="row"></arg>
      <arg name="col"></arg>
      <retval></retval>
    </method>
    <method selector="setTabKeyTraversesCells:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setToolTip:forCell:">
      <arg name="toolTipString"></arg>
      <arg name="cell"></arg>
      <retval></retval>
    </method>
    <method selector="setValidateSize:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="sizeToCells">
      <retval></retval>
    </method>
    <method selector="sortUsingFunction:context:">
      <arg name="compare">
        <arg></arg>
        <arg></arg>
        <arg></arg>
        <retval></retval>
      </arg>
      <arg name="context"></arg>
      <retval></retval>
    </method>
    <method selector="sortUsingSelector:">
      <arg name="comparator"></arg>
      <retval></retval>
    </method>
    <method selector="tabKeyTraversesCells">
      <retval></retval>
    </method>
    <method selector="textDidBeginEditing:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="textDidChange:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="textDidEndEditing:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="textShouldBeginEditing:">
      <arg name="textObject"></arg>
      <retval></retval>
    </method>
    <method selector="textShouldEndEditing:">
      <arg name="textObject"></arg>
      <retval></retval>
    </method>
    <method selector="toolTipForCell:">
      <arg name="cell"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSMenu" swt_gen="mixed">
    <method selector="addItem:" swt_gen="true">
      <arg name="newItem" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addItemWithTitle:action:keyEquivalent:">
      <arg name="aString"></arg>
      <arg name="aSelector"></arg>
      <arg name="charCode"></arg>
      <retval></retval>
    </method>
    <method selector="attachedMenu">
      <retval></retval>
    </method>
    <method selector="autoenablesItems">
      <retval></retval>
    </method>
    <method selector="cancelTracking" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contextMenuRepresentation">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="helpRequested:">
      <arg name="eventPtr"></arg>
      <retval></retval>
    </method>
    <method selector="highlightedItem">
      <retval></retval>
    </method>
    <method selector="indexOfItem:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="indexOfItemWithRepresentedObject:">
      <arg name="object"></arg>
      <retval></retval>
    </method>
    <method selector="indexOfItemWithSubmenu:">
      <arg name="submenu"></arg>
      <retval></retval>
    </method>
    <method selector="indexOfItemWithTag:">
      <arg name="aTag"></arg>
      <retval></retval>
    </method>
    <method selector="indexOfItemWithTarget:andAction:" swt_gen="true">
      <arg name="target" swt_gen="true"></arg>
      <arg name="actionSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indexOfItemWithTitle:">
      <arg name="aTitle"></arg>
      <retval></retval>
    </method>
    <method selector="initWithTitle:" swt_gen="true">
      <arg name="aTitle" swt_gen="true"></arg>
      <retval swt_gen="true" swt_java_type="NSMenu"></retval>
    </method>
    <method selector="insertItem:atIndex:" swt_gen="true">
      <arg name="newItem" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertItemWithTitle:action:keyEquivalent:atIndex:">
      <arg name="aString"></arg>
      <arg name="aSelector"></arg>
      <arg name="charCode"></arg>
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="isAttached">
      <retval></retval>
    </method>
    <method selector="isTornOff">
      <retval></retval>
    </method>
    <method selector="itemArray" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemChanged:">
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="itemWithTag:">
      <arg name="tag"></arg>
      <retval></retval>
    </method>
    <method selector="itemWithTitle:">
      <arg name="aTitle"></arg>
      <retval></retval>
    </method>
    <method selector="locationForSubmenu:">
      <arg name="aSubmenu"></arg>
      <retval></retval>
    </method>
    <method selector="menuBarHeight">
      <retval></retval>
    </method>
    <method class_method="true" selector="menuBarVisible">
      <retval></retval>
    </method>
    <method selector="menuChangedMessagesEnabled">
      <retval></retval>
    </method>
    <method selector="menuRepresentation">
      <retval></retval>
    </method>
    <method class_method="true" selector="menuZone">
      <retval></retval>
    </method>
    <method selector="numberOfItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performActionForItemAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="performKeyEquivalent:">
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="popUpContextMenu:withEvent:forView:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="popUpContextMenu:withEvent:forView:withFont:">
      <arg name="menu"></arg>
      <arg name="event"></arg>
      <arg name="view"></arg>
      <arg name="font"></arg>
      <retval></retval>
    </method>
    <method selector="removeItem:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutoenablesItems:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContextMenuRepresentation:">
      <arg name="menuRep"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="setMenuBarVisible:">
      <arg name="visible"></arg>
      <retval></retval>
    </method>
    <method selector="setMenuChangedMessagesEnabled:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setMenuRepresentation:">
      <arg name="menuRep"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="setMenuZone:">
      <arg name="aZone"></arg>
      <retval></retval>
    </method>
    <method selector="setShowsStateColumn:">
      <arg name="showsState"></arg>
      <retval></retval>
    </method>
    <method selector="setSubmenu:forItem:">
      <arg name="aMenu"></arg>
      <arg name="anItem"></arg>
      <retval></retval>
    </method>
    <method selector="setSupermenu:">
      <arg name="supermenu"></arg>
      <retval></retval>
    </method>
    <method selector="setTearOffMenuRepresentation:">
      <arg name="menuRep"></arg>
      <retval></retval>
    </method>
    <method selector="setTitle:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showsStateColumn">
      <retval></retval>
    </method>
    <method selector="sizeToFit">
      <retval></retval>
    </method>
    <method selector="submenuAction:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="supermenu">
      <retval></retval>
    </method>
    <method selector="tearOffMenuRepresentation">
      <retval></retval>
    </method>
    <method selector="title">
      <retval></retval>
    </method>
    <method selector="update">
      <retval></retval>
    </method>
  </class>
  <class name="NSMenuItem" swt_gen="mixed">
    <method selector="action">
      <retval></retval>
    </method>
    <method selector="attributedTitle">
      <retval></retval>
    </method>
    <method selector="hasSubmenu">
      <retval></retval>
    </method>
    <method selector="image">
      <retval></retval>
    </method>
    <method selector="indentationLevel">
      <retval></retval>
    </method>
    <method selector="initWithTitle:action:keyEquivalent:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <arg name="aSelector" swt_gen="true"></arg>
      <arg name="charCode" swt_gen="true"></arg>
      <retval swt_gen="true" swt_java_type="NSMenuItem"></retval>
    </method>
    <method selector="isAlternate">
      <retval></retval>
    </method>
    <method selector="isEnabled">
      <retval></retval>
    </method>
    <method selector="isHidden" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isHiddenOrHasHiddenAncestor">
      <retval></retval>
    </method>
    <method selector="isHighlighted">
      <retval></retval>
    </method>
    <method selector="isSeparatorItem">
      <retval></retval>
    </method>
    <method selector="keyEquivalent" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyEquivalentModifierMask" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="menu">
      <retval></retval>
    </method>
    <method selector="mixedStateImage">
      <retval></retval>
    </method>
    <method selector="mnemonic">
      <retval></retval>
    </method>
    <method selector="mnemonicLocation">
      <retval></retval>
    </method>
    <method selector="offStateImage">
      <retval></retval>
    </method>
    <method selector="onStateImage">
      <retval></retval>
    </method>
    <method selector="representedObject">
      <retval></retval>
    </method>
    <method class_method="true" selector="separatorItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAction:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlternate:">
      <arg name="isAlternate"></arg>
      <retval></retval>
    </method>
    <method selector="setAttributedTitle:">
      <arg name="string"></arg>
      <retval></retval>
    </method>
    <method selector="setEnabled:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHidden:" swt_gen="true">
      <arg name="hidden" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImage:" swt_gen="true">
      <arg name="menuImage" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIndentationLevel:">
      <arg name="indentationLevel"></arg>
      <retval></retval>
    </method>
    <method selector="setKeyEquivalent:" swt_gen="true">
      <arg name="aKeyEquivalent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setKeyEquivalentModifierMask:" swt_gen="true">
      <arg name="mask" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMenu:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMixedStateImage:">
      <arg name="image"></arg>
      <retval></retval>
    </method>
    <method selector="setMnemonicLocation:">
      <arg name="location"></arg>
      <retval></retval>
    </method>
    <method selector="setOffStateImage:">
      <arg name="image"></arg>
      <retval></retval>
    </method>
    <method selector="setOnStateImage:">
      <arg name="image"></arg>
      <retval></retval>
    </method>
    <method selector="setRepresentedObject:">
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
    <method selector="setState:" swt_gen="true">
      <arg name="state" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSubmenu:" swt_gen="true">
      <arg name="submenu" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTag:">
      <arg name="anInt"></arg>
      <retval></retval>
    </method>
    <method selector="setTarget:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitle:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleWithMnemonic:">
      <arg name="stringWithAmpersand"></arg>
      <retval></retval>
    </method>
    <method selector="setToolTip:">
      <arg name="toolTip"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="setUsesUserKeyEquivalents:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setView:">
      <arg name="view"></arg>
      <retval></retval>
    </method>
    <method selector="state" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="submenu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tag">
      <retval></retval>
    </method>
    <method selector="target">
      <retval></retval>
    </method>
    <method selector="title" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toolTip">
      <retval></retval>
    </method>
    <method selector="userKeyEquivalent">
      <retval></retval>
    </method>
    <method class_method="true" selector="usesUserKeyEquivalents">
      <retval></retval>
    </method>
    <method selector="view">
      <retval></retval>
    </method>
  </class>
  <class name="NSMenuItemCell" swt_superclass="NSButtonCell">
    <method selector="calcSize">
      <retval></retval>
    </method>
    <method selector="drawBorderAndBackgroundWithFrame:inView:">
      <arg name="cellFrame"></arg>
      <arg name="controlView"></arg>
      <retval></retval>
    </method>
    <method selector="drawImageWithFrame:inView:">
      <arg name="cellFrame"></arg>
      <arg name="controlView"></arg>
      <retval></retval>
    </method>
    <method selector="drawKeyEquivalentWithFrame:inView:">
      <arg name="cellFrame"></arg>
      <arg name="controlView"></arg>
      <retval></retval>
    </method>
    <method selector="drawSeparatorItemWithFrame:inView:">
      <arg name="cellFrame"></arg>
      <arg name="controlView"></arg>
      <retval></retval>
    </method>
    <method selector="drawStateImageWithFrame:inView:">
      <arg name="cellFrame"></arg>
      <arg name="controlView"></arg>
      <retval></retval>
    </method>
    <method selector="drawTitleWithFrame:inView:">
      <arg name="cellFrame"></arg>
      <arg name="controlView"></arg>
      <retval></retval>
    </method>
    <method selector="imageWidth">
      <retval></retval>
    </method>
    <method selector="keyEquivalentRectForBounds:">
      <arg name="cellFrame"></arg>
      <retval></retval>
    </method>
    <method selector="keyEquivalentWidth">
      <retval></retval>
    </method>
    <method selector="menuItem">
      <retval></retval>
    </method>
    <method selector="menuView">
      <retval></retval>
    </method>
    <method selector="needsDisplay">
      <retval></retval>
    </method>
    <method selector="needsSizing">
      <retval></retval>
    </method>
    <method selector="setMenuItem:">
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="setMenuView:">
      <arg name="menuView"></arg>
      <retval></retval>
    </method>
    <method selector="setNeedsDisplay:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setNeedsSizing:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="stateImageRectForBounds:">
      <arg name="cellFrame"></arg>
      <retval></retval>
    </method>
    <method selector="stateImageWidth">
      <retval></retval>
    </method>
    <method selector="tag">
      <retval></retval>
    </method>
    <method selector="titleRectForBounds:">
      <arg name="cellFrame"></arg>
      <retval></retval>
    </method>
    <method selector="titleWidth">
      <retval></retval>
    </method>
  </class>
  <class name="NSMenuView" swt_superclass="NSView">
    <method selector="attachSubmenuForItemAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="attachedMenu">
      <retval></retval>
    </method>
    <method selector="attachedMenuView">
      <retval></retval>
    </method>
    <method selector="detachSubmenu">
      <retval></retval>
    </method>
    <method selector="font">
      <retval></retval>
    </method>
    <method selector="highlightedItemIndex">
      <retval></retval>
    </method>
    <method selector="horizontalEdgePadding">
      <retval></retval>
    </method>
    <method selector="imageAndTitleOffset">
      <retval></retval>
    </method>
    <method selector="imageAndTitleWidth">
      <retval></retval>
    </method>
    <method selector="indexOfItemAtPoint:">
      <arg name="point"></arg>
      <retval></retval>
    </method>
    <method selector="initAsTearOff">
      <retval></retval>
    </method>
    <method selector="initWithFrame:">
      <arg name="frame"></arg>
      <retval></retval>
    </method>
    <method selector="innerRect">
      <retval></retval>
    </method>
    <method selector="isAttached">
      <retval></retval>
    </method>
    <method selector="isHorizontal">
      <retval></retval>
    </method>
    <method selector="isTornOff">
      <retval></retval>
    </method>
    <method selector="itemAdded:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="itemChanged:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="itemRemoved:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="keyEquivalentOffset">
      <retval></retval>
    </method>
    <method selector="keyEquivalentWidth">
      <retval></retval>
    </method>
    <method selector="locationForSubmenu:">
      <arg name="aSubmenu"></arg>
      <retval></retval>
    </method>
    <method selector="menu">
      <retval></retval>
    </method>
    <method class_method="true" selector="menuBarHeight">
      <retval></retval>
    </method>
    <method selector="menuItemCellForItemAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="needsSizing">
      <retval></retval>
    </method>
    <method selector="performActionWithHighlightingForItemAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="rectOfItemAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="setFont:">
      <arg name="font"></arg>
      <retval></retval>
    </method>
    <method selector="setHighlightedItemIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="setHorizontal:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setHorizontalEdgePadding:">
      <arg name="pad"></arg>
      <retval></retval>
    </method>
    <method selector="setMenu:">
      <arg name="menu"></arg>
      <retval></retval>
    </method>
    <method selector="setMenuItemCell:forItemAtIndex:">
      <arg name="cell"></arg>
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="setNeedsDisplayForItemAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="setNeedsSizing:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setWindowFrameForAttachingToRect:onScreen:preferredEdge:popUpSelectedItem:">
      <arg name="screenRect"></arg>
      <arg name="screen"></arg>
      <arg name="edge"></arg>
      <arg name="selectedItemIndex"></arg>
      <retval></retval>
    </method>
    <method selector="sizeToFit">
      <retval></retval>
    </method>
    <method selector="stateImageOffset">
      <retval></retval>
    </method>
    <method selector="stateImageWidth">
      <retval></retval>
    </method>
    <method selector="trackWithEvent:">
      <arg name="event"></arg>
      <retval></retval>
    </method>
    <method selector="update">
      <retval></retval>
    </method>
  </class>
  <class name="NSMovie">
    <method selector="QTMovie">
      <retval></retval>
    </method>
    <method selector="URL">
      <retval></retval>
    </method>
    <method class_method="true" selector="canInitWithPasteboard:">
      <arg name="pasteboard"></arg>
      <retval></retval>
    </method>
    <method selector="initWithMovie:">
      <arg name="movie"></arg>
      <retval></retval>
    </method>
    <method selector="initWithPasteboard:">
      <arg name="pasteboard"></arg>
      <retval></retval>
    </method>
    <method selector="initWithURL:byReference:">
      <arg name="url"></arg>
      <arg name="byRef"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="movieUnfilteredFileTypes">
      <retval></retval>
    </method>
    <method class_method="true" selector="movieUnfilteredPasteboardTypes">
      <retval></retval>
    </method>
  </class>
  <class name="NSMovieView" swt_superclass="NSView">
    <method selector="clear:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="copy:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="cut:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="delete:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="gotoBeginning:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="gotoEnd:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="gotoPosterFrame:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="isControllerVisible">
      <retval></retval>
    </method>
    <method selector="isEditable">
      <retval></retval>
    </method>
    <method selector="isMuted">
      <retval></retval>
    </method>
    <method selector="isPlaying">
      <retval></retval>
    </method>
    <method selector="loopMode">
      <retval></retval>
    </method>
    <method selector="movie">
      <retval></retval>
    </method>
    <method selector="movieController">
      <retval></retval>
    </method>
    <method selector="movieRect">
      <retval></retval>
    </method>
    <method selector="paste:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="playsEveryFrame">
      <retval></retval>
    </method>
    <method selector="playsSelectionOnly">
      <retval></retval>
    </method>
    <method selector="rate">
      <retval></retval>
    </method>
    <method selector="resizeWithMagnification:">
      <arg name="magnification"></arg>
      <retval></retval>
    </method>
    <method selector="selectAll:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="setEditable:">
      <arg name="editable"></arg>
      <retval></retval>
    </method>
    <method selector="setLoopMode:">
      <arg name="mode"></arg>
      <retval></retval>
    </method>
    <method selector="setMovie:">
      <arg name="movie"></arg>
      <retval></retval>
    </method>
    <method selector="setMuted:">
      <arg name="mute"></arg>
      <retval></retval>
    </method>
    <method selector="setPlaysEveryFrame:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setPlaysSelectionOnly:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setRate:">
      <arg name="rate"></arg>
      <retval></retval>
    </method>
    <method selector="setVolume:">
      <arg name="volume"></arg>
      <retval></retval>
    </method>
    <method selector="showController:adjustingSize:">
      <arg name="show"></arg>
      <arg name="adjustSize"></arg>
      <retval></retval>
    </method>
    <method selector="sizeForMagnification:">
      <arg name="magnification"></arg>
      <retval></retval>
    </method>
    <method selector="start:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="stepBack:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="stepForward:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="stop:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="volume">
      <retval></retval>
    </method>
  </class>
  <class name="NSMutableAttributedString" swt_gen="mixed" swt_superclass="NSAttributedString">
    <method selector="addAttribute:value:range:">
      <arg name="name"></arg>
      <arg name="value"></arg>
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="addAttributes:range:">
      <arg name="attrs"></arg>
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="appendAttributedString:" swt_gen="true">
      <arg name="attrString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applyFontTraits:range:">
      <arg name="traitMask"></arg>
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="beginEditing">
      <retval></retval>
    </method>
    <method selector="deleteCharactersInRange:">
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="endEditing">
      <retval></retval>
    </method>
    <method selector="fixAttachmentAttributeInRange:">
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="fixAttributesInRange:">
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="fixFontAttributeInRange:">
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="fixParagraphStyleAttributeInRange:">
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="insertAttributedString:atIndex:">
      <arg name="attrString"></arg>
      <arg name="loc"></arg>
      <retval></retval>
    </method>
    <method selector="mutableString" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readFromData:options:documentAttributes:">
      <arg name="data"></arg>
      <arg name="options"></arg>
      <arg name="dict"></arg>
      <retval></retval>
    </method>
    <method selector="readFromData:options:documentAttributes:error:">
      <arg name="data"></arg>
      <arg name="opts"></arg>
      <arg name="dict"></arg>
      <arg name="error"></arg>
      <retval></retval>
    </method>
    <method selector="readFromURL:options:documentAttributes:">
      <arg name="url"></arg>
      <arg name="options"></arg>
      <arg name="dict"></arg>
      <retval></retval>
    </method>
    <method selector="readFromURL:options:documentAttributes:error:">
      <arg name="url"></arg>
      <arg name="opts"></arg>
      <arg name="dict"></arg>
      <arg name="error"></arg>
      <retval></retval>
    </method>
    <method selector="removeAttribute:range:">
      <arg name="name"></arg>
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="replaceCharactersInRange:withAttributedString:">
      <arg name="range"></arg>
      <arg name="attrString"></arg>
      <retval></retval>
    </method>
    <method selector="replaceCharactersInRange:withString:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <arg name="str" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlignment:range:">
      <arg name="alignment"></arg>
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="setAttributedString:">
      <arg name="attrString"></arg>
      <retval></retval>
    </method>
    <method selector="setAttributes:range:">
      <arg name="attrs"></arg>
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="setBaseWritingDirection:range:">
      <arg name="writingDirection"></arg>
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="subscriptRange:">
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="superscriptRange:">
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="unscriptRange:">
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="updateAttachmentsFromPath:">
      <arg name="path"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSMutableParagraphStyle" swt_gen="mixed" swt_superclass="NSParagraphStyle">
    <method selector="addTabStop:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeTabStop:">
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
    <method selector="setAlignment:" swt_gen="true">
      <arg name="alignment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBaseWritingDirection:">
      <arg name="writingDirection"></arg>
      <retval></retval>
    </method>
    <method selector="setDefaultTabInterval:" swt_gen="true">
      <arg name="aFloat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFirstLineHeadIndent:" swt_gen="true">
      <arg name="aFloat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHeadIndent:">
      <arg name="aFloat"></arg>
      <retval></retval>
    </method>
    <method selector="setHeaderLevel:">
      <arg name="level"></arg>
      <retval></retval>
    </method>
    <method selector="setHyphenationFactor:">
      <arg name="aFactor"></arg>
      <retval></retval>
    </method>
    <method selector="setLineBreakMode:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLineHeightMultiple:">
      <arg name="aFloat"></arg>
      <retval></retval>
    </method>
    <method selector="setLineSpacing:" swt_gen="true">
      <arg name="aFloat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaximumLineHeight:">
      <arg name="aFloat"></arg>
      <retval></retval>
    </method>
    <method selector="setMinimumLineHeight:">
      <arg name="aFloat"></arg>
      <retval></retval>
    </method>
    <method selector="setParagraphSpacing:">
      <arg name="aFloat"></arg>
      <retval></retval>
    </method>
    <method selector="setParagraphSpacingBefore:">
      <arg name="aFloat"></arg>
      <retval></retval>
    </method>
    <method selector="setParagraphStyle:">
      <arg name="obj"></arg>
      <retval></retval>
    </method>
    <method selector="setTabStops:" swt_gen="true">
      <arg name="array" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTailIndent:">
      <arg name="aFloat"></arg>
      <retval></retval>
    </method>
    <method selector="setTextBlocks:">
      <arg name="array"></arg>
      <retval></retval>
    </method>
    <method selector="setTextLists:">
      <arg name="array"></arg>
      <retval></retval>
    </method>
    <method selector="setTighteningFactorForTruncation:">
      <arg name="aFactor"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSNib">
    <method selector="initWithContentsOfURL:">
      <arg name="nibFileURL"></arg>
      <retval></retval>
    </method>
    <method selector="initWithNibNamed:bundle:">
      <arg name="nibName"></arg>
      <arg name="bundle"></arg>
      <retval></retval>
    </method>
    <method selector="instantiateNibWithExternalNameTable:">
      <arg name="externalNameTable"></arg>
      <retval></retval>
    </method>
    <method selector="instantiateNibWithOwner:topLevelObjects:">
      <arg name="owner"></arg>
      <arg name="topLevelObjects"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSNibConnector">
    <method selector="destination">
      <retval></retval>
    </method>
    <method selector="establishConnection">
      <retval></retval>
    </method>
    <method selector="label">
      <retval></retval>
    </method>
    <method selector="replaceObject:withObject:">
      <arg name="oldObject"></arg>
      <arg name="newObject"></arg>
      <retval></retval>
    </method>
    <method selector="setDestination:">
      <arg name="destination"></arg>
      <retval></retval>
    </method>
    <method selector="setLabel:">
      <arg name="label"></arg>
      <retval></retval>
    </method>
    <method selector="setSource:">
      <arg name="source"></arg>
      <retval></retval>
    </method>
    <method selector="source">
      <retval></retval>
    </method>
  </class>
  <class name="NSNibControlConnector">
    <method selector="establishConnection">
      <retval></retval>
    </method>
  </class>
  <class name="NSNibOutletConnector" swt_superclass="NSNibConnector">
    <method selector="establishConnection">
      <retval></retval>
    </method>
  </class>
  <class name="NSObject" swt_gen="mixed">
    <method selector="accessibilityActionDescription:">
      <arg name="action"></arg>
      <retval></retval>
    </method>
    <method selector="accessibilityActionNames">
      <retval></retval>
    </method>
    <method selector="accessibilityAttributeNames">
      <retval></retval>
    </method>
    <method selector="accessibilityAttributeValue:">
      <arg name="attribute"></arg>
      <retval></retval>
    </method>
    <method selector="accessibilityAttributeValue:forParameter:">
      <arg name="attribute"></arg>
      <arg name="parameter"></arg>
      <retval></retval>
    </method>
    <method selector="accessibilityFocusedUIElement">
      <retval></retval>
    </method>
    <method selector="accessibilityHitTest:">
      <arg name="point"></arg>
      <retval></retval>
    </method>
    <method selector="accessibilityIsAttributeSettable:">
      <arg name="attribute"></arg>
      <retval></retval>
    </method>
    <method selector="accessibilityIsIgnored">
      <retval></retval>
    </method>
    <method selector="accessibilityParameterizedAttributeNames">
      <retval></retval>
    </method>
    <method selector="accessibilityPerformAction:">
      <arg name="action"></arg>
      <retval></retval>
    </method>
    <method selector="accessibilitySetOverrideValue:forAttribute:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="attribute" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="accessibilitySetValue:forAttribute:">
      <arg name="value"></arg>
      <arg name="attribute"></arg>
      <retval></retval>
    </method>
    <method selector="action">
      <retval></retval>
    </method>
    <method selector="activeConversationChanged:toNewConversation:">
      <arg name="sender"></arg>
      <arg name="newConversation"></arg>
      <retval></retval>
    </method>
    <method selector="activeConversationWillChange:fromOldConversation:">
      <arg name="sender"></arg>
      <arg name="oldConversation"></arg>
      <retval></retval>
    </method>
    <method selector="alertShowHelp:">
      <arg name="alert"></arg>
      <retval></retval>
    </method>
    <method selector="alphaControlAddedOrRemoved:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="animation:didReachProgressMark:">
      <arg name="animation"></arg>
      <arg name="progress"></arg>
      <retval></retval>
    </method>
    <method selector="animation:valueForProgress:">
      <arg name="animation"></arg>
      <arg name="progress"></arg>
      <retval></retval>
    </method>
    <method selector="animationDidEnd:">
      <arg name="animation"></arg>
      <retval></retval>
    </method>
    <method selector="animationDidStop:">
      <arg name="animation"></arg>
      <retval></retval>
    </method>
    <method selector="animationForKey:">
      <arg name="key"></arg>
      <retval></retval>
    </method>
    <method selector="animationShouldStart:">
      <arg name="animation"></arg>
      <retval></retval>
    </method>
    <method selector="animations">
      <retval></retval>
    </method>
    <method selector="animator">
      <retval></retval>
    </method>
    <method selector="application:delegateHandlesKey:">
      <arg name="sender"></arg>
      <arg name="key"></arg>
      <retval></retval>
    </method>
    <method selector="application:openFile:">
      <arg name="sender"></arg>
      <arg name="filename"></arg>
      <retval></retval>
    </method>
    <method selector="application:openFileWithoutUI:">
      <arg name="sender"></arg>
      <arg name="filename"></arg>
      <retval></retval>
    </method>
    <method selector="application:openFiles:">
      <arg name="sender"></arg>
      <arg name="filenames"></arg>
      <retval></retval>
    </method>
    <method selector="application:openTempFile:">
      <arg name="sender"></arg>
      <arg name="filename"></arg>
      <retval></retval>
    </method>
    <method selector="application:printFile:">
      <arg name="sender"></arg>
      <arg name="filename"></arg>
      <retval></retval>
    </method>
    <method selector="application:printFiles:">
      <arg name="sender"></arg>
      <arg name="filenames"></arg>
      <retval></retval>
    </method>
    <method selector="application:printFiles:withSettings:showPrintPanels:">
      <arg name="application"></arg>
      <arg name="fileNames"></arg>
      <arg name="printSettings"></arg>
      <arg name="showPrintPanels"></arg>
      <retval></retval>
    </method>
    <method selector="application:willPresentError:">
      <arg name="application"></arg>
      <arg name="error"></arg>
      <retval></retval>
    </method>
    <method selector="applicationDidBecomeActive:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="applicationDidChangeScreenParameters:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="applicationDidFinishLaunching:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="applicationDidHide:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="applicationDidResignActive:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="applicationDidUnhide:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="applicationDidUpdate:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="applicationDockMenu:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="applicationOpenUntitledFile:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="applicationShouldHandleReopen:hasVisibleWindows:">
      <arg name="sender"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="applicationShouldOpenUntitledFile:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="applicationShouldTerminate:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="applicationShouldTerminateAfterLastWindowClosed:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="applicationWillBecomeActive:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="applicationWillFinishLaunching:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="applicationWillHide:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="applicationWillResignActive:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="applicationWillTerminate:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="applicationWillUnhide:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="applicationWillUpdate:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="attachColorList:">
      <arg name="colorList"></arg>
      <retval></retval>
    </method>
    <method selector="attachment">
      <retval></retval>
    </method>
    <method selector="attributedString">
      <retval></retval>
    </method>
    <method selector="attributedString">
      <retval></retval>
    </method>
    <method selector="attributedSubstringForProposedRange:actualRange:">
      <arg name="aRange"></arg>
      <arg name="actualRange"></arg>
      <retval></retval>
    </method>
    <method selector="attributedSubstringFromRange:">
      <arg name="theRange"></arg>
      <retval></retval>
    </method>
    <method selector="awakeFromNib">
      <retval></retval>
    </method>
    <method selector="baselineDeltaForCharacterAtIndex:">
      <arg name="anIndex"></arg>
      <retval></retval>
    </method>
    <method selector="bind:toObject:withKeyPath:options:">
      <arg name="binding"></arg>
      <arg name="observable"></arg>
      <arg name="keyPath"></arg>
      <arg name="options"></arg>
      <retval></retval>
    </method>
    <method selector="browser:acceptDrop:atRow:column:dropOperation:">
      <arg name="browser"></arg>
      <arg name="info"></arg>
      <arg name="row"></arg>
      <arg name="column"></arg>
      <arg name="dropOperation"></arg>
      <retval></retval>
    </method>
    <method selector="browser:canDragRowsWithIndexes:inColumn:withEvent:">
      <arg name="browser"></arg>
      <arg name="rowIndexes"></arg>
      <arg name="column"></arg>
      <arg name="event"></arg>
      <retval></retval>
    </method>
    <method selector="browser:createRowsForColumn:inMatrix:">
      <arg name="sender"></arg>
      <arg name="column"></arg>
      <arg name="matrix"></arg>
      <retval></retval>
    </method>
    <method selector="browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:">
      <arg name="browser"></arg>
      <arg name="rowIndexes"></arg>
      <arg name="column"></arg>
      <arg name="event"></arg>
      <arg name="dragImageOffset"></arg>
      <retval></retval>
    </method>
    <method selector="browser:isColumnValid:">
      <arg name="sender"></arg>
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:">
      <arg name="browser"></arg>
      <arg name="dropDestination"></arg>
      <arg name="rowIndexes"></arg>
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:">
      <arg name="browser"></arg>
      <arg name="startRow"></arg>
      <arg name="endRow"></arg>
      <arg name="column"></arg>
      <arg name="searchString"></arg>
      <retval></retval>
    </method>
    <method selector="browser:numberOfRowsInColumn:">
      <arg name="sender"></arg>
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="browser:selectCellWithString:inColumn:">
      <arg name="sender"></arg>
      <arg name="title"></arg>
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="browser:selectRow:inColumn:">
      <arg name="sender"></arg>
      <arg name="row"></arg>
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="browser:shouldShowCellExpansionForRow:column:">
      <arg name="browser"></arg>
      <arg name="row"></arg>
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="browser:shouldSizeColumn:forUserResize:toWidth:">
      <arg name="browser"></arg>
      <arg name="columnIndex"></arg>
      <arg name="forUserResize"></arg>
      <arg name="suggestedWidth"></arg>
      <retval></retval>
    </method>
    <method selector="browser:shouldTypeSelectForEvent:withCurrentSearchString:">
      <arg name="browser"></arg>
      <arg name="event"></arg>
      <arg name="searchString"></arg>
      <retval></retval>
    </method>
    <method selector="browser:sizeToFitWidthOfColumn:">
      <arg name="browser"></arg>
      <arg name="columnIndex"></arg>
      <retval></retval>
    </method>
    <method selector="browser:titleOfColumn:">
      <arg name="sender"></arg>
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="browser:typeSelectStringForRow:inColumn:">
      <arg name="browser"></arg>
      <arg name="row"></arg>
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="browser:validateDrop:proposedRow:column:dropOperation:">
      <arg name="browser"></arg>
      <arg name="info"></arg>
      <arg name="row"></arg>
      <arg name="column"></arg>
      <arg name="dropOperation"></arg>
      <retval></retval>
    </method>
    <method selector="browser:willDisplayCell:atRow:column:">
      <arg name="sender"></arg>
      <arg name="cell"></arg>
      <arg name="row"></arg>
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="browser:writeRowsWithIndexes:inColumn:toPasteboard:">
      <arg name="browser"></arg>
      <arg name="rowIndexes"></arg>
      <arg name="column"></arg>
      <arg name="pasteboard"></arg>
      <retval></retval>
    </method>
    <method selector="browserColumnConfigurationDidChange:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="browserDidScroll:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="browserWillScroll:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="buttonToolTip">
      <retval></retval>
    </method>
    <method selector="canBeDisabled">
      <retval></retval>
    </method>
    <method selector="cellBaselineOffset">
      <retval></retval>
    </method>
    <method selector="cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:">
      <arg name="textContainer"></arg>
      <arg name="lineFrag"></arg>
      <arg name="position"></arg>
      <arg name="charIndex"></arg>
      <retval></retval>
    </method>
    <method selector="cellSize">
      <retval></retval>
    </method>
    <method selector="changeColor:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="changeFont:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="changeSpelling:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="characterIndexForPoint:">
      <arg name="thePoint"></arg>
      <retval></retval>
    </method>
    <method selector="characterIndexForPoint:">
      <arg name="aPoint"></arg>
      <retval></retval>
    </method>
    <method selector="comboBox:completedString:">
      <arg name="aComboBox"></arg>
      <arg name="string"></arg>
      <retval></retval>
    </method>
    <method selector="comboBox:indexOfItemWithStringValue:">
      <arg name="aComboBox"></arg>
      <arg name="string"></arg>
      <retval></retval>
    </method>
    <method selector="comboBox:objectValueForItemAtIndex:">
      <arg name="aComboBox"></arg>
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="comboBoxCell:completedString:">
      <arg name="aComboBoxCell"></arg>
      <arg name="uncompletedString"></arg>
      <retval></retval>
    </method>
    <method selector="comboBoxCell:indexOfItemWithStringValue:">
      <arg name="aComboBoxCell"></arg>
      <arg name="string"></arg>
      <retval></retval>
    </method>
    <method selector="comboBoxCell:objectValueForItemAtIndex:">
      <arg name="aComboBoxCell"></arg>
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="comboBoxSelectionDidChange:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="comboBoxSelectionIsChanging:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="comboBoxWillDismiss:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="comboBoxWillPopUp:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="commitEditing">
      <retval></retval>
    </method>
    <method selector="commitEditingWithDelegate:didCommitSelector:contextInfo:">
      <arg name="delegate"></arg>
      <arg name="didCommitSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="concludeDragOperation:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="control:didFailToFormatString:errorDescription:">
      <arg name="control"></arg>
      <arg name="string"></arg>
      <arg name="error"></arg>
      <retval></retval>
    </method>
    <method selector="control:didFailToValidatePartialString:errorDescription:">
      <arg name="control"></arg>
      <arg name="string"></arg>
      <arg name="error"></arg>
      <retval></retval>
    </method>
    <method selector="control:isValidObject:">
      <arg name="control"></arg>
      <arg name="obj"></arg>
      <retval></retval>
    </method>
    <method selector="control:textShouldBeginEditing:">
      <arg name="control"></arg>
      <arg name="fieldEditor"></arg>
      <retval></retval>
    </method>
    <method selector="control:textShouldEndEditing:">
      <arg name="control"></arg>
      <arg name="fieldEditor"></arg>
      <retval></retval>
    </method>
    <method selector="control:textView:completions:forPartialWordRange:indexOfSelectedItem:">
      <arg name="control"></arg>
      <arg name="textView"></arg>
      <arg name="words"></arg>
      <arg name="charRange"></arg>
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="control:textView:doCommandBySelector:">
      <arg name="control"></arg>
      <arg name="textView"></arg>
      <arg name="commandSelector"></arg>
      <retval></retval>
    </method>
    <method selector="controlTextDidBeginEditing:">
      <arg name="obj"></arg>
      <retval></retval>
    </method>
    <method selector="controlTextDidChange:">
      <arg name="obj"></arg>
      <retval></retval>
    </method>
    <method selector="controlTextDidEndEditing:">
      <arg name="obj"></arg>
      <retval></retval>
    </method>
    <method selector="conversationIdentifier">
      <retval></retval>
    </method>
    <method selector="currentMode">
      <retval></retval>
    </method>
    <method selector="datePickerCell:validateProposedDateValue:timeInterval:">
      <arg name="aDatePickerCell"></arg>
      <arg name="proposedDateValue"></arg>
      <arg name="proposedTimeInterval"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="defaultAnimationForKey:">
      <arg name="key"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="defaultPlaceholderForMarker:withBinding:">
      <arg name="marker"></arg>
      <arg name="binding"></arg>
      <retval></retval>
    </method>
    <method selector="detachColorList:">
      <arg name="colorList"></arg>
      <retval></retval>
    </method>
    <method selector="discardEditing">
      <retval></retval>
    </method>
    <method selector="doCommandBySelector:">
      <arg name="aSelector"></arg>
      <retval></retval>
    </method>
    <method selector="doCommandBySelector:">
      <arg name="aSelector"></arg>
      <retval></retval>
    </method>
    <method selector="doCommandBySelector:client:">
      <arg name="aSelector"></arg>
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="draggedImage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggedImage:beganAt:">
      <arg name="image"></arg>
      <arg name="screenPoint"></arg>
      <retval></retval>
    </method>
    <method selector="draggedImage:endedAt:deposited:">
      <arg name="image"></arg>
      <arg name="screenPoint"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="draggedImage:endedAt:operation:">
      <arg name="image"></arg>
      <arg name="screenPoint"></arg>
      <arg name="operation"></arg>
      <retval></retval>
    </method>
    <method selector="draggedImage:movedTo:">
      <arg name="image"></arg>
      <arg name="screenPoint"></arg>
      <retval></retval>
    </method>
    <method selector="draggedImageLocation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggingDestinationWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggingEnded:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggingEntered:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggingExited:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggingLocation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggingPasteboard" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggingSequenceNumber" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggingSource" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggingSourceOperationMask" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggingSourceOperationMaskForLocal:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="draggingUpdated:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="drawWithFrame:inView:">
      <arg name="cellFrame"></arg>
      <arg name="controlView"></arg>
      <retval></retval>
    </method>
    <method selector="drawWithFrame:inView:characterIndex:">
      <arg name="cellFrame"></arg>
      <arg name="controlView"></arg>
      <arg name="charIndex"></arg>
      <retval></retval>
    </method>
    <method selector="drawWithFrame:inView:characterIndex:layoutManager:">
      <arg name="cellFrame"></arg>
      <arg name="controlView"></arg>
      <arg name="charIndex"></arg>
      <arg name="layoutManager"></arg>
      <retval></retval>
    </method>
    <method selector="drawerDidClose:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="drawerDidOpen:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="drawerShouldClose:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="drawerShouldOpen:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="drawerWillClose:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="drawerWillOpen:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="drawerWillResizeContents:toSize:">
      <arg name="sender"></arg>
      <arg name="contentSize"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="exposeBinding:">
      <arg name="binding"></arg>
      <retval></retval>
    </method>
    <method selector="exposedBindings">
      <retval></retval>
    </method>
    <method selector="firstRectForCharacterRange:">
      <arg name="theRange"></arg>
      <retval></retval>
    </method>
    <method selector="firstRectForCharacterRange:actualRange:">
      <arg name="aRange"></arg>
      <arg name="actualRange"></arg>
      <retval></retval>
    </method>
    <method selector="fontManager:willIncludeFont:">
      <arg name="sender"></arg>
      <arg name="fontName"></arg>
      <retval></retval>
    </method>
    <method selector="fractionOfDistanceThroughGlyphForPoint:">
      <arg name="aPoint"></arg>
      <retval></retval>
    </method>
    <method selector="hasMarkedText">
      <retval></retval>
    </method>
    <method selector="hasMarkedText">
      <retval></retval>
    </method>
    <method selector="highlight:withFrame:inView:">
      <arg name="flag"></arg>
      <arg name="cellFrame"></arg>
      <arg name="controlView"></arg>
      <retval></retval>
    </method>
    <method selector="ignoreModifierKeysWhileDragging">
      <retval></retval>
    </method>
    <method selector="ignoreSpelling:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="image:didLoadPartOfRepresentation:withValidRows:">
      <arg name="image"></arg>
      <arg name="rep"></arg>
      <arg name="rows"></arg>
      <retval></retval>
    </method>
    <method selector="image:didLoadRepresentation:withStatus:">
      <arg name="image"></arg>
      <arg name="rep"></arg>
      <arg name="status"></arg>
      <retval></retval>
    </method>
    <method selector="image:didLoadRepresentationHeader:">
      <arg name="image"></arg>
      <arg name="rep"></arg>
      <retval></retval>
    </method>
    <method selector="image:willLoadRepresentation:">
      <arg name="image"></arg>
      <arg name="rep"></arg>
      <retval></retval>
    </method>
    <method selector="imageDidNotDraw:inRect:">
      <arg name="sender"></arg>
      <arg name="aRect"></arg>
      <retval></retval>
    </method>
    <method selector="infoForBinding:">
      <arg name="binding"></arg>
      <retval></retval>
    </method>
    <method selector="initWithPickerMask:colorPanel:">
      <arg name="mask"></arg>
      <arg name="owningColorPanel"></arg>
      <retval></retval>
    </method>
    <method selector="inputClientBecomeActive:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="inputClientDisabled:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="inputClientEnabled:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="inputClientResignActive:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:">
      <arg name="glyphs"></arg>
      <arg name="length"></arg>
      <arg name="glyphIndex"></arg>
      <arg name="charIndex"></arg>
      <retval></retval>
    </method>
    <method selector="insertNewButtonImage:in:">
      <arg name="newButtonImage"></arg>
      <arg name="buttonCell"></arg>
      <retval></retval>
    </method>
    <method selector="insertText:">
      <arg name="aString"></arg>
      <retval></retval>
    </method>
    <method selector="insertText:client:">
      <arg name="aString"></arg>
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="insertText:replacementRange:">
      <arg name="aString"></arg>
      <arg name="replacementRange"></arg>
      <retval></retval>
    </method>
    <method selector="isExplicitlyIncluded">
      <retval></retval>
    </method>
    <method selector="key">
      <retval></retval>
    </method>
    <method selector="keyPathsForValuesAffectingPreview">
      <retval></retval>
    </method>
    <method selector="layoutManager:didCompleteLayoutForTextContainer:atEnd:">
      <arg name="layoutManager"></arg>
      <arg name="textContainer"></arg>
      <arg name="layoutFinishedFlag"></arg>
      <retval></retval>
    </method>
    <method selector="layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:">
      <arg name="layoutManager"></arg>
      <arg name="attrs"></arg>
      <arg name="toScreen"></arg>
      <arg name="charIndex"></arg>
      <arg name="effectiveCharRange"></arg>
      <retval></retval>
    </method>
    <method selector="layoutManagerDidInvalidateLayout:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="layoutOptions">
      <retval></retval>
    </method>
    <method selector="localizedKey">
      <retval></retval>
    </method>
    <method selector="localizedSummaryItems">
      <retval></retval>
    </method>
    <method selector="markedRange">
      <retval></retval>
    </method>
    <method selector="markedRange">
      <retval></retval>
    </method>
    <method selector="markedTextAbandoned:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="markedTextSelectionChanged:client:">
      <arg name="newSel"></arg>
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="menu:updateItem:atIndex:shouldCancel:">
      <arg name="menu"></arg>
      <arg name="item"></arg>
      <arg name="index"></arg>
      <arg name="shouldCancel"></arg>
      <retval></retval>
    </method>
    <method selector="menu:willHighlightItem:">
      <arg name="menu"></arg>
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="menuDidClose:">
      <arg name="menu"></arg>
      <retval></retval>
    </method>
    <method selector="menuHasKeyEquivalent:forEvent:target:action:">
      <arg name="menu"></arg>
      <arg name="event"></arg>
      <arg name="target"></arg>
      <arg name="action"></arg>
      <retval></retval>
    </method>
    <method selector="menuNeedsUpdate:">
      <arg name="menu"></arg>
      <retval></retval>
    </method>
    <method selector="menuWillOpen:">
      <arg name="menu"></arg>
      <retval></retval>
    </method>
    <method selector="minContentSize">
      <retval></retval>
    </method>
    <method selector="mouseDownOnCharacterIndex:atCoordinate:withModifier:client:">
      <arg name="theIndex"></arg>
      <arg name="thePoint"></arg>
      <arg name="theFlags"></arg>
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:">
      <arg name="theIndex"></arg>
      <arg name="thePoint"></arg>
      <arg name="theFlags"></arg>
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="mouseUpOnCharacterIndex:atCoordinate:withModifier:client:">
      <arg name="theIndex"></arg>
      <arg name="thePoint"></arg>
      <arg name="theFlags"></arg>
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="namesOfPromisedFilesDroppedAtDestination:" swt_gen="true">
      <arg name="dropDestination" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="namesOfPromisedFilesDroppedAtDestination:">
      <arg name="dropDestination"></arg>
      <retval></retval>
    </method>
    <method selector="numberOfItemsInComboBox:">
      <arg name="aComboBox"></arg>
      <retval></retval>
    </method>
    <method selector="numberOfItemsInComboBoxCell:">
      <arg name="comboBoxCell"></arg>
      <retval></retval>
    </method>
    <method selector="numberOfItemsInMenu:">
      <arg name="menu"></arg>
      <retval></retval>
    </method>
    <method selector="numberOfRowsInTableView:">
      <arg name="tableView"></arg>
      <retval></retval>
    </method>
    <method selector="objectDidBeginEditing:">
      <arg name="editor"></arg>
      <retval></retval>
    </method>
    <method selector="objectDidEndEditing:">
      <arg name="editor"></arg>
      <retval></retval>
    </method>
    <method selector="optionDescriptionsForBinding:">
      <arg name="aBinding"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:acceptDrop:item:childIndex:">
      <arg name="outlineView"></arg>
      <arg name="info"></arg>
      <arg name="item"></arg>
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:child:ofItem:">
      <arg name="outlineView"></arg>
      <arg name="index"></arg>
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:dataCellForTableColumn:item:">
      <arg name="outlineView"></arg>
      <arg name="tableColumn"></arg>
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:didClickTableColumn:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineView:didDragTableColumn:">
      <arg name="outlineView"></arg>
      <arg name="tableColumn"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:heightOfRowByItem:">
      <arg name="outlineView"></arg>
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:isGroupItem:">
      <arg name="outlineView"></arg>
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:isItemExpandable:">
      <arg name="outlineView"></arg>
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:itemForPersistentObject:">
      <arg name="outlineView"></arg>
      <arg name="object"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:mouseDownInHeaderOfTableColumn:">
      <arg name="outlineView"></arg>
      <arg name="tableColumn"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:">
      <arg name="outlineView"></arg>
      <arg name="dropDestination"></arg>
      <arg name="items"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:nextTypeSelectMatchFromItem:toItem:forString:">
      <arg name="outlineView"></arg>
      <arg name="startItem"></arg>
      <arg name="endItem"></arg>
      <arg name="searchString"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:numberOfChildrenOfItem:">
      <arg name="outlineView"></arg>
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:objectValueForTableColumn:byItem:">
      <arg name="outlineView"></arg>
      <arg name="tableColumn"></arg>
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:persistentObjectForItem:">
      <arg name="outlineView"></arg>
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:selectionIndexesForProposedSelection:">
      <arg name="outlineView"></arg>
      <arg name="proposedSelectionIndexes"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:setObjectValue:forTableColumn:byItem:">
      <arg name="outlineView"></arg>
      <arg name="object"></arg>
      <arg name="tableColumn"></arg>
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:shouldCollapseItem:">
      <arg name="outlineView"></arg>
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:shouldEditTableColumn:item:">
      <arg name="outlineView"></arg>
      <arg name="tableColumn"></arg>
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:shouldExpandItem:">
      <arg name="outlineView"></arg>
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:shouldSelectItem:">
      <arg name="outlineView"></arg>
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:shouldSelectTableColumn:">
      <arg name="outlineView"></arg>
      <arg name="tableColumn"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:shouldShowCellExpansionForTableColumn:item:">
      <arg name="outlineView"></arg>
      <arg name="tableColumn"></arg>
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:shouldTrackCell:forTableColumn:item:">
      <arg name="outlineView"></arg>
      <arg name="cell"></arg>
      <arg name="tableColumn"></arg>
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:shouldTypeSelectForEvent:withCurrentSearchString:">
      <arg name="outlineView"></arg>
      <arg name="event"></arg>
      <arg name="searchString"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:sortDescriptorsDidChange:">
      <arg name="outlineView"></arg>
      <arg name="oldDescriptors"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:">
      <arg name="outlineView"></arg>
      <arg name="cell"></arg>
      <arg name="rect"></arg>
      <arg name="tableColumn"></arg>
      <arg name="item"></arg>
      <arg name="mouseLocation"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:typeSelectStringForTableColumn:item:">
      <arg name="outlineView"></arg>
      <arg name="tableColumn"></arg>
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:validateDrop:proposedItem:proposedChildIndex:">
      <arg name="outlineView"></arg>
      <arg name="info"></arg>
      <arg name="item"></arg>
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:willDisplayCell:forTableColumn:item:">
      <arg name="outlineView"></arg>
      <arg name="cell"></arg>
      <arg name="tableColumn"></arg>
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:willDisplayOutlineCell:forTableColumn:item:">
      <arg name="outlineView"></arg>
      <arg name="cell"></arg>
      <arg name="tableColumn"></arg>
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="outlineView:writeItems:toPasteboard:">
      <arg name="outlineView"></arg>
      <arg name="items"></arg>
      <arg name="pasteboard"></arg>
      <retval></retval>
    </method>
    <method selector="outlineViewColumnDidMove:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineViewColumnDidResize:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="outlineViewItemDidCollapse:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="outlineViewItemDidExpand:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="outlineViewItemWillCollapse:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="outlineViewItemWillExpand:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="outlineViewSelectionDidChange:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="outlineViewSelectionIsChanging:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="panel:compareFilename:with:caseSensitive:">
      <arg name="sender"></arg>
      <arg name="name1"></arg>
      <arg name="name2"></arg>
      <arg name="caseSensitive"></arg>
      <retval></retval>
    </method>
    <method selector="panel:directoryDidChange:">
      <arg name="sender"></arg>
      <arg name="path"></arg>
      <retval></retval>
    </method>
    <method selector="panel:isValidFilename:">
      <arg name="sender"></arg>
      <arg name="filename"></arg>
      <retval></retval>
    </method>
    <method selector="panel:shouldShowFilename:">
      <arg name="sender"></arg>
      <arg name="filename"></arg>
      <retval></retval>
    </method>
    <method selector="panel:userEnteredFilename:confirmed:">
      <arg name="sender"></arg>
      <arg name="filename"></arg>
      <arg name="okFlag"></arg>
      <retval></retval>
    </method>
    <method selector="panel:willExpand:">
      <arg name="sender"></arg>
      <arg name="expanding"></arg>
      <retval></retval>
    </method>
    <method selector="panelSelectionDidChange:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="pasteboard:provideDataForType:">
      <arg name="sender"></arg>
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="pasteboardChangedOwner:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="pathCell:willDisplayOpenPanel:">
      <arg name="pathCell"></arg>
      <arg name="openPanel"></arg>
      <retval></retval>
    </method>
    <method selector="pathCell:willPopUpMenu:">
      <arg name="pathCell"></arg>
      <arg name="menu"></arg>
      <retval></retval>
    </method>
    <method selector="pathControl:acceptDrop:">
      <arg name="pathControl"></arg>
      <arg name="info"></arg>
      <retval></retval>
    </method>
    <method selector="pathControl:shouldDragPathComponentCell:withPasteboard:">
      <arg name="pathControl"></arg>
      <arg name="pathComponentCell"></arg>
      <arg name="pasteboard"></arg>
      <retval></retval>
    </method>
    <method selector="pathControl:validateDrop:">
      <arg name="pathControl"></arg>
      <arg name="info"></arg>
      <retval></retval>
    </method>
    <method selector="pathControl:willDisplayOpenPanel:">
      <arg name="pathControl"></arg>
      <arg name="openPanel"></arg>
      <retval></retval>
    </method>
    <method selector="pathControl:willPopUpMenu:">
      <arg name="pathControl"></arg>
      <arg name="menu"></arg>
      <retval></retval>
    </method>
    <method selector="performDragOperation:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="prepareForDragOperation:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="provideNewButtonImage">
      <retval></retval>
    </method>
    <method selector="provideNewView:">
      <arg name="initialRequest"></arg>
      <retval></retval>
    </method>
    <method selector="readSelectionFromPasteboard:">
      <arg name="pboard"></arg>
      <retval></retval>
    </method>
    <method selector="ruleEditor:child:forCriterion:withRowType:">
      <arg name="editor"></arg>
      <arg name="index"></arg>
      <arg name="criterion"></arg>
      <arg name="rowType"></arg>
      <retval></retval>
    </method>
    <method selector="ruleEditor:displayValueForCriterion:inRow:">
      <arg name="editor"></arg>
      <arg name="criterion"></arg>
      <arg name="row"></arg>
      <retval></retval>
    </method>
    <method selector="ruleEditor:numberOfChildrenForCriterion:withRowType:">
      <arg name="editor"></arg>
      <arg name="criterion"></arg>
      <arg name="rowType"></arg>
      <retval></retval>
    </method>
    <method selector="ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:">
      <arg name="editor"></arg>
      <arg name="criterion"></arg>
      <arg name="value"></arg>
      <arg name="row"></arg>
      <retval></retval>
    </method>
    <method selector="ruleEditorRowsDidChange:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="selectedRange">
      <retval></retval>
    </method>
    <method selector="selectedRange">
      <retval></retval>
    </method>
    <method selector="selectionShouldChangeInOutlineView:">
      <arg name="outlineView"></arg>
      <retval></retval>
    </method>
    <method selector="selectionShouldChangeInTableView:">
      <arg name="tableView"></arg>
      <retval></retval>
    </method>
    <method selector="setAnimations:">
      <arg name="dict"></arg>
      <retval></retval>
    </method>
    <method selector="setAttachment:">
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
    <method selector="setColor:">
      <arg name="newColor"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="setDefaultPlaceholder:forMarker:withBinding:">
      <arg name="placeholder"></arg>
      <arg name="marker"></arg>
      <arg name="binding"></arg>
      <retval></retval>
    </method>
    <method selector="setIntAttribute:value:forGlyphAtIndex:">
      <arg name="attributeTag"></arg>
      <arg name="val"></arg>
      <arg name="glyphIndex"></arg>
      <retval></retval>
    </method>
    <method selector="setKey:">
      <arg name="key"></arg>
      <retval></retval>
    </method>
    <method selector="setLocalizedKey:">
      <arg name="localizedKey"></arg>
      <retval></retval>
    </method>
    <method selector="setMarkedText:selectedRange:">
      <arg name="aString"></arg>
      <arg name="selRange"></arg>
      <retval></retval>
    </method>
    <method selector="setMarkedText:selectedRange:replacementRange:">
      <arg name="aString"></arg>
      <arg name="selectedRange"></arg>
      <arg name="replacementRange"></arg>
      <retval></retval>
    </method>
    <method selector="setMode:">
      <arg name="mode"></arg>
      <retval></retval>
    </method>
    <method selector="setValue:">
      <arg name="value"></arg>
      <retval></retval>
    </method>
    <method selector="slideDraggedImageTo:">
      <arg name="screenPoint"></arg>
      <retval></retval>
    </method>
    <method selector="sound:didFinishPlaying:">
      <arg name="sound"></arg>
      <arg name="aBool"></arg>
      <retval></retval>
    </method>
    <method selector="speechRecognizer:didRecognizeCommand:">
      <arg name="sender"></arg>
      <arg name="command"></arg>
      <retval></retval>
    </method>
    <method selector="speechSynthesizer:didEncounterErrorAtIndex:ofString:message:">
      <arg name="sender"></arg>
      <arg name="characterIndex"></arg>
      <arg name="string"></arg>
      <arg name="message"></arg>
      <retval></retval>
    </method>
    <method selector="speechSynthesizer:didEncounterSyncMessage:">
      <arg name="sender"></arg>
      <arg name="message"></arg>
      <retval></retval>
    </method>
    <method selector="speechSynthesizer:didFinishSpeaking:">
      <arg name="sender"></arg>
      <arg name="finishedSpeaking"></arg>
      <retval></retval>
    </method>
    <method selector="speechSynthesizer:willSpeakPhoneme:">
      <arg name="sender"></arg>
      <arg name="phonemeOpcode"></arg>
      <retval></retval>
    </method>
    <method selector="speechSynthesizer:willSpeakWord:ofString:">
      <arg name="sender"></arg>
      <arg name="characterRange"></arg>
      <arg name="string"></arg>
      <retval></retval>
    </method>
    <method selector="splitView:additionalEffectiveRectOfDividerAtIndex:">
      <arg name="splitView"></arg>
      <arg name="dividerIndex"></arg>
      <retval></retval>
    </method>
    <method selector="splitView:canCollapseSubview:">
      <arg name="splitView"></arg>
      <arg name="subview"></arg>
      <retval></retval>
    </method>
    <method selector="splitView:constrainMaxCoordinate:ofSubviewAt:">
      <arg name="splitView"></arg>
      <arg name="proposedMaximumPosition"></arg>
      <arg name="dividerIndex"></arg>
      <retval></retval>
    </method>
    <method selector="splitView:constrainMinCoordinate:ofSubviewAt:">
      <arg name="splitView"></arg>
      <arg name="proposedMinimumPosition"></arg>
      <arg name="dividerIndex"></arg>
      <retval></retval>
    </method>
    <method selector="splitView:constrainSplitPosition:ofSubviewAt:">
      <arg name="splitView"></arg>
      <arg name="proposedPosition"></arg>
      <arg name="dividerIndex"></arg>
      <retval></retval>
    </method>
    <method selector="splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:">
      <arg name="splitView"></arg>
      <arg name="proposedEffectiveRect"></arg>
      <arg name="drawnRect"></arg>
      <arg name="dividerIndex"></arg>
      <retval></retval>
    </method>
    <method selector="splitView:resizeSubviewsWithOldSize:">
      <arg name="splitView"></arg>
      <arg name="oldSize"></arg>
      <retval></retval>
    </method>
    <method selector="splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:">
      <arg name="splitView"></arg>
      <arg name="subview"></arg>
      <arg name="dividerIndex"></arg>
      <retval></retval>
    </method>
    <method selector="splitView:shouldHideDividerAtIndex:">
      <arg name="splitView"></arg>
      <arg name="dividerIndex"></arg>
      <retval></retval>
    </method>
    <method selector="splitViewDidResizeSubviews:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="splitViewWillResizeSubviews:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="supportsMode:">
      <arg name="mode"></arg>
      <retval></retval>
    </method>
    <method selector="tabView:didSelectTabViewItem:">
      <arg name="tabView"></arg>
      <arg name="tabViewItem"></arg>
      <retval></retval>
    </method>
    <method selector="tabView:shouldSelectTabViewItem:">
      <arg name="tabView"></arg>
      <arg name="tabViewItem"></arg>
      <retval></retval>
    </method>
    <method selector="tabView:willSelectTabViewItem:">
      <arg name="tabView"></arg>
      <arg name="tabViewItem"></arg>
      <retval></retval>
    </method>
    <method selector="tabViewDidChangeNumberOfTabViewItems:">
      <arg name="TabView"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:acceptDrop:row:dropOperation:">
      <arg name="tableView"></arg>
      <arg name="info"></arg>
      <arg name="row"></arg>
      <arg name="dropOperation"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:dataCellForTableColumn:row:">
      <arg name="tableView"></arg>
      <arg name="tableColumn"></arg>
      <arg name="row"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:didClickTableColumn:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableView:didDragTableColumn:">
      <arg name="tableView"></arg>
      <arg name="tableColumn"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:heightOfRow:">
      <arg name="tableView"></arg>
      <arg name="row"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:isGroupRow:">
      <arg name="tableView"></arg>
      <arg name="row"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:mouseDownInHeaderOfTableColumn:">
      <arg name="tableView"></arg>
      <arg name="tableColumn"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:">
      <arg name="tableView"></arg>
      <arg name="dropDestination"></arg>
      <arg name="indexSet"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:nextTypeSelectMatchFromRow:toRow:forString:">
      <arg name="tableView"></arg>
      <arg name="startRow"></arg>
      <arg name="endRow"></arg>
      <arg name="searchString"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:objectValueForTableColumn:row:">
      <arg name="tableView"></arg>
      <arg name="tableColumn"></arg>
      <arg name="row"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:selectionIndexesForProposedSelection:">
      <arg name="tableView"></arg>
      <arg name="proposedSelectionIndexes"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:setObjectValue:forTableColumn:row:">
      <arg name="tableView"></arg>
      <arg name="object"></arg>
      <arg name="tableColumn"></arg>
      <arg name="row"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:shouldEditTableColumn:row:">
      <arg name="tableView"></arg>
      <arg name="tableColumn"></arg>
      <arg name="row"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:shouldSelectRow:">
      <arg name="tableView"></arg>
      <arg name="row"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:shouldSelectTableColumn:">
      <arg name="tableView"></arg>
      <arg name="tableColumn"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:shouldShowCellExpansionForTableColumn:row:">
      <arg name="tableView"></arg>
      <arg name="tableColumn"></arg>
      <arg name="row"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:shouldTrackCell:forTableColumn:row:">
      <arg name="tableView"></arg>
      <arg name="cell"></arg>
      <arg name="tableColumn"></arg>
      <arg name="row"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:shouldTypeSelectForEvent:withCurrentSearchString:">
      <arg name="tableView"></arg>
      <arg name="event"></arg>
      <arg name="searchString"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:sortDescriptorsDidChange:">
      <arg name="tableView"></arg>
      <arg name="oldDescriptors"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:">
      <arg name="tableView"></arg>
      <arg name="cell"></arg>
      <arg name="rect"></arg>
      <arg name="tableColumn"></arg>
      <arg name="row"></arg>
      <arg name="mouseLocation"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:typeSelectStringForTableColumn:row:">
      <arg name="tableView"></arg>
      <arg name="tableColumn"></arg>
      <arg name="row"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:validateDrop:proposedRow:proposedDropOperation:">
      <arg name="tableView"></arg>
      <arg name="info"></arg>
      <arg name="row"></arg>
      <arg name="dropOperation"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:willDisplayCell:forTableColumn:row:">
      <arg name="tableView"></arg>
      <arg name="cell"></arg>
      <arg name="tableColumn"></arg>
      <arg name="row"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:writeRows:toPasteboard:">
      <arg name="tableView"></arg>
      <arg name="rows"></arg>
      <arg name="pboard"></arg>
      <retval></retval>
    </method>
    <method selector="tableView:writeRowsWithIndexes:toPasteboard:">
      <arg name="tableView"></arg>
      <arg name="rowIndexes"></arg>
      <arg name="pboard"></arg>
      <retval></retval>
    </method>
    <method selector="tableViewColumnDidMove:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableViewColumnDidResize:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tableViewSelectionDidChange:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="tableViewSelectionIsChanging:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="tag">
      <retval></retval>
    </method>
    <method selector="terminate:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="textDidBeginEditing:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="textDidChange:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="textDidEndEditing:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="textShouldBeginEditing:">
      <arg name="textObject"></arg>
      <retval></retval>
    </method>
    <method selector="textShouldEndEditing:">
      <arg name="textObject"></arg>
      <retval></retval>
    </method>
    <method selector="textStorageDidProcessEditing:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="textStorageWillProcessEditing:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="textView:clickedOnCell:inRect:">
      <arg name="textView"></arg>
      <arg name="cell"></arg>
      <arg name="cellFrame"></arg>
      <retval></retval>
    </method>
    <method selector="textView:clickedOnCell:inRect:atIndex:">
      <arg name="textView"></arg>
      <arg name="cell"></arg>
      <arg name="cellFrame"></arg>
      <arg name="charIndex"></arg>
      <retval></retval>
    </method>
    <method selector="textView:clickedOnLink:">
      <arg name="textView"></arg>
      <arg name="link"></arg>
      <retval></retval>
    </method>
    <method selector="textView:clickedOnLink:atIndex:">
      <arg name="textView"></arg>
      <arg name="link"></arg>
      <arg name="charIndex"></arg>
      <retval></retval>
    </method>
    <method selector="textView:completions:forPartialWordRange:indexOfSelectedItem:">
      <arg name="textView"></arg>
      <arg name="words"></arg>
      <arg name="charRange"></arg>
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="textView:doCommandBySelector:">
      <arg name="textView"></arg>
      <arg name="commandSelector"></arg>
      <retval></retval>
    </method>
    <method selector="textView:doubleClickedOnCell:inRect:">
      <arg name="textView"></arg>
      <arg name="cell"></arg>
      <arg name="cellFrame"></arg>
      <retval></retval>
    </method>
    <method selector="textView:doubleClickedOnCell:inRect:atIndex:">
      <arg name="textView"></arg>
      <arg name="cell"></arg>
      <arg name="cellFrame"></arg>
      <arg name="charIndex"></arg>
      <retval></retval>
    </method>
    <method selector="textView:draggedCell:inRect:event:">
      <arg name="view"></arg>
      <arg name="cell"></arg>
      <arg name="rect"></arg>
      <arg name="event"></arg>
      <retval></retval>
    </method>
    <method selector="textView:draggedCell:inRect:event:atIndex:">
      <arg name="view"></arg>
      <arg name="cell"></arg>
      <arg name="rect"></arg>
      <arg name="event"></arg>
      <arg name="charIndex"></arg>
      <retval></retval>
    </method>
    <method selector="textView:menu:forEvent:atIndex:">
      <arg name="view"></arg>
      <arg name="menu"></arg>
      <arg name="event"></arg>
      <arg name="charIndex"></arg>
      <retval></retval>
    </method>
    <method selector="textView:shouldChangeTextInRange:replacementString:">
      <arg name="textView"></arg>
      <arg name="affectedCharRange"></arg>
      <arg name="replacementString"></arg>
      <retval></retval>
    </method>
    <method selector="textView:shouldChangeTextInRanges:replacementStrings:">
      <arg name="textView"></arg>
      <arg name="affectedRanges"></arg>
      <arg name="replacementStrings"></arg>
      <retval></retval>
    </method>
    <method selector="textView:shouldChangeTypingAttributes:toAttributes:">
      <arg name="textView"></arg>
      <arg name="oldTypingAttributes"></arg>
      <arg name="newTypingAttributes"></arg>
      <retval></retval>
    </method>
    <method selector="textView:shouldSetSpellingState:range:">
      <arg name="textView"></arg>
      <arg name="value"></arg>
      <arg name="affectedCharRange"></arg>
      <retval></retval>
    </method>
    <method selector="textView:willChangeSelectionFromCharacterRange:toCharacterRange:">
      <arg name="textView"></arg>
      <arg name="oldSelectedCharRange"></arg>
      <arg name="newSelectedCharRange"></arg>
      <retval></retval>
    </method>
    <method selector="textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:">
      <arg name="textView"></arg>
      <arg name="oldSelectedCharRanges"></arg>
      <arg name="newSelectedCharRanges"></arg>
      <retval></retval>
    </method>
    <method selector="textView:willDisplayToolTip:forCharacterAtIndex:">
      <arg name="textView"></arg>
      <arg name="tooltip"></arg>
      <arg name="characterIndex"></arg>
      <retval></retval>
    </method>
    <method selector="textView:writablePasteboardTypesForCell:atIndex:">
      <arg name="view"></arg>
      <arg name="cell"></arg>
      <arg name="charIndex"></arg>
      <retval></retval>
    </method>
    <method selector="textView:writeCell:atIndex:toPasteboard:type:">
      <arg name="view"></arg>
      <arg name="cell"></arg>
      <arg name="charIndex"></arg>
      <arg name="pboard"></arg>
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="textViewDidChangeSelection:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="textViewDidChangeTypingAttributes:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:">
      <arg name="tokenField"></arg>
      <arg name="substring"></arg>
      <arg name="tokenIndex"></arg>
      <arg name="selectedIndex"></arg>
      <retval></retval>
    </method>
    <method selector="tokenField:displayStringForRepresentedObject:">
      <arg name="tokenField"></arg>
      <arg name="representedObject"></arg>
      <retval></retval>
    </method>
    <method selector="tokenField:editingStringForRepresentedObject:">
      <arg name="tokenField"></arg>
      <arg name="representedObject"></arg>
      <retval></retval>
    </method>
    <method selector="tokenField:hasMenuForRepresentedObject:">
      <arg name="tokenField"></arg>
      <arg name="representedObject"></arg>
      <retval></retval>
    </method>
    <method selector="tokenField:menuForRepresentedObject:">
      <arg name="tokenField"></arg>
      <arg name="representedObject"></arg>
      <retval></retval>
    </method>
    <method selector="tokenField:readFromPasteboard:">
      <arg name="tokenField"></arg>
      <arg name="pboard"></arg>
      <retval></retval>
    </method>
    <method selector="tokenField:representedObjectForEditingString:">
      <arg name="tokenField"></arg>
      <arg name="editingString"></arg>
      <retval></retval>
    </method>
    <method selector="tokenField:shouldAddObjects:atIndex:">
      <arg name="tokenField"></arg>
      <arg name="tokens"></arg>
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="tokenField:styleForRepresentedObject:">
      <arg name="tokenField"></arg>
      <arg name="representedObject"></arg>
      <retval></retval>
    </method>
    <method selector="tokenField:writeRepresentedObjects:toPasteboard:">
      <arg name="tokenField"></arg>
      <arg name="objects"></arg>
      <arg name="pboard"></arg>
      <retval></retval>
    </method>
    <method selector="tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:">
      <arg name="tokenFieldCell"></arg>
      <arg name="substring"></arg>
      <arg name="tokenIndex"></arg>
      <arg name="selectedIndex"></arg>
      <retval></retval>
    </method>
    <method selector="tokenFieldCell:displayStringForRepresentedObject:">
      <arg name="tokenFieldCell"></arg>
      <arg name="representedObject"></arg>
      <retval></retval>
    </method>
    <method selector="tokenFieldCell:editingStringForRepresentedObject:">
      <arg name="tokenFieldCell"></arg>
      <arg name="representedObject"></arg>
      <retval></retval>
    </method>
    <method selector="tokenFieldCell:hasMenuForRepresentedObject:">
      <arg name="tokenFieldCell"></arg>
      <arg name="representedObject"></arg>
      <retval></retval>
    </method>
    <method selector="tokenFieldCell:menuForRepresentedObject:">
      <arg name="tokenFieldCell"></arg>
      <arg name="representedObject"></arg>
      <retval></retval>
    </method>
    <method selector="tokenFieldCell:readFromPasteboard:">
      <arg name="tokenFieldCell"></arg>
      <arg name="pboard"></arg>
      <retval></retval>
    </method>
    <method selector="tokenFieldCell:representedObjectForEditingString:">
      <arg name="tokenFieldCell"></arg>
      <arg name="editingString"></arg>
      <retval></retval>
    </method>
    <method selector="tokenFieldCell:shouldAddObjects:atIndex:">
      <arg name="tokenFieldCell"></arg>
      <arg name="tokens"></arg>
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="tokenFieldCell:styleForRepresentedObject:">
      <arg name="tokenFieldCell"></arg>
      <arg name="representedObject"></arg>
      <retval></retval>
    </method>
    <method selector="tokenFieldCell:writeRepresentedObjects:toPasteboard:">
      <arg name="tokenFieldCell"></arg>
      <arg name="objects"></arg>
      <arg name="pboard"></arg>
      <retval></retval>
    </method>
    <method selector="toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:">
      <arg name="toolbar"></arg>
      <arg name="itemIdentifier"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="toolbarAllowedItemIdentifiers:">
      <arg name="toolbar"></arg>
      <retval></retval>
    </method>
    <method selector="toolbarDefaultItemIdentifiers:">
      <arg name="toolbar"></arg>
      <retval></retval>
    </method>
    <method selector="toolbarDidRemoveItem:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="toolbarSelectableItemIdentifiers:">
      <arg name="toolbar"></arg>
      <retval></retval>
    </method>
    <method selector="toolbarWillAddItem:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:">
      <arg name="theEvent"></arg>
      <arg name="cellFrame"></arg>
      <arg name="controlView"></arg>
      <arg name="charIndex"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="trackMouse:inRect:ofView:untilMouseUp:">
      <arg name="theEvent"></arg>
      <arg name="cellFrame"></arg>
      <arg name="controlView"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="unbind:">
      <arg name="binding"></arg>
      <retval></retval>
    </method>
    <method selector="undoManagerForTextView:">
      <arg name="view"></arg>
      <retval></retval>
    </method>
    <method selector="unmarkText">
      <retval></retval>
    </method>
    <method selector="unmarkText">
      <retval></retval>
    </method>
    <method selector="validAttributesForMarkedText">
      <retval></retval>
    </method>
    <method selector="validAttributesForMarkedText">
      <retval></retval>
    </method>
    <method selector="validModesForFontPanel:">
      <arg name="fontPanel"></arg>
      <retval></retval>
    </method>
    <method selector="validateMenuItem:">
      <arg name="menuItem"></arg>
      <retval></retval>
    </method>
    <method selector="validateToolbarItem:">
      <arg name="theItem"></arg>
      <retval></retval>
    </method>
    <method selector="validateUserInterfaceItem:">
      <arg name="anItem"></arg>
      <retval></retval>
    </method>
    <method selector="value">
      <retval></retval>
    </method>
    <method selector="valueClassForBinding:">
      <arg name="binding"></arg>
      <retval></retval>
    </method>
    <method selector="view:stringForToolTip:point:userData:">
      <arg name="view"></arg>
      <arg name="tag"></arg>
      <arg name="point"></arg>
      <arg name="data"></arg>
      <retval></retval>
    </method>
    <method selector="viewSizeChanged:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="wantsPeriodicDraggingUpdates">
      <retval></retval>
    </method>
    <method selector="wantsToDelayTextChangeNotifications">
      <retval></retval>
    </method>
    <method selector="wantsToHandleMouseEvents">
      <retval></retval>
    </method>
    <method selector="wantsToInterpretAllKeystrokes">
      <retval></retval>
    </method>
    <method selector="wantsToTrackMouse">
      <retval></retval>
    </method>
    <method selector="wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:">
      <arg name="theEvent"></arg>
      <arg name="cellFrame"></arg>
      <arg name="controlView"></arg>
      <arg name="charIndex"></arg>
      <retval></retval>
    </method>
    <method selector="window:shouldDragDocumentWithEvent:from:withPasteboard:">
      <arg name="window"></arg>
      <arg name="event"></arg>
      <arg name="dragImageLocation"></arg>
      <arg name="pasteboard"></arg>
      <retval></retval>
    </method>
    <method selector="window:shouldPopUpDocumentPathMenu:">
      <arg name="window"></arg>
      <arg name="menu"></arg>
      <retval></retval>
    </method>
    <method selector="window:willPositionSheet:usingRect:">
      <arg name="window"></arg>
      <arg name="sheet"></arg>
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="windowDidBecomeKey:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="windowDidBecomeMain:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="windowDidChangeScreen:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="windowDidChangeScreenProfile:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="windowDidDeminiaturize:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="windowDidEndSheet:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="windowDidExpose:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="windowDidMiniaturize:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="windowDidMove:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="windowDidResignKey:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="windowDidResignMain:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="windowDidResize:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="windowDidUpdate:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="windowLevel">
      <retval></retval>
    </method>
    <method selector="windowShouldClose:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="windowShouldZoom:toFrame:">
      <arg name="window"></arg>
      <arg name="newFrame"></arg>
      <retval></retval>
    </method>
    <method selector="windowWillBeginSheet:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="windowWillClose:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="windowWillMiniaturize:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="windowWillMove:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="windowWillResize:toSize:">
      <arg name="sender"></arg>
      <arg name="frameSize"></arg>
      <retval></retval>
    </method>
    <method selector="windowWillReturnFieldEditor:toObject:">
      <arg name="sender"></arg>
      <arg name="client"></arg>
      <retval></retval>
    </method>
    <method selector="windowWillReturnUndoManager:">
      <arg name="window"></arg>
      <retval></retval>
    </method>
    <method selector="windowWillUseStandardFrame:defaultFrame:">
      <arg name="window"></arg>
      <arg name="newFrame"></arg>
      <retval></retval>
    </method>
    <method selector="writeSelectionToPasteboard:types:">
      <arg name="pboard"></arg>
      <arg name="types"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSObjectController" swt_superclass="NSController">
    <method selector="add:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="addObject:">
      <arg name="object"></arg>
      <retval></retval>
    </method>
    <method selector="automaticallyPreparesContent">
      <retval></retval>
    </method>
    <method selector="canAdd">
      <retval></retval>
    </method>
    <method selector="canRemove">
      <retval></retval>
    </method>
    <method selector="content">
      <retval></retval>
    </method>
    <method selector="defaultFetchRequest">
      <retval></retval>
    </method>
    <method selector="entityName">
      <retval></retval>
    </method>
    <method selector="fetch:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="fetchPredicate">
      <retval></retval>
    </method>
    <method selector="fetchWithRequest:merge:error:">
      <arg name="fetchRequest"></arg>
      <arg name="merge"></arg>
      <arg name="error"></arg>
      <retval></retval>
    </method>
    <method selector="initWithContent:">
      <arg name="content"></arg>
      <retval></retval>
    </method>
    <method selector="isEditable">
      <retval></retval>
    </method>
    <method selector="managedObjectContext">
      <retval></retval>
    </method>
    <method selector="newObject">
      <retval></retval>
    </method>
    <method selector="objectClass">
      <retval></retval>
    </method>
    <method selector="prepareContent">
      <retval></retval>
    </method>
    <method selector="remove:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="removeObject:">
      <arg name="object"></arg>
      <retval></retval>
    </method>
    <method selector="selectedObjects">
      <retval></retval>
    </method>
    <method selector="selection">
      <retval></retval>
    </method>
    <method selector="setAutomaticallyPreparesContent:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setContent:">
      <arg name="content"></arg>
      <retval></retval>
    </method>
    <method selector="setEditable:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setEntityName:">
      <arg name="entityName"></arg>
      <retval></retval>
    </method>
    <method selector="setFetchPredicate:">
      <arg name="predicate"></arg>
      <retval></retval>
    </method>
    <method selector="setManagedObjectContext:">
      <arg name="managedObjectContext"></arg>
      <retval></retval>
    </method>
    <method selector="setObjectClass:">
      <arg name="objectClass"></arg>
      <retval></retval>
    </method>
    <method selector="setUsesLazyFetching:">
      <arg name="enabled"></arg>
      <retval></retval>
    </method>
    <method selector="usesLazyFetching">
      <retval></retval>
    </method>
    <method selector="validateUserInterfaceItem:">
      <arg name="item"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSOpenGLContext" swt_gen="mixed">
    <method selector="CGLContextObj">
      <retval></retval>
    </method>
    <method class_method="true" selector="clearCurrentContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="clearDrawable">
      <retval></retval>
    </method>
    <method selector="copyAttributesFromContext:withMask:">
      <arg name="context"></arg>
      <arg name="mask"></arg>
      <retval></retval>
    </method>
    <method selector="createTexture:fromView:internalFormat:">
      <arg name="target"></arg>
      <arg name="view"></arg>
      <arg name="format"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="currentContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentVirtualScreen">
      <retval></retval>
    </method>
    <method selector="flushBuffer" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getValues:forParameter:">
      <arg name="vals"></arg>
      <arg name="param"></arg>
      <retval></retval>
    </method>
    <method selector="initWithFormat:shareContext:">
      <arg name="format"></arg>
      <arg name="share"></arg>
      <retval></retval>
    </method>
    <method selector="makeCurrentContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pixelBuffer">
      <retval></retval>
    </method>
    <method selector="pixelBufferCubeMapFace">
      <retval></retval>
    </method>
    <method selector="pixelBufferMipMapLevel">
      <retval></retval>
    </method>
    <method selector="setCurrentVirtualScreen:">
      <arg name="screen"></arg>
      <retval></retval>
    </method>
    <method selector="setFullScreen">
      <retval></retval>
    </method>
    <method selector="setOffScreen:width:height:rowbytes:">
      <arg name="baseaddr"></arg>
      <arg name="width"></arg>
      <arg name="height"></arg>
      <arg name="rowbytes"></arg>
      <retval></retval>
    </method>
    <method selector="setPixelBuffer:cubeMapFace:mipMapLevel:currentVirtualScreen:">
      <arg name="pixelBuffer"></arg>
      <arg name="face"></arg>
      <arg name="level"></arg>
      <arg name="screen"></arg>
      <retval></retval>
    </method>
    <method selector="setTextureImageToPixelBuffer:colorBuffer:">
      <arg name="pixelBuffer"></arg>
      <arg name="source"></arg>
      <retval></retval>
    </method>
    <method selector="setValues:forParameter:">
      <arg name="vals"></arg>
      <arg name="param"></arg>
      <retval></retval>
    </method>
    <method selector="setView:">
      <arg name="view"></arg>
      <retval></retval>
    </method>
    <method selector="update">
      <retval></retval>
    </method>
    <method selector="view">
      <retval></retval>
    </method>
  </class>
  <class name="NSOpenGLPixelBuffer">
    <method selector="initWithTextureTarget:textureInternalFormat:textureMaxMipMapLevel:pixelsWide:pixelsHigh:">
      <arg name="target"></arg>
      <arg name="format"></arg>
      <arg name="maxLevel"></arg>
      <arg name="pixelsWide"></arg>
      <arg name="pixelsHigh"></arg>
      <retval></retval>
    </method>
    <method selector="pixelsHigh">
      <retval></retval>
    </method>
    <method selector="pixelsWide">
      <retval></retval>
    </method>
    <method selector="textureInternalFormat">
      <retval></retval>
    </method>
    <method selector="textureMaxMipMapLevel">
      <retval></retval>
    </method>
    <method selector="textureTarget">
      <retval></retval>
    </method>
  </class>
  <class name="NSOpenGLPixelFormat" swt_gen="mixed">
    <method selector="CGLPixelFormatObj">
      <retval></retval>
    </method>
    <method selector="attributes">
      <retval></retval>
    </method>
    <method selector="getValues:forAttribute:forVirtualScreen:">
      <arg name="vals"></arg>
      <arg name="attrib"></arg>
      <arg name="screen"></arg>
      <retval></retval>
    </method>
    <method selector="initWithAttributes:" swt_gen="true">
      <arg name="attribs" swt_gen="true" swt_java_type="int[]"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithData:">
      <arg name="attribs"></arg>
      <retval></retval>
    </method>
    <method selector="numberOfVirtualScreens">
      <retval></retval>
    </method>
    <method selector="setAttributes:">
      <arg name="attribs"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSOpenGLView" swt_gen="mixed" swt_superclass="NSView">
    <method selector="clearGLContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="defaultPixelFormat">
      <retval></retval>
    </method>
    <method selector="initWithFrame:pixelFormat:" swt_gen="true">
      <arg name="frameRect" swt_gen="true"></arg>
      <arg name="format" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="openGLContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pixelFormat">
      <retval></retval>
    </method>
    <method selector="prepareOpenGL">
      <retval></retval>
    </method>
    <method selector="reshape">
      <retval></retval>
    </method>
    <method selector="setOpenGLContext:">
      <arg name="context"></arg>
      <retval></retval>
    </method>
    <method selector="setPixelFormat:" swt_gen="true">
      <arg name="pixelFormat" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="update">
      <retval></retval>
    </method>
  </class>
  <class name="NSOpenPanel" swt_gen="mixed" swt_superclass="NSSavePanel">
    <method selector="URLs">
      <retval></retval>
    </method>
    <method selector="allowsMultipleSelection">
      <retval></retval>
    </method>
    <method selector="beginForDirectory:file:types:modelessDelegate:didEndSelector:contextInfo:">
      <arg name="path"></arg>
      <arg name="name"></arg>
      <arg name="fileTypes"></arg>
      <arg name="delegate"></arg>
      <arg name="didEndSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="beginSheetForDirectory:file:types:modalForWindow:modalDelegate:didEndSelector:contextInfo:">
      <arg name="path"></arg>
      <arg name="name"></arg>
      <arg name="fileTypes"></arg>
      <arg name="docWindow"></arg>
      <arg name="delegate"></arg>
      <arg name="didEndSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="canChooseDirectories">
      <retval></retval>
    </method>
    <method selector="canChooseFiles">
      <retval></retval>
    </method>
    <method selector="filenames" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="openPanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resolvesAliases">
      <retval></retval>
    </method>
    <method selector="runModalForDirectory:file:types:">
      <arg name="path"></arg>
      <arg name="name"></arg>
      <arg name="fileTypes"></arg>
      <retval></retval>
    </method>
    <method selector="runModalForTypes:">
      <arg name="fileTypes"></arg>
      <retval></retval>
    </method>
    <method selector="setAllowsMultipleSelection:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCanChooseDirectories:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCanChooseFiles:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setResolvesAliases:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSOutlineView" swt_gen="mixed" swt_superclass="NSTableView">
    <method selector="autoresizesOutlineColumn">
      <retval></retval>
    </method>
    <method selector="autosaveExpandedItems">
      <retval></retval>
    </method>
    <method selector="collapseItem:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="collapseItem:collapseChildren:">
      <arg name="item"></arg>
      <arg name="collapseChildren"></arg>
      <retval></retval>
    </method>
    <method selector="expandItem:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="expandItem:expandChildren:">
      <arg name="item"></arg>
      <arg name="expandChildren"></arg>
      <retval></retval>
    </method>
    <method selector="frameOfOutlineCellAtRow:">
      <arg name="row"></arg>
      <retval></retval>
    </method>
    <method selector="indentationMarkerFollowsCell">
      <retval></retval>
    </method>
    <method selector="indentationPerLevel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isExpandable:">
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="isItemExpanded:">
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="itemAtRow:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="levelForItem:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="levelForRow:">
      <arg name="row"></arg>
      <retval></retval>
    </method>
    <method selector="outlineTableColumn" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="parentForItem:">
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="reloadItem:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reloadItem:reloadChildren:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <arg name="reloadChildren" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rowForItem:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutoresizesOutlineColumn:" swt_gen="true">
      <arg name="resize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutosaveExpandedItems:" swt_gen="true">
      <arg name="save" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDropItem:dropChildIndex:">
      <arg name="item"></arg>
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="setIndentationMarkerFollowsCell:">
      <arg name="drawInCell"></arg>
      <retval></retval>
    </method>
    <method selector="setIndentationPerLevel:" swt_gen="true">
      <arg name="indentationPerLevel" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setOutlineTableColumn:" swt_gen="true">
      <arg name="outlineTableColumn" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="shouldCollapseAutoExpandedItemsForDeposited:">
      <arg name="deposited"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSPDFImageRep" swt_superclass="NSImageRep">
    <method selector="PDFRepresentation">
      <retval></retval>
    </method>
    <method selector="bounds">
      <retval></retval>
    </method>
    <method selector="currentPage">
      <retval></retval>
    </method>
    <method class_method="true" selector="imageRepWithData:">
      <arg name="pdfData"></arg>
      <retval></retval>
    </method>
    <method selector="initWithData:">
      <arg name="pdfData"></arg>
      <retval></retval>
    </method>
    <method selector="pageCount">
      <retval></retval>
    </method>
    <method selector="setCurrentPage:">
      <arg name="page"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSPICTImageRep" swt_superclass="NSImageRep">
    <method selector="PICTRepresentation">
      <retval></retval>
    </method>
    <method selector="boundingBox">
      <retval></retval>
    </method>
    <method class_method="true" selector="imageRepWithData:">
      <arg name="pictData"></arg>
      <retval></retval>
    </method>
    <method selector="initWithData:">
      <arg name="pictData"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSPageLayout">
    <method selector="accessoryControllers">
      <retval></retval>
    </method>
    <method selector="accessoryView">
      <retval></retval>
    </method>
    <method selector="addAccessoryController:">
      <arg name="accessoryController"></arg>
      <retval></retval>
    </method>
    <method selector="beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:">
      <arg name="printInfo"></arg>
      <arg name="docWindow"></arg>
      <arg name="delegate"></arg>
      <arg name="didEndSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="pageLayout">
      <retval></retval>
    </method>
    <method selector="printInfo">
      <retval></retval>
    </method>
    <method selector="readPrintInfo">
      <retval></retval>
    </method>
    <method selector="removeAccessoryController:">
      <arg name="accessoryController"></arg>
      <retval></retval>
    </method>
    <method selector="runModal">
      <retval></retval>
    </method>
    <method selector="runModalWithPrintInfo:">
      <arg name="printInfo"></arg>
      <retval></retval>
    </method>
    <method selector="setAccessoryView:">
      <arg name="accessoryView"></arg>
      <retval></retval>
    </method>
    <method selector="writePrintInfo">
      <retval></retval>
    </method>
  </class>
  <class name="NSPanel" swt_gen="mixed" swt_superclass="NSWindow">
    <method selector="becomesKeyOnlyIfNeeded">
      <retval></retval>
    </method>
    <method selector="isFloatingPanel">
      <retval></retval>
    </method>
    <method selector="setBecomesKeyOnlyIfNeeded:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setFloatingPanel:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setWorksWhenModal:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="worksWhenModal" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSParagraphStyle" swt_gen="mixed">
    <method selector="alignment" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="baseWritingDirection">
      <retval></retval>
    </method>
    <method class_method="true" selector="defaultParagraphStyle">
      <retval></retval>
    </method>
    <method selector="defaultTabInterval">
      <retval></retval>
    </method>
    <method class_method="true" selector="defaultWritingDirectionForLanguage:">
      <arg name="languageName"></arg>
      <retval></retval>
    </method>
    <method selector="firstLineHeadIndent">
      <retval></retval>
    </method>
    <method selector="headIndent">
      <retval></retval>
    </method>
    <method selector="headerLevel">
      <retval></retval>
    </method>
    <method selector="hyphenationFactor">
      <retval></retval>
    </method>
    <method selector="lineBreakMode">
      <retval></retval>
    </method>
    <method selector="lineHeightMultiple">
      <retval></retval>
    </method>
    <method selector="lineSpacing">
      <retval></retval>
    </method>
    <method selector="maximumLineHeight">
      <retval></retval>
    </method>
    <method selector="minimumLineHeight">
      <retval></retval>
    </method>
    <method selector="paragraphSpacing">
      <retval></retval>
    </method>
    <method selector="paragraphSpacingBefore">
      <retval></retval>
    </method>
    <method selector="tabStops" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tailIndent">
      <retval></retval>
    </method>
    <method selector="textBlocks">
      <retval></retval>
    </method>
    <method selector="textLists">
      <retval></retval>
    </method>
    <method selector="tighteningFactorForTruncation">
      <retval></retval>
    </method>
  </class>
  <class name="NSPasteboard" swt_gen="mixed">
    <method selector="addTypes:owner:" swt_gen="true">
      <arg name="newTypes" swt_gen="true"></arg>
      <arg name="newOwner" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="availableTypeFromArray:" swt_gen="true">
      <arg name="types" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="changeCount">
      <retval></retval>
    </method>
    <method selector="dataForType:" swt_gen="true">
      <arg name="dataType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="declareTypes:owner:" swt_gen="true">
      <arg name="newTypes" swt_gen="true"></arg>
      <arg name="newOwner" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="generalPasteboard" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="name">
      <retval></retval>
    </method>
    <method class_method="true" selector="pasteboardByFilteringData:ofType:">
      <arg name="data"></arg>
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="pasteboardByFilteringFile:">
      <arg name="filename"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="pasteboardByFilteringTypesInPasteboard:">
      <arg name="pboard"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="pasteboardWithName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="pasteboardWithUniqueName">
      <retval></retval>
    </method>
    <method selector="propertyListForType:" swt_gen="true">
      <arg name="dataType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="readFileContentsType:toFile:">
      <arg name="type"></arg>
      <arg name="filename"></arg>
      <retval></retval>
    </method>
    <method selector="readFileWrapper">
      <retval></retval>
    </method>
    <method selector="releaseGlobally">
      <retval></retval>
    </method>
    <method selector="setData:forType:" swt_gen="true">
      <arg name="data" swt_gen="true"></arg>
      <arg name="dataType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPropertyList:forType:" swt_gen="true">
      <arg name="plist" swt_gen="true"></arg>
      <arg name="dataType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setString:forType:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <arg name="dataType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stringForType:" swt_gen="true">
      <arg name="dataType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="types" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="typesFilterableTo:">
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="writeFileContents:">
      <arg name="filename"></arg>
      <retval></retval>
    </method>
    <method selector="writeFileWrapper:">
      <arg name="wrapper"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSPathCell" swt_superclass="NSActionCell">
    <method selector="URL">
      <retval></retval>
    </method>
    <method selector="allowedTypes">
      <retval></retval>
    </method>
    <method selector="backgroundColor">
      <retval></retval>
    </method>
    <method selector="clickedPathComponentCell">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="doubleAction">
      <retval></retval>
    </method>
    <method selector="mouseEntered:withFrame:inView:">
      <arg name="event"></arg>
      <arg name="frame"></arg>
      <arg name="view"></arg>
      <retval></retval>
    </method>
    <method selector="mouseExited:withFrame:inView:">
      <arg name="event"></arg>
      <arg name="frame"></arg>
      <arg name="view"></arg>
      <retval></retval>
    </method>
    <method selector="pathComponentCellAtPoint:withFrame:inView:">
      <arg name="point"></arg>
      <arg name="frame"></arg>
      <arg name="view"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="pathComponentCellClass">
      <retval></retval>
    </method>
    <method selector="pathComponentCells">
      <retval></retval>
    </method>
    <method selector="pathStyle">
      <retval></retval>
    </method>
    <method selector="placeholderAttributedString">
      <retval></retval>
    </method>
    <method selector="placeholderString">
      <retval></retval>
    </method>
    <method selector="rectOfPathComponentCell:withFrame:inView:">
      <arg name="cell"></arg>
      <arg name="frame"></arg>
      <arg name="view"></arg>
      <retval></retval>
    </method>
    <method selector="setAllowedTypes:">
      <arg name="allowedTypes"></arg>
      <retval></retval>
    </method>
    <method selector="setBackgroundColor:">
      <arg name="color"></arg>
      <retval></retval>
    </method>
    <method selector="setControlSize:">
      <arg name="size"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:">
      <arg name="value"></arg>
      <retval></retval>
    </method>
    <method selector="setDoubleAction:">
      <arg name="action"></arg>
      <retval></retval>
    </method>
    <method selector="setObjectValue:">
      <arg name="obj"></arg>
      <retval></retval>
    </method>
    <method selector="setPathComponentCells:">
      <arg name="cells"></arg>
      <retval></retval>
    </method>
    <method selector="setPathStyle:">
      <arg name="style"></arg>
      <retval></retval>
    </method>
    <method selector="setPlaceholderAttributedString:">
      <arg name="string"></arg>
      <retval></retval>
    </method>
    <method selector="setPlaceholderString:">
      <arg name="string"></arg>
      <retval></retval>
    </method>
    <method selector="setURL:">
      <arg name="url"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSPathComponentCell" swt_superclass="NSTextFieldCell">
    <method selector="URL">
      <retval></retval>
    </method>
    <method selector="image">
      <retval></retval>
    </method>
    <method selector="setImage:">
      <arg name="value"></arg>
      <retval></retval>
    </method>
    <method selector="setURL:">
      <arg name="url"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSPathControl" swt_superclass="NSControl">
    <method selector="URL">
      <retval></retval>
    </method>
    <method selector="backgroundColor">
      <retval></retval>
    </method>
    <method selector="clickedPathComponentCell">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="doubleAction">
      <retval></retval>
    </method>
    <method selector="pathComponentCells">
      <retval></retval>
    </method>
    <method selector="pathStyle">
      <retval></retval>
    </method>
    <method selector="setBackgroundColor:">
      <arg name="color"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:">
      <arg name="delegate"></arg>
      <retval></retval>
    </method>
    <method selector="setDoubleAction:">
      <arg name="action"></arg>
      <retval></retval>
    </method>
    <method selector="setDraggingSourceOperationMask:forLocal:">
      <arg name="mask"></arg>
      <arg name="isLocal"></arg>
      <retval></retval>
    </method>
    <method selector="setPathComponentCells:">
      <arg name="cells"></arg>
      <retval></retval>
    </method>
    <method selector="setPathStyle:">
      <arg name="style"></arg>
      <retval></retval>
    </method>
    <method selector="setURL:">
      <arg name="url"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSPersistentDocument" swt_superclass="NSDocument">
    <method selector="configurePersistentStoreCoordinatorForURL:ofType:error:">
      <arg name="url"></arg>
      <arg name="fileType"></arg>
      <arg name="error"></arg>
      <retval></retval>
    </method>
    <method selector="configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:">
      <arg name="url"></arg>
      <arg name="fileType"></arg>
      <arg name="configuration"></arg>
      <arg name="storeOptions"></arg>
      <arg name="error"></arg>
      <retval></retval>
    </method>
    <method selector="managedObjectContext">
      <retval></retval>
    </method>
    <method selector="managedObjectModel">
      <retval></retval>
    </method>
    <method selector="persistentStoreTypeForFileType:">
      <arg name="fileType"></arg>
      <retval></retval>
    </method>
    <method selector="readFromURL:ofType:error:">
      <arg name="absoluteURL"></arg>
      <arg name="typeName"></arg>
      <arg name="error"></arg>
      <retval></retval>
    </method>
    <method selector="revertToContentsOfURL:ofType:error:">
      <arg name="inAbsoluteURL"></arg>
      <arg name="inTypeName"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="setManagedObjectContext:">
      <arg name="managedObjectContext"></arg>
      <retval></retval>
    </method>
    <method selector="writeToURL:ofType:forSaveOperation:originalContentsURL:error:">
      <arg name="absoluteURL"></arg>
      <arg name="typeName"></arg>
      <arg name="saveOperation"></arg>
      <arg name="absoluteOriginalContentsURL"></arg>
      <arg name="error"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSPopUpButton" swt_gen="mixed" swt_superclass="NSButton">
    <method selector="addItemWithTitle:">
      <arg name="title"></arg>
      <retval></retval>
    </method>
    <method selector="addItemsWithTitles:">
      <arg name="itemTitles"></arg>
      <retval></retval>
    </method>
    <method selector="autoenablesItems">
      <retval></retval>
    </method>
    <method selector="indexOfItem:">
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="indexOfItemWithRepresentedObject:">
      <arg name="obj"></arg>
      <retval></retval>
    </method>
    <method selector="indexOfItemWithTag:">
      <arg name="tag"></arg>
      <retval></retval>
    </method>
    <method selector="indexOfItemWithTarget:andAction:">
      <arg name="target"></arg>
      <arg name="actionSelector"></arg>
      <retval></retval>
    </method>
    <method selector="indexOfItemWithTitle:">
      <arg name="title"></arg>
      <retval></retval>
    </method>
    <method selector="indexOfSelectedItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithFrame:pullsDown:" swt_gen="true">
      <arg name="buttonFrame" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true" swt_java_type="NSPopUpButton"></retval>
    </method>
    <method selector="insertItemWithTitle:atIndex:">
      <arg name="title"></arg>
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="itemArray">
      <retval></retval>
    </method>
    <method selector="itemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemTitleAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="itemTitles">
      <retval></retval>
    </method>
    <method selector="itemWithTitle:">
      <arg name="title"></arg>
      <retval></retval>
    </method>
    <method selector="lastItem">
      <retval></retval>
    </method>
    <method selector="menu" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="preferredEdge">
      <retval></retval>
    </method>
    <method selector="pullsDown">
      <retval></retval>
    </method>
    <method selector="removeAllItems" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeItemWithTitle:">
      <arg name="title"></arg>
      <retval></retval>
    </method>
    <method selector="selectItem:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectItemWithTag:">
      <arg name="tag"></arg>
      <retval></retval>
    </method>
    <method selector="selectItemWithTitle:">
      <arg name="title"></arg>
      <retval></retval>
    </method>
    <method selector="selectedItem">
      <retval></retval>
    </method>
    <method selector="setAutoenablesItems:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMenu:">
      <arg name="menu"></arg>
      <retval></retval>
    </method>
    <method selector="setPreferredEdge:">
      <arg name="edge"></arg>
      <retval></retval>
    </method>
    <method selector="setPullsDown:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitle:">
      <arg name="aString"></arg>
      <retval></retval>
    </method>
    <method selector="synchronizeTitleAndSelectedItem">
      <retval></retval>
    </method>
    <method selector="titleOfSelectedItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSPopUpButtonCell" swt_superclass="NSMenuItemCell">
    <method selector="addItemWithTitle:">
      <arg name="title"></arg>
      <retval></retval>
    </method>
    <method selector="addItemsWithTitles:">
      <arg name="itemTitles"></arg>
      <retval></retval>
    </method>
    <method selector="altersStateOfSelectedItem">
      <retval></retval>
    </method>
    <method selector="arrowPosition">
      <retval></retval>
    </method>
    <method selector="attachPopUpWithFrame:inView:">
      <arg name="cellFrame"></arg>
      <arg name="controlView"></arg>
      <retval></retval>
    </method>
    <method selector="autoenablesItems">
      <retval></retval>
    </method>
    <method selector="dismissPopUp">
      <retval></retval>
    </method>
    <method selector="indexOfItem:">
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="indexOfItemWithRepresentedObject:">
      <arg name="obj"></arg>
      <retval></retval>
    </method>
    <method selector="indexOfItemWithTag:">
      <arg name="tag"></arg>
      <retval></retval>
    </method>
    <method selector="indexOfItemWithTarget:andAction:">
      <arg name="target"></arg>
      <arg name="actionSelector"></arg>
      <retval></retval>
    </method>
    <method selector="indexOfItemWithTitle:">
      <arg name="title"></arg>
      <retval></retval>
    </method>
    <method selector="indexOfSelectedItem">
      <retval></retval>
    </method>
    <method selector="initTextCell:pullsDown:">
      <arg name="stringValue"></arg>
      <arg name="pullDown"></arg>
      <retval></retval>
    </method>
    <method selector="insertItemWithTitle:atIndex:">
      <arg name="title"></arg>
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="itemArray">
      <retval></retval>
    </method>
    <method selector="itemAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="itemTitleAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="itemTitles">
      <retval></retval>
    </method>
    <method selector="itemWithTitle:">
      <arg name="title"></arg>
      <retval></retval>
    </method>
    <method selector="lastItem">
      <retval></retval>
    </method>
    <method selector="menu">
      <retval></retval>
    </method>
    <method selector="numberOfItems">
      <retval></retval>
    </method>
    <method selector="objectValue">
      <retval></retval>
    </method>
    <method selector="performClickWithFrame:inView:">
      <arg name="frame"></arg>
      <arg name="controlView"></arg>
      <retval></retval>
    </method>
    <method selector="preferredEdge">
      <retval></retval>
    </method>
    <method selector="pullsDown">
      <retval></retval>
    </method>
    <method selector="removeAllItems">
      <retval></retval>
    </method>
    <method selector="removeItemAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="removeItemWithTitle:">
      <arg name="title"></arg>
      <retval></retval>
    </method>
    <method selector="selectItem:">
      <arg name="item"></arg>
      <retval></retval>
    </method>
    <method selector="selectItemAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="selectItemWithTag:">
      <arg name="tag"></arg>
      <retval></retval>
    </method>
    <method selector="selectItemWithTitle:">
      <arg name="title"></arg>
      <retval></retval>
    </method>
    <method selector="selectedItem">
      <retval></retval>
    </method>
    <method selector="setAltersStateOfSelectedItem:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setArrowPosition:">
      <arg name="position"></arg>
      <retval></retval>
    </method>
    <method selector="setAutoenablesItems:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setMenu:">
      <arg name="menu"></arg>
      <retval></retval>
    </method>
    <method selector="setObjectValue:">
      <arg name="obj"></arg>
      <retval></retval>
    </method>
    <method selector="setPreferredEdge:">
      <arg name="edge"></arg>
      <retval></retval>
    </method>
    <method selector="setPullsDown:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setTitle:">
      <arg name="aString"></arg>
      <retval></retval>
    </method>
    <method selector="setUsesItemFromMenu:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="synchronizeTitleAndSelectedItem">
      <retval></retval>
    </method>
    <method selector="titleOfSelectedItem">
      <retval></retval>
    </method>
    <method selector="usesItemFromMenu">
      <retval></retval>
    </method>
  </class>
  <class name="NSPredicateEditor" swt_superclass="NSRuleEditor">
    <method selector="rowTemplates">
      <retval></retval>
    </method>
    <method selector="setRowTemplates:">
      <arg name="rowTemplates"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSPredicateEditorRowTemplate">
    <method selector="compoundTypes">
      <retval></retval>
    </method>
    <method selector="displayableSubpredicatesOfPredicate:">
      <arg name="predicate"></arg>
      <retval></retval>
    </method>
    <method selector="initWithCompoundTypes:">
      <arg name="compoundTypes"></arg>
      <retval></retval>
    </method>
    <method selector="initWithLeftExpressions:rightExpressionAttributeType:modifier:operators:options:">
      <arg name="leftExpressions"></arg>
      <arg name="attributeType"></arg>
      <arg name="modifier"></arg>
      <arg name="operators"></arg>
      <arg name="options"></arg>
      <retval></retval>
    </method>
    <method selector="initWithLeftExpressions:rightExpressions:modifier:operators:options:">
      <arg name="leftExpressions"></arg>
      <arg name="rightExpressions"></arg>
      <arg name="modifier"></arg>
      <arg name="operators"></arg>
      <arg name="options"></arg>
      <retval></retval>
    </method>
    <method selector="leftExpressions">
      <retval></retval>
    </method>
    <method selector="matchForPredicate:">
      <arg name="predicate"></arg>
      <retval></retval>
    </method>
    <method selector="modifier">
      <retval></retval>
    </method>
    <method selector="operators">
      <retval></retval>
    </method>
    <method selector="options">
      <retval></retval>
    </method>
    <method selector="predicateWithSubpredicates:">
      <arg name="subpredicates"></arg>
      <retval></retval>
    </method>
    <method selector="rightExpressionAttributeType">
      <retval></retval>
    </method>
    <method selector="rightExpressions">
      <retval></retval>
    </method>
    <method selector="setPredicate:">
      <arg name="predicate"></arg>
      <retval></retval>
    </method>
    <method selector="templateViews">
      <retval></retval>
    </method>
    <method class_method="true" selector="templatesWithAttributeKeyPaths:inEntityDescription:">
      <arg name="keyPaths"></arg>
      <arg name="entityDescription"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSPrintInfo" swt_gen="mixed">
    <method selector="PMPageFormat">
      <retval></retval>
    </method>
    <method selector="PMPrintSession">
      <retval></retval>
    </method>
    <method selector="PMPrintSettings">
      <retval></retval>
    </method>
    <method selector="bottomMargin">
      <retval></retval>
    </method>
    <method class_method="true" selector="defaultPrinter" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dictionary" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="horizontalPagination">
      <retval></retval>
    </method>
    <method selector="imageablePageBounds" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initWithDictionary:" swt_gen="true">
      <arg name="attributes" swt_gen="true"></arg>
      <retval swt_gen="true" swt_java_type="NSPrintInfo"></retval>
    </method>
    <method selector="isHorizontallyCentered">
      <retval></retval>
    </method>
    <method selector="isVerticallyCentered">
      <retval></retval>
    </method>
    <method selector="jobDisposition" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="leftMargin">
      <retval></retval>
    </method>
    <method selector="localizedPaperName">
      <retval></retval>
    </method>
    <method selector="orientation">
      <retval></retval>
    </method>
    <method selector="paperName">
      <retval></retval>
    </method>
    <method selector="paperSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printSettings">
      <retval></retval>
    </method>
    <method selector="printer" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rightMargin">
      <retval></retval>
    </method>
    <method selector="setBottomMargin:">
      <arg name="margin"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="setDefaultPrinter:">
      <arg name="printer"></arg>
      <retval></retval>
    </method>
    <method selector="setHorizontalPagination:">
      <arg name="mode"></arg>
      <retval></retval>
    </method>
    <method selector="setHorizontallyCentered:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setJobDisposition:" swt_gen="true">
      <arg name="disposition" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLeftMargin:">
      <arg name="margin"></arg>
      <retval></retval>
    </method>
    <method selector="setOrientation:">
      <arg name="orientation"></arg>
      <retval></retval>
    </method>
    <method selector="setPaperName:">
      <arg name="name"></arg>
      <retval></retval>
    </method>
    <method selector="setPaperSize:">
      <arg name="size"></arg>
      <retval></retval>
    </method>
    <method selector="setPrinter:" swt_gen="true">
      <arg name="printer" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRightMargin:">
      <arg name="margin"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="setSharedPrintInfo:">
      <arg name="printInfo"></arg>
      <retval></retval>
    </method>
    <method selector="setTopMargin:">
      <arg name="margin"></arg>
      <retval></retval>
    </method>
    <method selector="setUpPrintOperationDefaultValues" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVerticalPagination:">
      <arg name="mode"></arg>
      <retval></retval>
    </method>
    <method selector="setVerticallyCentered:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="sharedPrintInfo" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="sizeForPaperName:">
      <arg name="name"></arg>
      <retval></retval>
    </method>
    <method selector="topMargin">
      <retval></retval>
    </method>
    <method selector="updateFromPMPageFormat">
      <retval></retval>
    </method>
    <method selector="updateFromPMPrintSettings">
      <retval></retval>
    </method>
    <method selector="verticalPagination">
      <retval></retval>
    </method>
  </class>
  <class name="NSPrintOperation" swt_gen="mixed">
    <method class_method="true" selector="EPSOperationWithView:insideRect:toData:">
      <arg name="view"></arg>
      <arg name="rect"></arg>
      <arg name="data"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="EPSOperationWithView:insideRect:toData:printInfo:">
      <arg name="view"></arg>
      <arg name="rect"></arg>
      <arg name="data"></arg>
      <arg name="printInfo"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="EPSOperationWithView:insideRect:toPath:printInfo:">
      <arg name="view"></arg>
      <arg name="rect"></arg>
      <arg name="path"></arg>
      <arg name="printInfo"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="PDFOperationWithView:insideRect:toData:">
      <arg name="view"></arg>
      <arg name="rect"></arg>
      <arg name="data"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="PDFOperationWithView:insideRect:toData:printInfo:">
      <arg name="view"></arg>
      <arg name="rect"></arg>
      <arg name="data"></arg>
      <arg name="printInfo"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="PDFOperationWithView:insideRect:toPath:printInfo:">
      <arg name="view"></arg>
      <arg name="rect"></arg>
      <arg name="path"></arg>
      <arg name="printInfo"></arg>
      <retval></retval>
    </method>
    <method selector="accessoryView">
      <retval></retval>
    </method>
    <method selector="canSpawnSeparateThread">
      <retval></retval>
    </method>
    <method selector="cleanUpOperation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="context" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="createContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="currentOperation">
      <retval></retval>
    </method>
    <method selector="currentPage">
      <retval></retval>
    </method>
    <method selector="deliverResult" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="destroyContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isCopyingOperation">
      <retval></retval>
    </method>
    <method selector="jobStyleHint">
      <retval></retval>
    </method>
    <method selector="jobTitle">
      <retval></retval>
    </method>
    <method selector="pageOrder">
      <retval></retval>
    </method>
    <method selector="pageRange">
      <retval></retval>
    </method>
    <method selector="printInfo">
      <retval></retval>
    </method>
    <method class_method="true" selector="printOperationWithView:">
      <arg name="view"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="printOperationWithView:printInfo:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <arg name="printInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printPanel">
      <retval></retval>
    </method>
    <method selector="runOperation" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runOperationModalForWindow:delegate:didRunSelector:contextInfo:">
      <arg name="docWindow"></arg>
      <arg name="delegate"></arg>
      <arg name="didRunSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="setAccessoryView:">
      <arg name="view"></arg>
      <retval></retval>
    </method>
    <method selector="setCanSpawnSeparateThread:">
      <arg name="canSpawnSeparateThread"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="setCurrentOperation:" swt_gen="true">
      <arg name="operation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setJobStyleHint:">
      <arg name="hint"></arg>
      <retval></retval>
    </method>
    <method selector="setJobTitle:" swt_gen="true">
      <arg name="jobTitle" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setPageOrder:">
      <arg name="pageOrder"></arg>
      <retval></retval>
    </method>
    <method selector="setPrintInfo:">
      <arg name="printInfo"></arg>
      <retval></retval>
    </method>
    <method selector="setPrintPanel:">
      <arg name="panel"></arg>
      <retval></retval>
    </method>
    <method selector="setShowPanels:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setShowsPrintPanel:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setShowsProgressPanel:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showPanels">
      <retval></retval>
    </method>
    <method selector="showsPrintPanel">
      <retval></retval>
    </method>
    <method selector="showsProgressPanel">
      <retval></retval>
    </method>
    <method selector="view">
      <retval></retval>
    </method>
  </class>
  <class name="NSPrintPanel" swt_gen="mixed">
    <method selector="accessoryControllers">
      <retval></retval>
    </method>
    <method selector="accessoryView">
      <retval></retval>
    </method>
    <method selector="addAccessoryController:">
      <arg name="accessoryController"></arg>
      <retval></retval>
    </method>
    <method selector="beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:">
      <arg name="printInfo"></arg>
      <arg name="docWindow"></arg>
      <arg name="delegate"></arg>
      <arg name="didEndSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="defaultButtonTitle">
      <retval></retval>
    </method>
    <method selector="finalWritePrintInfo">
      <retval></retval>
    </method>
    <method selector="helpAnchor">
      <retval></retval>
    </method>
    <method selector="jobStyleHint">
      <retval></retval>
    </method>
    <method selector="options" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="printInfo">
      <retval></retval>
    </method>
    <method class_method="true" selector="printPanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeAccessoryController:">
      <arg name="accessoryController"></arg>
      <retval></retval>
    </method>
    <method selector="runModal">
      <retval></retval>
    </method>
    <method selector="runModalWithPrintInfo:" swt_gen="true">
      <arg name="printInfo" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAccessoryView:">
      <arg name="accessoryView"></arg>
      <retval></retval>
    </method>
    <method selector="setDefaultButtonTitle:">
      <arg name="defaultButtonTitle"></arg>
      <retval></retval>
    </method>
    <method selector="setHelpAnchor:">
      <arg name="helpAnchor"></arg>
      <retval></retval>
    </method>
    <method selector="setJobStyleHint:">
      <arg name="hint"></arg>
      <retval></retval>
    </method>
    <method selector="setOptions:" swt_gen="true">
      <arg name="options" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="updateFromPrintInfo">
      <retval></retval>
    </method>
  </class>
  <class name="NSPrinter" swt_gen="mixed">
    <method selector="acceptsBinary">
      <retval></retval>
    </method>
    <method selector="booleanForKey:inTable:">
      <arg name="key"></arg>
      <arg name="table"></arg>
      <retval></retval>
    </method>
    <method selector="deviceDescription">
      <retval></retval>
    </method>
    <method selector="domain">
      <retval></retval>
    </method>
    <method selector="floatForKey:inTable:">
      <arg name="key"></arg>
      <arg name="table"></arg>
      <retval></retval>
    </method>
    <method selector="host">
      <retval></retval>
    </method>
    <method selector="imageRectForPaper:">
      <arg name="paperName"></arg>
      <retval></retval>
    </method>
    <method selector="intForKey:inTable:">
      <arg name="key"></arg>
      <arg name="table"></arg>
      <retval></retval>
    </method>
    <method selector="isColor">
      <retval></retval>
    </method>
    <method selector="isFontAvailable:">
      <arg name="faceName"></arg>
      <retval></retval>
    </method>
    <method selector="isKey:inTable:">
      <arg name="key"></arg>
      <arg name="table"></arg>
      <retval></retval>
    </method>
    <method selector="isOutputStackInReverseOrder">
      <retval></retval>
    </method>
    <method selector="languageLevel">
      <retval></retval>
    </method>
    <method selector="name" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="note">
      <retval></retval>
    </method>
    <method selector="pageSizeForPaper:">
      <arg name="paperName"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="printerNames" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="printerTypes">
      <retval></retval>
    </method>
    <method class_method="true" selector="printerWithName:" swt_gen="true">
      <arg name="name" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="printerWithName:domain:includeUnavailable:">
      <arg name="name"></arg>
      <arg name="domain"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="printerWithType:">
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="rectForKey:inTable:">
      <arg name="key"></arg>
      <arg name="table"></arg>
      <retval></retval>
    </method>
    <method selector="sizeForKey:inTable:">
      <arg name="key"></arg>
      <arg name="table"></arg>
      <retval></retval>
    </method>
    <method selector="statusForTable:">
      <arg name="tableName"></arg>
      <retval></retval>
    </method>
    <method selector="stringForKey:inTable:">
      <arg name="key"></arg>
      <arg name="table"></arg>
      <retval></retval>
    </method>
    <method selector="stringListForKey:inTable:">
      <arg name="key"></arg>
      <arg name="table"></arg>
      <retval></retval>
    </method>
    <method selector="type">
      <retval></retval>
    </method>
  </class>
  <class name="NSProgressIndicator" swt_gen="mixed" swt_superclass="NSView">
    <method selector="animate:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="animationDelay">
      <retval></retval>
    </method>
    <method selector="controlSize">
      <retval></retval>
    </method>
    <method selector="controlTint">
      <retval></retval>
    </method>
    <method selector="doubleValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="incrementBy:">
      <arg name="delta"></arg>
      <retval></retval>
    </method>
    <method selector="isBezeled">
      <retval></retval>
    </method>
    <method selector="isDisplayedWhenStopped">
      <retval></retval>
    </method>
    <method selector="isIndeterminate">
      <retval></retval>
    </method>
    <method selector="maxValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAnimationDelay:">
      <arg name="delay"></arg>
      <retval></retval>
    </method>
    <method selector="setBezeled:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setControlSize:">
      <arg name="size"></arg>
      <retval></retval>
    </method>
    <method selector="setControlTint:">
      <arg name="tint"></arg>
      <retval></retval>
    </method>
    <method selector="setDisplayedWhenStopped:">
      <arg name="isDisplayed"></arg>
      <retval></retval>
    </method>
    <method selector="setDoubleValue:" swt_gen="true">
      <arg name="doubleValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setIndeterminate:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxValue:" swt_gen="true">
      <arg name="newMaximum" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinValue:" swt_gen="true">
      <arg name="newMinimum" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setStyle:">
      <arg name="style"></arg>
      <retval></retval>
    </method>
    <method selector="setUsesThreadedAnimation:" swt_gen="true">
      <arg name="threadedAnimation" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sizeToFit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="startAnimation:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="stopAnimation:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="style">
      <retval></retval>
    </method>
    <method selector="usesThreadedAnimation">
      <retval></retval>
    </method>
  </class>
  <class name="NSQuickDrawView" swt_superclass="NSView">
    <method selector="qdPort">
      <retval></retval>
    </method>
  </class>
  <class name="NSResponder" swt_gen="mixed">
    <method selector="acceptsFirstResponder" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="becomeFirstResponder" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cancelOperation:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="capitalizeWord:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="centerSelectionInVisibleArea:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="changeCaseOfLetter:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="complete:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="cursorUpdate:">
      <arg name="event"></arg>
      <retval></retval>
    </method>
    <method selector="deleteBackward:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="deleteBackwardByDecomposingPreviousCharacter:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="deleteForward:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="deleteToBeginningOfLine:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="deleteToBeginningOfParagraph:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="deleteToEndOfLine:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="deleteToEndOfParagraph:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="deleteToMark:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="deleteWordBackward:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="deleteWordForward:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="doCommandBySelector:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="flagsChanged:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="flushBufferedKeyEvents">
      <retval></retval>
    </method>
    <method selector="helpRequested:" swt_gen="true">
      <arg name="eventPtr" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="indent:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="insertBacktab:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="insertContainerBreak:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="insertLineBreak:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="insertNewline:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="insertNewlineIgnoringFieldEditor:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="insertParagraphSeparator:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="insertTab:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="insertTabIgnoringFieldEditor:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="insertText:" swt_gen="true">
      <arg name="insertString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="interfaceStyle">
      <retval></retval>
    </method>
    <method selector="interpretKeyEvents:" swt_gen="true">
      <arg name="eventArray" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyDown:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="keyUp:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lowercaseWord:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="menu">
      <retval></retval>
    </method>
    <method selector="mouseDown:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseDragged:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseEntered:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseExited:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseMoved:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouseUp:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveBackward:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="moveBackwardAndModifySelection:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="moveDown:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="moveDownAndModifySelection:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="moveForward:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="moveForwardAndModifySelection:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="moveLeft:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="moveLeftAndModifySelection:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="moveRight:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="moveRightAndModifySelection:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="moveToBeginningOfDocument:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="moveToBeginningOfLine:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="moveToBeginningOfParagraph:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveToEndOfDocument:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="moveToEndOfLine:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="moveToEndOfParagraph:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveUp:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveUpAndModifySelection:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="moveWordBackward:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="moveWordBackwardAndModifySelection:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="moveWordForward:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="moveWordForwardAndModifySelection:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="moveWordLeft:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="moveWordLeftAndModifySelection:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="moveWordRight:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="moveWordRightAndModifySelection:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="nextResponder">
      <retval></retval>
    </method>
    <method selector="noResponderFor:">
      <arg name="eventSelector"></arg>
      <retval></retval>
    </method>
    <method selector="otherMouseDown:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="otherMouseDragged:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="otherMouseUp:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pageDown:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pageUp:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performKeyEquivalent:">
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method selector="performMnemonic:">
      <arg name="theString"></arg>
      <retval></retval>
    </method>
    <method selector="presentError:">
      <arg name="error"></arg>
      <retval></retval>
    </method>
    <method selector="presentError:modalForWindow:delegate:didPresentSelector:contextInfo:">
      <arg name="error"></arg>
      <arg name="window"></arg>
      <arg name="delegate"></arg>
      <arg name="didPresentSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="resignFirstResponder" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rightMouseDown:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rightMouseDragged:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rightMouseUp:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollLineDown:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="scrollLineUp:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="scrollPageDown:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="scrollPageUp:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="scrollWheel:" swt_gen="true">
      <arg name="theEvent" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectAll:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="selectLine:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="selectParagraph:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="selectToMark:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="selectWord:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="setInterfaceStyle:">
      <arg name="interfaceStyle"></arg>
      <retval></retval>
    </method>
    <method selector="setMark:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="setMenu:">
      <arg name="menu"></arg>
      <retval></retval>
    </method>
    <method selector="setNextResponder:">
      <arg name="aResponder"></arg>
      <retval></retval>
    </method>
    <method selector="shouldBeTreatedAsInkEvent:">
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method selector="showContextHelp:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="swapWithMark:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="tabletPoint:">
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method selector="tabletProximity:">
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method selector="transpose:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="transposeWords:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="tryToPerform:with:">
      <arg name="anAction"></arg>
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
    <method selector="undoManager">
      <retval></retval>
    </method>
    <method selector="uppercaseWord:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="validRequestorForSendType:returnType:">
      <arg name="sendType"></arg>
      <arg name="returnType"></arg>
      <retval></retval>
    </method>
    <method selector="willPresentError:">
      <arg name="error"></arg>
      <retval></retval>
    </method>
    <method selector="yank:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSRuleEditor" swt_superclass="NSControl">
    <method selector="addRow:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="canRemoveAllRows">
      <retval></retval>
    </method>
    <method selector="criteriaForRow:">
      <arg name="row"></arg>
      <retval></retval>
    </method>
    <method selector="criteriaKeyPath">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="displayValuesForRow:">
      <arg name="row"></arg>
      <retval></retval>
    </method>
    <method selector="displayValuesKeyPath">
      <retval></retval>
    </method>
    <method selector="formattingDictionary">
      <retval></retval>
    </method>
    <method selector="formattingStringsFilename">
      <retval></retval>
    </method>
    <method selector="insertRowAtIndex:withType:asSubrowOfRow:animate:">
      <arg name="rowIndex"></arg>
      <arg name="rowType"></arg>
      <arg name="parentRow"></arg>
      <arg name="shouldAnimate"></arg>
      <retval></retval>
    </method>
    <method selector="isEditable">
      <retval></retval>
    </method>
    <method selector="nestingMode">
      <retval></retval>
    </method>
    <method selector="numberOfRows">
      <retval></retval>
    </method>
    <method selector="parentRowForRow:">
      <arg name="rowIndex"></arg>
      <retval></retval>
    </method>
    <method selector="predicate">
      <retval></retval>
    </method>
    <method selector="predicateForRow:">
      <arg name="row"></arg>
      <retval></retval>
    </method>
    <method selector="reloadCriteria">
      <retval></retval>
    </method>
    <method selector="reloadPredicate">
      <retval></retval>
    </method>
    <method selector="removeRowAtIndex:">
      <arg name="rowIndex"></arg>
      <retval></retval>
    </method>
    <method selector="removeRowsAtIndexes:includeSubrows:">
      <arg name="rowIndexes"></arg>
      <arg name="includeSubrows"></arg>
      <retval></retval>
    </method>
    <method selector="rowClass">
      <retval></retval>
    </method>
    <method selector="rowForDisplayValue:">
      <arg name="displayValue"></arg>
      <retval></retval>
    </method>
    <method selector="rowHeight">
      <retval></retval>
    </method>
    <method selector="rowTypeForRow:">
      <arg name="rowIndex"></arg>
      <retval></retval>
    </method>
    <method selector="rowTypeKeyPath">
      <retval></retval>
    </method>
    <method selector="selectRowIndexes:byExtendingSelection:">
      <arg name="indexes"></arg>
      <arg name="extend"></arg>
      <retval></retval>
    </method>
    <method selector="selectedRowIndexes">
      <retval></retval>
    </method>
    <method selector="setCanRemoveAllRows:">
      <arg name="val"></arg>
      <retval></retval>
    </method>
    <method selector="setCriteria:andDisplayValues:forRowAtIndex:">
      <arg name="criteria"></arg>
      <arg name="values"></arg>
      <arg name="rowIndex"></arg>
      <retval></retval>
    </method>
    <method selector="setCriteriaKeyPath:">
      <arg name="keyPath"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:">
      <arg name="delegate"></arg>
      <retval></retval>
    </method>
    <method selector="setDisplayValuesKeyPath:">
      <arg name="keyPath"></arg>
      <retval></retval>
    </method>
    <method selector="setEditable:">
      <arg name="editable"></arg>
      <retval></retval>
    </method>
    <method selector="setFormattingDictionary:">
      <arg name="dictionary"></arg>
      <retval></retval>
    </method>
    <method selector="setFormattingStringsFilename:">
      <arg name="stringsFilename"></arg>
      <retval></retval>
    </method>
    <method selector="setNestingMode:">
      <arg name="mode"></arg>
      <retval></retval>
    </method>
    <method selector="setRowClass:">
      <arg name="rowClass"></arg>
      <retval></retval>
    </method>
    <method selector="setRowHeight:">
      <arg name="height"></arg>
      <retval></retval>
    </method>
    <method selector="setRowTypeKeyPath:">
      <arg name="keyPath"></arg>
      <retval></retval>
    </method>
    <method selector="setSubrowsKeyPath:">
      <arg name="keyPath"></arg>
      <retval></retval>
    </method>
    <method selector="subrowIndexesForRow:">
      <arg name="rowIndex"></arg>
      <retval></retval>
    </method>
    <method selector="subrowsKeyPath">
      <retval></retval>
    </method>
  </class>
  <class name="NSRulerMarker">
    <method selector="drawRect:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="image">
      <retval></retval>
    </method>
    <method selector="imageOrigin">
      <retval></retval>
    </method>
    <method selector="imageRectInRuler">
      <retval></retval>
    </method>
    <method selector="initWithRulerView:markerLocation:image:imageOrigin:">
      <arg name="ruler"></arg>
      <arg name="location"></arg>
      <arg name="image"></arg>
      <arg name="imageOrigin"></arg>
      <retval></retval>
    </method>
    <method selector="isDragging">
      <retval></retval>
    </method>
    <method selector="isMovable">
      <retval></retval>
    </method>
    <method selector="isRemovable">
      <retval></retval>
    </method>
    <method selector="markerLocation">
      <retval></retval>
    </method>
    <method selector="representedObject">
      <retval></retval>
    </method>
    <method selector="ruler">
      <retval></retval>
    </method>
    <method selector="setImage:">
      <arg name="image"></arg>
      <retval></retval>
    </method>
    <method selector="setImageOrigin:">
      <arg name="imageOrigin"></arg>
      <retval></retval>
    </method>
    <method selector="setMarkerLocation:">
      <arg name="location"></arg>
      <retval></retval>
    </method>
    <method selector="setMovable:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setRemovable:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setRepresentedObject:">
      <arg name="representedObject"></arg>
      <retval></retval>
    </method>
    <method selector="thicknessRequiredInRuler">
      <retval></retval>
    </method>
    <method selector="trackMouse:adding:">
      <arg name="mouseDownEvent"></arg>
      <arg name="isAdding"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSRulerView" swt_superclass="NSView">
    <method selector="accessoryView">
      <retval></retval>
    </method>
    <method selector="addMarker:">
      <arg name="marker"></arg>
      <retval></retval>
    </method>
    <method selector="baselineLocation">
      <retval></retval>
    </method>
    <method selector="clientView">
      <retval></retval>
    </method>
    <method selector="drawHashMarksAndLabelsInRect:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="drawMarkersInRect:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="initWithScrollView:orientation:">
      <arg name="scrollView"></arg>
      <arg name="orientation"></arg>
      <retval></retval>
    </method>
    <method selector="invalidateHashMarks">
      <retval></retval>
    </method>
    <method selector="isFlipped">
      <retval></retval>
    </method>
    <method selector="markers">
      <retval></retval>
    </method>
    <method selector="measurementUnits">
      <retval></retval>
    </method>
    <method selector="moveRulerlineFromLocation:toLocation:">
      <arg name="oldLocation"></arg>
      <arg name="newLocation"></arg>
      <retval></retval>
    </method>
    <method selector="orientation">
      <retval></retval>
    </method>
    <method selector="originOffset">
      <retval></retval>
    </method>
    <method class_method="true" selector="registerUnitWithName:abbreviation:unitToPointsConversionFactor:stepUpCycle:stepDownCycle:">
      <arg name="unitName"></arg>
      <arg name="abbreviation"></arg>
      <arg name="conversionFactor"></arg>
      <arg name="stepUpCycle"></arg>
      <arg name="stepDownCycle"></arg>
      <retval></retval>
    </method>
    <method selector="removeMarker:">
      <arg name="marker"></arg>
      <retval></retval>
    </method>
    <method selector="requiredThickness">
      <retval></retval>
    </method>
    <method selector="reservedThicknessForAccessoryView">
      <retval></retval>
    </method>
    <method selector="reservedThicknessForMarkers">
      <retval></retval>
    </method>
    <method selector="ruleThickness">
      <retval></retval>
    </method>
    <method selector="scrollView">
      <retval></retval>
    </method>
    <method selector="setAccessoryView:">
      <arg name="accessory"></arg>
      <retval></retval>
    </method>
    <method selector="setClientView:">
      <arg name="client"></arg>
      <retval></retval>
    </method>
    <method selector="setMarkers:">
      <arg name="markers"></arg>
      <retval></retval>
    </method>
    <method selector="setMeasurementUnits:">
      <arg name="unitName"></arg>
      <retval></retval>
    </method>
    <method selector="setOrientation:">
      <arg name="orientation"></arg>
      <retval></retval>
    </method>
    <method selector="setOriginOffset:">
      <arg name="offset"></arg>
      <retval></retval>
    </method>
    <method selector="setReservedThicknessForAccessoryView:">
      <arg name="thickness"></arg>
      <retval></retval>
    </method>
    <method selector="setReservedThicknessForMarkers:">
      <arg name="thickness"></arg>
      <retval></retval>
    </method>
    <method selector="setRuleThickness:">
      <arg name="thickness"></arg>
      <retval></retval>
    </method>
    <method selector="setScrollView:">
      <arg name="scrollView"></arg>
      <retval></retval>
    </method>
    <method selector="trackMarker:withMouseEvent:">
      <arg name="marker"></arg>
      <arg name="event"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSSavePanel" swt_gen="mixed" swt_superclass="NSPanel">
    <method selector="URL">
      <retval></retval>
    </method>
    <method selector="accessoryView">
      <retval></retval>
    </method>
    <method selector="allowedFileTypes">
      <retval></retval>
    </method>
    <method selector="allowsOtherFileTypes">
      <retval></retval>
    </method>
    <method selector="beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:contextInfo:">
      <arg name="path"></arg>
      <arg name="name"></arg>
      <arg name="docWindow"></arg>
      <arg name="delegate"></arg>
      <arg name="didEndSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="canCreateDirectories">
      <retval></retval>
    </method>
    <method selector="canSelectHiddenExtension">
      <retval></retval>
    </method>
    <method selector="cancel:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="directory">
      <retval></retval>
    </method>
    <method selector="filename" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isExpanded">
      <retval></retval>
    </method>
    <method selector="isExtensionHidden">
      <retval></retval>
    </method>
    <method selector="message">
      <retval></retval>
    </method>
    <method selector="nameFieldLabel">
      <retval></retval>
    </method>
    <method selector="ok:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="prompt">
      <retval></retval>
    </method>
    <method selector="requiredFileType">
      <retval></retval>
    </method>
    <method selector="runModal" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="runModalForDirectory:file:">
      <arg name="path"></arg>
      <arg name="name"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="savePanel" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectText:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="setAccessoryView:">
      <arg name="view"></arg>
      <retval></retval>
    </method>
    <method selector="setAllowedFileTypes:">
      <arg name="types"></arg>
      <retval></retval>
    </method>
    <method selector="setAllowsOtherFileTypes:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setCanCreateDirectories:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCanSelectHiddenExtension:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:">
      <arg name="delegate"></arg>
      <retval></retval>
    </method>
    <method selector="setDirectory:" swt_gen="true">
      <arg name="path" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setExtensionHidden:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setMessage:">
      <arg name="message"></arg>
      <retval></retval>
    </method>
    <method selector="setNameFieldLabel:">
      <arg name="label"></arg>
      <retval></retval>
    </method>
    <method selector="setPrompt:">
      <arg name="prompt"></arg>
      <retval></retval>
    </method>
    <method selector="setRequiredFileType:">
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="setTitle:" swt_gen="true">
      <arg name="title" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTreatsFilePackagesAsDirectories:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="title">
      <retval></retval>
    </method>
    <method selector="treatsFilePackagesAsDirectories">
      <retval></retval>
    </method>
    <method selector="validateVisibleColumns">
      <retval></retval>
    </method>
  </class>
  <class name="NSScreen" swt_gen="mixed">
    <method class_method="true" selector="deepestScreen">
      <retval></retval>
    </method>
    <method selector="depth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deviceDescription" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="frame" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="mainScreen" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="screens" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="supportedWindowDepths">
      <retval></retval>
    </method>
    <method selector="userSpaceScaleFactor">
      <retval></retval>
    </method>
    <method selector="visibleFrame" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSScrollView" swt_gen="mixed" swt_superclass="NSView">
    <method selector="autohidesScrollers">
      <retval></retval>
    </method>
    <method selector="backgroundColor">
      <retval></retval>
    </method>
    <method selector="borderType">
      <retval></retval>
    </method>
    <method selector="contentSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="contentSizeForFrameSize:hasHorizontalScroller:hasVerticalScroller:borderType:" swt_gen="true">
      <arg name="fSize" swt_gen="true"></arg>
      <arg name="hFlag" swt_gen="true"></arg>
      <arg name="vFlag" swt_gen="true"></arg>
      <arg name="aType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="contentView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="documentCursor">
      <retval></retval>
    </method>
    <method selector="documentView" swt_gen="true">
      <retval swt_gen="true" swt_java_type="NSView"></retval>
    </method>
    <method selector="documentVisibleRect" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawsBackground">
      <retval></retval>
    </method>
    <method class_method="true" selector="frameSizeForContentSize:hasHorizontalScroller:hasVerticalScroller:borderType:" swt_gen="true">
      <arg name="cSize" swt_gen="true"></arg>
      <arg name="hFlag" swt_gen="true"></arg>
      <arg name="vFlag" swt_gen="true"></arg>
      <arg name="aType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hasHorizontalRuler">
      <retval></retval>
    </method>
    <method selector="hasHorizontalScroller">
      <retval></retval>
    </method>
    <method selector="hasVerticalRuler">
      <retval></retval>
    </method>
    <method selector="hasVerticalScroller">
      <retval></retval>
    </method>
    <method selector="horizontalLineScroll">
      <retval></retval>
    </method>
    <method selector="horizontalPageScroll">
      <retval></retval>
    </method>
    <method selector="horizontalRulerView">
      <retval></retval>
    </method>
    <method selector="horizontalScroller">
      <retval></retval>
    </method>
    <method selector="lineScroll">
      <retval></retval>
    </method>
    <method selector="pageScroll">
      <retval></retval>
    </method>
    <method selector="reflectScrolledClipView:" swt_gen="true">
      <arg name="cView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="rulerViewClass">
      <retval></retval>
    </method>
    <method selector="rulersVisible">
      <retval></retval>
    </method>
    <method selector="scrollWheel:">
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method selector="scrollsDynamically">
      <retval></retval>
    </method>
    <method selector="setAutohidesScrollers:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundColor:">
      <arg name="color"></arg>
      <retval></retval>
    </method>
    <method selector="setBorderType:" swt_gen="true">
      <arg name="aType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setContentView:">
      <arg name="contentView"></arg>
      <retval></retval>
    </method>
    <method selector="setDocumentCursor:">
      <arg name="anObj"></arg>
      <retval></retval>
    </method>
    <method selector="setDocumentView:" swt_gen="true">
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDrawsBackground:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHasHorizontalRuler:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setHasHorizontalScroller:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHasVerticalRuler:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setHasVerticalScroller:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHorizontalLineScroll:">
      <arg name="value"></arg>
      <retval></retval>
    </method>
    <method selector="setHorizontalPageScroll:">
      <arg name="value"></arg>
      <retval></retval>
    </method>
    <method selector="setHorizontalRulerView:">
      <arg name="ruler"></arg>
      <retval></retval>
    </method>
    <method selector="setHorizontalScroller:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setLineScroll:">
      <arg name="value"></arg>
      <retval></retval>
    </method>
    <method selector="setPageScroll:">
      <arg name="value"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="setRulerViewClass:">
      <arg name="rulerViewClass"></arg>
      <retval></retval>
    </method>
    <method selector="setRulersVisible:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setScrollsDynamically:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setVerticalLineScroll:">
      <arg name="value"></arg>
      <retval></retval>
    </method>
    <method selector="setVerticalPageScroll:">
      <arg name="value"></arg>
      <retval></retval>
    </method>
    <method selector="setVerticalRulerView:">
      <arg name="ruler"></arg>
      <retval></retval>
    </method>
    <method selector="setVerticalScroller:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tile">
      <retval></retval>
    </method>
    <method selector="verticalLineScroll">
      <retval></retval>
    </method>
    <method selector="verticalPageScroll">
      <retval></retval>
    </method>
    <method selector="verticalRulerView">
      <retval></retval>
    </method>
    <method selector="verticalScroller">
      <retval></retval>
    </method>
  </class>
  <class name="NSScroller" swt_gen="mixed" swt_superclass="NSControl">
    <method selector="arrowsPosition">
      <retval></retval>
    </method>
    <method selector="checkSpaceForParts">
      <retval></retval>
    </method>
    <method selector="controlSize">
      <retval></retval>
    </method>
    <method selector="controlTint">
      <retval></retval>
    </method>
    <method selector="drawArrow:highlight:">
      <arg name="whichArrow"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="drawKnob">
      <retval></retval>
    </method>
    <method selector="drawKnobSlotInRect:highlight:">
      <arg name="slotRect"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="drawParts">
      <retval></retval>
    </method>
    <method selector="highlight:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="hitPart" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="knobProportion">
      <retval></retval>
    </method>
    <method selector="rectForPart:">
      <arg name="partCode"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="scrollerWidth" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="scrollerWidthForControlSize:">
      <arg name="controlSize"></arg>
      <retval></retval>
    </method>
    <method selector="setArrowsPosition:">
      <arg name="where"></arg>
      <retval></retval>
    </method>
    <method selector="setControlSize:">
      <arg name="controlSize"></arg>
      <retval></retval>
    </method>
    <method selector="setControlTint:">
      <arg name="controlTint"></arg>
      <retval></retval>
    </method>
    <method selector="setFloatValue:knobProportion:" swt_gen="true">
      <arg name="aFloat" swt_gen="true"></arg>
      <arg name="proportion" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setKnobProportion:">
      <arg name="proportion"></arg>
      <retval></retval>
    </method>
    <method selector="testPart:">
      <arg name="thePoint"></arg>
      <retval></retval>
    </method>
    <method selector="trackKnob:">
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method selector="trackScrollButtons:">
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method selector="usableParts">
      <retval></retval>
    </method>
  </class>
  <class name="NSSearchField" swt_gen="mixed" swt_superclass="NSTextField">
    <method selector="recentSearches" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="recentsAutosaveName">
      <retval></retval>
    </method>
    <method selector="setRecentSearches:">
      <arg name="searches"></arg>
      <retval></retval>
    </method>
    <method selector="setRecentsAutosaveName:">
      <arg name="string"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSSearchFieldCell" swt_superclass="NSTextFieldCell">
    <method selector="cancelButtonCell">
      <retval></retval>
    </method>
    <method selector="cancelButtonRectForBounds:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="maximumRecents">
      <retval></retval>
    </method>
    <method selector="recentSearches">
      <retval></retval>
    </method>
    <method selector="recentsAutosaveName">
      <retval></retval>
    </method>
    <method selector="resetCancelButtonCell">
      <retval></retval>
    </method>
    <method selector="resetSearchButtonCell">
      <retval></retval>
    </method>
    <method selector="searchButtonCell">
      <retval></retval>
    </method>
    <method selector="searchButtonRectForBounds:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="searchMenuTemplate">
      <retval></retval>
    </method>
    <method selector="searchTextRectForBounds:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="sendsSearchStringImmediately">
      <retval></retval>
    </method>
    <method selector="sendsWholeSearchString">
      <retval></retval>
    </method>
    <method selector="setCancelButtonCell:">
      <arg name="cell"></arg>
      <retval></retval>
    </method>
    <method selector="setMaximumRecents:">
      <arg name="maxRecents"></arg>
      <retval></retval>
    </method>
    <method selector="setRecentSearches:">
      <arg name="searches"></arg>
      <retval></retval>
    </method>
    <method selector="setRecentsAutosaveName:">
      <arg name="string"></arg>
      <retval></retval>
    </method>
    <method selector="setSearchButtonCell:">
      <arg name="cell"></arg>
      <retval></retval>
    </method>
    <method selector="setSearchMenuTemplate:">
      <arg name="menu"></arg>
      <retval></retval>
    </method>
    <method selector="setSendsSearchStringImmediately:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setSendsWholeSearchString:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSSecureTextFieldCell" swt_superclass="NSTextFieldCell">
    <method selector="echosBullets">
      <retval></retval>
    </method>
    <method selector="setEchosBullets:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSSegmentedCell" swt_superclass="NSActionCell">
    <method selector="drawSegment:inFrame:withView:">
      <arg name="segment"></arg>
      <arg name="frame"></arg>
      <arg name="controlView"></arg>
      <retval></retval>
    </method>
    <method selector="imageForSegment:">
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="imageScalingForSegment:">
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="interiorBackgroundStyleForSegment:">
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="isEnabledForSegment:">
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="isSelectedForSegment:">
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="labelForSegment:">
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="makeNextSegmentKey">
      <retval></retval>
    </method>
    <method selector="makePreviousSegmentKey">
      <retval></retval>
    </method>
    <method selector="menuForSegment:">
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="segmentCount">
      <retval></retval>
    </method>
    <method selector="segmentStyle">
      <retval></retval>
    </method>
    <method selector="selectSegmentWithTag:">
      <arg name="tag"></arg>
      <retval></retval>
    </method>
    <method selector="selectedSegment">
      <retval></retval>
    </method>
    <method selector="setEnabled:forSegment:">
      <arg name="enabled"></arg>
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="setImage:forSegment:">
      <arg name="image"></arg>
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="setImageScaling:forSegment:">
      <arg name="scaling"></arg>
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="setLabel:forSegment:">
      <arg name="label"></arg>
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="setMenu:forSegment:">
      <arg name="menu"></arg>
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="setSegmentCount:">
      <arg name="count"></arg>
      <retval></retval>
    </method>
    <method selector="setSegmentStyle:">
      <arg name="segmentStyle"></arg>
      <retval></retval>
    </method>
    <method selector="setSelected:forSegment:">
      <arg name="selected"></arg>
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectedSegment:">
      <arg name="selectedSegment"></arg>
      <retval></retval>
    </method>
    <method selector="setTag:forSegment:">
      <arg name="tag"></arg>
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="setToolTip:forSegment:">
      <arg name="toolTip"></arg>
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="setTrackingMode:">
      <arg name="trackingMode"></arg>
      <retval></retval>
    </method>
    <method selector="setWidth:forSegment:">
      <arg name="width"></arg>
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="tagForSegment:">
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="toolTipForSegment:">
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="trackingMode">
      <retval></retval>
    </method>
    <method selector="widthForSegment:">
      <arg name="segment"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSSegmentedControl" swt_superclass="NSControl">
    <method selector="imageForSegment:">
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="imageScalingForSegment:">
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="isEnabledForSegment:">
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="isSelectedForSegment:">
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="labelForSegment:">
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="menuForSegment:">
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="segmentCount">
      <retval></retval>
    </method>
    <method selector="segmentStyle">
      <retval></retval>
    </method>
    <method selector="selectSegmentWithTag:">
      <arg name="tag"></arg>
      <retval></retval>
    </method>
    <method selector="selectedSegment">
      <retval></retval>
    </method>
    <method selector="setEnabled:forSegment:">
      <arg name="enabled"></arg>
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="setImage:forSegment:">
      <arg name="image"></arg>
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="setImageScaling:forSegment:">
      <arg name="scaling"></arg>
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="setLabel:forSegment:">
      <arg name="label"></arg>
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="setMenu:forSegment:">
      <arg name="menu"></arg>
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="setSegmentCount:">
      <arg name="count"></arg>
      <retval></retval>
    </method>
    <method selector="setSegmentStyle:">
      <arg name="segmentStyle"></arg>
      <retval></retval>
    </method>
    <method selector="setSelected:forSegment:">
      <arg name="selected"></arg>
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectedSegment:">
      <arg name="selectedSegment"></arg>
      <retval></retval>
    </method>
    <method selector="setWidth:forSegment:">
      <arg name="width"></arg>
      <arg name="segment"></arg>
      <retval></retval>
    </method>
    <method selector="widthForSegment:">
      <arg name="segment"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSShadow">
    <method selector="init">
      <retval></retval>
    </method>
    <method selector="set">
      <retval></retval>
    </method>
    <method selector="setShadowBlurRadius:">
      <arg name="val"></arg>
      <retval></retval>
    </method>
    <method selector="setShadowColor:">
      <arg name="color"></arg>
      <retval></retval>
    </method>
    <method selector="setShadowOffset:">
      <arg name="offset"></arg>
      <retval></retval>
    </method>
    <method selector="shadowBlurRadius">
      <retval></retval>
    </method>
    <method selector="shadowColor">
      <retval></retval>
    </method>
    <method selector="shadowOffset">
      <retval></retval>
    </method>
  </class>
  <class name="NSSlider" swt_gen="mixed" swt_superclass="NSControl">
    <method selector="acceptsFirstMouse:">
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method selector="allowsTickMarkValuesOnly">
      <retval></retval>
    </method>
    <method selector="altIncrementValue">
      <retval></retval>
    </method>
    <method selector="closestTickMarkValueToValue:">
      <arg name="value"></arg>
      <retval></retval>
    </method>
    <method selector="image">
      <retval></retval>
    </method>
    <method selector="indexOfTickMarkAtPoint:">
      <arg name="point"></arg>
      <retval></retval>
    </method>
    <method selector="isVertical">
      <retval></retval>
    </method>
    <method selector="knobThickness">
      <retval></retval>
    </method>
    <method selector="maxValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfTickMarks">
      <retval></retval>
    </method>
    <method selector="rectOfTickMarkAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="setAllowsTickMarkValuesOnly:">
      <arg name="yorn"></arg>
      <retval></retval>
    </method>
    <method selector="setAltIncrementValue:">
      <arg name="incValue"></arg>
      <retval></retval>
    </method>
    <method selector="setImage:">
      <arg name="backgroundImage"></arg>
      <retval></retval>
    </method>
    <method selector="setKnobThickness:">
      <arg name="aFloat"></arg>
      <retval></retval>
    </method>
    <method selector="setMaxValue:" swt_gen="true">
      <arg name="aDouble" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinValue:" swt_gen="true">
      <arg name="aDouble" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNumberOfTickMarks:">
      <arg name="count"></arg>
      <retval></retval>
    </method>
    <method selector="setTickMarkPosition:">
      <arg name="position"></arg>
      <retval></retval>
    </method>
    <method selector="setTitle:">
      <arg name="aString"></arg>
      <retval></retval>
    </method>
    <method selector="setTitleCell:">
      <arg name="aCell"></arg>
      <retval></retval>
    </method>
    <method selector="setTitleColor:">
      <arg name="newColor"></arg>
      <retval></retval>
    </method>
    <method selector="setTitleFont:">
      <arg name="fontObj"></arg>
      <retval></retval>
    </method>
    <method selector="tickMarkPosition">
      <retval></retval>
    </method>
    <method selector="tickMarkValueAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="title">
      <retval></retval>
    </method>
    <method selector="titleCell">
      <retval></retval>
    </method>
    <method selector="titleColor">
      <retval></retval>
    </method>
    <method selector="titleFont">
      <retval></retval>
    </method>
  </class>
  <class name="NSSliderCell" swt_superclass="NSActionCell">
    <method selector="allowsTickMarkValuesOnly">
      <retval></retval>
    </method>
    <method selector="altIncrementValue">
      <retval></retval>
    </method>
    <method selector="closestTickMarkValueToValue:">
      <arg name="value"></arg>
      <retval></retval>
    </method>
    <method selector="drawBarInside:flipped:">
      <arg name="aRect"></arg>
      <arg name="flipped"></arg>
      <retval></retval>
    </method>
    <method selector="drawKnob">
      <retval></retval>
    </method>
    <method selector="drawKnob:">
      <arg name="knobRect"></arg>
      <retval></retval>
    </method>
    <method selector="indexOfTickMarkAtPoint:">
      <arg name="point"></arg>
      <retval></retval>
    </method>
    <method selector="isVertical">
      <retval></retval>
    </method>
    <method selector="knobRectFlipped:">
      <arg name="flipped"></arg>
      <retval></retval>
    </method>
    <method selector="knobThickness">
      <retval></retval>
    </method>
    <method selector="maxValue">
      <retval></retval>
    </method>
    <method selector="minValue">
      <retval></retval>
    </method>
    <method selector="numberOfTickMarks">
      <retval></retval>
    </method>
    <method class_method="true" selector="prefersTrackingUntilMouseUp">
      <retval></retval>
    </method>
    <method selector="rectOfTickMarkAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="setAllowsTickMarkValuesOnly:">
      <arg name="yorn"></arg>
      <retval></retval>
    </method>
    <method selector="setAltIncrementValue:">
      <arg name="incValue"></arg>
      <retval></retval>
    </method>
    <method selector="setKnobThickness:">
      <arg name="aFloat"></arg>
      <retval></retval>
    </method>
    <method selector="setMaxValue:">
      <arg name="aDouble"></arg>
      <retval></retval>
    </method>
    <method selector="setMinValue:">
      <arg name="aDouble"></arg>
      <retval></retval>
    </method>
    <method selector="setNumberOfTickMarks:">
      <arg name="count"></arg>
      <retval></retval>
    </method>
    <method selector="setSliderType:">
      <arg name="sliderType"></arg>
      <retval></retval>
    </method>
    <method selector="setTickMarkPosition:">
      <arg name="position"></arg>
      <retval></retval>
    </method>
    <method selector="setTitle:">
      <arg name="aString"></arg>
      <retval></retval>
    </method>
    <method selector="setTitleCell:">
      <arg name="aCell"></arg>
      <retval></retval>
    </method>
    <method selector="setTitleColor:">
      <arg name="newColor"></arg>
      <retval></retval>
    </method>
    <method selector="setTitleFont:">
      <arg name="fontObj"></arg>
      <retval></retval>
    </method>
    <method selector="sliderType">
      <retval></retval>
    </method>
    <method selector="tickMarkPosition">
      <retval></retval>
    </method>
    <method selector="tickMarkValueAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="title">
      <retval></retval>
    </method>
    <method selector="titleCell">
      <retval></retval>
    </method>
    <method selector="titleColor">
      <retval></retval>
    </method>
    <method selector="titleFont">
      <retval></retval>
    </method>
    <method selector="trackRect">
      <retval></retval>
    </method>
  </class>
  <class name="NSSound">
    <method class_method="true" selector="canInitWithPasteboard:">
      <arg name="pasteboard"></arg>
      <retval></retval>
    </method>
    <method selector="channelMapping">
      <retval></retval>
    </method>
    <method selector="currentTime">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="duration">
      <retval></retval>
    </method>
    <method selector="initWithContentsOfFile:byReference:">
      <arg name="path"></arg>
      <arg name="byRef"></arg>
      <retval></retval>
    </method>
    <method selector="initWithContentsOfURL:byReference:">
      <arg name="url"></arg>
      <arg name="byRef"></arg>
      <retval></retval>
    </method>
    <method selector="initWithData:">
      <arg name="data"></arg>
      <retval></retval>
    </method>
    <method selector="initWithPasteboard:">
      <arg name="pasteboard"></arg>
      <retval></retval>
    </method>
    <method selector="isPlaying">
      <retval></retval>
    </method>
    <method selector="loops">
      <retval></retval>
    </method>
    <method selector="name">
      <retval></retval>
    </method>
    <method selector="pause">
      <retval></retval>
    </method>
    <method selector="play">
      <retval></retval>
    </method>
    <method selector="playbackDeviceIdentifier">
      <retval></retval>
    </method>
    <method selector="resume">
      <retval></retval>
    </method>
    <method selector="setChannelMapping:">
      <arg name="channelMapping"></arg>
      <retval></retval>
    </method>
    <method selector="setCurrentTime:">
      <arg name="seconds"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:">
      <arg name="aDelegate"></arg>
      <retval></retval>
    </method>
    <method selector="setLoops:">
      <arg name="val"></arg>
      <retval></retval>
    </method>
    <method selector="setName:">
      <arg name="string"></arg>
      <retval></retval>
    </method>
    <method selector="setPlaybackDeviceIdentifier:">
      <arg name="deviceUID"></arg>
      <retval></retval>
    </method>
    <method selector="setVolume:">
      <arg name="volume"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="soundNamed:">
      <arg name="name"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="soundUnfilteredFileTypes">
      <retval></retval>
    </method>
    <method class_method="true" selector="soundUnfilteredPasteboardTypes">
      <retval></retval>
    </method>
    <method class_method="true" selector="soundUnfilteredTypes">
      <retval></retval>
    </method>
    <method selector="stop">
      <retval></retval>
    </method>
    <method selector="volume">
      <retval></retval>
    </method>
    <method selector="writeToPasteboard:">
      <arg name="pasteboard"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSSpeechRecognizer">
    <method selector="blocksOtherRecognizers">
      <retval></retval>
    </method>
    <method selector="commands">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="displayedCommandsTitle">
      <retval></retval>
    </method>
    <method selector="init">
      <retval></retval>
    </method>
    <method selector="listensInForegroundOnly">
      <retval></retval>
    </method>
    <method selector="setBlocksOtherRecognizers:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setCommands:">
      <arg name="commands"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:">
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
    <method selector="setDisplayedCommandsTitle:">
      <arg name="title"></arg>
      <retval></retval>
    </method>
    <method selector="setListensInForegroundOnly:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="startListening">
      <retval></retval>
    </method>
    <method selector="stopListening">
      <retval></retval>
    </method>
  </class>
  <class name="NSSpeechSynthesizer">
    <method selector="addSpeechDictionary:">
      <arg name="speechDictionary"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="attributesForVoice:">
      <arg name="voice"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="availableVoices">
      <retval></retval>
    </method>
    <method selector="continueSpeaking">
      <retval></retval>
    </method>
    <method class_method="true" selector="defaultVoice">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="initWithVoice:">
      <arg name="voice"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="isAnyApplicationSpeaking">
      <retval></retval>
    </method>
    <method selector="isSpeaking">
      <retval></retval>
    </method>
    <method selector="objectForProperty:error:">
      <arg name="property"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="pauseSpeakingAtBoundary:">
      <arg name="boundary"></arg>
      <retval></retval>
    </method>
    <method selector="phonemesFromText:">
      <arg name="text"></arg>
      <retval></retval>
    </method>
    <method selector="rate">
      <retval></retval>
    </method>
    <method selector="setDelegate:">
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
    <method selector="setObject:forProperty:error:">
      <arg name="object"></arg>
      <arg name="property"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="setRate:">
      <arg name="rate"></arg>
      <retval></retval>
    </method>
    <method selector="setUsesFeedbackWindow:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setVoice:">
      <arg name="voice"></arg>
      <retval></retval>
    </method>
    <method selector="setVolume:">
      <arg name="volume"></arg>
      <retval></retval>
    </method>
    <method selector="startSpeakingString:">
      <arg name="string"></arg>
      <retval></retval>
    </method>
    <method selector="startSpeakingString:toURL:">
      <arg name="string"></arg>
      <arg name="url"></arg>
      <retval></retval>
    </method>
    <method selector="stopSpeaking">
      <retval></retval>
    </method>
    <method selector="stopSpeakingAtBoundary:">
      <arg name="boundary"></arg>
      <retval></retval>
    </method>
    <method selector="usesFeedbackWindow">
      <retval></retval>
    </method>
    <method selector="voice">
      <retval></retval>
    </method>
    <method selector="volume">
      <retval></retval>
    </method>
  </class>
  <class name="NSSpellChecker">
    <method selector="accessoryView">
      <retval></retval>
    </method>
    <method selector="availableLanguages">
      <retval></retval>
    </method>
    <method selector="checkGrammarOfString:startingAt:language:wrap:inSpellDocumentWithTag:details:">
      <arg name="stringToCheck"></arg>
      <arg name="startingOffset"></arg>
      <arg name="language"></arg>
      <arg name="wrapFlag"></arg>
      <arg name="tag"></arg>
      <arg name="details"></arg>
      <retval></retval>
    </method>
    <method selector="checkSpellingOfString:startingAt:">
      <arg name="stringToCheck"></arg>
      <arg name="startingOffset"></arg>
      <retval></retval>
    </method>
    <method selector="checkSpellingOfString:startingAt:language:wrap:inSpellDocumentWithTag:wordCount:">
      <arg name="stringToCheck"></arg>
      <arg name="startingOffset"></arg>
      <arg name="language"></arg>
      <arg name="wrapFlag"></arg>
      <arg name="tag"></arg>
      <arg name="wordCount"></arg>
      <retval></retval>
    </method>
    <method selector="closeSpellDocumentWithTag:">
      <arg name="tag"></arg>
      <retval></retval>
    </method>
    <method selector="completionsForPartialWordRange:inString:language:inSpellDocumentWithTag:">
      <arg name="range"></arg>
      <arg name="string"></arg>
      <arg name="language"></arg>
      <arg name="tag"></arg>
      <retval></retval>
    </method>
    <method selector="countWordsInString:language:">
      <arg name="stringToCount"></arg>
      <arg name="language"></arg>
      <retval></retval>
    </method>
    <method selector="forgetWord:">
      <arg name="word"></arg>
      <retval></retval>
    </method>
    <method selector="guessesForWord:">
      <arg name="word"></arg>
      <retval></retval>
    </method>
    <method selector="hasLearnedWord:">
      <arg name="word"></arg>
      <retval></retval>
    </method>
    <method selector="ignoreWord:inSpellDocumentWithTag:">
      <arg name="wordToIgnore"></arg>
      <arg name="tag"></arg>
      <retval></retval>
    </method>
    <method selector="ignoredWordsInSpellDocumentWithTag:">
      <arg name="tag"></arg>
      <retval></retval>
    </method>
    <method selector="language">
      <retval></retval>
    </method>
    <method selector="learnWord:">
      <arg name="word"></arg>
      <retval></retval>
    </method>
    <method selector="setAccessoryView:">
      <arg name="aView"></arg>
      <retval></retval>
    </method>
    <method selector="setIgnoredWords:inSpellDocumentWithTag:">
      <arg name="words"></arg>
      <arg name="tag"></arg>
      <retval></retval>
    </method>
    <method selector="setLanguage:">
      <arg name="language"></arg>
      <retval></retval>
    </method>
    <method selector="setWordFieldStringValue:">
      <arg name="aString"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="sharedSpellChecker">
      <retval></retval>
    </method>
    <method class_method="true" selector="sharedSpellCheckerExists">
      <retval></retval>
    </method>
    <method selector="spellingPanel">
      <retval></retval>
    </method>
    <method class_method="true" selector="uniqueSpellDocumentTag">
      <retval></retval>
    </method>
    <method selector="unlearnWord:">
      <arg name="word"></arg>
      <retval></retval>
    </method>
    <method selector="updateSpellingPanelWithGrammarString:detail:">
      <arg name="string"></arg>
      <arg name="detail"></arg>
      <retval></retval>
    </method>
    <method selector="updateSpellingPanelWithMisspelledWord:">
      <arg name="word"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSSplitView" swt_superclass="NSView">
    <method selector="adjustSubviews">
      <retval></retval>
    </method>
    <method selector="autosaveName">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="dividerColor">
      <retval></retval>
    </method>
    <method selector="dividerStyle">
      <retval></retval>
    </method>
    <method selector="dividerThickness">
      <retval></retval>
    </method>
    <method selector="drawDividerInRect:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="isPaneSplitter">
      <retval></retval>
    </method>
    <method selector="isSubviewCollapsed:">
      <arg name="subview"></arg>
      <retval></retval>
    </method>
    <method selector="isVertical">
      <retval></retval>
    </method>
    <method selector="maxPossiblePositionOfDividerAtIndex:">
      <arg name="dividerIndex"></arg>
      <retval></retval>
    </method>
    <method selector="minPossiblePositionOfDividerAtIndex:">
      <arg name="dividerIndex"></arg>
      <retval></retval>
    </method>
    <method selector="setAutosaveName:">
      <arg name="autosaveName"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:">
      <arg name="delegate"></arg>
      <retval></retval>
    </method>
    <method selector="setDividerStyle:">
      <arg name="dividerStyle"></arg>
      <retval></retval>
    </method>
    <method selector="setIsPaneSplitter:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setPosition:ofDividerAtIndex:">
      <arg name="position"></arg>
      <arg name="dividerIndex"></arg>
      <retval></retval>
    </method>
    <method selector="setVertical:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSStatusBar" swt_gen="mixed">
    <method selector="isVertical">
      <retval></retval>
    </method>
    <method selector="removeStatusItem:" swt_gen="true">
      <arg name="item" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="statusItemWithLength:" swt_gen="true">
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="systemStatusBar" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="thickness">
      <retval></retval>
    </method>
  </class>
  <class name="NSStatusItem" swt_gen="mixed">
    <method selector="action">
      <retval></retval>
    </method>
    <method selector="alternateImage">
      <retval></retval>
    </method>
    <method selector="attributedTitle">
      <retval></retval>
    </method>
    <method selector="doubleAction">
      <retval></retval>
    </method>
    <method selector="drawStatusBarBackgroundInRect:withHighlight:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <arg name="highlight" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="highlightMode">
      <retval></retval>
    </method>
    <method selector="image">
      <retval></retval>
    </method>
    <method selector="isEnabled">
      <retval></retval>
    </method>
    <method selector="length">
      <retval></retval>
    </method>
    <method selector="menu">
      <retval></retval>
    </method>
    <method selector="popUpStatusItemMenu:">
      <arg name="menu"></arg>
      <retval></retval>
    </method>
    <method selector="sendActionOn:">
      <arg name="mask"></arg>
      <retval></retval>
    </method>
    <method selector="setAction:">
      <arg name="action"></arg>
      <retval></retval>
    </method>
    <method selector="setAlternateImage:">
      <arg name="image"></arg>
      <retval></retval>
    </method>
    <method selector="setAttributedTitle:">
      <arg name="title"></arg>
      <retval></retval>
    </method>
    <method selector="setDoubleAction:">
      <arg name="action"></arg>
      <retval></retval>
    </method>
    <method selector="setEnabled:">
      <arg name="enabled"></arg>
      <retval></retval>
    </method>
    <method selector="setHighlightMode:" swt_gen="true">
      <arg name="highlightMode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImage:">
      <arg name="image"></arg>
      <retval></retval>
    </method>
    <method selector="setLength:" swt_gen="true">
      <arg name="length" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMenu:">
      <arg name="menu"></arg>
      <retval></retval>
    </method>
    <method selector="setTarget:">
      <arg name="target"></arg>
      <retval></retval>
    </method>
    <method selector="setTitle:">
      <arg name="title"></arg>
      <retval></retval>
    </method>
    <method selector="setToolTip:">
      <arg name="toolTip"></arg>
      <retval></retval>
    </method>
    <method selector="setView:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="statusBar">
      <retval></retval>
    </method>
    <method selector="target">
      <retval></retval>
    </method>
    <method selector="title">
      <retval></retval>
    </method>
    <method selector="toolTip">
      <retval></retval>
    </method>
    <method selector="view">
      <retval></retval>
    </method>
  </class>
  <class name="NSStepper" swt_gen="mixed" swt_superclass="NSControl">
    <method selector="autorepeat">
      <retval></retval>
    </method>
    <method selector="increment" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="maxValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutorepeat:">
      <arg name="autorepeat"></arg>
      <retval></retval>
    </method>
    <method selector="setIncrement:" swt_gen="true">
      <arg name="increment" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxValue:" swt_gen="true">
      <arg name="maxValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinValue:" swt_gen="true">
      <arg name="minValue" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setValueWraps:" swt_gen="true">
      <arg name="valueWraps" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="valueWraps">
      <retval></retval>
    </method>
  </class>
  <class name="NSStepperCell" swt_superclass="NSActionCell">
    <method selector="autorepeat">
      <retval></retval>
    </method>
    <method selector="increment">
      <retval></retval>
    </method>
    <method selector="maxValue">
      <retval></retval>
    </method>
    <method selector="minValue">
      <retval></retval>
    </method>
    <method selector="setAutorepeat:">
      <arg name="autorepeat"></arg>
      <retval></retval>
    </method>
    <method selector="setIncrement:">
      <arg name="increment"></arg>
      <retval></retval>
    </method>
    <method selector="setMaxValue:">
      <arg name="maxValue"></arg>
      <retval></retval>
    </method>
    <method selector="setMinValue:">
      <arg name="minValue"></arg>
      <retval></retval>
    </method>
    <method selector="setValueWraps:">
      <arg name="valueWraps"></arg>
      <retval></retval>
    </method>
    <method selector="valueWraps">
      <retval></retval>
    </method>
  </class>
  <class name="NSString">
    <method selector="boundingRectWithSize:options:attributes:">
      <arg name="size"></arg>
      <arg name="options"></arg>
      <arg name="attributes"></arg>
      <retval></retval>
    </method>
    <method selector="drawAtPoint:withAttributes:">
      <arg name="point"></arg>
      <arg name="attrs"></arg>
      <retval></retval>
    </method>
    <method selector="drawInRect:withAttributes:">
      <arg name="rect"></arg>
      <arg name="attrs"></arg>
      <retval></retval>
    </method>
    <method selector="drawWithRect:options:attributes:">
      <arg name="rect"></arg>
      <arg name="options"></arg>
      <arg name="attributes"></arg>
      <retval></retval>
    </method>
    <method selector="sizeWithAttributes:">
      <arg name="attrs"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSTabView" swt_gen="mixed" swt_superclass="NSView">
    <method selector="addTabViewItem:" swt_gen="true">
      <arg name="tabViewItem" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsTruncatedLabels">
      <retval></retval>
    </method>
    <method selector="contentRect" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="controlSize">
      <retval></retval>
    </method>
    <method selector="controlTint">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="drawsBackground">
      <retval></retval>
    </method>
    <method selector="font">
      <retval></retval>
    </method>
    <method selector="indexOfTabViewItem:">
      <arg name="tabViewItem"></arg>
      <retval></retval>
    </method>
    <method selector="indexOfTabViewItemWithIdentifier:">
      <arg name="identifier"></arg>
      <retval></retval>
    </method>
    <method selector="insertTabViewItem:atIndex:" swt_gen="true">
      <arg name="tabViewItem" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="minimumSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfTabViewItems">
      <retval></retval>
    </method>
    <method selector="removeTabViewItem:" swt_gen="true">
      <arg name="tabViewItem" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectFirstTabViewItem:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="selectLastTabViewItem:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="selectNextTabViewItem:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="selectPreviousTabViewItem:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="selectTabViewItem:">
      <arg name="tabViewItem"></arg>
      <retval></retval>
    </method>
    <method selector="selectTabViewItemAtIndex:" swt_gen="true">
      <arg name="index" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectTabViewItemWithIdentifier:">
      <arg name="identifier"></arg>
      <retval></retval>
    </method>
    <method selector="selectedTabViewItem" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsTruncatedLabels:">
      <arg name="allowTruncatedLabels"></arg>
      <retval></retval>
    </method>
    <method selector="setControlSize:">
      <arg name="controlSize"></arg>
      <retval></retval>
    </method>
    <method selector="setControlTint:">
      <arg name="controlTint"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDrawsBackground:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setFont:" swt_gen="true">
      <arg name="font" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTabViewType:" swt_gen="true">
      <arg name="tabViewType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tabViewItemAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="tabViewItemAtPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tabViewItems">
      <retval></retval>
    </method>
    <method selector="tabViewType">
      <retval></retval>
    </method>
    <method selector="takeSelectedTabViewItemFromSender:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSTabViewItem" swt_gen="mixed">
    <method selector="color">
      <retval></retval>
    </method>
    <method selector="drawLabel:inRect:">
      <arg name="shouldTruncateLabel"></arg>
      <arg name="labelRect"></arg>
      <retval></retval>
    </method>
    <method selector="identifier">
      <retval></retval>
    </method>
    <method selector="initWithIdentifier:" swt_gen="true">
      <arg name="identifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="initialFirstResponder">
      <retval></retval>
    </method>
    <method selector="label">
      <retval></retval>
    </method>
    <method selector="setColor:">
      <arg name="color"></arg>
      <retval></retval>
    </method>
    <method selector="setIdentifier:">
      <arg name="identifier"></arg>
      <retval></retval>
    </method>
    <method selector="setInitialFirstResponder:">
      <arg name="view"></arg>
      <retval></retval>
    </method>
    <method selector="setLabel:" swt_gen="true">
      <arg name="label" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setView:" swt_gen="true">
      <arg name="view" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sizeOfLabel:">
      <arg name="computeMin"></arg>
      <retval></retval>
    </method>
    <method selector="tabState">
      <retval></retval>
    </method>
    <method selector="tabView">
      <retval></retval>
    </method>
    <method selector="view">
      <retval></retval>
    </method>
  </class>
  <class name="NSTableColumn" swt_gen="mixed">
    <method selector="dataCell">
      <retval></retval>
    </method>
    <method selector="dataCellForRow:">
      <arg name="row"></arg>
      <retval></retval>
    </method>
    <method selector="headerCell" swt_gen="true">
      <retval swt_gen="true" swt_java_type="NSTableHeaderCell"></retval>
    </method>
    <method selector="headerToolTip">
      <retval></retval>
    </method>
    <method selector="identifier">
      <retval></retval>
    </method>
    <method selector="initWithIdentifier:" swt_gen="true">
      <arg name="identifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isEditable">
      <retval></retval>
    </method>
    <method selector="isHidden">
      <retval></retval>
    </method>
    <method selector="isResizable">
      <retval></retval>
    </method>
    <method selector="maxWidth">
      <retval></retval>
    </method>
    <method selector="minWidth">
      <retval></retval>
    </method>
    <method selector="resizingMask" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDataCell:" swt_gen="true">
      <arg name="cell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEditable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHeaderCell:" swt_gen="true">
      <arg name="cell" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHeaderToolTip:">
      <arg name="string"></arg>
      <retval></retval>
    </method>
    <method selector="setHidden:">
      <arg name="hidden"></arg>
      <retval></retval>
    </method>
    <method selector="setIdentifier:" swt_gen="true">
      <arg name="identifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxWidth:">
      <arg name="maxWidth"></arg>
      <retval></retval>
    </method>
    <method selector="setMinWidth:" swt_gen="true">
      <arg name="minWidth" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setResizable:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setResizingMask:" swt_gen="true">
      <arg name="resizingMask" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSortDescriptorPrototype:">
      <arg name="sortDescriptor"></arg>
      <retval></retval>
    </method>
    <method selector="setTableView:">
      <arg name="tableView"></arg>
      <retval></retval>
    </method>
    <method selector="setWidth:" swt_gen="true">
      <arg name="width" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sizeToFit">
      <retval></retval>
    </method>
    <method selector="sortDescriptorPrototype">
      <retval></retval>
    </method>
    <method selector="tableView">
      <retval></retval>
    </method>
    <method selector="width" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTableHeaderCell" swt_gen="true" swt_superclass="NSTextFieldCell">
    <method selector="drawSortIndicatorWithFrame:inView:ascending:priority:" swt_gen="true">
      <arg name="cellFrame" swt_gen="true"></arg>
      <arg name="controlView" swt_gen="true"></arg>
      <arg name="ascending" swt_gen="true"></arg>
      <arg name="priority" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="sortIndicatorRectForBounds:" swt_gen="true">
      <arg name="theRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTableHeaderView" swt_gen="mixed" swt_superclass="NSView">
    <method selector="columnAtPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="draggedColumn">
      <retval></retval>
    </method>
    <method selector="draggedDistance">
      <retval></retval>
    </method>
    <method selector="headerRectOfColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="resizedColumn">
      <retval></retval>
    </method>
    <method selector="setTableView:">
      <arg name="tableView"></arg>
      <retval></retval>
    </method>
    <method selector="tableView">
      <retval></retval>
    </method>
  </class>
  <class name="NSTableView" swt_gen="mixed" swt_superclass="NSControl">
    <method selector="addTableColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsColumnReordering">
      <retval></retval>
    </method>
    <method selector="allowsColumnResizing">
      <retval></retval>
    </method>
    <method selector="allowsColumnSelection">
      <retval></retval>
    </method>
    <method selector="allowsEmptySelection">
      <retval></retval>
    </method>
    <method selector="allowsMultipleSelection">
      <retval></retval>
    </method>
    <method selector="allowsTypeSelect">
      <retval></retval>
    </method>
    <method selector="autoresizesAllColumnsToFit">
      <retval></retval>
    </method>
    <method selector="autosaveName">
      <retval></retval>
    </method>
    <method selector="autosaveTableColumns">
      <retval></retval>
    </method>
    <method selector="backgroundColor">
      <retval></retval>
    </method>
    <method selector="canDragRowsWithIndexes:atPoint:">
      <arg name="rowIndexes"></arg>
      <arg name="mouseDownPoint"></arg>
      <retval></retval>
    </method>
    <method selector="clickedColumn">
      <retval></retval>
    </method>
    <method selector="clickedRow">
      <retval></retval>
    </method>
    <method selector="columnAtPoint:">
      <arg name="point"></arg>
      <retval></retval>
    </method>
    <method selector="columnAutoresizingStyle" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="columnIndexesInRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="columnWithIdentifier:" swt_gen="true">
      <arg name="identifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="columnsInRect:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="cornerView">
      <retval></retval>
    </method>
    <method selector="dataSource">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="deselectAll:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="deselectColumn:">
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="deselectRow:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="doubleAction">
      <retval></retval>
    </method>
    <method selector="dragImageForRows:event:dragImageOffset:">
      <arg name="dragRows"></arg>
      <arg name="dragEvent"></arg>
      <arg name="dragImageOffset"></arg>
      <retval></retval>
    </method>
    <method selector="dragImageForRowsWithIndexes:tableColumns:event:offset:">
      <arg name="dragRows"></arg>
      <arg name="tableColumns"></arg>
      <arg name="dragEvent"></arg>
      <arg name="dragImageOffset"></arg>
      <retval></retval>
    </method>
    <method selector="drawBackgroundInClipRect:">
      <arg name="clipRect"></arg>
      <retval></retval>
    </method>
    <method selector="drawGridInClipRect:">
      <arg name="clipRect"></arg>
      <retval></retval>
    </method>
    <method selector="drawRow:clipRect:">
      <arg name="row"></arg>
      <arg name="clipRect"></arg>
      <retval></retval>
    </method>
    <method selector="drawsGrid">
      <retval></retval>
    </method>
    <method selector="editColumn:row:withEvent:select:">
      <arg name="column"></arg>
      <arg name="row"></arg>
      <arg name="theEvent"></arg>
      <arg name="select"></arg>
      <retval></retval>
    </method>
    <method selector="editedColumn">
      <retval></retval>
    </method>
    <method selector="editedRow">
      <retval></retval>
    </method>
    <method selector="frameOfCellAtColumn:row:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="gridColor">
      <retval></retval>
    </method>
    <method selector="gridStyleMask">
      <retval></retval>
    </method>
    <method selector="headerView" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="highlightSelectionInClipRect:" swt_gen="true">
      <arg name="clipRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="highlightedTableColumn">
      <retval></retval>
    </method>
    <method selector="indicatorImageInTableColumn:">
      <arg name="tc"></arg>
      <retval></retval>
    </method>
    <method selector="intercellSpacing" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isColumnSelected:">
      <arg name="column"></arg>
      <retval></retval>
    </method>
    <method selector="isRowSelected:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="moveColumn:toColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <arg name="newIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="noteHeightOfRowsWithIndexesChanged:">
      <arg name="indexSet"></arg>
      <retval></retval>
    </method>
    <method selector="noteNumberOfRowsChanged" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfColumns" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfRows" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="numberOfSelectedColumns">
      <retval></retval>
    </method>
    <method selector="numberOfSelectedRows" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="preparedCellAtColumn:row:">
      <arg name="column"></arg>
      <arg name="row"></arg>
      <retval></retval>
    </method>
    <method selector="rectOfColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rectOfRow:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="reloadData" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeTableColumn:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rowAtPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rowHeight" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="rowsInRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollColumnToVisible:" swt_gen="true">
      <arg name="column" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollRowToVisible:" swt_gen="true">
      <arg name="row" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectAll:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectColumn:byExtendingSelection:">
      <arg name="column"></arg>
      <arg name="extend"></arg>
      <retval></retval>
    </method>
    <method selector="selectColumnIndexes:byExtendingSelection:">
      <arg name="indexes"></arg>
      <arg name="extend"></arg>
      <retval></retval>
    </method>
    <method selector="selectRow:byExtendingSelection:">
      <arg name="row"></arg>
      <arg name="extend"></arg>
      <retval></retval>
    </method>
    <method selector="selectRowIndexes:byExtendingSelection:" swt_gen="true">
      <arg name="indexes" swt_gen="true"></arg>
      <arg name="extend" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedColumn">
      <retval></retval>
    </method>
    <method selector="selectedColumnEnumerator">
      <retval></retval>
    </method>
    <method selector="selectedColumnIndexes">
      <retval></retval>
    </method>
    <method selector="selectedRow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedRowEnumerator">
      <retval></retval>
    </method>
    <method selector="selectedRowIndexes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectionHighlightStyle">
      <retval></retval>
    </method>
    <method selector="setAllowsColumnReordering:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsColumnResizing:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setAllowsColumnSelection:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setAllowsEmptySelection:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setAllowsMultipleSelection:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsTypeSelect:">
      <arg name="value"></arg>
      <retval></retval>
    </method>
    <method selector="setAutoresizesAllColumnsToFit:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setAutosaveName:">
      <arg name="name"></arg>
      <retval></retval>
    </method>
    <method selector="setAutosaveTableColumns:">
      <arg name="save"></arg>
      <retval></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setColumnAutoresizingStyle:" swt_gen="true">
      <arg name="style" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setCornerView:">
      <arg name="cornerView"></arg>
      <retval></retval>
    </method>
    <method selector="setDataSource:" swt_gen="true">
      <arg name="aSource" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="delegate" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDoubleAction:" swt_gen="true">
      <arg name="aSelector" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDraggingSourceOperationMask:forLocal:">
      <arg name="mask"></arg>
      <arg name="isLocal"></arg>
      <retval></retval>
    </method>
    <method selector="setDrawsGrid:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setDropRow:dropOperation:">
      <arg name="row"></arg>
      <arg name="op"></arg>
      <retval></retval>
    </method>
    <method selector="setGridColor:">
      <arg name="color"></arg>
      <retval></retval>
    </method>
    <method selector="setGridStyleMask:">
      <arg name="gridType"></arg>
      <retval></retval>
    </method>
    <method selector="setHeaderView:" swt_gen="true">
      <arg name="headerView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHighlightedTableColumn:">
      <arg name="tc"></arg>
      <retval></retval>
    </method>
    <method selector="setIndicatorImage:inTableColumn:">
      <arg name="anImage"></arg>
      <arg name="tc"></arg>
      <retval></retval>
    </method>
    <method selector="setIntercellSpacing:">
      <arg name="aSize"></arg>
      <retval></retval>
    </method>
    <method selector="setRowHeight:" swt_gen="true">
      <arg name="rowHeight" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectionHighlightStyle:">
      <arg name="selectionHighlightStyle"></arg>
      <retval></retval>
    </method>
    <method selector="setSortDescriptors:">
      <arg name="array"></arg>
      <retval></retval>
    </method>
    <method selector="setUsesAlternatingRowBackgroundColors:" swt_gen="true">
      <arg name="useAlternatingRowColors" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setVerticalMotionCanBeginDrag:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="sizeLastColumnToFit">
      <retval></retval>
    </method>
    <method selector="sizeToFit">
      <retval></retval>
    </method>
    <method selector="sortDescriptors">
      <retval></retval>
    </method>
    <method selector="tableColumnWithIdentifier:">
      <arg name="identifier"></arg>
      <retval></retval>
    </method>
    <method selector="tableColumns" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textDidBeginEditing:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="textDidChange:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="textDidEndEditing:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="textShouldBeginEditing:">
      <arg name="textObject"></arg>
      <retval></retval>
    </method>
    <method selector="textShouldEndEditing:">
      <arg name="textObject"></arg>
      <retval></retval>
    </method>
    <method selector="tile" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="usesAlternatingRowBackgroundColors" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="verticalMotionCanBeginDrag">
      <retval></retval>
    </method>
  </class>
  <class name="NSText" swt_gen="mixed" swt_superclass="NSView">
    <method selector="RTFDFromRange:">
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="RTFFromRange:">
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="alignCenter:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="alignLeft:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="alignRight:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="alignment">
      <retval></retval>
    </method>
    <method selector="backgroundColor">
      <retval></retval>
    </method>
    <method selector="baseWritingDirection">
      <retval></retval>
    </method>
    <method selector="changeFont:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="checkSpelling:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="copy:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="copyFont:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="copyRuler:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="cut:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="delete:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="drawsBackground">
      <retval></retval>
    </method>
    <method selector="font">
      <retval></retval>
    </method>
    <method selector="importsGraphics">
      <retval></retval>
    </method>
    <method selector="isEditable">
      <retval></retval>
    </method>
    <method selector="isFieldEditor">
      <retval></retval>
    </method>
    <method selector="isHorizontallyResizable">
      <retval></retval>
    </method>
    <method selector="isRichText">
      <retval></retval>
    </method>
    <method selector="isRulerVisible">
      <retval></retval>
    </method>
    <method selector="isSelectable">
      <retval></retval>
    </method>
    <method selector="isVerticallyResizable">
      <retval></retval>
    </method>
    <method selector="maxSize">
      <retval></retval>
    </method>
    <method selector="minSize">
      <retval></retval>
    </method>
    <method selector="paste:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="pasteFont:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="pasteRuler:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="readRTFDFromFile:">
      <arg name="path"></arg>
      <retval></retval>
    </method>
    <method selector="replaceCharactersInRange:withRTF:">
      <arg name="range"></arg>
      <arg name="rtfData"></arg>
      <retval></retval>
    </method>
    <method selector="replaceCharactersInRange:withRTFD:">
      <arg name="range"></arg>
      <arg name="rtfdData"></arg>
      <retval></retval>
    </method>
    <method selector="replaceCharactersInRange:withString:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="scrollRangeToVisible:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectAll:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectedRange" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlignment:" swt_gen="true">
      <arg name="mode" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBaseWritingDirection:">
      <arg name="writingDirection"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDrawsBackground:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEditable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFieldEditor:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setFont:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFont:range:">
      <arg name="font"></arg>
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="setHorizontallyResizable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImportsGraphics:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setMaxSize:" swt_gen="true">
      <arg name="newMaxSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMinSize:" swt_gen="true">
      <arg name="newMinSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRichText:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setSelectedRange:" swt_gen="true">
      <arg name="range" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setString:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextColor:range:">
      <arg name="color"></arg>
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="setUsesFontPanel:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setVerticallyResizable:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="showGuessPanel:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="sizeToFit" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="string">
      <retval></retval>
    </method>
    <method selector="subscript:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="superscript:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="textColor">
      <retval></retval>
    </method>
    <method selector="toggleRuler:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="underline:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="unscript:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="usesFontPanel">
      <retval></retval>
    </method>
    <method selector="writeRTFDToFile:atomically:">
      <arg name="path"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSTextAttachment" swt_gen="mixed">
    <method selector="attachmentCell">
      <retval></retval>
    </method>
    <method selector="fileWrapper">
      <retval></retval>
    </method>
    <method selector="initWithFileWrapper:" swt_gen="true">
      <arg name="fileWrapper" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAttachmentCell:">
      <arg name="cell"></arg>
      <retval></retval>
    </method>
    <method selector="setFileWrapper:">
      <arg name="fileWrapper"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSTextBlock">
    <method selector="backgroundColor">
      <retval></retval>
    </method>
    <method selector="borderColorForEdge:">
      <arg name="edge"></arg>
      <retval></retval>
    </method>
    <method selector="boundsRectForContentRect:inRect:textContainer:characterRange:">
      <arg name="contentRect"></arg>
      <arg name="rect"></arg>
      <arg name="textContainer"></arg>
      <arg name="charRange"></arg>
      <retval></retval>
    </method>
    <method selector="contentWidth">
      <retval></retval>
    </method>
    <method selector="contentWidthValueType">
      <retval></retval>
    </method>
    <method selector="drawBackgroundWithFrame:inView:characterRange:layoutManager:">
      <arg name="frameRect"></arg>
      <arg name="controlView"></arg>
      <arg name="charRange"></arg>
      <arg name="layoutManager"></arg>
      <retval></retval>
    </method>
    <method selector="init">
      <retval></retval>
    </method>
    <method selector="rectForLayoutAtPoint:inRect:textContainer:characterRange:">
      <arg name="startingPoint"></arg>
      <arg name="rect"></arg>
      <arg name="textContainer"></arg>
      <arg name="charRange"></arg>
      <retval></retval>
    </method>
    <method selector="setBackgroundColor:">
      <arg name="color"></arg>
      <retval></retval>
    </method>
    <method selector="setBorderColor:">
      <arg name="color"></arg>
      <retval></retval>
    </method>
    <method selector="setBorderColor:forEdge:">
      <arg name="color"></arg>
      <arg name="edge"></arg>
      <retval></retval>
    </method>
    <method selector="setContentWidth:type:">
      <arg name="val"></arg>
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="setValue:type:forDimension:">
      <arg name="val"></arg>
      <arg name="type"></arg>
      <arg name="dimension"></arg>
      <retval></retval>
    </method>
    <method selector="setVerticalAlignment:">
      <arg name="alignment"></arg>
      <retval></retval>
    </method>
    <method selector="setWidth:type:forLayer:">
      <arg name="val"></arg>
      <arg name="type"></arg>
      <arg name="layer"></arg>
      <retval></retval>
    </method>
    <method selector="setWidth:type:forLayer:edge:">
      <arg name="val"></arg>
      <arg name="type"></arg>
      <arg name="layer"></arg>
      <arg name="edge"></arg>
      <retval></retval>
    </method>
    <method selector="valueForDimension:">
      <arg name="dimension"></arg>
      <retval></retval>
    </method>
    <method selector="valueTypeForDimension:">
      <arg name="dimension"></arg>
      <retval></retval>
    </method>
    <method selector="verticalAlignment">
      <retval></retval>
    </method>
    <method selector="widthForLayer:edge:">
      <arg name="layer"></arg>
      <arg name="edge"></arg>
      <retval></retval>
    </method>
    <method selector="widthValueTypeForLayer:edge:">
      <arg name="layer"></arg>
      <arg name="edge"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSTextContainer" swt_gen="mixed">
    <method selector="containerSize" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="containsPoint:">
      <arg name="point"></arg>
      <retval></retval>
    </method>
    <method selector="heightTracksTextView">
      <retval></retval>
    </method>
    <method selector="initWithContainerSize:" swt_gen="mixed">
      <arg name="size" swt_gen="true"></arg>
      <retval swt_java_type="NSTextContainer"></retval>
    </method>
    <method selector="isSimpleRectangularTextContainer">
      <retval></retval>
    </method>
    <method selector="layoutManager">
      <retval></retval>
    </method>
    <method selector="lineFragmentPadding">
      <retval></retval>
    </method>
    <method selector="lineFragmentRectForProposedRect:sweepDirection:movementDirection:remainingRect:">
      <arg name="proposedRect"></arg>
      <arg name="sweepDirection"></arg>
      <arg name="movementDirection"></arg>
      <arg name="remainingRect"></arg>
      <retval></retval>
    </method>
    <method selector="replaceLayoutManager:">
      <arg name="newLayoutManager"></arg>
      <retval></retval>
    </method>
    <method selector="setContainerSize:" swt_gen="true">
      <arg name="size" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHeightTracksTextView:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setLayoutManager:">
      <arg name="layoutManager"></arg>
      <retval></retval>
    </method>
    <method selector="setLineFragmentPadding:" swt_gen="true">
      <arg name="pad" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextView:">
      <arg name="textView"></arg>
      <retval></retval>
    </method>
    <method selector="setWidthTracksTextView:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textView">
      <retval></retval>
    </method>
    <method selector="widthTracksTextView">
      <retval></retval>
    </method>
  </class>
  <class name="NSTextField" swt_gen="mixed" swt_superclass="NSControl">
    <method selector="acceptsFirstResponder">
      <retval></retval>
    </method>
    <method selector="allowsEditingTextAttributes">
      <retval></retval>
    </method>
    <method selector="backgroundColor">
      <retval></retval>
    </method>
    <method selector="bezelStyle">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="drawsBackground">
      <retval></retval>
    </method>
    <method selector="importsGraphics">
      <retval></retval>
    </method>
    <method selector="isBezeled">
      <retval></retval>
    </method>
    <method selector="isBordered">
      <retval></retval>
    </method>
    <method selector="isEditable">
      <retval></retval>
    </method>
    <method selector="isSelectable">
      <retval></retval>
    </method>
    <method selector="selectText:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="setAllowsEditingTextAttributes:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBezelStyle:">
      <arg name="style"></arg>
      <retval></retval>
    </method>
    <method selector="setBezeled:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setBordered:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDrawsBackground:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setEditable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setImportsGraphics:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectable:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTextColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleWithMnemonic:">
      <arg name="stringWithAmpersand"></arg>
      <retval></retval>
    </method>
    <method selector="textColor">
      <retval></retval>
    </method>
    <method selector="textDidBeginEditing:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="textDidChange:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="textDidEndEditing:">
      <arg name="notification"></arg>
      <retval></retval>
    </method>
    <method selector="textShouldBeginEditing:">
      <arg name="textObject"></arg>
      <retval></retval>
    </method>
    <method selector="textShouldEndEditing:">
      <arg name="textObject"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSTextFieldCell" swt_gen="mixed" swt_superclass="NSActionCell">
    <method selector="allowedInputSourceLocales">
      <retval></retval>
    </method>
    <method selector="backgroundColor">
      <retval></retval>
    </method>
    <method selector="bezelStyle">
      <retval></retval>
    </method>
    <method selector="drawsBackground">
      <retval></retval>
    </method>
    <method selector="placeholderAttributedString">
      <retval></retval>
    </method>
    <method selector="placeholderString">
      <retval></retval>
    </method>
    <method selector="setAllowedInputSourceLocales:">
      <arg name="localeIdentifiers"></arg>
      <retval></retval>
    </method>
    <method selector="setBackgroundColor:">
      <arg name="color"></arg>
      <retval></retval>
    </method>
    <method selector="setBezelStyle:">
      <arg name="style"></arg>
      <retval></retval>
    </method>
    <method selector="setDrawsBackground:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setPlaceholderAttributedString:">
      <arg name="string"></arg>
      <retval></retval>
    </method>
    <method selector="setPlaceholderString:">
      <arg name="string"></arg>
      <retval></retval>
    </method>
    <method selector="setTextColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUpFieldEditorAttributes:">
      <arg name="textObj"></arg>
      <retval></retval>
    </method>
    <method selector="setWantsNotificationForMarkedText:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="textColor" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTextList">
    <method selector="initWithMarkerFormat:options:">
      <arg name="format"></arg>
      <arg name="mask"></arg>
      <retval></retval>
    </method>
    <method selector="listOptions">
      <retval></retval>
    </method>
    <method selector="markerForItemNumber:">
      <arg name="itemNum"></arg>
      <retval></retval>
    </method>
    <method selector="markerFormat">
      <retval></retval>
    </method>
  </class>
  <class name="NSTextStorage" swt_gen="mixed" swt_superclass="NSMutableAttributedString">
    <method selector="addLayoutManager:" swt_gen="true">
      <arg name="obj" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="attributeRuns">
      <retval></retval>
    </method>
    <method selector="changeInLength">
      <retval></retval>
    </method>
    <method selector="characters">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="edited:range:changeInLength:">
      <arg name="editedMask"></arg>
      <arg name="range"></arg>
      <arg name="delta"></arg>
      <retval></retval>
    </method>
    <method selector="editedMask">
      <retval></retval>
    </method>
    <method selector="editedRange">
      <retval></retval>
    </method>
    <method selector="ensureAttributesAreFixedInRange:">
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="fixesAttributesLazily">
      <retval></retval>
    </method>
    <method selector="font">
      <retval></retval>
    </method>
    <method selector="foregroundColor">
      <retval></retval>
    </method>
    <method selector="invalidateAttributesInRange:">
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="layoutManagers">
      <retval></retval>
    </method>
    <method selector="paragraphs" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="processEditing">
      <retval></retval>
    </method>
    <method selector="removeLayoutManager:">
      <arg name="obj"></arg>
      <retval></retval>
    </method>
    <method selector="setAttributeRuns:">
      <arg name="attributeRuns"></arg>
      <retval></retval>
    </method>
    <method selector="setCharacters:">
      <arg name="characters"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:">
      <arg name="delegate"></arg>
      <retval></retval>
    </method>
    <method selector="setFont:">
      <arg name="font"></arg>
      <retval></retval>
    </method>
    <method selector="setForegroundColor:">
      <arg name="color"></arg>
      <retval></retval>
    </method>
    <method selector="setParagraphs:">
      <arg name="paragraphs"></arg>
      <retval></retval>
    </method>
    <method selector="setWords:">
      <arg name="words"></arg>
      <retval></retval>
    </method>
    <method selector="words">
      <retval></retval>
    </method>
  </class>
  <class name="NSTextTab" swt_gen="mixed">
    <method selector="alignment">
      <retval></retval>
    </method>
    <method selector="initWithTextAlignment:location:options:">
      <arg name="alignment"></arg>
      <arg name="loc"></arg>
      <arg name="options"></arg>
      <retval></retval>
    </method>
    <method selector="initWithType:location:" swt_gen="true">
      <arg name="type" swt_gen="true"></arg>
      <arg name="loc" swt_gen="true"></arg>
      <retval swt_gen="true" swt_java_type="NSTextTab"></retval>
    </method>
    <method selector="location" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="options">
      <retval></retval>
    </method>
    <method selector="tabStopType" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSTextTable" swt_superclass="NSTextBlock">
    <method selector="boundsRectForBlock:contentRect:inRect:textContainer:characterRange:">
      <arg name="block"></arg>
      <arg name="contentRect"></arg>
      <arg name="rect"></arg>
      <arg name="textContainer"></arg>
      <arg name="charRange"></arg>
      <retval></retval>
    </method>
    <method selector="collapsesBorders">
      <retval></retval>
    </method>
    <method selector="drawBackgroundForBlock:withFrame:inView:characterRange:layoutManager:">
      <arg name="block"></arg>
      <arg name="frameRect"></arg>
      <arg name="controlView"></arg>
      <arg name="charRange"></arg>
      <arg name="layoutManager"></arg>
      <retval></retval>
    </method>
    <method selector="hidesEmptyCells">
      <retval></retval>
    </method>
    <method selector="layoutAlgorithm">
      <retval></retval>
    </method>
    <method selector="numberOfColumns">
      <retval></retval>
    </method>
    <method selector="rectForBlock:layoutAtPoint:inRect:textContainer:characterRange:">
      <arg name="block"></arg>
      <arg name="startingPoint"></arg>
      <arg name="rect"></arg>
      <arg name="textContainer"></arg>
      <arg name="charRange"></arg>
      <retval></retval>
    </method>
    <method selector="setCollapsesBorders:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setHidesEmptyCells:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setLayoutAlgorithm:">
      <arg name="algorithm"></arg>
      <retval></retval>
    </method>
    <method selector="setNumberOfColumns:">
      <arg name="numCols"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSTextTableBlock" swt_superclass="NSTextBlock">
    <method selector="columnSpan">
      <retval></retval>
    </method>
    <method selector="initWithTable:startingRow:rowSpan:startingColumn:columnSpan:">
      <arg name="table"></arg>
      <arg name="row"></arg>
      <arg name="rowSpan"></arg>
      <arg name="col"></arg>
      <arg name="colSpan"></arg>
      <retval></retval>
    </method>
    <method selector="rowSpan">
      <retval></retval>
    </method>
    <method selector="startingColumn">
      <retval></retval>
    </method>
    <method selector="startingRow">
      <retval></retval>
    </method>
    <method selector="table">
      <retval></retval>
    </method>
  </class>
  <class name="NSTextView" swt_gen="mixed" swt_superclass="NSText">
    <method selector="acceptableDragTypes">
      <retval></retval>
    </method>
    <method selector="acceptsGlyphInfo">
      <retval></retval>
    </method>
    <method selector="alignJustified:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="allowedInputSourceLocales">
      <retval></retval>
    </method>
    <method selector="allowsDocumentBackgroundColorChange">
      <retval></retval>
    </method>
    <method selector="allowsImageEditing">
      <retval></retval>
    </method>
    <method selector="allowsUndo">
      <retval></retval>
    </method>
    <method selector="backgroundColor">
      <retval></retval>
    </method>
    <method selector="breakUndoCoalescing">
      <retval></retval>
    </method>
    <method selector="changeAttributes:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="changeColor:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="changeDocumentBackgroundColor:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="characterIndexForInsertionAtPoint:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="cleanUpAfterDragOperation">
      <retval></retval>
    </method>
    <method selector="clickedOnLink:atIndex:">
      <arg name="link"></arg>
      <arg name="charIndex"></arg>
      <retval></retval>
    </method>
    <method selector="complete:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="completionsForPartialWordRange:indexOfSelectedItem:">
      <arg name="charRange"></arg>
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="defaultParagraphStyle">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="didChangeText">
      <retval></retval>
    </method>
    <method selector="displaysLinkToolTips">
      <retval></retval>
    </method>
    <method selector="dragImageForSelectionWithEvent:origin:">
      <arg name="event"></arg>
      <arg name="origin"></arg>
      <retval></retval>
    </method>
    <method selector="dragOperationForDraggingInfo:type:">
      <arg name="dragInfo"></arg>
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="dragSelectionWithEvent:offset:slideBack:" swt_gen="true">
      <arg name="event" swt_gen="true"></arg>
      <arg name="mouseOffset" swt_gen="true"></arg>
      <arg name="slideBack" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawInsertionPointInRect:color:turnedOn:">
      <arg name="rect"></arg>
      <arg name="color"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="drawViewBackgroundInRect:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="drawsBackground">
      <retval></retval>
    </method>
    <method selector="importsGraphics">
      <retval></retval>
    </method>
    <method selector="initWithFrame:">
      <arg name="frameRect"></arg>
      <retval></retval>
    </method>
    <method selector="initWithFrame:textContainer:">
      <arg name="frameRect"></arg>
      <arg name="container"></arg>
      <retval></retval>
    </method>
    <method selector="insertCompletion:forPartialWordRange:movement:isFinal:">
      <arg name="word"></arg>
      <arg name="charRange"></arg>
      <arg name="movement"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="insertText:">
      <arg name="insertString"></arg>
      <retval></retval>
    </method>
    <method selector="insertionPointColor">
      <retval></retval>
    </method>
    <method selector="invalidateTextContainerOrigin">
      <retval></retval>
    </method>
    <method selector="isAutomaticLinkDetectionEnabled">
      <retval></retval>
    </method>
    <method selector="isAutomaticQuoteSubstitutionEnabled">
      <retval></retval>
    </method>
    <method selector="isContinuousSpellCheckingEnabled">
      <retval></retval>
    </method>
    <method selector="isEditable">
      <retval></retval>
    </method>
    <method selector="isFieldEditor">
      <retval></retval>
    </method>
    <method selector="isGrammarCheckingEnabled">
      <retval></retval>
    </method>
    <method selector="isRichText">
      <retval></retval>
    </method>
    <method selector="isRulerVisible">
      <retval></retval>
    </method>
    <method selector="isSelectable">
      <retval></retval>
    </method>
    <method selector="layoutManager">
      <retval></retval>
    </method>
    <method selector="linkTextAttributes">
      <retval></retval>
    </method>
    <method selector="loosenKerning:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="lowerBaseline:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="markedTextAttributes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderFrontLinkPanel:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="orderFrontListPanel:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="orderFrontSpacingPanel:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="orderFrontTablePanel:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="outline:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="pasteAsPlainText:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="pasteAsRichText:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="performFindPanelAction:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="preferredPasteboardTypeFromArray:restrictedToTypesFromArray:">
      <arg name="availableTypes"></arg>
      <arg name="allowedTypes"></arg>
      <retval></retval>
    </method>
    <method selector="raiseBaseline:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="rangeForUserCharacterAttributeChange">
      <retval></retval>
    </method>
    <method selector="rangeForUserCompletion">
      <retval></retval>
    </method>
    <method selector="rangeForUserParagraphAttributeChange">
      <retval></retval>
    </method>
    <method selector="rangeForUserTextChange">
      <retval></retval>
    </method>
    <method selector="rangesForUserCharacterAttributeChange">
      <retval></retval>
    </method>
    <method selector="rangesForUserParagraphAttributeChange">
      <retval></retval>
    </method>
    <method selector="rangesForUserTextChange">
      <retval></retval>
    </method>
    <method selector="readSelectionFromPasteboard:">
      <arg name="pboard"></arg>
      <retval></retval>
    </method>
    <method selector="readSelectionFromPasteboard:type:">
      <arg name="pboard"></arg>
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="readablePasteboardTypes">
      <retval></retval>
    </method>
    <method class_method="true" selector="registerForServices">
      <retval></retval>
    </method>
    <method selector="replaceTextContainer:">
      <arg name="newContainer"></arg>
      <retval></retval>
    </method>
    <method selector="rulerView:didAddMarker:">
      <arg name="ruler"></arg>
      <arg name="marker"></arg>
      <retval></retval>
    </method>
    <method selector="rulerView:didMoveMarker:">
      <arg name="ruler"></arg>
      <arg name="marker"></arg>
      <retval></retval>
    </method>
    <method selector="rulerView:didRemoveMarker:">
      <arg name="ruler"></arg>
      <arg name="marker"></arg>
      <retval></retval>
    </method>
    <method selector="rulerView:handleMouseDown:">
      <arg name="ruler"></arg>
      <arg name="event"></arg>
      <retval></retval>
    </method>
    <method selector="rulerView:shouldAddMarker:">
      <arg name="ruler"></arg>
      <arg name="marker"></arg>
      <retval></retval>
    </method>
    <method selector="rulerView:shouldMoveMarker:">
      <arg name="ruler"></arg>
      <arg name="marker"></arg>
      <retval></retval>
    </method>
    <method selector="rulerView:shouldRemoveMarker:">
      <arg name="ruler"></arg>
      <arg name="marker"></arg>
      <retval></retval>
    </method>
    <method selector="rulerView:willAddMarker:atLocation:">
      <arg name="ruler"></arg>
      <arg name="marker"></arg>
      <arg name="location"></arg>
      <retval></retval>
    </method>
    <method selector="rulerView:willMoveMarker:toLocation:">
      <arg name="ruler"></arg>
      <arg name="marker"></arg>
      <arg name="location"></arg>
      <retval></retval>
    </method>
    <method selector="selectedRanges">
      <retval></retval>
    </method>
    <method selector="selectedTextAttributes">
      <retval></retval>
    </method>
    <method selector="selectionAffinity">
      <retval></retval>
    </method>
    <method selector="selectionGranularity">
      <retval></retval>
    </method>
    <method selector="selectionRangeForProposedRange:granularity:">
      <arg name="proposedCharRange"></arg>
      <arg name="granularity"></arg>
      <retval></retval>
    </method>
    <method selector="setAcceptsGlyphInfo:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setAlignment:range:">
      <arg name="alignment"></arg>
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="setAllowedInputSourceLocales:">
      <arg name="localeIdentifiers"></arg>
      <retval></retval>
    </method>
    <method selector="setAllowsDocumentBackgroundColorChange:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setAllowsImageEditing:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setAllowsUndo:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setAutomaticLinkDetectionEnabled:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setAutomaticQuoteSubstitutionEnabled:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setBackgroundColor:">
      <arg name="color"></arg>
      <retval></retval>
    </method>
    <method selector="setBaseWritingDirection:range:">
      <arg name="writingDirection"></arg>
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="setConstrainedFrameSize:">
      <arg name="desiredSize"></arg>
      <retval></retval>
    </method>
    <method selector="setContinuousSpellCheckingEnabled:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setDefaultParagraphStyle:">
      <arg name="paragraphStyle"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:">
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
    <method selector="setDisplaysLinkToolTips:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setDrawsBackground:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setEditable:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setFieldEditor:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setGrammarCheckingEnabled:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setImportsGraphics:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setInsertionPointColor:">
      <arg name="color"></arg>
      <retval></retval>
    </method>
    <method selector="setLinkTextAttributes:">
      <arg name="attributeDictionary"></arg>
      <retval></retval>
    </method>
    <method selector="setMarkedTextAttributes:">
      <arg name="attributeDictionary"></arg>
      <retval></retval>
    </method>
    <method selector="setNeedsDisplayInRect:avoidAdditionalLayout:">
      <arg name="rect"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setRichText:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRulerVisible:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectable:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectedRange:">
      <arg name="charRange"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectedRange:affinity:stillSelecting:">
      <arg name="charRange"></arg>
      <arg name="affinity"></arg>
      <arg name="stillSelectingFlag"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectedRanges:">
      <arg name="ranges"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectedRanges:affinity:stillSelecting:">
      <arg name="ranges"></arg>
      <arg name="affinity"></arg>
      <arg name="stillSelectingFlag"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectedTextAttributes:">
      <arg name="attributeDictionary"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectionGranularity:">
      <arg name="granularity"></arg>
      <retval></retval>
    </method>
    <method selector="setSmartInsertDeleteEnabled:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setSpellingState:range:">
      <arg name="value"></arg>
      <arg name="charRange"></arg>
      <retval></retval>
    </method>
    <method selector="setTextContainer:">
      <arg name="container"></arg>
      <retval></retval>
    </method>
    <method selector="setTextContainerInset:">
      <arg name="inset"></arg>
      <retval></retval>
    </method>
    <method selector="setTypingAttributes:">
      <arg name="attrs"></arg>
      <retval></retval>
    </method>
    <method selector="setUsesFindPanel:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setUsesFontPanel:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setUsesRuler:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="shouldChangeTextInRange:replacementString:">
      <arg name="affectedCharRange"></arg>
      <arg name="replacementString"></arg>
      <retval></retval>
    </method>
    <method selector="shouldChangeTextInRanges:replacementStrings:">
      <arg name="affectedRanges"></arg>
      <arg name="replacementStrings"></arg>
      <retval></retval>
    </method>
    <method selector="shouldDrawInsertionPoint">
      <retval></retval>
    </method>
    <method selector="showFindIndicatorForRange:">
      <arg name="charRange"></arg>
      <retval></retval>
    </method>
    <method selector="smartDeleteRangeForProposedRange:">
      <arg name="proposedCharRange"></arg>
      <retval></retval>
    </method>
    <method selector="smartInsertAfterStringForString:replacingRange:">
      <arg name="pasteString"></arg>
      <arg name="charRangeToReplace"></arg>
      <retval></retval>
    </method>
    <method selector="smartInsertBeforeStringForString:replacingRange:">
      <arg name="pasteString"></arg>
      <arg name="charRangeToReplace"></arg>
      <retval></retval>
    </method>
    <method selector="smartInsertDeleteEnabled">
      <retval></retval>
    </method>
    <method selector="smartInsertForString:replacingRange:beforeString:afterString:">
      <arg name="pasteString"></arg>
      <arg name="charRangeToReplace"></arg>
      <arg name="beforeString"></arg>
      <arg name="afterString"></arg>
      <retval></retval>
    </method>
    <method selector="spellCheckerDocumentTag">
      <retval></retval>
    </method>
    <method selector="startSpeaking:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="stopSpeaking:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="textContainer" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="textContainerInset">
      <retval></retval>
    </method>
    <method selector="textContainerOrigin">
      <retval></retval>
    </method>
    <method selector="textStorage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tightenKerning:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="toggleAutomaticLinkDetection:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="toggleAutomaticQuoteSubstitution:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="toggleBaseWritingDirection:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="toggleContinuousSpellChecking:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="toggleGrammarChecking:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="toggleSmartInsertDelete:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="toggleTraditionalCharacterShape:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="turnOffKerning:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="turnOffLigatures:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="typingAttributes">
      <retval></retval>
    </method>
    <method selector="updateDragTypeRegistration">
      <retval></retval>
    </method>
    <method selector="updateFontPanel">
      <retval></retval>
    </method>
    <method selector="updateInsertionPointStateAndRestartTimer:">
      <arg name="restartFlag"></arg>
      <retval></retval>
    </method>
    <method selector="updateRuler">
      <retval></retval>
    </method>
    <method selector="useAllLigatures:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="useStandardKerning:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="useStandardLigatures:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="usesFindPanel">
      <retval></retval>
    </method>
    <method selector="usesFontPanel">
      <retval></retval>
    </method>
    <method selector="usesRuler">
      <retval></retval>
    </method>
    <method selector="validRequestorForSendType:returnType:">
      <arg name="sendType"></arg>
      <arg name="returnType"></arg>
      <retval></retval>
    </method>
    <method selector="writablePasteboardTypes">
      <retval></retval>
    </method>
    <method selector="writeSelectionToPasteboard:type:">
      <arg name="pboard"></arg>
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="writeSelectionToPasteboard:types:">
      <arg name="pboard"></arg>
      <arg name="types"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSTokenField" swt_superclass="NSTextField">
    <method selector="completionDelay">
      <retval></retval>
    </method>
    <method class_method="true" selector="defaultCompletionDelay">
      <retval></retval>
    </method>
    <method class_method="true" selector="defaultTokenizingCharacterSet">
      <retval></retval>
    </method>
    <method selector="setCompletionDelay:">
      <arg name="delay"></arg>
      <retval></retval>
    </method>
    <method selector="setTokenStyle:">
      <arg name="style"></arg>
      <retval></retval>
    </method>
    <method selector="setTokenizingCharacterSet:">
      <arg name="characterSet"></arg>
      <retval></retval>
    </method>
    <method selector="tokenStyle">
      <retval></retval>
    </method>
    <method selector="tokenizingCharacterSet">
      <retval></retval>
    </method>
  </class>
  <class name="NSTokenFieldCell" swt_superclass="NSTextFieldCell">
    <method selector="completionDelay">
      <retval></retval>
    </method>
    <method class_method="true" selector="defaultCompletionDelay">
      <retval></retval>
    </method>
    <method class_method="true" selector="defaultTokenizingCharacterSet">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="setCompletionDelay:">
      <arg name="delay"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:">
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
    <method selector="setTokenStyle:">
      <arg name="style"></arg>
      <retval></retval>
    </method>
    <method selector="setTokenizingCharacterSet:">
      <arg name="characterSet"></arg>
      <retval></retval>
    </method>
    <method selector="tokenStyle">
      <retval></retval>
    </method>
    <method selector="tokenizingCharacterSet">
      <retval></retval>
    </method>
  </class>
  <class name="NSToolbar" swt_gen="mixed">
    <method selector="allowsUserCustomization">
      <retval></retval>
    </method>
    <method selector="autosavesConfiguration">
      <retval></retval>
    </method>
    <method selector="configurationDictionary">
      <retval></retval>
    </method>
    <method selector="customizationPaletteIsRunning">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="displayMode">
      <retval></retval>
    </method>
    <method selector="identifier">
      <retval></retval>
    </method>
    <method selector="initWithIdentifier:" swt_gen="true">
      <arg name="identifier" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="insertItemWithItemIdentifier:atIndex:">
      <arg name="itemIdentifier"></arg>
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="isVisible">
      <retval></retval>
    </method>
    <method selector="items">
      <retval></retval>
    </method>
    <method selector="removeItemAtIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="runCustomizationPalette:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="selectedItemIdentifier">
      <retval></retval>
    </method>
    <method selector="setAllowsUserCustomization:">
      <arg name="allowCustomization"></arg>
      <retval></retval>
    </method>
    <method selector="setAutosavesConfiguration:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setConfigurationFromDictionary:">
      <arg name="configDict"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:">
      <arg name="delegate"></arg>
      <retval></retval>
    </method>
    <method selector="setDisplayMode:">
      <arg name="displayMode"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectedItemIdentifier:">
      <arg name="itemIdentifier"></arg>
      <retval></retval>
    </method>
    <method selector="setShowsBaselineSeparator:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setSizeMode:">
      <arg name="sizeMode"></arg>
      <retval></retval>
    </method>
    <method selector="setVisible:" swt_gen="true">
      <arg name="shown" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="showsBaselineSeparator">
      <retval></retval>
    </method>
    <method selector="sizeMode">
      <retval></retval>
    </method>
    <method selector="validateVisibleItems">
      <retval></retval>
    </method>
    <method selector="visibleItems">
      <retval></retval>
    </method>
  </class>
  <class name="NSToolbarItem">
    <method selector="action">
      <retval></retval>
    </method>
    <method selector="allowsDuplicatesInToolbar">
      <retval></retval>
    </method>
    <method selector="autovalidates">
      <retval></retval>
    </method>
    <method selector="image">
      <retval></retval>
    </method>
    <method selector="initWithItemIdentifier:">
      <arg name="itemIdentifier"></arg>
      <retval></retval>
    </method>
    <method selector="isEnabled">
      <retval></retval>
    </method>
    <method selector="itemIdentifier">
      <retval></retval>
    </method>
    <method selector="label">
      <retval></retval>
    </method>
    <method selector="maxSize">
      <retval></retval>
    </method>
    <method selector="menuFormRepresentation">
      <retval></retval>
    </method>
    <method selector="minSize">
      <retval></retval>
    </method>
    <method selector="paletteLabel">
      <retval></retval>
    </method>
    <method selector="setAction:">
      <arg name="action"></arg>
      <retval></retval>
    </method>
    <method selector="setAutovalidates:">
      <arg name="resistance"></arg>
      <retval></retval>
    </method>
    <method selector="setEnabled:">
      <arg name="enabled"></arg>
      <retval></retval>
    </method>
    <method selector="setImage:">
      <arg name="image"></arg>
      <retval></retval>
    </method>
    <method selector="setLabel:">
      <arg name="label"></arg>
      <retval></retval>
    </method>
    <method selector="setMaxSize:">
      <arg name="size"></arg>
      <retval></retval>
    </method>
    <method selector="setMenuFormRepresentation:">
      <arg name="menuItem"></arg>
      <retval></retval>
    </method>
    <method selector="setMinSize:">
      <arg name="size"></arg>
      <retval></retval>
    </method>
    <method selector="setPaletteLabel:">
      <arg name="paletteLabel"></arg>
      <retval></retval>
    </method>
    <method selector="setTag:">
      <arg name="tag"></arg>
      <retval></retval>
    </method>
    <method selector="setTarget:">
      <arg name="target"></arg>
      <retval></retval>
    </method>
    <method selector="setToolTip:">
      <arg name="toolTip"></arg>
      <retval></retval>
    </method>
    <method selector="setView:">
      <arg name="view"></arg>
      <retval></retval>
    </method>
    <method selector="setVisibilityPriority:">
      <arg name="visibilityPriority"></arg>
      <retval></retval>
    </method>
    <method selector="tag">
      <retval></retval>
    </method>
    <method selector="target">
      <retval></retval>
    </method>
    <method selector="toolTip">
      <retval></retval>
    </method>
    <method selector="toolbar">
      <retval></retval>
    </method>
    <method selector="validate">
      <retval></retval>
    </method>
    <method selector="view">
      <retval></retval>
    </method>
    <method selector="visibilityPriority">
      <retval></retval>
    </method>
  </class>
  <class name="NSToolbarItemGroup" swt_superclass="NSToolbarItem">
    <method selector="setSubitems:">
      <arg name="subitems"></arg>
      <retval></retval>
    </method>
    <method selector="subitems">
      <retval></retval>
    </method>
  </class>
  <class name="NSTrackingArea">
    <method selector="initWithRect:options:owner:userInfo:">
      <arg name="rect"></arg>
      <arg name="options"></arg>
      <arg name="owner"></arg>
      <arg name="userInfo"></arg>
      <retval></retval>
    </method>
    <method selector="options">
      <retval></retval>
    </method>
    <method selector="owner">
      <retval></retval>
    </method>
    <method selector="rect">
      <retval></retval>
    </method>
    <method selector="userInfo">
      <retval></retval>
    </method>
  </class>
  <class name="NSTreeController" swt_superclass="NSObjectController">
    <method selector="add:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="addChild:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="addSelectionIndexPaths:">
      <arg name="indexPaths"></arg>
      <retval></retval>
    </method>
    <method selector="alwaysUsesMultipleValuesMarker">
      <retval></retval>
    </method>
    <method selector="arrangedObjects">
      <retval></retval>
    </method>
    <method selector="avoidsEmptySelection">
      <retval></retval>
    </method>
    <method selector="canAddChild">
      <retval></retval>
    </method>
    <method selector="canInsert">
      <retval></retval>
    </method>
    <method selector="canInsertChild">
      <retval></retval>
    </method>
    <method selector="childrenKeyPath">
      <retval></retval>
    </method>
    <method selector="childrenKeyPathForNode:">
      <arg name="node"></arg>
      <retval></retval>
    </method>
    <method selector="content">
      <retval></retval>
    </method>
    <method selector="countKeyPath">
      <retval></retval>
    </method>
    <method selector="countKeyPathForNode:">
      <arg name="node"></arg>
      <retval></retval>
    </method>
    <method selector="insert:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="insertChild:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="insertObject:atArrangedObjectIndexPath:">
      <arg name="object"></arg>
      <arg name="indexPath"></arg>
      <retval></retval>
    </method>
    <method selector="insertObjects:atArrangedObjectIndexPaths:">
      <arg name="objects"></arg>
      <arg name="indexPaths"></arg>
      <retval></retval>
    </method>
    <method selector="leafKeyPath">
      <retval></retval>
    </method>
    <method selector="leafKeyPathForNode:">
      <arg name="node"></arg>
      <retval></retval>
    </method>
    <method selector="moveNode:toIndexPath:">
      <arg name="node"></arg>
      <arg name="indexPath"></arg>
      <retval></retval>
    </method>
    <method selector="moveNodes:toIndexPath:">
      <arg name="nodes"></arg>
      <arg name="startingIndexPath"></arg>
      <retval></retval>
    </method>
    <method selector="preservesSelection">
      <retval></retval>
    </method>
    <method selector="rearrangeObjects">
      <retval></retval>
    </method>
    <method selector="remove:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="removeObjectAtArrangedObjectIndexPath:">
      <arg name="indexPath"></arg>
      <retval></retval>
    </method>
    <method selector="removeObjectsAtArrangedObjectIndexPaths:">
      <arg name="indexPaths"></arg>
      <retval></retval>
    </method>
    <method selector="removeSelectionIndexPaths:">
      <arg name="indexPaths"></arg>
      <retval></retval>
    </method>
    <method selector="selectedNodes">
      <retval></retval>
    </method>
    <method selector="selectedObjects">
      <retval></retval>
    </method>
    <method selector="selectionIndexPath">
      <retval></retval>
    </method>
    <method selector="selectionIndexPaths">
      <retval></retval>
    </method>
    <method selector="selectsInsertedObjects">
      <retval></retval>
    </method>
    <method selector="setAlwaysUsesMultipleValuesMarker:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setAvoidsEmptySelection:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setChildrenKeyPath:">
      <arg name="keyPath"></arg>
      <retval></retval>
    </method>
    <method selector="setContent:">
      <arg name="content"></arg>
      <retval></retval>
    </method>
    <method selector="setCountKeyPath:">
      <arg name="keyPath"></arg>
      <retval></retval>
    </method>
    <method selector="setLeafKeyPath:">
      <arg name="keyPath"></arg>
      <retval></retval>
    </method>
    <method selector="setPreservesSelection:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectionIndexPath:">
      <arg name="indexPath"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectionIndexPaths:">
      <arg name="indexPaths"></arg>
      <retval></retval>
    </method>
    <method selector="setSelectsInsertedObjects:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setSortDescriptors:">
      <arg name="sortDescriptors"></arg>
      <retval></retval>
    </method>
    <method selector="sortDescriptors">
      <retval></retval>
    </method>
  </class>
  <class name="NSTreeNode">
    <method selector="childNodes">
      <retval></retval>
    </method>
    <method selector="descendantNodeAtIndexPath:">
      <arg name="indexPath"></arg>
      <retval></retval>
    </method>
    <method selector="indexPath">
      <retval></retval>
    </method>
    <method selector="initWithRepresentedObject:">
      <arg name="modelObject"></arg>
      <retval></retval>
    </method>
    <method selector="isLeaf">
      <retval></retval>
    </method>
    <method selector="mutableChildNodes">
      <retval></retval>
    </method>
    <method selector="parentNode">
      <retval></retval>
    </method>
    <method selector="representedObject">
      <retval></retval>
    </method>
    <method selector="sortWithSortDescriptors:recursively:">
      <arg name="sortDescriptors"></arg>
      <arg name="recursively"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="treeNodeWithRepresentedObject:">
      <arg name="modelObject"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSTypesetter" swt_gen="mixed">
    <method selector="actionForControlCharacterAtIndex:">
      <arg name="charIndex"></arg>
      <retval></retval>
    </method>
    <method selector="attributedString">
      <retval></retval>
    </method>
    <method selector="attributesForExtraLineFragment">
      <retval></retval>
    </method>
    <method selector="baselineOffsetInLayoutManager:glyphIndex:" swt_gen="true">
      <arg name="layoutMgr" swt_gen="true"></arg>
      <arg name="glyphIndex" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="beginLineWithGlyphAtIndex:">
      <arg name="glyphIndex"></arg>
      <retval></retval>
    </method>
    <method selector="beginParagraph">
      <retval></retval>
    </method>
    <method selector="bidiProcessingEnabled">
      <retval></retval>
    </method>
    <method selector="boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:">
      <arg name="glyphIndex"></arg>
      <arg name="textContainer"></arg>
      <arg name="proposedRect"></arg>
      <arg name="glyphPosition"></arg>
      <arg name="charIndex"></arg>
      <retval></retval>
    </method>
    <method selector="characterRangeForGlyphRange:actualGlyphRange:">
      <arg name="glyphRange"></arg>
      <arg name="actualGlyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="currentParagraphStyle">
      <retval></retval>
    </method>
    <method selector="currentTextContainer">
      <retval></retval>
    </method>
    <method class_method="true" selector="defaultTypesetterBehavior">
      <retval></retval>
    </method>
    <method selector="deleteGlyphsInRange:">
      <arg name="glyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="endLineWithGlyphRange:">
      <arg name="lineGlyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="endParagraph">
      <retval></retval>
    </method>
    <method selector="getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:">
      <arg name="glyphsRange"></arg>
      <arg name="glyphBuffer"></arg>
      <arg name="charIndexBuffer"></arg>
      <arg name="inscribeBuffer"></arg>
      <arg name="elasticBuffer"></arg>
      <arg name="bidiLevelBuffer"></arg>
      <retval></retval>
    </method>
    <method selector="getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:">
      <arg name="lineFragmentRect"></arg>
      <arg name="lineFragmentUsedRect"></arg>
      <arg name="paragraphSeparatorGlyphRange"></arg>
      <arg name="lineOrigin"></arg>
      <retval></retval>
    </method>
    <method selector="getLineFragmentRect:usedRect:remainingRect:forStartingGlyphAtIndex:proposedRect:lineSpacing:paragraphSpacingBefore:paragraphSpacingAfter:">
      <arg name="lineFragmentRect"></arg>
      <arg name="lineFragmentUsedRect"></arg>
      <arg name="remainingRect"></arg>
      <arg name="startingGlyphIndex"></arg>
      <arg name="proposedRect"></arg>
      <arg name="lineSpacing"></arg>
      <arg name="paragraphSpacingBefore"></arg>
      <arg name="paragraphSpacingAfter"></arg>
      <retval></retval>
    </method>
    <method selector="glyphRangeForCharacterRange:actualCharacterRange:">
      <arg name="charRange"></arg>
      <arg name="actualCharRange"></arg>
      <retval></retval>
    </method>
    <method selector="hyphenCharacterForGlyphAtIndex:">
      <arg name="glyphIndex"></arg>
      <retval></retval>
    </method>
    <method selector="hyphenationFactor">
      <retval></retval>
    </method>
    <method selector="hyphenationFactorForGlyphAtIndex:">
      <arg name="glyphIndex"></arg>
      <retval></retval>
    </method>
    <method selector="insertGlyph:atGlyphIndex:characterIndex:">
      <arg name="glyph"></arg>
      <arg name="glyphIndex"></arg>
      <arg name="characterIndex"></arg>
      <retval></retval>
    </method>
    <method selector="layoutCharactersInRange:forLayoutManager:maximumNumberOfLineFragments:">
      <arg name="characterRange"></arg>
      <arg name="layoutManager"></arg>
      <arg name="maxNumLines"></arg>
      <retval></retval>
    </method>
    <method selector="layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:">
      <arg name="layoutManager"></arg>
      <arg name="startGlyphIndex"></arg>
      <arg name="maxNumLines"></arg>
      <arg name="nextGlyph"></arg>
      <retval></retval>
    </method>
    <method selector="layoutManager">
      <retval></retval>
    </method>
    <method selector="layoutParagraphAtPoint:">
      <arg name="lineFragmentOrigin"></arg>
      <retval></retval>
    </method>
    <method selector="lineFragmentPadding">
      <retval></retval>
    </method>
    <method selector="lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:">
      <arg name="glyphIndex"></arg>
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="paragraphCharacterRange">
      <retval></retval>
    </method>
    <method selector="paragraphGlyphRange">
      <retval></retval>
    </method>
    <method selector="paragraphSeparatorCharacterRange">
      <retval></retval>
    </method>
    <method selector="paragraphSeparatorGlyphRange">
      <retval></retval>
    </method>
    <method selector="paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:">
      <arg name="glyphIndex"></arg>
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:">
      <arg name="glyphIndex"></arg>
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="printingAdjustmentInLayoutManager:forNominallySpacedGlyphRange:packedGlyphs:count:">
      <arg name="layoutMgr"></arg>
      <arg name="nominallySpacedGlyphsRange"></arg>
      <arg name="packedGlyphs"></arg>
      <arg name="packedGlyphsCount"></arg>
      <retval></retval>
    </method>
    <method selector="setAttachmentSize:forGlyphRange:">
      <arg name="attachmentSize"></arg>
      <arg name="glyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="setAttributedString:">
      <arg name="attrString"></arg>
      <retval></retval>
    </method>
    <method selector="setBidiLevels:forGlyphRange:">
      <arg name="levels"></arg>
      <arg name="glyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="setBidiProcessingEnabled:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setDrawsOutsideLineFragment:forGlyphRange:">
      <arg name="flag"></arg>
      <arg name="glyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="setHardInvalidation:forGlyphRange:">
      <arg name="flag"></arg>
      <arg name="glyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="setHyphenationFactor:">
      <arg name="factor"></arg>
      <retval></retval>
    </method>
    <method selector="setLineFragmentPadding:">
      <arg name="padding"></arg>
      <retval></retval>
    </method>
    <method selector="setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:">
      <arg name="fragmentRect"></arg>
      <arg name="glyphRange"></arg>
      <arg name="usedRect"></arg>
      <arg name="baselineOffset"></arg>
      <retval></retval>
    </method>
    <method selector="setLocation:withAdvancements:forStartOfGlyphRange:">
      <arg name="location"></arg>
      <arg name="advancements"></arg>
      <arg name="glyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="setNotShownAttribute:forGlyphRange:">
      <arg name="flag"></arg>
      <arg name="glyphRange"></arg>
      <retval></retval>
    </method>
    <method selector="setParagraphGlyphRange:separatorGlyphRange:">
      <arg name="paragraphRange"></arg>
      <arg name="paragraphSeparatorRange"></arg>
      <retval></retval>
    </method>
    <method selector="setTypesetterBehavior:">
      <arg name="behavior"></arg>
      <retval></retval>
    </method>
    <method selector="setUsesFontLeading:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="sharedSystemTypesetter">
      <retval></retval>
    </method>
    <method class_method="true" selector="sharedSystemTypesetterForBehavior:">
      <arg name="theBehavior"></arg>
      <retval></retval>
    </method>
    <method selector="shouldBreakLineByHyphenatingBeforeCharacterAtIndex:">
      <arg name="charIndex"></arg>
      <retval></retval>
    </method>
    <method selector="shouldBreakLineByWordBeforeCharacterAtIndex:">
      <arg name="charIndex"></arg>
      <retval></retval>
    </method>
    <method selector="substituteFontForFont:">
      <arg name="originalFont"></arg>
      <retval></retval>
    </method>
    <method selector="substituteGlyphsInRange:withGlyphs:">
      <arg name="glyphRange"></arg>
      <arg name="glyphs"></arg>
      <retval></retval>
    </method>
    <method selector="textContainers">
      <retval></retval>
    </method>
    <method selector="textTabForGlyphLocation:writingDirection:maxLocation:">
      <arg name="glyphLocation"></arg>
      <arg name="direction"></arg>
      <arg name="maxLocation"></arg>
      <retval></retval>
    </method>
    <method selector="typesetterBehavior">
      <retval></retval>
    </method>
    <method selector="usesFontLeading">
      <retval></retval>
    </method>
    <method selector="willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:">
      <arg name="lineRect"></arg>
      <arg name="glyphRange"></arg>
      <arg name="usedRect"></arg>
      <arg name="baselineOffset"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSURL" swt_gen="true">
    <method class_method="true" selector="URLFromPasteboard:" swt_gen="true">
      <arg name="pasteBoard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeToPasteboard:" swt_gen="true">
      <arg name="pasteBoard" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
  </class>
  <class name="NSUserDefaultsController" swt_superclass="NSController">
    <method selector="appliesImmediately">
      <retval></retval>
    </method>
    <method selector="defaults">
      <retval></retval>
    </method>
    <method selector="hasUnappliedChanges">
      <retval></retval>
    </method>
    <method selector="initWithDefaults:initialValues:">
      <arg name="defaults"></arg>
      <arg name="initialValues"></arg>
      <retval></retval>
    </method>
    <method selector="initialValues">
      <retval></retval>
    </method>
    <method selector="revert:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="revertToInitialValues:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="save:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="setAppliesImmediately:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setInitialValues:">
      <arg name="initialValues"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="sharedUserDefaultsController">
      <retval></retval>
    </method>
    <method selector="values">
      <retval></retval>
    </method>
  </class>
  <class name="NSView" swt_gen="mixed" swt_superclass="NSResponder">
    <method selector="acceptsFirstMouse:">
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method selector="addCursorRect:cursor:">
      <arg name="aRect"></arg>
      <arg name="anObj"></arg>
      <retval></retval>
    </method>
    <method selector="addSubview:" swt_gen="true">
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addSubview:positioned:relativeTo:" swt_gen="true">
      <arg name="aView" swt_gen="true"></arg>
      <arg name="place" swt_gen="true"></arg>
      <arg name="otherView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="addToolTipRect:owner:userData:">
      <arg name="aRect"></arg>
      <arg name="anObject"></arg>
      <arg name="data"></arg>
      <retval></retval>
    </method>
    <method selector="addTrackingArea:">
      <arg name="trackingArea"></arg>
      <retval></retval>
    </method>
    <method selector="addTrackingRect:owner:userData:assumeInside:">
      <arg name="aRect"></arg>
      <arg name="anObject"></arg>
      <arg name="data"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="adjustPageHeightNew:top:bottom:limit:">
      <arg name="newBottom"></arg>
      <arg name="oldTop"></arg>
      <arg name="oldBottom"></arg>
      <arg name="bottomLimit"></arg>
      <retval></retval>
    </method>
    <method selector="adjustPageWidthNew:left:right:limit:">
      <arg name="newRight"></arg>
      <arg name="oldLeft"></arg>
      <arg name="oldRight"></arg>
      <arg name="rightLimit"></arg>
      <retval></retval>
    </method>
    <method selector="adjustScroll:">
      <arg name="newVisible"></arg>
      <retval></retval>
    </method>
    <method selector="allocateGState">
      <retval></retval>
    </method>
    <method selector="alphaValue">
      <retval></retval>
    </method>
    <method selector="ancestorSharedWithView:">
      <arg name="aView"></arg>
      <retval></retval>
    </method>
    <method selector="autoresizesSubviews">
      <retval></retval>
    </method>
    <method selector="autoresizingMask">
      <retval></retval>
    </method>
    <method selector="autoscroll:">
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method selector="backgroundFilters">
      <retval></retval>
    </method>
    <method selector="beginDocument" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="beginPageInRect:atPlacement:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <arg name="location" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="bitmapImageRepForCachingDisplayInRect:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="bounds" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="boundsRotation">
      <retval></retval>
    </method>
    <method selector="cacheDisplayInRect:toBitmapImageRep:">
      <arg name="rect"></arg>
      <arg name="bitmapImageRep"></arg>
      <retval></retval>
    </method>
    <method selector="canBecomeKeyView">
      <retval></retval>
    </method>
    <method selector="canDraw">
      <retval></retval>
    </method>
    <method selector="centerScanRect:">
      <arg name="aRect"></arg>
      <retval></retval>
    </method>
    <method selector="compositingFilter">
      <retval></retval>
    </method>
    <method selector="contentFilters">
      <retval></retval>
    </method>
    <method selector="convertPoint:fromView:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertPoint:toView:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertPointFromBase:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertPointToBase:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertRect:fromView:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertRect:toView:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertRectFromBase:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertRectToBase:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertSize:fromView:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertSize:toView:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertSizeFromBase:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertSizeToBase:" swt_gen="true">
      <arg name="aSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dataWithEPSInsideRect:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="dataWithPDFInsideRect:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="defaultFocusRingType">
      <retval></retval>
    </method>
    <method class_method="true" selector="defaultMenu">
      <retval></retval>
    </method>
    <method selector="didAddSubview:">
      <arg name="subview"></arg>
      <retval></retval>
    </method>
    <method selector="discardCursorRects">
      <retval></retval>
    </method>
    <method selector="display">
      <retval></retval>
    </method>
    <method selector="displayIfNeeded" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="displayIfNeededIgnoringOpacity">
      <retval></retval>
    </method>
    <method selector="displayIfNeededInRect:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="displayIfNeededInRectIgnoringOpacity:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="displayRect:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="displayRectIgnoringOpacity:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="displayRectIgnoringOpacity:inContext:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <arg name="context" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dragFile:fromRect:slideBack:event:">
      <arg name="filename"></arg>
      <arg name="rect"></arg>
      <arg name="aFlag"></arg>
      <arg name="event"></arg>
      <retval></retval>
    </method>
    <method selector="dragImage:at:offset:event:pasteboard:source:slideBack:" swt_gen="true">
      <arg name="anImage" swt_gen="true"></arg>
      <arg name="viewLocation" swt_gen="true"></arg>
      <arg name="initialOffset" swt_gen="true"></arg>
      <arg name="event" swt_gen="true"></arg>
      <arg name="pboard" swt_gen="true"></arg>
      <arg name="sourceObj" swt_gen="true"></arg>
      <arg name="slideFlag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="dragPromisedFilesOfTypes:fromRect:source:slideBack:event:">
      <arg name="typeArray"></arg>
      <arg name="rect"></arg>
      <arg name="sourceObject"></arg>
      <arg name="aFlag"></arg>
      <arg name="event"></arg>
      <retval></retval>
    </method>
    <method selector="drawPageBorderWithSize:">
      <arg name="borderSize"></arg>
      <retval></retval>
    </method>
    <method selector="drawRect:" swt_gen="true">
      <arg name="rect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="drawSheetBorderWithSize:">
      <arg name="borderSize"></arg>
      <retval></retval>
    </method>
    <method selector="enclosingMenuItem">
      <retval></retval>
    </method>
    <method selector="enclosingScrollView">
      <retval></retval>
    </method>
    <method selector="endDocument" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="endPage" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="enterFullScreenMode:withOptions:">
      <arg name="screen"></arg>
      <arg name="options"></arg>
      <retval></retval>
    </method>
    <method selector="exitFullScreenModeWithOptions:">
      <arg name="options"></arg>
      <retval></retval>
    </method>
    <method selector="focusRingType">
      <retval></retval>
    </method>
    <method class_method="true" selector="focusView">
      <retval></retval>
    </method>
    <method selector="frame" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="frameCenterRotation">
      <retval></retval>
    </method>
    <method selector="frameRotation">
      <retval></retval>
    </method>
    <method selector="gState">
      <retval></retval>
    </method>
    <method selector="getRectsBeingDrawn:count:">
      <arg name="rects"></arg>
      <arg name="count"></arg>
      <retval></retval>
    </method>
    <method selector="getRectsExposedDuringLiveResize:count:">
      <arg name="exposedRects"></arg>
      <arg name="count"></arg>
      <retval></retval>
    </method>
    <method selector="heightAdjustLimit">
      <retval></retval>
    </method>
    <method selector="hitTest:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="inLiveResize">
      <retval></retval>
    </method>
    <method selector="initWithFrame:" swt_gen="true">
      <arg name="frameRect" swt_gen="true"></arg>
      <retval swt_gen="true" swt_java_type="NSView"></retval>
    </method>
    <method selector="isDescendantOf:">
      <arg name="aView"></arg>
      <retval></retval>
    </method>
    <method selector="isFlipped" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isHidden">
      <retval></retval>
    </method>
    <method selector="isHiddenOrHasHiddenAncestor">
      <retval></retval>
    </method>
    <method selector="isInFullScreenMode">
      <retval></retval>
    </method>
    <method selector="isOpaque" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isRotatedFromBase">
      <retval></retval>
    </method>
    <method selector="isRotatedOrScaledFromBase">
      <retval></retval>
    </method>
    <method selector="knowsPageRange:">
      <arg name="range"></arg>
      <retval></retval>
    </method>
    <method selector="layer">
      <retval></retval>
    </method>
    <method selector="locationOfPrintRect:">
      <arg name="aRect"></arg>
      <retval></retval>
    </method>
    <method selector="lockFocus" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="lockFocusIfCanDraw">
      <retval></retval>
    </method>
    <method selector="lockFocusIfCanDrawInContext:">
      <arg name="context"></arg>
      <retval></retval>
    </method>
    <method selector="menuForEvent:" swt_gen="true">
      <arg name="event" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="mouse:inRect:">
      <arg name="aPoint"></arg>
      <arg name="aRect"></arg>
      <retval></retval>
    </method>
    <method selector="mouseDownCanMoveWindow">
      <retval></retval>
    </method>
    <method selector="needsDisplay">
      <retval></retval>
    </method>
    <method selector="needsPanelToBecomeKey">
      <retval></retval>
    </method>
    <method selector="needsToDrawRect:">
      <arg name="aRect"></arg>
      <retval></retval>
    </method>
    <method selector="nextKeyView">
      <retval></retval>
    </method>
    <method selector="nextValidKeyView">
      <retval></retval>
    </method>
    <method selector="opaqueAncestor">
      <retval></retval>
    </method>
    <method selector="pageFooter">
      <retval></retval>
    </method>
    <method selector="pageHeader">
      <retval></retval>
    </method>
    <method selector="performKeyEquivalent:">
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method selector="performMnemonic:">
      <arg name="theString"></arg>
      <retval></retval>
    </method>
    <method selector="postsBoundsChangedNotifications">
      <retval></retval>
    </method>
    <method selector="postsFrameChangedNotifications">
      <retval></retval>
    </method>
    <method selector="preservesContentDuringLiveResize">
      <retval></retval>
    </method>
    <method selector="previousKeyView">
      <retval></retval>
    </method>
    <method selector="previousValidKeyView">
      <retval></retval>
    </method>
    <method selector="print:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="printJobTitle">
      <retval></retval>
    </method>
    <method selector="rectForPage:">
      <arg name="page"></arg>
      <retval></retval>
    </method>
    <method selector="rectPreservedDuringLiveResize">
      <retval></retval>
    </method>
    <method selector="reflectScrolledClipView:">
      <arg name="aClipView"></arg>
      <retval></retval>
    </method>
    <method selector="registerForDraggedTypes:" swt_gen="true">
      <arg name="newTypes" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="registeredDraggedTypes">
      <retval></retval>
    </method>
    <method selector="releaseGState">
      <retval></retval>
    </method>
    <method selector="removeAllToolTips">
      <retval></retval>
    </method>
    <method selector="removeCursorRect:cursor:">
      <arg name="aRect"></arg>
      <arg name="anObj"></arg>
      <retval></retval>
    </method>
    <method selector="removeFromSuperview" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="removeFromSuperviewWithoutNeedingDisplay">
      <retval></retval>
    </method>
    <method selector="removeToolTip:">
      <arg name="tag"></arg>
      <retval></retval>
    </method>
    <method selector="removeTrackingArea:">
      <arg name="trackingArea"></arg>
      <retval></retval>
    </method>
    <method selector="removeTrackingRect:">
      <arg name="tag"></arg>
      <retval></retval>
    </method>
    <method selector="renewGState">
      <retval></retval>
    </method>
    <method selector="replaceSubview:with:">
      <arg name="oldView"></arg>
      <arg name="newView"></arg>
      <retval></retval>
    </method>
    <method selector="resetCursorRects">
      <retval></retval>
    </method>
    <method selector="resizeSubviewsWithOldSize:">
      <arg name="oldSize"></arg>
      <retval></retval>
    </method>
    <method selector="resizeWithOldSuperviewSize:">
      <arg name="oldSize"></arg>
      <retval></retval>
    </method>
    <method selector="rotateByAngle:">
      <arg name="angle"></arg>
      <retval></retval>
    </method>
    <method selector="rulerView:didAddMarker:">
      <arg name="ruler"></arg>
      <arg name="marker"></arg>
      <retval></retval>
    </method>
    <method selector="rulerView:didMoveMarker:">
      <arg name="ruler"></arg>
      <arg name="marker"></arg>
      <retval></retval>
    </method>
    <method selector="rulerView:didRemoveMarker:">
      <arg name="ruler"></arg>
      <arg name="marker"></arg>
      <retval></retval>
    </method>
    <method selector="rulerView:handleMouseDown:">
      <arg name="ruler"></arg>
      <arg name="event"></arg>
      <retval></retval>
    </method>
    <method selector="rulerView:shouldAddMarker:">
      <arg name="ruler"></arg>
      <arg name="marker"></arg>
      <retval></retval>
    </method>
    <method selector="rulerView:shouldMoveMarker:">
      <arg name="ruler"></arg>
      <arg name="marker"></arg>
      <retval></retval>
    </method>
    <method selector="rulerView:shouldRemoveMarker:">
      <arg name="ruler"></arg>
      <arg name="marker"></arg>
      <retval></retval>
    </method>
    <method selector="rulerView:willAddMarker:atLocation:">
      <arg name="ruler"></arg>
      <arg name="marker"></arg>
      <arg name="location"></arg>
      <retval></retval>
    </method>
    <method selector="rulerView:willMoveMarker:toLocation:">
      <arg name="ruler"></arg>
      <arg name="marker"></arg>
      <arg name="location"></arg>
      <retval></retval>
    </method>
    <method selector="rulerView:willSetClientView:">
      <arg name="ruler"></arg>
      <arg name="newClient"></arg>
      <retval></retval>
    </method>
    <method selector="scaleUnitSquareToSize:">
      <arg name="newUnitSize"></arg>
      <retval></retval>
    </method>
    <method selector="scrollClipView:toPoint:">
      <arg name="aClipView"></arg>
      <arg name="aPoint"></arg>
      <retval></retval>
    </method>
    <method selector="scrollPoint:">
      <arg name="aPoint"></arg>
      <retval></retval>
    </method>
    <method selector="scrollRect:by:">
      <arg name="aRect"></arg>
      <arg name="delta"></arg>
      <retval></retval>
    </method>
    <method selector="scrollRectToVisible:" swt_gen="true">
      <arg name="aRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAlphaValue:">
      <arg name="viewAlpha"></arg>
      <retval></retval>
    </method>
    <method selector="setAutoresizesSubviews:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAutoresizingMask:" swt_gen="true">
      <arg name="mask" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackgroundFilters:">
      <arg name="filters"></arg>
      <retval></retval>
    </method>
    <method selector="setBounds:">
      <arg name="aRect"></arg>
      <retval></retval>
    </method>
    <method selector="setBoundsOrigin:">
      <arg name="newOrigin"></arg>
      <retval></retval>
    </method>
    <method selector="setBoundsRotation:">
      <arg name="angle"></arg>
      <retval></retval>
    </method>
    <method selector="setBoundsSize:">
      <arg name="newSize"></arg>
      <retval></retval>
    </method>
    <method selector="setCompositingFilter:">
      <arg name="filter"></arg>
      <retval></retval>
    </method>
    <method selector="setContentFilters:">
      <arg name="filters"></arg>
      <retval></retval>
    </method>
    <method selector="setFocusRingType:" swt_gen="true">
      <arg name="focusRingType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFrame:" swt_gen="true">
      <arg name="frameRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFrameCenterRotation:">
      <arg name="angle"></arg>
      <retval></retval>
    </method>
    <method selector="setFrameOrigin:" swt_gen="true">
      <arg name="newOrigin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFrameRotation:">
      <arg name="angle"></arg>
      <retval></retval>
    </method>
    <method selector="setFrameSize:" swt_gen="true">
      <arg name="newSize" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHidden:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setKeyboardFocusRingNeedsDisplayInRect:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="setLayer:">
      <arg name="newLayer"></arg>
      <retval></retval>
    </method>
    <method selector="setNeedsDisplay:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNeedsDisplayInRect:" swt_gen="true">
      <arg name="invalidRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setNextKeyView:">
      <arg name="next"></arg>
      <retval></retval>
    </method>
    <method selector="setPostsBoundsChangedNotifications:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setPostsFrameChangedNotifications:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setShadow:">
      <arg name="shadow"></arg>
      <retval></retval>
    </method>
    <method selector="setSubviews:">
      <arg name="newSubviews"></arg>
      <retval></retval>
    </method>
    <method selector="setToolTip:" swt_gen="true">
      <arg name="string" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setUpGState">
      <retval></retval>
    </method>
    <method selector="setWantsLayer:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="shadow">
      <retval></retval>
    </method>
    <method selector="shouldDelayWindowOrderingForEvent:">
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method selector="shouldDrawColor">
      <retval></retval>
    </method>
    <method selector="sortSubviewsUsingFunction:context:">
      <arg name="compare">
        <arg></arg>
        <arg></arg>
        <arg></arg>
        <retval></retval>
      </arg>
      <arg name="context"></arg>
      <retval></retval>
    </method>
    <method selector="subviews" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="superview" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="tag">
      <retval></retval>
    </method>
    <method selector="toolTip">
      <retval></retval>
    </method>
    <method selector="trackingAreas">
      <retval></retval>
    </method>
    <method selector="translateOriginToPoint:">
      <arg name="translation"></arg>
      <retval></retval>
    </method>
    <method selector="translateRectsNeedingDisplayInRect:by:">
      <arg name="clipRect"></arg>
      <arg name="delta"></arg>
      <retval></retval>
    </method>
    <method selector="unlockFocus" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="unregisterDraggedTypes" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="updateTrackingAreas">
      <retval></retval>
    </method>
    <method selector="viewDidEndLiveResize">
      <retval></retval>
    </method>
    <method selector="viewDidHide">
      <retval></retval>
    </method>
    <method selector="viewDidMoveToSuperview">
      <retval></retval>
    </method>
    <method selector="viewDidMoveToWindow">
      <retval></retval>
    </method>
    <method selector="viewDidUnhide">
      <retval></retval>
    </method>
    <method selector="viewWillDraw">
      <retval></retval>
    </method>
    <method selector="viewWillMoveToSuperview:">
      <arg name="newSuperview"></arg>
      <retval></retval>
    </method>
    <method selector="viewWillMoveToWindow:">
      <arg name="newWindow"></arg>
      <retval></retval>
    </method>
    <method selector="viewWillStartLiveResize">
      <retval></retval>
    </method>
    <method selector="viewWithTag:">
      <arg name="aTag"></arg>
      <retval></retval>
    </method>
    <method selector="visibleRect" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="wantsDefaultClipping">
      <retval></retval>
    </method>
    <method selector="wantsLayer">
      <retval></retval>
    </method>
    <method selector="widthAdjustLimit">
      <retval></retval>
    </method>
    <method selector="willRemoveSubview:">
      <arg name="subview"></arg>
      <retval></retval>
    </method>
    <method selector="window" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="writeEPSInsideRect:toPasteboard:">
      <arg name="rect"></arg>
      <arg name="pasteboard"></arg>
      <retval></retval>
    </method>
    <method selector="writePDFInsideRect:toPasteboard:">
      <arg name="rect"></arg>
      <arg name="pasteboard"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSViewAnimation" swt_superclass="NSAnimation">
    <method selector="initWithViewAnimations:">
      <arg name="viewAnimations"></arg>
      <retval></retval>
    </method>
    <method selector="setViewAnimations:">
      <arg name="viewAnimations"></arg>
      <retval></retval>
    </method>
    <method selector="viewAnimations">
      <retval></retval>
    </method>
  </class>
  <class name="NSViewController" swt_superclass="NSResponder">
    <method selector="commitEditing">
      <retval></retval>
    </method>
    <method selector="commitEditingWithDelegate:didCommitSelector:contextInfo:">
      <arg name="delegate"></arg>
      <arg name="didCommitSelector"></arg>
      <arg name="contextInfo"></arg>
      <retval></retval>
    </method>
    <method selector="discardEditing">
      <retval></retval>
    </method>
    <method selector="initWithNibName:bundle:">
      <arg name="nibNameOrNil"></arg>
      <arg name="nibBundleOrNil"></arg>
      <retval></retval>
    </method>
    <method selector="loadView">
      <retval></retval>
    </method>
    <method selector="nibBundle">
      <retval></retval>
    </method>
    <method selector="nibName">
      <retval></retval>
    </method>
    <method selector="representedObject">
      <retval></retval>
    </method>
    <method selector="setRepresentedObject:">
      <arg name="representedObject"></arg>
      <retval></retval>
    </method>
    <method selector="setTitle:">
      <arg name="title"></arg>
      <retval></retval>
    </method>
    <method selector="setView:">
      <arg name="view"></arg>
      <retval></retval>
    </method>
    <method selector="title">
      <retval></retval>
    </method>
    <method selector="view">
      <retval></retval>
    </method>
  </class>
  <class name="NSWindow" swt_gen="mixed" swt_superclass="NSResponder">
    <method selector="acceptsMouseMovedEvents">
      <retval></retval>
    </method>
    <method selector="addChildWindow:ordered:" swt_gen="true">
      <arg name="childWin" swt_gen="true"></arg>
      <arg name="place" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="allowsToolTipsWhenApplicationIsInactive">
      <retval></retval>
    </method>
    <method selector="alphaValue" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="animationResizeTime:">
      <arg name="newFrame"></arg>
      <retval></retval>
    </method>
    <method selector="areCursorRectsEnabled">
      <retval></retval>
    </method>
    <method selector="aspectRatio">
      <retval></retval>
    </method>
    <method selector="attachedSheet">
      <retval></retval>
    </method>
    <method selector="autorecalculatesContentBorderThicknessForEdge:">
      <arg name="edge"></arg>
      <retval></retval>
    </method>
    <method selector="autorecalculatesKeyViewLoop">
      <retval></retval>
    </method>
    <method selector="backgroundColor">
      <retval></retval>
    </method>
    <method selector="backingLocation">
      <retval></retval>
    </method>
    <method selector="backingType">
      <retval></retval>
    </method>
    <method selector="becomeKeyWindow">
      <retval></retval>
    </method>
    <method selector="becomeMainWindow">
      <retval></retval>
    </method>
    <method selector="cacheImageInRect:">
      <arg name="aRect"></arg>
      <retval></retval>
    </method>
    <method selector="canBeVisibleOnAllSpaces">
      <retval></retval>
    </method>
    <method selector="canBecomeKeyWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="canBecomeMainWindow">
      <retval></retval>
    </method>
    <method selector="canBecomeVisibleWithoutLogin">
      <retval></retval>
    </method>
    <method selector="canHide">
      <retval></retval>
    </method>
    <method selector="canStoreColor">
      <retval></retval>
    </method>
    <method selector="cascadeTopLeftFromPoint:" swt_gen="true">
      <arg name="topLeftPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="center">
      <retval></retval>
    </method>
    <method selector="childWindows">
      <retval></retval>
    </method>
    <method selector="close" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="collectionBehavior">
      <retval></retval>
    </method>
    <method selector="constrainFrameRect:toScreen:">
      <arg name="frameRect"></arg>
      <arg name="screen"></arg>
      <retval></retval>
    </method>
    <method selector="contentAspectRatio">
      <retval></retval>
    </method>
    <method selector="contentBorderThicknessForEdge:">
      <arg name="edge"></arg>
      <retval></retval>
    </method>
    <method selector="contentMaxSize">
      <retval></retval>
    </method>
    <method selector="contentMinSize">
      <retval></retval>
    </method>
    <method selector="contentRectForFrameRect:" swt_gen="true">
      <arg name="frameRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="contentRectForFrameRect:styleMask:">
      <arg name="fRect"></arg>
      <arg name="aStyle"></arg>
      <retval></retval>
    </method>
    <method selector="contentResizeIncrements">
      <retval></retval>
    </method>
    <method selector="contentView" swt_gen="true">
      <retval swt_gen="true" swt_java_type="NSView"></retval>
    </method>
    <method selector="convertBaseToScreen:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="convertScreenToBase:" swt_gen="true">
      <arg name="aPoint" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="currentEvent">
      <retval></retval>
    </method>
    <method selector="dataWithEPSInsideRect:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="dataWithPDFInsideRect:">
      <arg name="rect"></arg>
      <retval></retval>
    </method>
    <method selector="deepestScreen">
      <retval></retval>
    </method>
    <method selector="defaultButtonCell">
      <retval></retval>
    </method>
    <method class_method="true" selector="defaultDepthLimit">
      <retval></retval>
    </method>
    <method selector="delegate">
      <retval></retval>
    </method>
    <method selector="deminiaturize:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="depthLimit">
      <retval></retval>
    </method>
    <method selector="deviceDescription">
      <retval></retval>
    </method>
    <method selector="disableCursorRects" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="disableFlushWindow">
      <retval></retval>
    </method>
    <method selector="disableKeyEquivalentForDefaultButtonCell">
      <retval></retval>
    </method>
    <method selector="disableScreenUpdatesUntilFlush">
      <retval></retval>
    </method>
    <method selector="discardCachedImage">
      <retval></retval>
    </method>
    <method selector="discardCursorRects">
      <retval></retval>
    </method>
    <method selector="discardEventsMatchingMask:beforeEvent:">
      <arg name="mask"></arg>
      <arg name="lastEvent"></arg>
      <retval></retval>
    </method>
    <method selector="display">
      <retval></retval>
    </method>
    <method selector="displayIfNeeded">
      <retval></retval>
    </method>
    <method selector="displaysWhenScreenProfileChanges">
      <retval></retval>
    </method>
    <method selector="dockTile">
      <retval></retval>
    </method>
    <method selector="dragImage:at:offset:event:pasteboard:source:slideBack:">
      <arg name="anImage"></arg>
      <arg name="baseLocation"></arg>
      <arg name="initialOffset"></arg>
      <arg name="event"></arg>
      <arg name="pboard"></arg>
      <arg name="sourceObj"></arg>
      <arg name="slideFlag"></arg>
      <retval></retval>
    </method>
    <method selector="drawers">
      <retval></retval>
    </method>
    <method selector="enableCursorRects">
      <retval></retval>
    </method>
    <method selector="enableFlushWindow">
      <retval></retval>
    </method>
    <method selector="enableKeyEquivalentForDefaultButtonCell">
      <retval></retval>
    </method>
    <method selector="endEditingFor:">
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
    <method selector="fieldEditor:forObject:" swt_gen="true">
      <arg name="createFlag" swt_gen="true"></arg>
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="firstResponder" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="flushWindow">
      <retval></retval>
    </method>
    <method selector="flushWindowIfNeeded">
      <retval></retval>
    </method>
    <method selector="frame" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="frameAutosaveName">
      <retval></retval>
    </method>
    <method selector="frameRectForContentRect:" swt_gen="true">
      <arg name="contentRect" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="frameRectForContentRect:styleMask:">
      <arg name="cRect"></arg>
      <arg name="aStyle"></arg>
      <retval></retval>
    </method>
    <method selector="gState">
      <retval></retval>
    </method>
    <method selector="graphicsContext" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="handleCloseScriptCommand:">
      <arg name="command"></arg>
      <retval></retval>
    </method>
    <method selector="handlePrintScriptCommand:">
      <arg name="command"></arg>
      <retval></retval>
    </method>
    <method selector="handleSaveScriptCommand:">
      <arg name="command"></arg>
      <retval></retval>
    </method>
    <method selector="hasCloseBox">
      <retval></retval>
    </method>
    <method selector="hasDynamicDepthLimit">
      <retval></retval>
    </method>
    <method selector="hasShadow">
      <retval></retval>
    </method>
    <method selector="hasTitleBar">
      <retval></retval>
    </method>
    <method selector="hidesOnDeactivate">
      <retval></retval>
    </method>
    <method selector="ignoresMouseEvents">
      <retval></retval>
    </method>
    <method selector="initWithContentRect:styleMask:backing:defer:" swt_gen="true">
      <arg name="contentRect" swt_gen="true"></arg>
      <arg name="aStyle" swt_gen="true"></arg>
      <arg name="bufferingType" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true" swt_java_type="NSWindow"></retval>
    </method>
    <method selector="initWithContentRect:styleMask:backing:defer:screen:" swt_gen="true">
      <arg name="contentRect" swt_gen="true"></arg>
      <arg name="aStyle" swt_gen="true"></arg>
      <arg name="bufferingType" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <arg name="screen" swt_gen="true"></arg>
      <retval swt_gen="true" swt_java_type="NSWindow"></retval>
    </method>
    <method selector="initWithWindowRef:">
      <arg name="windowRef"></arg>
      <retval></retval>
    </method>
    <method selector="initialFirstResponder">
      <retval></retval>
    </method>
    <method selector="invalidateCursorRectsForView:">
      <arg name="aView"></arg>
      <retval></retval>
    </method>
    <method selector="invalidateShadow">
      <retval></retval>
    </method>
    <method selector="isAutodisplay">
      <retval></retval>
    </method>
    <method selector="isDocumentEdited">
      <retval></retval>
    </method>
    <method selector="isExcludedFromWindowsMenu">
      <retval></retval>
    </method>
    <method selector="isFloatingPanel">
      <retval></retval>
    </method>
    <method selector="isFlushWindowDisabled">
      <retval></retval>
    </method>
    <method selector="isKeyWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isMainWindow">
      <retval></retval>
    </method>
    <method selector="isMiniaturizable">
      <retval></retval>
    </method>
    <method selector="isMiniaturized">
      <retval></retval>
    </method>
    <method selector="isModalPanel">
      <retval></retval>
    </method>
    <method selector="isMovableByWindowBackground">
      <retval></retval>
    </method>
    <method selector="isOneShot">
      <retval></retval>
    </method>
    <method selector="isOpaque">
      <retval></retval>
    </method>
    <method selector="isReleasedWhenClosed">
      <retval></retval>
    </method>
    <method selector="isResizable">
      <retval></retval>
    </method>
    <method selector="isSheet">
      <retval></retval>
    </method>
    <method selector="isVisible" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="isZoomable">
      <retval></retval>
    </method>
    <method selector="isZoomed">
      <retval></retval>
    </method>
    <method selector="keyDown:">
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method selector="keyViewSelectionDirection">
      <retval></retval>
    </method>
    <method selector="level">
      <retval></retval>
    </method>
    <method selector="makeFirstResponder:" swt_gen="true">
      <arg name="aResponder" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makeKeyAndOrderFront:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="makeKeyWindow">
      <retval></retval>
    </method>
    <method selector="makeMainWindow">
      <retval></retval>
    </method>
    <method selector="maxSize">
      <retval></retval>
    </method>
    <method class_method="true" selector="menuChanged:">
      <arg name="menu"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="minFrameWidthWithTitle:styleMask:">
      <arg name="aTitle"></arg>
      <arg name="aStyle"></arg>
      <retval></retval>
    </method>
    <method selector="minSize">
      <retval></retval>
    </method>
    <method selector="miniaturize:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="miniwindowImage">
      <retval></retval>
    </method>
    <method selector="miniwindowTitle">
      <retval></retval>
    </method>
    <method selector="mouseLocationOutsideOfEventStream" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="nextEventMatchingMask:">
      <arg name="mask"></arg>
      <retval></retval>
    </method>
    <method selector="nextEventMatchingMask:untilDate:inMode:dequeue:">
      <arg name="mask"></arg>
      <arg name="expiration"></arg>
      <arg name="mode"></arg>
      <arg name="deqFlag"></arg>
      <retval></retval>
    </method>
    <method selector="orderBack:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="orderFront:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderFrontRegardless" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderOut:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="orderWindow:relativeTo:">
      <arg name="place"></arg>
      <arg name="otherWin"></arg>
      <retval></retval>
    </method>
    <method selector="orderedIndex">
      <retval></retval>
    </method>
    <method selector="parentWindow" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performClose:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="performMiniaturize:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="performZoom:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="postEvent:atStart:">
      <arg name="event"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="preferredBackingLocation">
      <retval></retval>
    </method>
    <method selector="preservesContentDuringLiveResize">
      <retval></retval>
    </method>
    <method selector="print:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="recalculateKeyViewLoop">
      <retval></retval>
    </method>
    <method selector="registerForDraggedTypes:">
      <arg name="newTypes"></arg>
      <retval></retval>
    </method>
    <method selector="removeChildWindow:" swt_gen="true">
      <arg name="childWin" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="removeFrameUsingName:">
      <arg name="name"></arg>
      <retval></retval>
    </method>
    <method selector="representedFilename">
      <retval></retval>
    </method>
    <method selector="representedURL">
      <retval></retval>
    </method>
    <method selector="resetCursorRects">
      <retval></retval>
    </method>
    <method selector="resignKeyWindow">
      <retval></retval>
    </method>
    <method selector="resignMainWindow">
      <retval></retval>
    </method>
    <method selector="resizeFlags">
      <retval></retval>
    </method>
    <method selector="resizeIncrements">
      <retval></retval>
    </method>
    <method selector="restoreCachedImage">
      <retval></retval>
    </method>
    <method selector="runToolbarCustomizationPalette:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="saveFrameUsingName:">
      <arg name="name"></arg>
      <retval></retval>
    </method>
    <method selector="screen" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="selectKeyViewFollowingView:">
      <arg name="aView"></arg>
      <retval></retval>
    </method>
    <method selector="selectKeyViewPrecedingView:">
      <arg name="aView"></arg>
      <retval></retval>
    </method>
    <method selector="selectNextKeyView:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="selectPreviousKeyView:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="sendEvent:">
      <arg name="theEvent"></arg>
      <retval></retval>
    </method>
    <method selector="setAcceptsMouseMovedEvents:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAllowsToolTipsWhenApplicationIsInactive:">
      <arg name="allowWhenInactive"></arg>
      <retval></retval>
    </method>
    <method selector="setAlphaValue:" swt_gen="true">
      <arg name="windowAlpha" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setAspectRatio:">
      <arg name="ratio"></arg>
      <retval></retval>
    </method>
    <method selector="setAutodisplay:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setAutorecalculatesContentBorderThickness:forEdge:">
      <arg name="flag"></arg>
      <arg name="edge"></arg>
      <retval></retval>
    </method>
    <method selector="setAutorecalculatesKeyViewLoop:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setBackgroundColor:" swt_gen="true">
      <arg name="color" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setBackingType:">
      <arg name="bufferingType"></arg>
      <retval></retval>
    </method>
    <method selector="setCanBeVisibleOnAllSpaces:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setCanBecomeVisibleWithoutLogin:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setCanHide:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setCollectionBehavior:">
      <arg name="behavior"></arg>
      <retval></retval>
    </method>
    <method selector="setContentAspectRatio:">
      <arg name="ratio"></arg>
      <retval></retval>
    </method>
    <method selector="setContentBorderThickness:forEdge:">
      <arg name="thickness"></arg>
      <arg name="edge"></arg>
      <retval></retval>
    </method>
    <method selector="setContentMaxSize:">
      <arg name="size"></arg>
      <retval></retval>
    </method>
    <method selector="setContentMinSize:">
      <arg name="size"></arg>
      <retval></retval>
    </method>
    <method selector="setContentResizeIncrements:">
      <arg name="increments"></arg>
      <retval></retval>
    </method>
    <method selector="setContentSize:">
      <arg name="aSize"></arg>
      <retval></retval>
    </method>
    <method selector="setContentView:" swt_gen="true">
      <arg name="aView" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDefaultButtonCell:">
      <arg name="defButt"></arg>
      <retval></retval>
    </method>
    <method selector="setDelegate:" swt_gen="true">
      <arg name="anObject" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setDepthLimit:">
      <arg name="limit"></arg>
      <retval></retval>
    </method>
    <method selector="setDisplaysWhenScreenProfileChanges:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setDocumentEdited:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setDynamicDepthLimit:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setExcludedFromWindowsMenu:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setFrame:display:" swt_gen="true">
      <arg name="frameRect" swt_gen="true"></arg>
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setFrame:display:animate:">
      <arg name="frameRect"></arg>
      <arg name="displayFlag"></arg>
      <arg name="animateFlag"></arg>
      <retval></retval>
    </method>
    <method selector="setFrameAutosaveName:">
      <arg name="name"></arg>
      <retval></retval>
    </method>
    <method selector="setFrameFromString:">
      <arg name="string"></arg>
      <retval></retval>
    </method>
    <method selector="setFrameOrigin:">
      <arg name="aPoint"></arg>
      <retval></retval>
    </method>
    <method selector="setFrameTopLeftPoint:">
      <arg name="aPoint"></arg>
      <retval></retval>
    </method>
    <method selector="setFrameUsingName:">
      <arg name="name"></arg>
      <retval></retval>
    </method>
    <method selector="setFrameUsingName:force:">
      <arg name="name"></arg>
      <arg name="force"></arg>
      <retval></retval>
    </method>
    <method selector="setHasShadow:" swt_gen="true">
      <arg name="hasShadow" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setHidesOnDeactivate:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setIgnoresMouseEvents:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setInitialFirstResponder:">
      <arg name="view"></arg>
      <retval></retval>
    </method>
    <method selector="setIsMiniaturized:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setIsVisible:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setIsZoomed:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setLevel:" swt_gen="true">
      <arg name="newLevel" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setMaxSize:">
      <arg name="size"></arg>
      <retval></retval>
    </method>
    <method selector="setMinSize:">
      <arg name="size"></arg>
      <retval></retval>
    </method>
    <method selector="setMiniwindowImage:">
      <arg name="image"></arg>
      <retval></retval>
    </method>
    <method selector="setMiniwindowTitle:">
      <arg name="title"></arg>
      <retval></retval>
    </method>
    <method selector="setMovableByWindowBackground:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setOneShot:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setOpaque:" swt_gen="true">
      <arg name="isOpaque" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setOrderedIndex:">
      <arg name="index"></arg>
      <retval></retval>
    </method>
    <method selector="setParentWindow:">
      <arg name="window"></arg>
      <retval></retval>
    </method>
    <method selector="setPreferredBackingLocation:">
      <arg name="backingLocation"></arg>
      <retval></retval>
    </method>
    <method selector="setPreservesContentDuringLiveResize:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setReleasedWhenClosed:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setRepresentedFilename:">
      <arg name="aString"></arg>
      <retval></retval>
    </method>
    <method selector="setRepresentedURL:">
      <arg name="url"></arg>
      <retval></retval>
    </method>
    <method selector="setResizeIncrements:">
      <arg name="increments"></arg>
      <retval></retval>
    </method>
    <method selector="setSharingType:">
      <arg name="type"></arg>
      <retval></retval>
    </method>
    <method selector="setShowsResizeIndicator:">
      <arg name="show"></arg>
      <retval></retval>
    </method>
    <method selector="setShowsToolbarButton:" swt_gen="true">
      <arg name="show" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitle:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setTitleWithRepresentedFilename:">
      <arg name="filename"></arg>
      <retval></retval>
    </method>
    <method selector="setToolbar:" swt_gen="true">
      <arg name="toolbar" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="setViewsNeedDisplay:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setWindowController:">
      <arg name="windowController"></arg>
      <retval></retval>
    </method>
    <method selector="sharingType">
      <retval></retval>
    </method>
    <method selector="showsResizeIndicator">
      <retval></retval>
    </method>
    <method selector="showsToolbarButton">
      <retval></retval>
    </method>
    <method selector="standardWindowButton:" swt_gen="true">
      <arg name="b" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method class_method="true" selector="standardWindowButton:forStyleMask:">
      <arg name="b"></arg>
      <arg name="styleMask"></arg>
      <retval></retval>
    </method>
    <method selector="stringWithSavedFrame">
      <retval></retval>
    </method>
    <method selector="styleMask" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="title">
      <retval></retval>
    </method>
    <method selector="toggleToolbarShown:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="toolbar">
      <retval></retval>
    </method>
    <method selector="tryToPerform:with:">
      <arg name="anAction"></arg>
      <arg name="anObject"></arg>
      <retval></retval>
    </method>
    <method selector="unregisterDraggedTypes">
      <retval></retval>
    </method>
    <method selector="update">
      <retval></retval>
    </method>
    <method selector="useOptimizedDrawing:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="userSpaceScaleFactor">
      <retval></retval>
    </method>
    <method selector="validRequestorForSendType:returnType:">
      <arg name="sendType"></arg>
      <arg name="returnType"></arg>
      <retval></retval>
    </method>
    <method selector="viewsNeedDisplay">
      <retval></retval>
    </method>
    <method selector="windowController">
      <retval></retval>
    </method>
    <method selector="windowNumber" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="windowRef">
      <retval></retval>
    </method>
    <method selector="worksWhenModal">
      <retval></retval>
    </method>
    <method selector="zoom:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
  </class>
  <class name="NSWindowController" swt_superclass="NSResponder">
    <method selector="close">
      <retval></retval>
    </method>
    <method selector="document">
      <retval></retval>
    </method>
    <method selector="initWithWindow:">
      <arg name="window"></arg>
      <retval></retval>
    </method>
    <method selector="initWithWindowNibName:">
      <arg name="windowNibName"></arg>
      <retval></retval>
    </method>
    <method selector="initWithWindowNibName:owner:">
      <arg name="windowNibName"></arg>
      <arg name="owner"></arg>
      <retval></retval>
    </method>
    <method selector="initWithWindowNibPath:owner:">
      <arg name="windowNibPath"></arg>
      <arg name="owner"></arg>
      <retval></retval>
    </method>
    <method selector="isWindowLoaded">
      <retval></retval>
    </method>
    <method selector="loadWindow">
      <retval></retval>
    </method>
    <method selector="owner">
      <retval></retval>
    </method>
    <method selector="setDocument:">
      <arg name="document"></arg>
      <retval></retval>
    </method>
    <method selector="setDocumentEdited:">
      <arg name="dirtyFlag"></arg>
      <retval></retval>
    </method>
    <method selector="setShouldCascadeWindows:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setShouldCloseDocument:">
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="setWindow:">
      <arg name="window"></arg>
      <retval></retval>
    </method>
    <method selector="setWindowFrameAutosaveName:">
      <arg name="name"></arg>
      <retval></retval>
    </method>
    <method selector="shouldCascadeWindows">
      <retval></retval>
    </method>
    <method selector="shouldCloseDocument">
      <retval></retval>
    </method>
    <method selector="showWindow:">
      <arg name="sender"></arg>
      <retval></retval>
    </method>
    <method selector="synchronizeWindowTitleWithDocumentName">
      <retval></retval>
    </method>
    <method selector="window">
      <retval></retval>
    </method>
    <method selector="windowDidLoad">
      <retval></retval>
    </method>
    <method selector="windowFrameAutosaveName">
      <retval></retval>
    </method>
    <method selector="windowNibName">
      <retval></retval>
    </method>
    <method selector="windowNibPath">
      <retval></retval>
    </method>
    <method selector="windowTitleForDocumentDisplayName:">
      <arg name="displayName"></arg>
      <retval></retval>
    </method>
    <method selector="windowWillLoad">
      <retval></retval>
    </method>
  </class>
  <class name="NSWorkspace" swt_gen="mixed">
    <method selector="absolutePathForAppBundleWithIdentifier:">
      <arg name="bundleIdentifier"></arg>
      <retval></retval>
    </method>
    <method selector="activeApplication">
      <retval></retval>
    </method>
    <method selector="checkForRemovableMedia">
      <retval></retval>
    </method>
    <method selector="extendPowerOffBy:">
      <arg name="requested"></arg>
      <retval></retval>
    </method>
    <method selector="fileSystemChanged">
      <retval></retval>
    </method>
    <method selector="filenameExtension:isValidForType:">
      <arg name="filenameExtension"></arg>
      <arg name="typeName"></arg>
      <retval></retval>
    </method>
    <method selector="findApplications">
      <retval></retval>
    </method>
    <method selector="fullPathForApplication:" swt_gen="true">
      <arg name="appName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="getFileSystemInfoForPath:isRemovable:isWritable:isUnmountable:description:type:">
      <arg name="fullPath"></arg>
      <arg name="removableFlag"></arg>
      <arg name="writableFlag"></arg>
      <arg name="unmountableFlag"></arg>
      <arg name="description"></arg>
      <arg name="fileSystemType"></arg>
      <retval></retval>
    </method>
    <method selector="getInfoForFile:application:type:" swt_gen="true">
      <arg name="fullPath" swt_gen="true"></arg>
      <arg name="appName" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="hideOtherApplications">
      <retval></retval>
    </method>
    <method selector="iconForFile:" swt_gen="true">
      <arg name="fullPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="iconForFileType:" swt_gen="true">
      <arg name="fileType" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="iconForFiles:">
      <arg name="fullPaths"></arg>
      <retval></retval>
    </method>
    <method selector="isFilePackageAtPath:" swt_gen="true">
      <arg name="fullPath" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="launchAppWithBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifier:">
      <arg name="bundleIdentifier"></arg>
      <arg name="options"></arg>
      <arg name="descriptor"></arg>
      <arg name="identifier"></arg>
      <retval></retval>
    </method>
    <method selector="launchApplication:">
      <arg name="appName"></arg>
      <retval></retval>
    </method>
    <method selector="launchApplication:showIcon:autolaunch:">
      <arg name="appName"></arg>
      <arg name="showIcon"></arg>
      <arg name="autolaunch"></arg>
      <retval></retval>
    </method>
    <method selector="launchedApplications">
      <retval></retval>
    </method>
    <method selector="localizedDescriptionForType:">
      <arg name="typeName"></arg>
      <retval></retval>
    </method>
    <method selector="mountNewRemovableMedia">
      <retval></retval>
    </method>
    <method selector="mountedLocalVolumePaths">
      <retval></retval>
    </method>
    <method selector="mountedRemovableMedia">
      <retval></retval>
    </method>
    <method selector="noteFileSystemChanged">
      <retval></retval>
    </method>
    <method selector="noteFileSystemChanged:">
      <arg name="path"></arg>
      <retval></retval>
    </method>
    <method selector="noteUserDefaultsChanged">
      <retval></retval>
    </method>
    <method selector="notificationCenter">
      <retval></retval>
    </method>
    <method selector="openFile:">
      <arg name="fullPath"></arg>
      <retval></retval>
    </method>
    <method selector="openFile:fromImage:at:inView:">
      <arg name="fullPath"></arg>
      <arg name="anImage"></arg>
      <arg name="point"></arg>
      <arg name="aView"></arg>
      <retval></retval>
    </method>
    <method selector="openFile:withApplication:" swt_gen="true">
      <arg name="fullPath" swt_gen="true"></arg>
      <arg name="appName" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="openFile:withApplication:andDeactivate:">
      <arg name="fullPath"></arg>
      <arg name="appName"></arg>
      <arg name="flag"></arg>
      <retval></retval>
    </method>
    <method selector="openTempFile:">
      <arg name="fullPath"></arg>
      <retval></retval>
    </method>
    <method selector="openURL:" swt_gen="true">
      <arg name="url" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="openURLs:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:" swt_gen="true">
      <arg name="urls" swt_gen="true"></arg>
      <arg name="bundleIdentifier" swt_gen="true"></arg>
      <arg name="options" swt_gen="true"></arg>
      <arg name="descriptor" swt_gen="true"></arg>
      <arg name="identifiers" swt_gen="true"></arg>
      <retval swt_gen="true"></retval>
    </method>
    <method selector="performFileOperation:source:destination:files:tag:">
      <arg name="operation"></arg>
      <arg name="source"></arg>
      <arg name="destination"></arg>
      <arg name="files"></arg>
      <arg name="tag"></arg>
      <retval></retval>
    </method>
    <method selector="preferredFilenameExtensionForType:">
      <arg name="typeName"></arg>
      <retval></retval>
    </method>
    <method selector="selectFile:inFileViewerRootedAtPath:">
      <arg name="fullPath"></arg>
      <arg name="rootFullpath"></arg>
      <retval></retval>
    </method>
    <method selector="setIcon:forFile:options:">
      <arg name="image"></arg>
      <arg name="fullPath"></arg>
      <arg name="options"></arg>
      <retval></retval>
    </method>
    <method class_method="true" selector="sharedWorkspace" swt_gen="true">
      <retval swt_gen="true"></retval>
    </method>
    <method selector="slideImage:from:to:">
      <arg name="image"></arg>
      <arg name="fromPoint"></arg>
      <arg name="toPoint"></arg>
      <retval></retval>
    </method>
    <method selector="type:conformsToType:">
      <arg name="firstTypeName"></arg>
      <arg name="secondTypeName"></arg>
      <retval></retval>
    </method>
    <method selector="typeOfFile:error:">
      <arg name="absoluteFilePath"></arg>
      <arg name="outError"></arg>
      <retval></retval>
    </method>
    <method selector="unmountAndEjectDeviceAtPath:">
      <arg name="path"></arg>
      <retval></retval>
    </method>
    <method selector="userDefaultsChanged">
      <retval></retval>
    </method>
  </class>
  <informal_protocol name="NSAccessibility" swt_gen="true">
    <method selector="accessibilityActionDescription:" swt_gen="true">
      <arg name="action" swt_gen="true"></arg>
    </method>
    <method selector="accessibilityActionNames" swt_gen="true"></method>
    <method selector="accessibilityAttributeNames" swt_gen="true"></method>
    <method selector="accessibilityAttributeValue:" swt_gen="true">
      <arg name="attribute" swt_gen="true"></arg>
    </method>
    <method selector="accessibilityAttributeValue:forParameter:" swt_gen="true">
      <arg name="attribute" swt_gen="true"></arg>
      <arg name="parameter" swt_gen="true"></arg>
    </method>
    <method selector="accessibilityFocusedUIElement" swt_gen="true"></method>
    <method selector="accessibilityHitTest:" swt_gen="true">
      <arg name="point" swt_gen="true"></arg>
    </method>
    <method selector="accessibilityIsAttributeSettable:" swt_gen="true">
      <arg name="attribute" swt_gen="true"></arg>
    </method>
    <method selector="accessibilityIsIgnored" swt_gen="true"></method>
    <method selector="accessibilityParameterizedAttributeNames" swt_gen="true"></method>
    <method selector="accessibilityPerformAction:" swt_gen="true">
      <arg name="action" swt_gen="true"></arg>
    </method>
    <method selector="accessibilitySetValue:forAttribute:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="attribute" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSAccessibilityAdditions" swt_gen="true">
    <method selector="accessibilitySetOverrideValue:forAttribute:" swt_gen="true">
      <arg name="value" swt_gen="true"></arg>
      <arg name="attribute" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSAlertDelegate">
    <method selector="alertShowHelp:">
      <arg name="alert"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSAnimationDelegate">
    <method selector="animation:didReachProgressMark:">
      <arg name="animation"></arg>
      <arg name="progress"></arg>
    </method>
    <method selector="animation:valueForProgress:">
      <arg name="animation"></arg>
      <arg name="progress"></arg>
    </method>
    <method selector="animationDidEnd:">
      <arg name="animation"></arg>
    </method>
    <method selector="animationDidStop:">
      <arg name="animation"></arg>
    </method>
    <method selector="animationShouldStart:">
      <arg name="animation"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSApplicationDelegate">
    <method selector="application:openFile:">
      <arg name="sender"></arg>
      <arg name="filename"></arg>
    </method>
    <method selector="application:openFileWithoutUI:">
      <arg name="sender"></arg>
      <arg name="filename"></arg>
    </method>
    <method selector="application:openFiles:">
      <arg name="sender"></arg>
      <arg name="filenames"></arg>
    </method>
    <method selector="application:openTempFile:">
      <arg name="sender"></arg>
      <arg name="filename"></arg>
    </method>
    <method selector="application:printFile:">
      <arg name="sender"></arg>
      <arg name="filename"></arg>
    </method>
    <method selector="application:printFiles:">
      <arg name="sender"></arg>
      <arg name="filenames"></arg>
    </method>
    <method selector="application:printFiles:withSettings:showPrintPanels:">
      <arg name="application"></arg>
      <arg name="fileNames"></arg>
      <arg name="printSettings"></arg>
      <arg name="showPrintPanels"></arg>
    </method>
    <method selector="application:willPresentError:">
      <arg name="application"></arg>
      <arg name="error"></arg>
    </method>
    <method selector="applicationDockMenu:">
      <arg name="sender"></arg>
    </method>
    <method selector="applicationOpenUntitledFile:">
      <arg name="sender"></arg>
    </method>
    <method selector="applicationShouldHandleReopen:hasVisibleWindows:">
      <arg name="sender"></arg>
      <arg name="flag"></arg>
    </method>
    <method selector="applicationShouldOpenUntitledFile:">
      <arg name="sender"></arg>
    </method>
    <method selector="applicationShouldTerminate:">
      <arg name="sender"></arg>
    </method>
    <method selector="applicationShouldTerminateAfterLastWindowClosed:">
      <arg name="sender"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSApplicationNotifications" swt_gen="mixed">
    <method selector="applicationDidBecomeActive:">
      <arg name="notification"></arg>
    </method>
    <method selector="applicationDidChangeScreenParameters:">
      <arg name="notification"></arg>
    </method>
    <method selector="applicationDidFinishLaunching:">
      <arg name="notification"></arg>
    </method>
    <method selector="applicationDidHide:">
      <arg name="notification"></arg>
    </method>
    <method selector="applicationDidResignActive:">
      <arg name="notification"></arg>
    </method>
    <method selector="applicationDidUnhide:">
      <arg name="notification"></arg>
    </method>
    <method selector="applicationDidUpdate:">
      <arg name="notification"></arg>
    </method>
    <method selector="applicationWillBecomeActive:">
      <arg name="notification"></arg>
    </method>
    <method selector="applicationWillFinishLaunching:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="applicationWillHide:">
      <arg name="notification"></arg>
    </method>
    <method selector="applicationWillResignActive:">
      <arg name="notification"></arg>
    </method>
    <method selector="applicationWillTerminate:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="applicationWillUnhide:">
      <arg name="notification"></arg>
    </method>
    <method selector="applicationWillUpdate:">
      <arg name="notification"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSApplicationScriptingDelegation">
    <method selector="application:delegateHandlesKey:">
      <arg name="sender"></arg>
      <arg name="key"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSBrowserDelegate">
    <method selector="browser:acceptDrop:atRow:column:dropOperation:">
      <arg name="browser"></arg>
      <arg name="info"></arg>
      <arg name="row"></arg>
      <arg name="column"></arg>
      <arg name="dropOperation"></arg>
    </method>
    <method selector="browser:canDragRowsWithIndexes:inColumn:withEvent:">
      <arg name="browser"></arg>
      <arg name="rowIndexes"></arg>
      <arg name="column"></arg>
      <arg name="event"></arg>
    </method>
    <method selector="browser:createRowsForColumn:inMatrix:">
      <arg name="sender"></arg>
      <arg name="column"></arg>
      <arg name="matrix"></arg>
    </method>
    <method selector="browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:">
      <arg name="browser"></arg>
      <arg name="rowIndexes"></arg>
      <arg name="column"></arg>
      <arg name="event"></arg>
      <arg name="dragImageOffset"></arg>
    </method>
    <method selector="browser:isColumnValid:">
      <arg name="sender"></arg>
      <arg name="column"></arg>
    </method>
    <method selector="browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:">
      <arg name="browser"></arg>
      <arg name="dropDestination"></arg>
      <arg name="rowIndexes"></arg>
      <arg name="column"></arg>
    </method>
    <method selector="browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:">
      <arg name="browser"></arg>
      <arg name="startRow"></arg>
      <arg name="endRow"></arg>
      <arg name="column"></arg>
      <arg name="searchString"></arg>
    </method>
    <method selector="browser:numberOfRowsInColumn:">
      <arg name="sender"></arg>
      <arg name="column"></arg>
    </method>
    <method selector="browser:selectCellWithString:inColumn:">
      <arg name="sender"></arg>
      <arg name="title"></arg>
      <arg name="column"></arg>
    </method>
    <method selector="browser:selectRow:inColumn:">
      <arg name="sender"></arg>
      <arg name="row"></arg>
      <arg name="column"></arg>
    </method>
    <method selector="browser:shouldShowCellExpansionForRow:column:">
      <arg name="browser"></arg>
      <arg name="row"></arg>
      <arg name="column"></arg>
    </method>
    <method selector="browser:shouldSizeColumn:forUserResize:toWidth:">
      <arg name="browser"></arg>
      <arg name="columnIndex"></arg>
      <arg name="forUserResize"></arg>
      <arg name="suggestedWidth"></arg>
    </method>
    <method selector="browser:shouldTypeSelectForEvent:withCurrentSearchString:">
      <arg name="browser"></arg>
      <arg name="event"></arg>
      <arg name="searchString"></arg>
    </method>
    <method selector="browser:sizeToFitWidthOfColumn:">
      <arg name="browser"></arg>
      <arg name="columnIndex"></arg>
    </method>
    <method selector="browser:titleOfColumn:">
      <arg name="sender"></arg>
      <arg name="column"></arg>
    </method>
    <method selector="browser:typeSelectStringForRow:inColumn:">
      <arg name="browser"></arg>
      <arg name="row"></arg>
      <arg name="column"></arg>
    </method>
    <method selector="browser:validateDrop:proposedRow:column:dropOperation:">
      <arg name="browser"></arg>
      <arg name="info"></arg>
      <arg name="row"></arg>
      <arg name="column"></arg>
      <arg name="dropOperation"></arg>
    </method>
    <method selector="browser:willDisplayCell:atRow:column:">
      <arg name="sender"></arg>
      <arg name="cell"></arg>
      <arg name="row"></arg>
      <arg name="column"></arg>
    </method>
    <method selector="browser:writeRowsWithIndexes:inColumn:toPasteboard:">
      <arg name="browser"></arg>
      <arg name="rowIndexes"></arg>
      <arg name="column"></arg>
      <arg name="pasteboard"></arg>
    </method>
    <method selector="browserColumnConfigurationDidChange:">
      <arg name="notification"></arg>
    </method>
    <method selector="browserDidScroll:">
      <arg name="sender"></arg>
    </method>
    <method selector="browserWillScroll:">
      <arg name="sender"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSColorPanelResponderMethod" swt_gen="true">
    <method selector="changeColor:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSComboBoxCellDataSource">
    <method selector="comboBoxCell:completedString:">
      <arg name="aComboBoxCell"></arg>
      <arg name="uncompletedString"></arg>
    </method>
    <method selector="comboBoxCell:indexOfItemWithStringValue:">
      <arg name="aComboBoxCell"></arg>
      <arg name="string"></arg>
    </method>
    <method selector="comboBoxCell:objectValueForItemAtIndex:">
      <arg name="aComboBoxCell"></arg>
      <arg name="index"></arg>
    </method>
    <method selector="numberOfItemsInComboBoxCell:">
      <arg name="comboBoxCell"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSComboBoxDataSource">
    <method selector="comboBox:completedString:">
      <arg name="aComboBox"></arg>
      <arg name="string"></arg>
    </method>
    <method selector="comboBox:indexOfItemWithStringValue:">
      <arg name="aComboBox"></arg>
      <arg name="string"></arg>
    </method>
    <method selector="comboBox:objectValueForItemAtIndex:">
      <arg name="aComboBox"></arg>
      <arg name="index"></arg>
    </method>
    <method selector="numberOfItemsInComboBox:">
      <arg name="aComboBox"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSComboBoxNotifications" swt_gen="mixed">
    <method selector="comboBoxSelectionDidChange:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="comboBoxSelectionIsChanging:">
      <arg name="notification"></arg>
    </method>
    <method selector="comboBoxWillDismiss:">
      <arg name="notification"></arg>
    </method>
    <method selector="comboBoxWillPopUp:">
      <arg name="notification"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSControlSubclassDelegate">
    <method selector="control:didFailToFormatString:errorDescription:">
      <arg name="control"></arg>
      <arg name="string"></arg>
      <arg name="error"></arg>
    </method>
    <method selector="control:didFailToValidatePartialString:errorDescription:">
      <arg name="control"></arg>
      <arg name="string"></arg>
      <arg name="error"></arg>
    </method>
    <method selector="control:isValidObject:">
      <arg name="control"></arg>
      <arg name="obj"></arg>
    </method>
    <method selector="control:textShouldBeginEditing:">
      <arg name="control"></arg>
      <arg name="fieldEditor"></arg>
    </method>
    <method selector="control:textShouldEndEditing:">
      <arg name="control"></arg>
      <arg name="fieldEditor"></arg>
    </method>
    <method selector="control:textView:completions:forPartialWordRange:indexOfSelectedItem:">
      <arg name="control"></arg>
      <arg name="textView"></arg>
      <arg name="words"></arg>
      <arg name="charRange"></arg>
      <arg name="index"></arg>
    </method>
    <method selector="control:textView:doCommandBySelector:">
      <arg name="control"></arg>
      <arg name="textView"></arg>
      <arg name="commandSelector"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSControlSubclassNotifications">
    <method selector="controlTextDidBeginEditing:">
      <arg name="obj"></arg>
    </method>
    <method selector="controlTextDidChange:">
      <arg name="obj"></arg>
    </method>
    <method selector="controlTextDidEndEditing:">
      <arg name="obj"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSDatePickerCellDelegate">
    <method selector="datePickerCell:validateProposedDateValue:timeInterval:">
      <arg name="aDatePickerCell"></arg>
      <arg name="proposedDateValue"></arg>
      <arg name="proposedTimeInterval"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSDictionaryControllerKeyValuePair">
    <method selector="isExplicitlyIncluded"></method>
    <method selector="key"></method>
    <method selector="localizedKey"></method>
    <method selector="setKey:">
      <arg name="key"></arg>
    </method>
    <method selector="setLocalizedKey:">
      <arg name="localizedKey"></arg>
    </method>
    <method selector="setValue:">
      <arg name="value"></arg>
    </method>
    <method selector="value"></method>
  </informal_protocol>
  <informal_protocol name="NSDraggingDestination" swt_gen="mixed">
    <method selector="concludeDragOperation:">
      <arg name="sender"></arg>
    </method>
    <method selector="draggingEnded:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="draggingEntered:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="draggingExited:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="draggingUpdated:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="performDragOperation:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="prepareForDragOperation:">
      <arg name="sender"></arg>
    </method>
    <method selector="wantsPeriodicDraggingUpdates" swt_gen="true"></method>
  </informal_protocol>
  <informal_protocol name="NSDraggingSource" swt_gen="mixed">
    <method selector="draggedImage:beganAt:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="screenPoint" swt_gen="true"></arg>
    </method>
    <method selector="draggedImage:endedAt:deposited:">
      <arg name="image"></arg>
      <arg name="screenPoint"></arg>
      <arg name="flag"></arg>
    </method>
    <method selector="draggedImage:endedAt:operation:" swt_gen="true">
      <arg name="image" swt_gen="true"></arg>
      <arg name="screenPoint" swt_gen="true"></arg>
      <arg name="operation" swt_gen="true"></arg>
    </method>
    <method selector="draggedImage:movedTo:">
      <arg name="image"></arg>
      <arg name="screenPoint"></arg>
    </method>
    <method selector="draggingSourceOperationMaskForLocal:" swt_gen="true">
      <arg name="flag" swt_gen="true"></arg>
    </method>
    <method selector="ignoreModifierKeysWhileDragging" swt_gen="true"></method>
    <method selector="namesOfPromisedFilesDroppedAtDestination:">
      <arg name="dropDestination"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSDrawerDelegate">
    <method selector="drawerShouldClose:">
      <arg name="sender"></arg>
    </method>
    <method selector="drawerShouldOpen:">
      <arg name="sender"></arg>
    </method>
    <method selector="drawerWillResizeContents:toSize:">
      <arg name="sender"></arg>
      <arg name="contentSize"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSDrawerNotifications">
    <method selector="drawerDidClose:">
      <arg name="notification"></arg>
    </method>
    <method selector="drawerDidOpen:">
      <arg name="notification"></arg>
    </method>
    <method selector="drawerWillClose:">
      <arg name="notification"></arg>
    </method>
    <method selector="drawerWillOpen:">
      <arg name="notification"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSEditor">
    <method selector="commitEditing"></method>
    <method selector="commitEditingWithDelegate:didCommitSelector:contextInfo:">
      <arg name="delegate"></arg>
      <arg name="didCommitSelector"></arg>
      <arg name="contextInfo"></arg>
    </method>
    <method selector="discardEditing"></method>
  </informal_protocol>
  <informal_protocol name="NSEditorRegistration">
    <method selector="objectDidBeginEditing:">
      <arg name="editor"></arg>
    </method>
    <method selector="objectDidEndEditing:">
      <arg name="editor"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSFontManagerDelegate">
    <method selector="fontManager:willIncludeFont:">
      <arg name="sender"></arg>
      <arg name="fontName"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSFontManagerResponderMethod" swt_gen="true">
    <method selector="changeFont:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSFontPanelValidationAdditions">
    <method selector="validModesForFontPanel:">
      <arg name="fontPanel"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSImageDelegate">
    <method selector="image:didLoadPartOfRepresentation:withValidRows:">
      <arg name="image"></arg>
      <arg name="rep"></arg>
      <arg name="rows"></arg>
    </method>
    <method selector="image:didLoadRepresentation:withStatus:">
      <arg name="image"></arg>
      <arg name="rep"></arg>
      <arg name="status"></arg>
    </method>
    <method selector="image:didLoadRepresentationHeader:">
      <arg name="image"></arg>
      <arg name="rep"></arg>
    </method>
    <method selector="image:willLoadRepresentation:">
      <arg name="image"></arg>
      <arg name="rep"></arg>
    </method>
    <method selector="imageDidNotDraw:inRect:">
      <arg name="sender"></arg>
      <arg name="aRect"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSKeyValueBindingCreation">
    <method selector="bind:toObject:withKeyPath:options:">
      <arg name="binding"></arg>
      <arg name="observable"></arg>
      <arg name="keyPath"></arg>
      <arg name="options"></arg>
    </method>
    <method class_method="true" selector="exposeBinding:">
      <arg name="binding"></arg>
    </method>
    <method selector="exposedBindings"></method>
    <method selector="infoForBinding:">
      <arg name="binding"></arg>
    </method>
    <method selector="optionDescriptionsForBinding:">
      <arg name="aBinding"></arg>
    </method>
    <method selector="unbind:">
      <arg name="binding"></arg>
    </method>
    <method selector="valueClassForBinding:">
      <arg name="binding"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSLayoutManagerDelegate">
    <method selector="layoutManager:didCompleteLayoutForTextContainer:atEnd:">
      <arg name="layoutManager"></arg>
      <arg name="textContainer"></arg>
      <arg name="layoutFinishedFlag"></arg>
    </method>
    <method selector="layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:">
      <arg name="layoutManager"></arg>
      <arg name="attrs"></arg>
      <arg name="toScreen"></arg>
      <arg name="charIndex"></arg>
      <arg name="effectiveCharRange"></arg>
    </method>
    <method selector="layoutManagerDidInvalidateLayout:">
      <arg name="sender"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSMenuDelegate" swt_gen="mixed">
    <method selector="menu:updateItem:atIndex:shouldCancel:">
      <arg name="menu"></arg>
      <arg name="item"></arg>
      <arg name="index"></arg>
      <arg name="shouldCancel"></arg>
    </method>
    <method selector="menu:willHighlightItem:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="menuDidClose:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
    </method>
    <method selector="menuHasKeyEquivalent:forEvent:target:action:">
      <arg name="menu"></arg>
      <arg name="event"></arg>
      <arg name="target"></arg>
      <arg name="action"></arg>
    </method>
    <method selector="menuNeedsUpdate:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
    </method>
    <method selector="menuWillOpen:" swt_gen="true">
      <arg name="menu" swt_gen="true"></arg>
    </method>
    <method selector="numberOfItemsInMenu:">
      <arg name="menu"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSMenuValidation">
    <method selector="validateMenuItem:">
      <arg name="menuItem"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSNibAwaking">
    <method selector="awakeFromNib"></method>
  </informal_protocol>
  <informal_protocol name="NSOutlineViewDataSource" swt_gen="mixed">
    <method selector="outlineView:acceptDrop:item:childIndex:">
      <arg name="outlineView"></arg>
      <arg name="info"></arg>
      <arg name="item"></arg>
      <arg name="index"></arg>
    </method>
    <method selector="outlineView:child:ofItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="index" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:isItemExpandable:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:itemForPersistentObject:">
      <arg name="outlineView"></arg>
      <arg name="object"></arg>
    </method>
    <method selector="outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:">
      <arg name="outlineView"></arg>
      <arg name="dropDestination"></arg>
      <arg name="items"></arg>
    </method>
    <method selector="outlineView:numberOfChildrenOfItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:objectValueForTableColumn:byItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:persistentObjectForItem:">
      <arg name="outlineView"></arg>
      <arg name="item"></arg>
    </method>
    <method selector="outlineView:setObjectValue:forTableColumn:byItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:sortDescriptorsDidChange:">
      <arg name="outlineView"></arg>
      <arg name="oldDescriptors"></arg>
    </method>
    <method selector="outlineView:validateDrop:proposedItem:proposedChildIndex:">
      <arg name="outlineView"></arg>
      <arg name="info"></arg>
      <arg name="item"></arg>
      <arg name="index"></arg>
    </method>
    <method selector="outlineView:writeItems:toPasteboard:">
      <arg name="outlineView"></arg>
      <arg name="items"></arg>
      <arg name="pasteboard"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSOutlineViewDelegate" swt_gen="mixed">
    <method selector="outlineView:dataCellForTableColumn:item:">
      <arg name="outlineView"></arg>
      <arg name="tableColumn"></arg>
      <arg name="item"></arg>
    </method>
    <method selector="outlineView:didClickTableColumn:">
      <arg name="outlineView"></arg>
      <arg name="tableColumn"></arg>
    </method>
    <method selector="outlineView:didDragTableColumn:">
      <arg name="outlineView"></arg>
      <arg name="tableColumn"></arg>
    </method>
    <method selector="outlineView:heightOfRowByItem:">
      <arg name="outlineView"></arg>
      <arg name="item"></arg>
    </method>
    <method selector="outlineView:isGroupItem:">
      <arg name="outlineView"></arg>
      <arg name="item"></arg>
    </method>
    <method selector="outlineView:mouseDownInHeaderOfTableColumn:">
      <arg name="outlineView"></arg>
      <arg name="tableColumn"></arg>
    </method>
    <method selector="outlineView:nextTypeSelectMatchFromItem:toItem:forString:">
      <arg name="outlineView"></arg>
      <arg name="startItem"></arg>
      <arg name="endItem"></arg>
      <arg name="searchString"></arg>
    </method>
    <method selector="outlineView:selectionIndexesForProposedSelection:">
      <arg name="outlineView"></arg>
      <arg name="proposedSelectionIndexes"></arg>
    </method>
    <method selector="outlineView:shouldCollapseItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:shouldEditTableColumn:item:">
      <arg name="outlineView"></arg>
      <arg name="tableColumn"></arg>
      <arg name="item"></arg>
    </method>
    <method selector="outlineView:shouldExpandItem:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:shouldSelectItem:">
      <arg name="outlineView"></arg>
      <arg name="item"></arg>
    </method>
    <method selector="outlineView:shouldSelectTableColumn:">
      <arg name="outlineView"></arg>
      <arg name="tableColumn"></arg>
    </method>
    <method selector="outlineView:shouldShowCellExpansionForTableColumn:item:">
      <arg name="outlineView"></arg>
      <arg name="tableColumn"></arg>
      <arg name="item"></arg>
    </method>
    <method selector="outlineView:shouldTrackCell:forTableColumn:item:">
      <arg name="outlineView"></arg>
      <arg name="cell"></arg>
      <arg name="tableColumn"></arg>
      <arg name="item"></arg>
    </method>
    <method selector="outlineView:shouldTypeSelectForEvent:withCurrentSearchString:">
      <arg name="outlineView"></arg>
      <arg name="event"></arg>
      <arg name="searchString"></arg>
    </method>
    <method selector="outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:">
      <arg name="outlineView"></arg>
      <arg name="cell"></arg>
      <arg name="rect"></arg>
      <arg name="tableColumn"></arg>
      <arg name="item"></arg>
      <arg name="mouseLocation"></arg>
    </method>
    <method selector="outlineView:typeSelectStringForTableColumn:item:">
      <arg name="outlineView"></arg>
      <arg name="tableColumn"></arg>
      <arg name="item"></arg>
    </method>
    <method selector="outlineView:willDisplayCell:forTableColumn:item:" swt_gen="true">
      <arg name="outlineView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="item" swt_gen="true"></arg>
    </method>
    <method selector="outlineView:willDisplayOutlineCell:forTableColumn:item:">
      <arg name="outlineView"></arg>
      <arg name="cell"></arg>
      <arg name="tableColumn"></arg>
      <arg name="item"></arg>
    </method>
    <method selector="selectionShouldChangeInOutlineView:">
      <arg name="outlineView"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSOutlineViewNotifications" swt_gen="mixed">
    <method selector="outlineViewColumnDidMove:">
      <arg name="notification"></arg>
    </method>
    <method selector="outlineViewColumnDidResize:">
      <arg name="notification"></arg>
    </method>
    <method selector="outlineViewItemDidCollapse:">
      <arg name="notification"></arg>
    </method>
    <method selector="outlineViewItemDidExpand:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="outlineViewItemWillCollapse:">
      <arg name="notification"></arg>
    </method>
    <method selector="outlineViewItemWillExpand:">
      <arg name="notification"></arg>
    </method>
    <method selector="outlineViewSelectionDidChange:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="outlineViewSelectionIsChanging:">
      <arg name="notification"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSPasteboardOwner" swt_gen="mixed">
    <method selector="pasteboard:provideDataForType:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
      <arg name="type" swt_gen="true"></arg>
    </method>
    <method selector="pasteboardChangedOwner:">
      <arg name="sender"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSPlaceholders">
    <method class_method="true" selector="defaultPlaceholderForMarker:withBinding:">
      <arg name="marker"></arg>
      <arg name="binding"></arg>
    </method>
    <method class_method="true" selector="setDefaultPlaceholder:forMarker:withBinding:">
      <arg name="placeholder"></arg>
      <arg name="marker"></arg>
      <arg name="binding"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSRuleEditorDelegateMethods">
    <method selector="ruleEditor:child:forCriterion:withRowType:">
      <arg name="editor"></arg>
      <arg name="index"></arg>
      <arg name="criterion"></arg>
      <arg name="rowType"></arg>
    </method>
    <method selector="ruleEditor:displayValueForCriterion:inRow:">
      <arg name="editor"></arg>
      <arg name="criterion"></arg>
      <arg name="row"></arg>
    </method>
    <method selector="ruleEditor:numberOfChildrenForCriterion:withRowType:">
      <arg name="editor"></arg>
      <arg name="criterion"></arg>
      <arg name="rowType"></arg>
    </method>
    <method selector="ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:">
      <arg name="editor"></arg>
      <arg name="criterion"></arg>
      <arg name="value"></arg>
      <arg name="row"></arg>
    </method>
    <method selector="ruleEditorRowsDidChange:">
      <arg name="notification"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSSavePanelDelegate">
    <method selector="panel:compareFilename:with:caseSensitive:">
      <arg name="sender"></arg>
      <arg name="name1"></arg>
      <arg name="name2"></arg>
      <arg name="caseSensitive"></arg>
    </method>
    <method selector="panel:directoryDidChange:">
      <arg name="sender"></arg>
      <arg name="path"></arg>
    </method>
    <method selector="panel:isValidFilename:">
      <arg name="sender"></arg>
      <arg name="filename"></arg>
    </method>
    <method selector="panel:shouldShowFilename:">
      <arg name="sender"></arg>
      <arg name="filename"></arg>
    </method>
    <method selector="panel:userEnteredFilename:confirmed:">
      <arg name="sender"></arg>
      <arg name="filename"></arg>
      <arg name="okFlag"></arg>
    </method>
    <method selector="panel:willExpand:">
      <arg name="sender"></arg>
      <arg name="expanding"></arg>
    </method>
    <method selector="panelSelectionDidChange:">
      <arg name="sender"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSServicesRequests">
    <method selector="readSelectionFromPasteboard:">
      <arg name="pboard"></arg>
    </method>
    <method selector="writeSelectionToPasteboard:types:">
      <arg name="pboard"></arg>
      <arg name="types"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSSoundDelegateMethods">
    <method selector="sound:didFinishPlaying:">
      <arg name="sound"></arg>
      <arg name="aBool"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSSpeechRecognizerDelegate">
    <method selector="speechRecognizer:didRecognizeCommand:">
      <arg name="sender"></arg>
      <arg name="command"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSSpeechSynthesizerDelegate">
    <method selector="speechSynthesizer:didEncounterErrorAtIndex:ofString:message:">
      <arg name="sender"></arg>
      <arg name="characterIndex"></arg>
      <arg name="string"></arg>
      <arg name="message"></arg>
    </method>
    <method selector="speechSynthesizer:didEncounterSyncMessage:">
      <arg name="sender"></arg>
      <arg name="message"></arg>
    </method>
    <method selector="speechSynthesizer:didFinishSpeaking:">
      <arg name="sender"></arg>
      <arg name="finishedSpeaking"></arg>
    </method>
    <method selector="speechSynthesizer:willSpeakPhoneme:">
      <arg name="sender"></arg>
      <arg name="phonemeOpcode"></arg>
    </method>
    <method selector="speechSynthesizer:willSpeakWord:ofString:">
      <arg name="sender"></arg>
      <arg name="characterRange"></arg>
      <arg name="string"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSSplitViewDelegate">
    <method selector="splitView:additionalEffectiveRectOfDividerAtIndex:">
      <arg name="splitView"></arg>
      <arg name="dividerIndex"></arg>
    </method>
    <method selector="splitView:canCollapseSubview:">
      <arg name="splitView"></arg>
      <arg name="subview"></arg>
    </method>
    <method selector="splitView:constrainMaxCoordinate:ofSubviewAt:">
      <arg name="splitView"></arg>
      <arg name="proposedMaximumPosition"></arg>
      <arg name="dividerIndex"></arg>
    </method>
    <method selector="splitView:constrainMinCoordinate:ofSubviewAt:">
      <arg name="splitView"></arg>
      <arg name="proposedMinimumPosition"></arg>
      <arg name="dividerIndex"></arg>
    </method>
    <method selector="splitView:constrainSplitPosition:ofSubviewAt:">
      <arg name="splitView"></arg>
      <arg name="proposedPosition"></arg>
      <arg name="dividerIndex"></arg>
    </method>
    <method selector="splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:">
      <arg name="splitView"></arg>
      <arg name="proposedEffectiveRect"></arg>
      <arg name="drawnRect"></arg>
      <arg name="dividerIndex"></arg>
    </method>
    <method selector="splitView:resizeSubviewsWithOldSize:">
      <arg name="splitView"></arg>
      <arg name="oldSize"></arg>
    </method>
    <method selector="splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:">
      <arg name="splitView"></arg>
      <arg name="subview"></arg>
      <arg name="dividerIndex"></arg>
    </method>
    <method selector="splitView:shouldHideDividerAtIndex:">
      <arg name="splitView"></arg>
      <arg name="dividerIndex"></arg>
    </method>
    <method selector="splitViewDidResizeSubviews:">
      <arg name="notification"></arg>
    </method>
    <method selector="splitViewWillResizeSubviews:">
      <arg name="notification"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSTabViewDelegate" swt_gen="mixed">
    <method selector="tabView:didSelectTabViewItem:" swt_gen="true">
      <arg name="tabView" swt_gen="true"></arg>
      <arg name="tabViewItem" swt_gen="true"></arg>
    </method>
    <method selector="tabView:shouldSelectTabViewItem:">
      <arg name="tabView"></arg>
      <arg name="tabViewItem"></arg>
    </method>
    <method selector="tabView:willSelectTabViewItem:" swt_gen="true">
      <arg name="tabView" swt_gen="true"></arg>
      <arg name="tabViewItem" swt_gen="true"></arg>
    </method>
    <method selector="tabViewDidChangeNumberOfTabViewItems:">
      <arg name="TabView"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSTableDataSource" swt_gen="mixed">
    <method selector="numberOfRowsInTableView:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
    </method>
    <method selector="tableView:acceptDrop:row:dropOperation:">
      <arg name="tableView"></arg>
      <arg name="info"></arg>
      <arg name="row"></arg>
      <arg name="dropOperation"></arg>
    </method>
    <method selector="tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:">
      <arg name="tableView"></arg>
      <arg name="dropDestination"></arg>
      <arg name="indexSet"></arg>
    </method>
    <method selector="tableView:objectValueForTableColumn:row:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
    </method>
    <method selector="tableView:setObjectValue:forTableColumn:row:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="object" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
    </method>
    <method selector="tableView:sortDescriptorsDidChange:">
      <arg name="tableView"></arg>
      <arg name="oldDescriptors"></arg>
    </method>
    <method selector="tableView:validateDrop:proposedRow:proposedDropOperation:">
      <arg name="tableView"></arg>
      <arg name="info"></arg>
      <arg name="row"></arg>
      <arg name="dropOperation"></arg>
    </method>
    <method selector="tableView:writeRows:toPasteboard:">
      <arg name="tableView"></arg>
      <arg name="rows"></arg>
      <arg name="pboard"></arg>
    </method>
    <method selector="tableView:writeRowsWithIndexes:toPasteboard:">
      <arg name="tableView"></arg>
      <arg name="rowIndexes"></arg>
      <arg name="pboard"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSTableViewDelegate" swt_gen="mixed">
    <method selector="selectionShouldChangeInTableView:">
      <arg name="tableView"></arg>
    </method>
    <method selector="tableView:dataCellForTableColumn:row:">
      <arg name="tableView"></arg>
      <arg name="tableColumn"></arg>
      <arg name="row"></arg>
    </method>
    <method selector="tableView:didClickTableColumn:">
      <arg name="tableView"></arg>
      <arg name="tableColumn"></arg>
    </method>
    <method selector="tableView:didDragTableColumn:">
      <arg name="tableView"></arg>
      <arg name="tableColumn"></arg>
    </method>
    <method selector="tableView:heightOfRow:">
      <arg name="tableView"></arg>
      <arg name="row"></arg>
    </method>
    <method selector="tableView:isGroupRow:">
      <arg name="tableView"></arg>
      <arg name="row"></arg>
    </method>
    <method selector="tableView:mouseDownInHeaderOfTableColumn:">
      <arg name="tableView"></arg>
      <arg name="tableColumn"></arg>
    </method>
    <method selector="tableView:nextTypeSelectMatchFromRow:toRow:forString:">
      <arg name="tableView"></arg>
      <arg name="startRow"></arg>
      <arg name="endRow"></arg>
      <arg name="searchString"></arg>
    </method>
    <method selector="tableView:selectionIndexesForProposedSelection:">
      <arg name="tableView"></arg>
      <arg name="proposedSelectionIndexes"></arg>
    </method>
    <method selector="tableView:shouldEditTableColumn:row:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
    </method>
    <method selector="tableView:shouldSelectRow:">
      <arg name="tableView"></arg>
      <arg name="row"></arg>
    </method>
    <method selector="tableView:shouldSelectTableColumn:">
      <arg name="tableView"></arg>
      <arg name="tableColumn"></arg>
    </method>
    <method selector="tableView:shouldShowCellExpansionForTableColumn:row:">
      <arg name="tableView"></arg>
      <arg name="tableColumn"></arg>
      <arg name="row"></arg>
    </method>
    <method selector="tableView:shouldTrackCell:forTableColumn:row:">
      <arg name="tableView"></arg>
      <arg name="cell"></arg>
      <arg name="tableColumn"></arg>
      <arg name="row"></arg>
    </method>
    <method selector="tableView:shouldTypeSelectForEvent:withCurrentSearchString:">
      <arg name="tableView"></arg>
      <arg name="event"></arg>
      <arg name="searchString"></arg>
    </method>
    <method selector="tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:">
      <arg name="tableView"></arg>
      <arg name="cell"></arg>
      <arg name="rect"></arg>
      <arg name="tableColumn"></arg>
      <arg name="row"></arg>
      <arg name="mouseLocation"></arg>
    </method>
    <method selector="tableView:typeSelectStringForTableColumn:row:">
      <arg name="tableView"></arg>
      <arg name="tableColumn"></arg>
      <arg name="row"></arg>
    </method>
    <method selector="tableView:willDisplayCell:forTableColumn:row:" swt_gen="true">
      <arg name="tableView" swt_gen="true"></arg>
      <arg name="cell" swt_gen="true"></arg>
      <arg name="tableColumn" swt_gen="true"></arg>
      <arg name="row" swt_gen="true"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSTableViewNotifications" swt_gen="mixed">
    <method selector="tableViewColumnDidMove:">
      <arg name="notification"></arg>
    </method>
    <method selector="tableViewColumnDidResize:">
      <arg name="notification"></arg>
    </method>
    <method selector="tableViewSelectionDidChange:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="tableViewSelectionIsChanging:">
      <arg name="notification"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSTextDelegate" swt_gen="mixed">
    <method selector="textDidBeginEditing:">
      <arg name="notification"></arg>
    </method>
    <method selector="textDidChange:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="textDidEndEditing:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="textShouldBeginEditing:">
      <arg name="textObject"></arg>
    </method>
    <method selector="textShouldEndEditing:">
      <arg name="textObject"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSTextStorageDelegate">
    <method selector="textStorageDidProcessEditing:">
      <arg name="notification"></arg>
    </method>
    <method selector="textStorageWillProcessEditing:">
      <arg name="notification"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSTextViewDelegate" swt_gen="mixed">
    <method selector="textView:clickedOnCell:inRect:">
      <arg name="textView"></arg>
      <arg name="cell"></arg>
      <arg name="cellFrame"></arg>
    </method>
    <method selector="textView:clickedOnCell:inRect:atIndex:">
      <arg name="textView"></arg>
      <arg name="cell"></arg>
      <arg name="cellFrame"></arg>
      <arg name="charIndex"></arg>
    </method>
    <method selector="textView:clickedOnLink:">
      <arg name="textView"></arg>
      <arg name="link"></arg>
    </method>
    <method selector="textView:clickedOnLink:atIndex:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="link" swt_gen="true"></arg>
      <arg name="charIndex" swt_gen="true"></arg>
    </method>
    <method selector="textView:completions:forPartialWordRange:indexOfSelectedItem:">
      <arg name="textView"></arg>
      <arg name="words"></arg>
      <arg name="charRange"></arg>
      <arg name="index"></arg>
    </method>
    <method selector="textView:doCommandBySelector:">
      <arg name="textView"></arg>
      <arg name="commandSelector"></arg>
    </method>
    <method selector="textView:doubleClickedOnCell:inRect:">
      <arg name="textView"></arg>
      <arg name="cell"></arg>
      <arg name="cellFrame"></arg>
    </method>
    <method selector="textView:doubleClickedOnCell:inRect:atIndex:">
      <arg name="textView"></arg>
      <arg name="cell"></arg>
      <arg name="cellFrame"></arg>
      <arg name="charIndex"></arg>
    </method>
    <method selector="textView:draggedCell:inRect:event:">
      <arg name="view"></arg>
      <arg name="cell"></arg>
      <arg name="rect"></arg>
      <arg name="event"></arg>
    </method>
    <method selector="textView:draggedCell:inRect:event:atIndex:">
      <arg name="view"></arg>
      <arg name="cell"></arg>
      <arg name="rect"></arg>
      <arg name="event"></arg>
      <arg name="charIndex"></arg>
    </method>
    <method selector="textView:menu:forEvent:atIndex:">
      <arg name="view"></arg>
      <arg name="menu"></arg>
      <arg name="event"></arg>
      <arg name="charIndex"></arg>
    </method>
    <method selector="textView:shouldChangeTextInRange:replacementString:">
      <arg name="textView"></arg>
      <arg name="affectedCharRange"></arg>
      <arg name="replacementString"></arg>
    </method>
    <method selector="textView:shouldChangeTextInRanges:replacementStrings:">
      <arg name="textView"></arg>
      <arg name="affectedRanges"></arg>
      <arg name="replacementStrings"></arg>
    </method>
    <method selector="textView:shouldChangeTypingAttributes:toAttributes:">
      <arg name="textView"></arg>
      <arg name="oldTypingAttributes"></arg>
      <arg name="newTypingAttributes"></arg>
    </method>
    <method selector="textView:shouldSetSpellingState:range:">
      <arg name="textView"></arg>
      <arg name="value"></arg>
      <arg name="affectedCharRange"></arg>
    </method>
    <method selector="textView:willChangeSelectionFromCharacterRange:toCharacterRange:" swt_gen="true">
      <arg name="textView" swt_gen="true"></arg>
      <arg name="oldSelectedCharRange" swt_gen="true"></arg>
      <arg name="newSelectedCharRange" swt_gen="true"></arg>
    </method>
    <method selector="textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:">
      <arg name="textView"></arg>
      <arg name="oldSelectedCharRanges"></arg>
      <arg name="newSelectedCharRanges"></arg>
    </method>
    <method selector="textView:willDisplayToolTip:forCharacterAtIndex:">
      <arg name="textView"></arg>
      <arg name="tooltip"></arg>
      <arg name="characterIndex"></arg>
    </method>
    <method selector="textView:writablePasteboardTypesForCell:atIndex:">
      <arg name="view"></arg>
      <arg name="cell"></arg>
      <arg name="charIndex"></arg>
    </method>
    <method selector="textView:writeCell:atIndex:toPasteboard:type:">
      <arg name="view"></arg>
      <arg name="cell"></arg>
      <arg name="charIndex"></arg>
      <arg name="pboard"></arg>
      <arg name="type"></arg>
    </method>
    <method selector="textViewDidChangeSelection:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="textViewDidChangeTypingAttributes:">
      <arg name="notification"></arg>
    </method>
    <method selector="undoManagerForTextView:">
      <arg name="view"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSTokenFieldCellDelegate">
    <method selector="tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:">
      <arg name="tokenFieldCell"></arg>
      <arg name="substring"></arg>
      <arg name="tokenIndex"></arg>
      <arg name="selectedIndex"></arg>
    </method>
    <method selector="tokenFieldCell:displayStringForRepresentedObject:">
      <arg name="tokenFieldCell"></arg>
      <arg name="representedObject"></arg>
    </method>
    <method selector="tokenFieldCell:editingStringForRepresentedObject:">
      <arg name="tokenFieldCell"></arg>
      <arg name="representedObject"></arg>
    </method>
    <method selector="tokenFieldCell:hasMenuForRepresentedObject:">
      <arg name="tokenFieldCell"></arg>
      <arg name="representedObject"></arg>
    </method>
    <method selector="tokenFieldCell:menuForRepresentedObject:">
      <arg name="tokenFieldCell"></arg>
      <arg name="representedObject"></arg>
    </method>
    <method selector="tokenFieldCell:readFromPasteboard:">
      <arg name="tokenFieldCell"></arg>
      <arg name="pboard"></arg>
    </method>
    <method selector="tokenFieldCell:representedObjectForEditingString:">
      <arg name="tokenFieldCell"></arg>
      <arg name="editingString"></arg>
    </method>
    <method selector="tokenFieldCell:shouldAddObjects:atIndex:">
      <arg name="tokenFieldCell"></arg>
      <arg name="tokens"></arg>
      <arg name="index"></arg>
    </method>
    <method selector="tokenFieldCell:styleForRepresentedObject:">
      <arg name="tokenFieldCell"></arg>
      <arg name="representedObject"></arg>
    </method>
    <method selector="tokenFieldCell:writeRepresentedObjects:toPasteboard:">
      <arg name="tokenFieldCell"></arg>
      <arg name="objects"></arg>
      <arg name="pboard"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSTokenFieldDelegate">
    <method selector="tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:">
      <arg name="tokenField"></arg>
      <arg name="substring"></arg>
      <arg name="tokenIndex"></arg>
      <arg name="selectedIndex"></arg>
    </method>
    <method selector="tokenField:displayStringForRepresentedObject:">
      <arg name="tokenField"></arg>
      <arg name="representedObject"></arg>
    </method>
    <method selector="tokenField:editingStringForRepresentedObject:">
      <arg name="tokenField"></arg>
      <arg name="representedObject"></arg>
    </method>
    <method selector="tokenField:hasMenuForRepresentedObject:">
      <arg name="tokenField"></arg>
      <arg name="representedObject"></arg>
    </method>
    <method selector="tokenField:menuForRepresentedObject:">
      <arg name="tokenField"></arg>
      <arg name="representedObject"></arg>
    </method>
    <method selector="tokenField:readFromPasteboard:">
      <arg name="tokenField"></arg>
      <arg name="pboard"></arg>
    </method>
    <method selector="tokenField:representedObjectForEditingString:">
      <arg name="tokenField"></arg>
      <arg name="editingString"></arg>
    </method>
    <method selector="tokenField:shouldAddObjects:atIndex:">
      <arg name="tokenField"></arg>
      <arg name="tokens"></arg>
      <arg name="index"></arg>
    </method>
    <method selector="tokenField:styleForRepresentedObject:">
      <arg name="tokenField"></arg>
      <arg name="representedObject"></arg>
    </method>
    <method selector="tokenField:writeRepresentedObjects:toPasteboard:">
      <arg name="tokenField"></arg>
      <arg name="objects"></arg>
      <arg name="pboard"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSToolTipOwner">
    <method selector="view:stringForToolTip:point:userData:">
      <arg name="view"></arg>
      <arg name="tag"></arg>
      <arg name="point"></arg>
      <arg name="data"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSToolbarDelegate">
    <method selector="toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:">
      <arg name="toolbar"></arg>
      <arg name="itemIdentifier"></arg>
      <arg name="flag"></arg>
    </method>
    <method selector="toolbarAllowedItemIdentifiers:">
      <arg name="toolbar"></arg>
    </method>
    <method selector="toolbarDefaultItemIdentifiers:">
      <arg name="toolbar"></arg>
    </method>
    <method selector="toolbarSelectableItemIdentifiers:">
      <arg name="toolbar"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSToolbarItemValidation">
    <method selector="validateToolbarItem:">
      <arg name="theItem"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSToolbarNotifications">
    <method selector="toolbarDidRemoveItem:">
      <arg name="notification"></arg>
    </method>
    <method selector="toolbarWillAddItem:">
      <arg name="notification"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSWindowDelegate" swt_gen="mixed">
    <method selector="window:shouldDragDocumentWithEvent:from:withPasteboard:">
      <arg name="window"></arg>
      <arg name="event"></arg>
      <arg name="dragImageLocation"></arg>
      <arg name="pasteboard"></arg>
    </method>
    <method selector="window:shouldPopUpDocumentPathMenu:">
      <arg name="window"></arg>
      <arg name="menu"></arg>
    </method>
    <method selector="window:willPositionSheet:usingRect:">
      <arg name="window"></arg>
      <arg name="sheet"></arg>
      <arg name="rect"></arg>
    </method>
    <method selector="windowShouldClose:" swt_gen="true">
      <arg name="sender" swt_gen="true"></arg>
    </method>
    <method selector="windowShouldZoom:toFrame:">
      <arg name="window"></arg>
      <arg name="newFrame"></arg>
    </method>
    <method selector="windowWillResize:toSize:">
      <arg name="sender"></arg>
      <arg name="frameSize"></arg>
    </method>
    <method selector="windowWillReturnFieldEditor:toObject:">
      <arg name="sender"></arg>
      <arg name="client"></arg>
    </method>
    <method selector="windowWillReturnUndoManager:">
      <arg name="window"></arg>
    </method>
    <method selector="windowWillUseStandardFrame:defaultFrame:">
      <arg name="window"></arg>
      <arg name="newFrame"></arg>
    </method>
  </informal_protocol>
  <informal_protocol name="NSWindowNotifications" swt_gen="mixed">
    <method selector="windowDidBecomeKey:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="windowDidBecomeMain:">
      <arg name="notification"></arg>
    </method>
    <method selector="windowDidChangeScreen:">
      <arg name="notification"></arg>
    </method>
    <method selector="windowDidChangeScreenProfile:">
      <arg name="notification"></arg>
    </method>
    <method selector="windowDidDeminiaturize:">
      <arg name="notification"></arg>
    </method>
    <method selector="windowDidEndSheet:">
      <arg name="notification"></arg>
    </method>
    <method selector="windowDidExpose:">
      <arg name="notification"></arg>
    </method>
    <method selector="windowDidMiniaturize:">
      <arg name="notification"></arg>
    </method>
    <method selector="windowDidMove:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="windowDidResignKey:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="windowDidResignMain:">
      <arg name="notification"></arg>
    </method>
    <method selector="windowDidResize:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="windowDidUpdate:">
      <arg name="notification"></arg>
    </method>
    <method selector="windowWillBeginSheet:">
      <arg name="notification"></arg>
    </method>
    <method selector="windowWillClose:" swt_gen="true">
      <arg name="notification" swt_gen="true"></arg>
    </method>
    <method selector="windowWillMiniaturize:">
      <arg name="notification"></arg>
    </method>
    <method selector="windowWillMove:">
      <arg name="notification"></arg>
    </method>
  </informal_protocol>
  <class name="NSSecureTextField" swt_gen="true" swt_superclass="NSTextField"></class>
  <informal_protocol name="NSTextInput" swt_gen="true">
    <method selector="validAttributesForMarkedText" swt_gen="true"></method>
    <method selector="markedRange" swt_gen="true"></method>
    <method selector="insertText:" swt_gen="true">
      <arg name="aString" swt_gen="true"></arg>
</method>
    <method selector="unmarkText" swt_gen="true"></method>
    <method selector="selectedRange" swt_gen="true"></method>
    <method selector="setMarkedText:selectedRange:" swt_gen="true">
      <arg name="selRange" swt_gen="true"></arg>
      <arg name="aString" swt_gen="true"></arg>
</method>
    <method selector="hasMarkedText" swt_gen="true"></method>
    <method selector="characterIndexForPoint:" swt_gen="true">
      <arg name="thePoint" swt_gen="true"></arg>
</method>
    <method selector="attributedSubstringFromRange:" swt_gen="true">
      <arg name="theRange" swt_gen="true"></arg>
</method>
    <method selector="firstRectForCharacterRange:" swt_gen="true">
      <arg name="theRange" swt_gen="true"></arg>
</method>
</informal_protocol>
</signatures>