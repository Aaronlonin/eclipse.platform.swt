<?xml version="1.0" encoding="UTF8"?>
<signatures swt_gen="mixed">
<depends_on path="/System/Library/Frameworks/CoreFoundation.framework"></depends_on>
<depends_on path="/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CFNetwork.framework"></depends_on>
<depends_on path="/System/Library/Frameworks/SystemConfiguration.framework"></depends_on>
<depends_on path="/System/Library/Frameworks/CoreServices.framework"></depends_on>
<depends_on path="/System/Library/Frameworks/Security.framework"></depends_on>
<struct name="NSAffineTransformStruct" swt_gen="true">
<field name="m11" swt_gen="true"></field>
<field name="m12" swt_gen="true"></field>
<field name="m21" swt_gen="true"></field>
<field name="m22" swt_gen="true"></field>
<field name="tX" swt_gen="true"></field>
<field name="tY" swt_gen="true"></field>
</struct>
<struct name="NSDecimal">
<field name="_exponent"></field>
<field name="_length"></field>
<field name="_isNegative"></field>
<field name="_isCompact"></field>
<field name="_reserved"></field>
<field name="_mantissa"></field>
</struct>
<struct name="NSFastEnumerationState">
<field name="state"></field>
<field name="itemsPtr"></field>
<field name="mutationsPtr"></field>
<field name="extra"></field>
</struct>
<struct name="NSHashEnumerator">
<field name="_pi"></field>
<field name="_si"></field>
<field name="_bs"></field>
</struct>
<struct name="NSHashTableCallBacks">
<field name="hash"></field>
<field name="isEqual"></field>
<field name="retain"></field>
<field name="release"></field>
<field name="describe"></field>
</struct>
<struct name="NSMapEnumerator">
<field name="_pi"></field>
<field name="_si"></field>
<field name="_bs"></field>
</struct>
<struct name="NSMapTableKeyCallBacks">
<field name="hash"></field>
<field name="isEqual"></field>
<field name="retain"></field>
<field name="release"></field>
<field name="describe"></field>
<field name="notAKeyMarker"></field>
</struct>
<struct name="NSMapTableValueCallBacks">
<field name="retain"></field>
<field name="release"></field>
<field name="describe"></field>
</struct>
<struct name="NSPoint" swt_gen="true">
<field name="x" swt_gen="true"></field>
<field name="y" swt_gen="true"></field>
</struct>
<struct name="NSRange" swt_gen="true">
<field name="location" swt_gen="true"></field>
<field name="length" swt_gen="true"></field>
</struct>
<struct name="NSRect" swt_gen="true">
<field name="origin" swt_gen="true"></field>
<field name="size" swt_gen="true"></field>
</struct>
<struct name="NSSize" swt_gen="true">
<field name="width" swt_gen="true"></field>
<field name="height" swt_gen="true"></field>
</struct>
<struct name="NSSwappedDouble">
<field name="v"></field>
</struct>
<struct name="NSSwappedFloat">
<field name="v"></field>
</struct>
<opaque name="NSZone"></opaque>
<constant name="NSAMPMDesignation"></constant>
<constant name="NSAppleEventManagerWillProcessFirstEventNotification"></constant>
<constant name="NSAppleEventTimeOutDefault"></constant>
<constant name="NSAppleEventTimeOutNone"></constant>
<constant name="NSAppleScriptErrorAppName"></constant>
<constant name="NSAppleScriptErrorBriefMessage"></constant>
<constant name="NSAppleScriptErrorMessage"></constant>
<constant name="NSAppleScriptErrorNumber"></constant>
<constant name="NSAppleScriptErrorRange"></constant>
<constant name="NSArgumentDomain"></constant>
<constant name="NSAverageKeyValueOperator"></constant>
<constant name="NSBuddhistCalendar"></constant>
<constant name="NSBundleDidLoadNotification"></constant>
<constant name="NSCharacterConversionException"></constant>
<constant name="NSChineseCalendar"></constant>
<constant name="NSClassDescriptionNeededForClassNotification"></constant>
<constant name="NSCocoaErrorDomain"></constant>
<constant name="NSConnectionDidDieNotification"></constant>
<constant name="NSConnectionDidInitializeNotification"></constant>
<constant name="NSConnectionReplyMode"></constant>
<constant name="NSCountKeyValueOperator"></constant>
<constant name="NSCurrencySymbol"></constant>
<constant name="NSCurrentLocaleDidChangeNotification"></constant>
<constant name="NSDateFormatString"></constant>
<constant name="NSDateTimeOrdering"></constant>
<constant name="NSDeallocateZombies"></constant>
<constant name="NSDebugEnabled"></constant>
<constant name="NSDecimalDigits"></constant>
<constant name="NSDecimalNumberDivideByZeroException"></constant>
<constant name="NSDecimalNumberExactnessException"></constant>
<constant name="NSDecimalNumberOverflowException"></constant>
<constant name="NSDecimalNumberUnderflowException"></constant>
<constant name="NSDecimalSeparator"></constant>
<constant name="NSDefaultRunLoopMode" swt_gen="true"></constant>
<constant name="NSDestinationInvalidException"></constant>
<constant name="NSDidBecomeSingleThreadedNotification"></constant>
<constant name="NSDistinctUnionOfArraysKeyValueOperator"></constant>
<constant name="NSDistinctUnionOfObjectsKeyValueOperator"></constant>
<constant name="NSDistinctUnionOfSetsKeyValueOperator"></constant>
<constant name="NSEarlierTimeDesignations"></constant>
<constant name="NSErrorFailingURLStringKey" swt_gen="true"></constant>
<constant name="NSFTPPropertyActiveTransferModeKey"></constant>
<constant name="NSFTPPropertyFTPProxy"></constant>
<constant name="NSFTPPropertyFileOffsetKey"></constant>
<constant name="NSFTPPropertyUserLoginKey"></constant>
<constant name="NSFTPPropertyUserPasswordKey"></constant>
<constant name="NSFailedAuthenticationException"></constant>
<constant name="NSFileAppendOnly"></constant>
<constant name="NSFileBusy"></constant>
<constant name="NSFileCreationDate"></constant>
<constant name="NSFileDeviceIdentifier"></constant>
<constant name="NSFileExtensionHidden"></constant>
<constant name="NSFileGroupOwnerAccountID"></constant>
<constant name="NSFileGroupOwnerAccountName"></constant>
<constant name="NSFileHFSCreatorCode"></constant>
<constant name="NSFileHFSTypeCode"></constant>
<constant name="NSFileHandleConnectionAcceptedNotification"></constant>
<constant name="NSFileHandleDataAvailableNotification"></constant>
<constant name="NSFileHandleNotificationDataItem"></constant>
<constant name="NSFileHandleNotificationFileHandleItem"></constant>
<constant name="NSFileHandleNotificationMonitorModes"></constant>
<constant name="NSFileHandleOperationException"></constant>
<constant name="NSFileHandleReadCompletionNotification"></constant>
<constant name="NSFileHandleReadToEndOfFileCompletionNotification"></constant>
<constant name="NSFileImmutable"></constant>
<constant name="NSFileModificationDate"></constant>
<constant name="NSFileOwnerAccountID"></constant>
<constant name="NSFileOwnerAccountName"></constant>
<constant name="NSFilePathErrorKey"></constant>
<constant name="NSFilePosixPermissions"></constant>
<constant name="NSFileReferenceCount"></constant>
<constant name="NSFileSize"></constant>
<constant name="NSFileSystemFileNumber"></constant>
<constant name="NSFileSystemFreeNodes"></constant>
<constant name="NSFileSystemFreeSize"></constant>
<constant name="NSFileSystemNodes"></constant>
<constant name="NSFileSystemNumber"></constant>
<constant name="NSFileSystemSize"></constant>
<constant name="NSFileType"></constant>
<constant name="NSFileTypeBlockSpecial"></constant>
<constant name="NSFileTypeCharacterSpecial"></constant>
<constant name="NSFileTypeDirectory"></constant>
<constant name="NSFileTypeRegular"></constant>
<constant name="NSFileTypeSocket"></constant>
<constant name="NSFileTypeSymbolicLink"></constant>
<constant name="NSFileTypeUnknown"></constant>
<constant name="NSFoundationVersionNumber"></constant>
<constant name="NSGenericException"></constant>
<constant name="NSGlobalDomain"></constant>
<constant name="NSGrammarCorrections"></constant>
<constant name="NSGrammarRange"></constant>
<constant name="NSGrammarUserDescription"></constant>
<constant name="NSGregorianCalendar"></constant>
<constant name="NSHTTPCookieComment"></constant>
<constant name="NSHTTPCookieCommentURL"></constant>
<constant name="NSHTTPCookieDiscard"></constant>
<constant name="NSHTTPCookieDomain"></constant>
<constant name="NSHTTPCookieExpires"></constant>
<constant name="NSHTTPCookieManagerAcceptPolicyChangedNotification"></constant>
<constant name="NSHTTPCookieManagerCookiesChangedNotification"></constant>
<constant name="NSHTTPCookieMaximumAge"></constant>
<constant name="NSHTTPCookieName"></constant>
<constant name="NSHTTPCookieOriginURL"></constant>
<constant name="NSHTTPCookiePath"></constant>
<constant name="NSHTTPCookiePort"></constant>
<constant name="NSHTTPCookieSecure"></constant>
<constant name="NSHTTPCookieValue"></constant>
<constant name="NSHTTPCookieVersion"></constant>
<constant name="NSHTTPPropertyErrorPageDataKey"></constant>
<constant name="NSHTTPPropertyHTTPProxy"></constant>
<constant name="NSHTTPPropertyRedirectionHeadersKey"></constant>
<constant name="NSHTTPPropertyServerHTTPVersionKey"></constant>
<constant name="NSHTTPPropertyStatusCodeKey"></constant>
<constant name="NSHTTPPropertyStatusReasonKey"></constant>
<constant name="NSHangOnUncaughtException"></constant>
<constant name="NSHebrewCalendar"></constant>
<constant name="NSHourNameDesignations"></constant>
<constant name="NSInconsistentArchiveException"></constant>
<constant name="NSIntHashCallBacks"></constant>
<constant name="NSIntMapKeyCallBacks"></constant>
<constant name="NSIntMapValueCallBacks"></constant>
<constant name="NSIntegerHashCallBacks"></constant>
<constant name="NSIntegerMapKeyCallBacks"></constant>
<constant name="NSIntegerMapValueCallBacks"></constant>
<constant name="NSInternalInconsistencyException"></constant>
<constant name="NSInternationalCurrencyString"></constant>
<constant name="NSInvalidArchiveOperationException"></constant>
<constant name="NSInvalidArgumentException"></constant>
<constant name="NSInvalidReceivePortException"></constant>
<constant name="NSInvalidSendPortException"></constant>
<constant name="NSInvalidUnarchiveOperationException"></constant>
<constant name="NSInvocationOperationCancelledException"></constant>
<constant name="NSInvocationOperationVoidResultException"></constant>
<constant name="NSIsNilTransformerName"></constant>
<constant name="NSIsNotNilTransformerName"></constant>
<constant name="NSIslamicCalendar"></constant>
<constant name="NSIslamicCivilCalendar"></constant>
<constant name="NSJapaneseCalendar"></constant>
<constant name="NSKeepAllocationStatistics"></constant>
<constant name="NSKeyValueChangeIndexesKey"></constant>
<constant name="NSKeyValueChangeKindKey"></constant>
<constant name="NSKeyValueChangeNewKey"></constant>
<constant name="NSKeyValueChangeNotificationIsPriorKey"></constant>
<constant name="NSKeyValueChangeOldKey"></constant>
<constant name="NSKeyedUnarchiveFromDataTransformerName"></constant>
<constant name="NSLaterTimeDesignations"></constant>
<constant name="NSLoadedClasses"></constant>
<constant name="NSLocalNotificationCenterType"></constant>
<constant name="NSLocaleCalendar"></constant>
<constant name="NSLocaleCollationIdentifier"></constant>
<constant name="NSLocaleCountryCode"></constant>
<constant name="NSLocaleCurrencyCode"></constant>
<constant name="NSLocaleCurrencySymbol"></constant>
<constant name="NSLocaleDecimalSeparator"></constant>
<constant name="NSLocaleExemplarCharacterSet"></constant>
<constant name="NSLocaleGroupingSeparator"></constant>
<constant name="NSLocaleIdentifier"></constant>
<constant name="NSLocaleLanguageCode"></constant>
<constant name="NSLocaleMeasurementSystem"></constant>
<constant name="NSLocaleScriptCode"></constant>
<constant name="NSLocaleUsesMetricSystem"></constant>
<constant name="NSLocaleVariantCode"></constant>
<constant name="NSLocalizedDescriptionKey"></constant>
<constant name="NSLocalizedFailureReasonErrorKey"></constant>
<constant name="NSLocalizedRecoveryOptionsErrorKey"></constant>
<constant name="NSLocalizedRecoverySuggestionErrorKey"></constant>
<constant name="NSMachErrorDomain"></constant>
<constant name="NSMallocException"></constant>
<constant name="NSMaximumKeyValueOperator"></constant>
<constant name="NSMetadataQueryDidFinishGatheringNotification"></constant>
<constant name="NSMetadataQueryDidStartGatheringNotification"></constant>
<constant name="NSMetadataQueryDidUpdateNotification"></constant>
<constant name="NSMetadataQueryGatheringProgressNotification"></constant>
<constant name="NSMetadataQueryLocalComputerScope"></constant>
<constant name="NSMetadataQueryNetworkScope"></constant>
<constant name="NSMetadataQueryResultContentRelevanceAttribute"></constant>
<constant name="NSMetadataQueryUserHomeScope"></constant>
<constant name="NSMinimumKeyValueOperator"></constant>
<constant name="NSMonthNameArray"></constant>
<constant name="NSNegateBooleanTransformerName"></constant>
<constant name="NSNegativeCurrencyFormatString"></constant>
<constant name="NSNetServicesErrorCode"></constant>
<constant name="NSNetServicesErrorDomain"></constant>
<constant name="NSNextDayDesignations"></constant>
<constant name="NSNextNextDayDesignations"></constant>
<constant name="NSNonOwnedPointerHashCallBacks"></constant>
<constant name="NSNonOwnedPointerMapKeyCallBacks"></constant>
<constant name="NSNonOwnedPointerMapValueCallBacks"></constant>
<constant name="NSNonOwnedPointerOrNullMapKeyCallBacks"></constant>
<constant name="NSNonRetainedObjectHashCallBacks"></constant>
<constant name="NSNonRetainedObjectMapKeyCallBacks"></constant>
<constant name="NSNonRetainedObjectMapValueCallBacks"></constant>
<constant name="NSOSStatusErrorDomain"></constant>
<constant name="NSObjectHashCallBacks"></constant>
<constant name="NSObjectInaccessibleException"></constant>
<constant name="NSObjectMapKeyCallBacks"></constant>
<constant name="NSObjectMapValueCallBacks"></constant>
<constant name="NSObjectNotAvailableException"></constant>
<constant name="NSOldStyleException"></constant>
<constant name="NSOperationNotSupportedForKeyException"></constant>
<constant name="NSOwnedObjectIdentityHashCallBacks"></constant>
<constant name="NSOwnedPointerHashCallBacks"></constant>
<constant name="NSOwnedPointerMapKeyCallBacks"></constant>
<constant name="NSOwnedPointerMapValueCallBacks"></constant>
<constant name="NSPOSIXErrorDomain"></constant>
<constant name="NSParseErrorException"></constant>
<constant name="NSPointerToStructHashCallBacks"></constant>
<constant name="NSPortDidBecomeInvalidNotification"></constant>
<constant name="NSPortReceiveException"></constant>
<constant name="NSPortSendException"></constant>
<constant name="NSPortTimeoutException"></constant>
<constant name="NSPositiveCurrencyFormatString"></constant>
<constant name="NSPriorDayDesignations"></constant>
<constant name="NSRangeException"></constant>
<constant name="NSRecoveryAttempterErrorKey"></constant>
<constant name="NSRegistrationDomain"></constant>
<constant name="NSRunLoopCommonModes"></constant>
<constant name="NSShortDateFormatString"></constant>
<constant name="NSShortMonthNameArray"></constant>
<constant name="NSShortTimeDateFormatString"></constant>
<constant name="NSShortWeekDayNameArray"></constant>
<constant name="NSStreamDataWrittenToMemoryStreamKey"></constant>
<constant name="NSStreamFileCurrentOffsetKey"></constant>
<constant name="NSStreamSOCKSErrorDomain"></constant>
<constant name="NSStreamSOCKSProxyConfigurationKey"></constant>
<constant name="NSStreamSOCKSProxyHostKey"></constant>
<constant name="NSStreamSOCKSProxyPasswordKey"></constant>
<constant name="NSStreamSOCKSProxyPortKey"></constant>
<constant name="NSStreamSOCKSProxyUserKey"></constant>
<constant name="NSStreamSOCKSProxyVersion4"></constant>
<constant name="NSStreamSOCKSProxyVersion5"></constant>
<constant name="NSStreamSOCKSProxyVersionKey"></constant>
<constant name="NSStreamSocketSSLErrorDomain"></constant>
<constant name="NSStreamSocketSecurityLevelKey"></constant>
<constant name="NSStreamSocketSecurityLevelNegotiatedSSL"></constant>
<constant name="NSStreamSocketSecurityLevelNone"></constant>
<constant name="NSStreamSocketSecurityLevelSSLv2"></constant>
<constant name="NSStreamSocketSecurityLevelSSLv3"></constant>
<constant name="NSStreamSocketSecurityLevelTLSv1"></constant>
<constant name="NSStringEncodingErrorKey"></constant>
<constant name="NSSumKeyValueOperator"></constant>
<constant name="NSSystemTimeZoneDidChangeNotification"></constant>
<constant name="NSTaskDidTerminateNotification"></constant>
<constant name="NSThisDayDesignations"></constant>
<constant name="NSThousandsSeparator"></constant>
<constant name="NSThreadWillExitNotification"></constant>
<constant name="NSTimeDateFormatString"></constant>
<constant name="NSTimeFormatString"></constant>
<constant name="NSURLAuthenticationMethodDefault"></constant>
<constant name="NSURLAuthenticationMethodHTMLForm"></constant>
<constant name="NSURLAuthenticationMethodHTTPBasic"></constant>
<constant name="NSURLAuthenticationMethodHTTPDigest"></constant>
<constant name="NSURLCredentialStorageChangedNotification"></constant>
<constant name="NSURLErrorDomain"></constant>
<constant name="NSURLErrorKey"></constant>
<constant name="NSURLFileScheme"></constant>
<constant name="NSURLProtectionSpaceFTPProxy"></constant>
<constant name="NSURLProtectionSpaceHTTPProxy"></constant>
<constant name="NSURLProtectionSpaceHTTPSProxy"></constant>
<constant name="NSURLProtectionSpaceSOCKSProxy"></constant>
<constant name="NSUnarchiveFromDataTransformerName"></constant>
<constant name="NSUndefinedKeyException"></constant>
<constant name="NSUnderlyingErrorKey"></constant>
<constant name="NSUndoManagerCheckpointNotification"></constant>
<constant name="NSUndoManagerDidOpenUndoGroupNotification"></constant>
<constant name="NSUndoManagerDidRedoChangeNotification"></constant>
<constant name="NSUndoManagerDidUndoChangeNotification"></constant>
<constant name="NSUndoManagerWillCloseUndoGroupNotification"></constant>
<constant name="NSUndoManagerWillRedoChangeNotification"></constant>
<constant name="NSUndoManagerWillUndoChangeNotification"></constant>
<constant name="NSUnionOfArraysKeyValueOperator"></constant>
<constant name="NSUnionOfObjectsKeyValueOperator"></constant>
<constant name="NSUnionOfSetsKeyValueOperator"></constant>
<constant name="NSUserDefaultsDidChangeNotification"></constant>
<constant name="NSWeekDayNameArray"></constant>
<constant name="NSWillBecomeMultiThreadedNotification"></constant>
<constant name="NSXMLParserErrorDomain"></constant>
<constant name="NSYearMonthWeekDesignations"></constant>
<constant name="NSZeroPoint"></constant>
<constant name="NSZeroRect"></constant>
<constant name="NSZeroSize"></constant>
<constant name="NSZombieEnabled"></constant>
<enum name="NSASCIIStringEncoding" swt_gen="true"></enum>
<enum name="NSAdminApplicationDirectory" swt_gen="true"></enum>
<enum name="NSAggregateExpressionType" swt_gen="true"></enum>
<enum name="NSAllApplicationsDirectory" swt_gen="true"></enum>
<enum name="NSAllDomainsMask" swt_gen="true"></enum>
<enum name="NSAllLibrariesDirectory" swt_gen="true"></enum>
<enum name="NSAllPredicateModifier" swt_gen="true"></enum>
<enum name="NSAnchoredSearch" swt_gen="true"></enum>
<enum name="NSAndPredicateType" swt_gen="true"></enum>
<enum name="NSAnyPredicateModifier" swt_gen="true"></enum>
<enum name="NSApplicationDirectory" swt_gen="true"></enum>
<enum name="NSApplicationSupportDirectory" swt_gen="true"></enum>
<enum name="NSArgumentEvaluationScriptError" swt_gen="true"></enum>
<enum name="NSArgumentsWrongScriptError" swt_gen="true"></enum>
<enum name="NSAtomicWrite" swt_gen="true"></enum>
<enum name="NSBackwardsSearch" swt_gen="true"></enum>
<enum name="NSBeginsWithComparison" swt_gen="true"></enum>
<enum name="NSBeginsWithPredicateOperatorType" swt_gen="true"></enum>
<enum name="NSBetweenPredicateOperatorType" swt_gen="true"></enum>
<enum name="NSBundleExecutableArchitectureI386" swt_gen="true"></enum>
<enum name="NSBundleExecutableArchitecturePPC" swt_gen="true"></enum>
<enum name="NSBundleExecutableArchitecturePPC64" swt_gen="true"></enum>
<enum name="NSBundleExecutableArchitectureX86_64" swt_gen="true"></enum>
<enum name="NSCachesDirectory" swt_gen="true"></enum>
<enum name="NSCalculationDivideByZero" swt_gen="true"></enum>
<enum name="NSCalculationLossOfPrecision" swt_gen="true"></enum>
<enum name="NSCalculationNoError" swt_gen="true"></enum>
<enum name="NSCalculationOverflow" swt_gen="true"></enum>
<enum name="NSCalculationUnderflow" swt_gen="true"></enum>
<enum name="NSCannotCreateScriptCommandError" swt_gen="true"></enum>
<enum name="NSCaseInsensitivePredicateOption" swt_gen="true"></enum>
<enum name="NSCaseInsensitiveSearch" swt_gen="true"></enum>
<enum name="NSCollectorDisabledOption" swt_gen="true"></enum>
<enum name="NSConstantValueExpressionType" swt_gen="true"></enum>
<enum name="NSContainerSpecifierError" swt_gen="true"></enum>
<enum name="NSContainsComparison" swt_gen="true"></enum>
<enum name="NSContainsPredicateOperatorType" swt_gen="true"></enum>
<enum name="NSCoreServiceDirectory" swt_gen="true"></enum>
<enum name="NSCustomSelectorPredicateOperatorType" swt_gen="true"></enum>
<enum name="NSDateFormatterBehavior10_0" swt_gen="true"></enum>
<enum name="NSDateFormatterBehavior10_4" swt_gen="true"></enum>
<enum name="NSDateFormatterBehaviorDefault" swt_gen="true"></enum>
<enum name="NSDateFormatterFullStyle" swt_gen="true"></enum>
<enum name="NSDateFormatterLongStyle" swt_gen="true"></enum>
<enum name="NSDateFormatterMediumStyle" swt_gen="true"></enum>
<enum name="NSDateFormatterNoStyle" swt_gen="true"></enum>
<enum name="NSDateFormatterShortStyle" swt_gen="true"></enum>
<enum name="NSDayCalendarUnit" swt_gen="true"></enum>
<enum name="NSDecimalMaxSize" swt_gen="true"></enum>
<enum name="NSDecimalNoScale" swt_gen="true"></enum>
<enum name="NSDemoApplicationDirectory" swt_gen="true"></enum>
<enum name="NSDesktopDirectory" swt_gen="true"></enum>
<enum name="NSDeveloperApplicationDirectory" swt_gen="true"></enum>
<enum name="NSDeveloperDirectory" swt_gen="true"></enum>
<enum name="NSDiacriticInsensitivePredicateOption" swt_gen="true"></enum>
<enum name="NSDiacriticInsensitiveSearch" swt_gen="true"></enum>
<enum name="NSDirectPredicateModifier" swt_gen="true"></enum>
<enum name="NSDocumentDirectory" swt_gen="true"></enum>
<enum name="NSDocumentationDirectory" swt_gen="true"></enum>
<enum name="NSDownloadsDirectory" swt_gen="true"></enum>
<enum name="NSEndsWithComparison" swt_gen="true"></enum>
<enum name="NSEndsWithPredicateOperatorType" swt_gen="true"></enum>
<enum name="NSEqualToComparison" swt_gen="true"></enum>
<enum name="NSEqualToPredicateOperatorType" swt_gen="true"></enum>
<enum name="NSEraCalendarUnit" swt_gen="true"></enum>
<enum name="NSEvaluatedObjectExpressionType" swt_gen="true"></enum>
<enum name="NSEverySubelement" swt_gen="true"></enum>
<enum name="NSExecutableArchitectureMismatchError" swt_gen="true"></enum>
<enum name="NSExecutableErrorMaximum" swt_gen="true"></enum>
<enum name="NSExecutableErrorMinimum" swt_gen="true"></enum>
<enum name="NSExecutableLinkError" swt_gen="true"></enum>
<enum name="NSExecutableLoadError" swt_gen="true"></enum>
<enum name="NSExecutableNotLoadableError" swt_gen="true"></enum>
<enum name="NSExecutableRuntimeMismatchError" swt_gen="true"></enum>
<enum name="NSFileErrorMaximum" swt_gen="true"></enum>
<enum name="NSFileErrorMinimum" swt_gen="true"></enum>
<enum name="NSFileLockingError" swt_gen="true"></enum>
<enum name="NSFileNoSuchFileError" swt_gen="true"></enum>
<enum name="NSFileReadCorruptFileError" swt_gen="true"></enum>
<enum name="NSFileReadInapplicableStringEncodingError" swt_gen="true"></enum>
<enum name="NSFileReadInvalidFileNameError" swt_gen="true"></enum>
<enum name="NSFileReadNoPermissionError" swt_gen="true"></enum>
<enum name="NSFileReadNoSuchFileError" swt_gen="true"></enum>
<enum name="NSFileReadTooLargeError" swt_gen="true"></enum>
<enum name="NSFileReadUnknownError" swt_gen="true"></enum>
<enum name="NSFileReadUnknownStringEncodingError" swt_gen="true"></enum>
<enum name="NSFileReadUnsupportedSchemeError" swt_gen="true"></enum>
<enum name="NSFileWriteInapplicableStringEncodingError" swt_gen="true"></enum>
<enum name="NSFileWriteInvalidFileNameError" swt_gen="true"></enum>
<enum name="NSFileWriteNoPermissionError" swt_gen="true"></enum>
<enum name="NSFileWriteOutOfSpaceError" swt_gen="true"></enum>
<enum name="NSFileWriteUnknownError" swt_gen="true"></enum>
<enum name="NSFileWriteUnsupportedSchemeError" swt_gen="true"></enum>
<enum name="NSForcedOrderingSearch" swt_gen="true"></enum>
<enum name="NSFormattingError" swt_gen="true"></enum>
<enum name="NSFormattingErrorMaximum" swt_gen="true"></enum>
<enum name="NSFormattingErrorMinimum" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_0" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_1" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_1_1" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_1_2" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_1_3" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_1_4" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_2" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_2_1" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_2_2" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_2_3" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_2_4" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_2_5" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_2_6" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_2_7" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_2_8" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_3" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_3_1" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_3_2" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_3_3" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_3_4" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_3_5" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_3_6" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_3_7" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_3_8" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_3_9" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_4" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_4_1" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_4_10" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_4_11" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_4_2" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_4_3" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_4_4_Intel" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_4_4_PowerPC" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_4_5" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_4_6" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_4_7" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_4_8" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_4_9" swt_gen="true"></enum>
<enum name="NSFoundationVersionNumber10_5"></enum>
<enum name="NSFoundationVersionNumber10_5_1"></enum>
<enum name="NSFoundationVersionNumber10_5_2"></enum>
<enum name="NSFoundationVersionNumber10_5_3"></enum>
<enum name="NSFoundationVersionNumber10_5_4"></enum>
<enum name="NSFoundationVersionWithFileManagerResourceForkSupport" swt_gen="true"></enum>
<enum name="NSFunctionExpressionType" swt_gen="true"></enum>
<enum name="NSGEOMETRY_TYPES_SAME_AS_CGGEOMETRY_TYPES" swt_gen="true"></enum>
<enum name="NSGreaterThanComparison" swt_gen="true"></enum>
<enum name="NSGreaterThanOrEqualToComparison" swt_gen="true"></enum>
<enum name="NSGreaterThanOrEqualToPredicateOperatorType" swt_gen="true"></enum>
<enum name="NSGreaterThanPredicateOperatorType" swt_gen="true"></enum>
<enum name="NSHPUXOperatingSystem" swt_gen="true"></enum>
<enum name="NSHTTPCookieAcceptPolicyAlways" swt_gen="true"></enum>
<enum name="NSHTTPCookieAcceptPolicyNever" swt_gen="true"></enum>
<enum name="NSHTTPCookieAcceptPolicyOnlyFromMainDocumentDomain" swt_gen="true"></enum>
<enum name="NSHashTableCopyIn" swt_gen="true"></enum>
<enum name="NSHashTableObjectPointerPersonality" swt_gen="true"></enum>
<enum name="NSHashTableStrongMemory" swt_gen="true"></enum>
<enum name="NSHashTableZeroingWeakMemory" swt_gen="true"></enum>
<enum name="NSHourCalendarUnit" swt_gen="true"></enum>
<enum name="NSINTEGER_DEFINED" swt_gen="true"></enum>
<enum name="NSISO2022JPStringEncoding" swt_gen="true"></enum>
<enum name="NSISOLatin1StringEncoding" swt_gen="true"></enum>
<enum name="NSISOLatin2StringEncoding" swt_gen="true"></enum>
<enum name="NSInPredicateOperatorType" swt_gen="true"></enum>
<enum name="NSIndexSubelement" swt_gen="true"></enum>
<enum name="NSIntegerMax" swt_gen="true"></enum>
<enum name="NSIntegerMin" swt_gen="true"></enum>
<enum name="NSInternalScriptError" swt_gen="true"></enum>
<enum name="NSInternalSpecifierError" swt_gen="true"></enum>
<enum name="NSIntersectSetExpressionType" swt_gen="true"></enum>
<enum name="NSInvalidIndexSpecifierError" swt_gen="true"></enum>
<enum name="NSJapaneseEUCStringEncoding" swt_gen="true"></enum>
<enum name="NSKeyPathExpressionType" swt_gen="true"></enum>
<enum name="NSKeySpecifierEvaluationScriptError" swt_gen="true"></enum>
<enum name="NSKeyValueChangeInsertion" swt_gen="true"></enum>
<enum name="NSKeyValueChangeRemoval" swt_gen="true"></enum>
<enum name="NSKeyValueChangeReplacement" swt_gen="true"></enum>
<enum name="NSKeyValueChangeSetting" swt_gen="true"></enum>
<enum name="NSKeyValueIntersectSetMutation" swt_gen="true"></enum>
<enum name="NSKeyValueMinusSetMutation" swt_gen="true"></enum>
<enum name="NSKeyValueObservingOptionInitial" swt_gen="true"></enum>
<enum name="NSKeyValueObservingOptionNew" swt_gen="true"></enum>
<enum name="NSKeyValueObservingOptionOld" swt_gen="true"></enum>
<enum name="NSKeyValueObservingOptionPrior" swt_gen="true"></enum>
<enum name="NSKeyValueSetSetMutation" swt_gen="true"></enum>
<enum name="NSKeyValueUnionSetMutation" swt_gen="true"></enum>
<enum name="NSKeyValueValidationError" swt_gen="true"></enum>
<enum name="NSLessThanComparison" swt_gen="true"></enum>
<enum name="NSLessThanOrEqualToComparison" swt_gen="true"></enum>
<enum name="NSLessThanOrEqualToPredicateOperatorType" swt_gen="true"></enum>
<enum name="NSLessThanPredicateOperatorType" swt_gen="true"></enum>
<enum name="NSLibraryDirectory" swt_gen="true"></enum>
<enum name="NSLikePredicateOperatorType" swt_gen="true"></enum>
<enum name="NSLiteralSearch" swt_gen="true"></enum>
<enum name="NSLocalDomainMask" swt_gen="true"></enum>
<enum name="NSMACHOperatingSystem" swt_gen="true"></enum>
<enum name="NSMacOSRomanStringEncoding" swt_gen="true"></enum>
<enum name="NSMachPortDeallocateNone" swt_gen="true"></enum>
<enum name="NSMachPortDeallocateReceiveRight" swt_gen="true"></enum>
<enum name="NSMachPortDeallocateSendRight" swt_gen="true"></enum>
<enum name="NSMapTableCopyIn" swt_gen="true"></enum>
<enum name="NSMapTableObjectPointerPersonality" swt_gen="true"></enum>
<enum name="NSMapTableStrongMemory" swt_gen="true"></enum>
<enum name="NSMapTableZeroingWeakMemory" swt_gen="true"></enum>
<enum name="NSMappedRead" swt_gen="true"></enum>
<enum name="NSMatchesPredicateOperatorType" swt_gen="true"></enum>
<enum name="NSMaxXEdge" swt_gen="true"></enum>
<enum name="NSMaxYEdge" swt_gen="true"></enum>
<enum name="NSMiddleSubelement" swt_gen="true"></enum>
<enum name="NSMinXEdge" swt_gen="true"></enum>
<enum name="NSMinYEdge" swt_gen="true"></enum>
<enum name="NSMinusSetExpressionType" swt_gen="true"></enum>
<enum name="NSMinuteCalendarUnit" swt_gen="true"></enum>
<enum name="NSMonthCalendarUnit" swt_gen="true"></enum>
<enum name="NSNEXTSTEPStringEncoding" swt_gen="true"></enum>
<enum name="NSNetServiceNoAutoRename" swt_gen="true"></enum>
<enum name="NSNetServicesActivityInProgress" swt_gen="true"></enum>
<enum name="NSNetServicesBadArgumentError" swt_gen="true"></enum>
<enum name="NSNetServicesCancelledError" swt_gen="true"></enum>
<enum name="NSNetServicesCollisionError" swt_gen="true"></enum>
<enum name="NSNetServicesInvalidError" swt_gen="true"></enum>
<enum name="NSNetServicesNotFoundError" swt_gen="true"></enum>
<enum name="NSNetServicesTimeoutError" swt_gen="true"></enum>
<enum name="NSNetServicesUnknownError" swt_gen="true"></enum>
<enum name="NSNetworkDomainMask" swt_gen="true"></enum>
<enum name="NSNoScriptError" swt_gen="true"></enum>
<enum name="NSNoSpecifierError" swt_gen="true"></enum>
<enum name="NSNoSubelement" swt_gen="true"></enum>
<enum name="NSNoTopLevelContainersSpecifierError" swt_gen="true"></enum>
<enum name="NSNonLossyASCIIStringEncoding" swt_gen="true"></enum>
<enum name="NSNotEqualToPredicateOperatorType" swt_gen="true"></enum>
<enum name="NSNotFound" swt_gen="true"></enum>
<enum name="NSNotPredicateType" swt_gen="true"></enum>
<enum name="NSNotificationCoalescingOnName" swt_gen="true"></enum>
<enum name="NSNotificationCoalescingOnSender" swt_gen="true"></enum>
<enum name="NSNotificationDeliverImmediately" swt_gen="true"></enum>
<enum name="NSNotificationNoCoalescing" swt_gen="true"></enum>
<enum name="NSNotificationPostToAllSessions" swt_gen="true"></enum>
<enum name="NSNotificationSuspensionBehaviorCoalesce" swt_gen="true"></enum>
<enum name="NSNotificationSuspensionBehaviorDeliverImmediately" swt_gen="true"></enum>
<enum name="NSNotificationSuspensionBehaviorDrop" swt_gen="true"></enum>
<enum name="NSNotificationSuspensionBehaviorHold" swt_gen="true"></enum>
<enum name="NSNumberFormatterBehavior10_0" swt_gen="true"></enum>
<enum name="NSNumberFormatterBehavior10_4" swt_gen="true"></enum>
<enum name="NSNumberFormatterBehaviorDefault" swt_gen="true"></enum>
<enum name="NSNumberFormatterCurrencyStyle" swt_gen="true"></enum>
<enum name="NSNumberFormatterDecimalStyle" swt_gen="true"></enum>
<enum name="NSNumberFormatterNoStyle" swt_gen="true"></enum>
<enum name="NSNumberFormatterPadAfterPrefix" swt_gen="true"></enum>
<enum name="NSNumberFormatterPadAfterSuffix" swt_gen="true"></enum>
<enum name="NSNumberFormatterPadBeforePrefix" swt_gen="true"></enum>
<enum name="NSNumberFormatterPadBeforeSuffix" swt_gen="true"></enum>
<enum name="NSNumberFormatterPercentStyle" swt_gen="true"></enum>
<enum name="NSNumberFormatterRoundCeiling" swt_gen="true"></enum>
<enum name="NSNumberFormatterRoundDown" swt_gen="true"></enum>
<enum name="NSNumberFormatterRoundFloor" swt_gen="true"></enum>
<enum name="NSNumberFormatterRoundHalfDown" swt_gen="true"></enum>
<enum name="NSNumberFormatterRoundHalfEven" swt_gen="true"></enum>
<enum name="NSNumberFormatterRoundHalfUp" swt_gen="true"></enum>
<enum name="NSNumberFormatterRoundUp" swt_gen="true"></enum>
<enum name="NSNumberFormatterScientificStyle" swt_gen="true"></enum>
<enum name="NSNumberFormatterSpellOutStyle" swt_gen="true"></enum>
<enum name="NSNumericSearch" swt_gen="true"></enum>
<enum name="NSOSF1OperatingSystem" swt_gen="true"></enum>
<enum name="NSObjCArrayType" swt_gen="true"></enum>
<enum name="NSObjCBitfield" swt_gen="true"></enum>
<enum name="NSObjCBoolType" swt_gen="true"></enum>
<enum name="NSObjCCharType" swt_gen="true"></enum>
<enum name="NSObjCDoubleType" swt_gen="true"></enum>
<enum name="NSObjCFloatType" swt_gen="true"></enum>
<enum name="NSObjCLongType" swt_gen="true"></enum>
<enum name="NSObjCLonglongType" swt_gen="true"></enum>
<enum name="NSObjCNoType" swt_gen="true"></enum>
<enum name="NSObjCObjectType" swt_gen="true"></enum>
<enum name="NSObjCPointerType" swt_gen="true"></enum>
<enum name="NSObjCSelectorType" swt_gen="true"></enum>
<enum name="NSObjCShortType" swt_gen="true"></enum>
<enum name="NSObjCStringType" swt_gen="true"></enum>
<enum name="NSObjCStructType" swt_gen="true"></enum>
<enum name="NSObjCUnionType" swt_gen="true"></enum>
<enum name="NSObjCVoidType" swt_gen="true"></enum>
<enum name="NSObjectAutoreleasedEvent" swt_gen="true"></enum>
<enum name="NSObjectExtraRefDecrementedEvent" swt_gen="true"></enum>
<enum name="NSObjectExtraRefIncrementedEvent" swt_gen="true"></enum>
<enum name="NSObjectInternalRefDecrementedEvent" swt_gen="true"></enum>
<enum name="NSObjectInternalRefIncrementedEvent" swt_gen="true"></enum>
<enum name="NSOpenStepUnicodeReservedBase" swt_gen="true"></enum>
<enum name="NSOperationNotSupportedForKeyScriptError" swt_gen="true"></enum>
<enum name="NSOperationNotSupportedForKeySpecifierError" swt_gen="true"></enum>
<enum name="NSOperationQueueDefaultMaxConcurrentOperationCount" swt_gen="true"></enum>
<enum name="NSOperationQueuePriorityHigh" swt_gen="true"></enum>
<enum name="NSOperationQueuePriorityLow" swt_gen="true"></enum>
<enum name="NSOperationQueuePriorityNormal" swt_gen="true"></enum>
<enum name="NSOperationQueuePriorityVeryHigh" swt_gen="true"></enum>
<enum name="NSOperationQueuePriorityVeryLow" swt_gen="true"></enum>
<enum name="NSOrPredicateType" swt_gen="true"></enum>
<enum name="NSOrderedAscending" swt_gen="true"></enum>
<enum name="NSOrderedDescending" swt_gen="true"></enum>
<enum name="NSOrderedSame" swt_gen="true"></enum>
<enum name="NSPointerFunctionsCStringPersonality" swt_gen="true"></enum>
<enum name="NSPointerFunctionsCopyIn" swt_gen="true"></enum>
<enum name="NSPointerFunctionsIntegerPersonality" swt_gen="true"></enum>
<enum name="NSPointerFunctionsMachVirtualMemory" swt_gen="true"></enum>
<enum name="NSPointerFunctionsMallocMemory" swt_gen="true"></enum>
<enum name="NSPointerFunctionsObjectPersonality" swt_gen="true"></enum>
<enum name="NSPointerFunctionsObjectPointerPersonality" swt_gen="true"></enum>
<enum name="NSPointerFunctionsOpaqueMemory" swt_gen="true"></enum>
<enum name="NSPointerFunctionsOpaquePersonality" swt_gen="true"></enum>
<enum name="NSPointerFunctionsStrongMemory" swt_gen="true"></enum>
<enum name="NSPointerFunctionsStructPersonality" swt_gen="true"></enum>
<enum name="NSPointerFunctionsZeroingWeakMemory" swt_gen="true"></enum>
<enum name="NSPositionAfter" swt_gen="true"></enum>
<enum name="NSPositionBefore" swt_gen="true"></enum>
<enum name="NSPositionBeginning" swt_gen="true"></enum>
<enum name="NSPositionEnd" swt_gen="true"></enum>
<enum name="NSPositionReplace" swt_gen="true"></enum>
<enum name="NSPostASAP" swt_gen="true"></enum>
<enum name="NSPostNow" swt_gen="true"></enum>
<enum name="NSPostWhenIdle" swt_gen="true"></enum>
<enum name="NSPropertyListBinaryFormat_v1_0" swt_gen="true"></enum>
<enum name="NSPropertyListImmutable" swt_gen="true"></enum>
<enum name="NSPropertyListMutableContainers" swt_gen="true"></enum>
<enum name="NSPropertyListMutableContainersAndLeaves" swt_gen="true"></enum>
<enum name="NSPropertyListOpenStepFormat" swt_gen="true"></enum>
<enum name="NSPropertyListXMLFormat_v1_0" swt_gen="true"></enum>
<enum name="NSRandomSubelement" swt_gen="true"></enum>
<enum name="NSReceiverEvaluationScriptError" swt_gen="true"></enum>
<enum name="NSReceiversCantHandleCommandScriptError" swt_gen="true"></enum>
<enum name="NSRelativeAfter" swt_gen="true"></enum>
<enum name="NSRelativeBefore" swt_gen="true"></enum>
<enum name="NSRequiredArgumentsMissingScriptError" swt_gen="true"></enum>
<enum name="NSRoundBankers" swt_gen="true"></enum>
<enum name="NSRoundDown" swt_gen="true"></enum>
<enum name="NSRoundPlain" swt_gen="true"></enum>
<enum name="NSRoundUp" swt_gen="true"></enum>
<enum name="NSSaveOptionsAsk" swt_gen="true"></enum>
<enum name="NSSaveOptionsNo" swt_gen="true"></enum>
<enum name="NSSaveOptionsYes" swt_gen="true"></enum>
<enum name="NSScannedOption" swt_gen="true"></enum>
<enum name="NSSecondCalendarUnit" swt_gen="true"></enum>
<enum name="NSShiftJISStringEncoding" swt_gen="true"></enum>
<enum name="NSSolarisOperatingSystem" swt_gen="true"></enum>
<enum name="NSStreamEventEndEncountered" swt_gen="true"></enum>
<enum name="NSStreamEventErrorOccurred" swt_gen="true"></enum>
<enum name="NSStreamEventHasBytesAvailable" swt_gen="true"></enum>
<enum name="NSStreamEventHasSpaceAvailable" swt_gen="true"></enum>
<enum name="NSStreamEventNone" swt_gen="true"></enum>
<enum name="NSStreamEventOpenCompleted" swt_gen="true"></enum>
<enum name="NSStreamStatusAtEnd" swt_gen="true"></enum>
<enum name="NSStreamStatusClosed" swt_gen="true"></enum>
<enum name="NSStreamStatusError" swt_gen="true"></enum>
<enum name="NSStreamStatusNotOpen" swt_gen="true"></enum>
<enum name="NSStreamStatusOpen" swt_gen="true"></enum>
<enum name="NSStreamStatusOpening" swt_gen="true"></enum>
<enum name="NSStreamStatusReading" swt_gen="true"></enum>
<enum name="NSStreamStatusWriting" swt_gen="true"></enum>
<enum name="NSStringEncodingConversionAllowLossy" swt_gen="true"></enum>
<enum name="NSStringEncodingConversionExternalRepresentation" swt_gen="true"></enum>
<enum name="NSSubqueryExpressionType" swt_gen="true"></enum>
<enum name="NSSunOSOperatingSystem" swt_gen="true"></enum>
<enum name="NSSymbolStringEncoding" swt_gen="true"></enum>
<enum name="NSSystemDomainMask" swt_gen="true"></enum>
<enum name="NSTimeIntervalSince1970" swt_gen="true"></enum>
<enum name="NSTimeZoneNameStyleDaylightSaving" swt_gen="true"></enum>
<enum name="NSTimeZoneNameStyleShortDaylightSaving" swt_gen="true"></enum>
<enum name="NSTimeZoneNameStyleShortStandard" swt_gen="true"></enum>
<enum name="NSTimeZoneNameStyleStandard" swt_gen="true"></enum>
<enum name="NSUIntegerMax" swt_gen="true"></enum>
<enum name="NSURLCacheStorageAllowed" swt_gen="true"></enum>
<enum name="NSURLCacheStorageAllowedInMemoryOnly" swt_gen="true"></enum>
<enum name="NSURLCacheStorageNotAllowed" swt_gen="true"></enum>
<enum name="NSURLCredentialPersistenceForSession" swt_gen="true"></enum>
<enum name="NSURLCredentialPersistenceNone" swt_gen="true"></enum>
<enum name="NSURLCredentialPersistencePermanent" swt_gen="true"></enum>
<enum name="NSURLErrorBadServerResponse" swt_gen="true"></enum>
<enum name="NSURLErrorBadURL" swt_gen="true"></enum>
<enum name="NSURLErrorCancelled" swt_gen="true"></enum>
<enum name="NSURLErrorCannotCloseFile" swt_gen="true"></enum>
<enum name="NSURLErrorCannotConnectToHost" swt_gen="true"></enum>
<enum name="NSURLErrorCannotCreateFile" swt_gen="true"></enum>
<enum name="NSURLErrorCannotDecodeContentData" swt_gen="true"></enum>
<enum name="NSURLErrorCannotDecodeRawData" swt_gen="true"></enum>
<enum name="NSURLErrorCannotFindHost" swt_gen="true"></enum>
<enum name="NSURLErrorCannotLoadFromNetwork" swt_gen="true"></enum>
<enum name="NSURLErrorCannotMoveFile" swt_gen="true"></enum>
<enum name="NSURLErrorCannotOpenFile" swt_gen="true"></enum>
<enum name="NSURLErrorCannotParseResponse" swt_gen="true"></enum>
<enum name="NSURLErrorCannotRemoveFile" swt_gen="true"></enum>
<enum name="NSURLErrorCannotWriteToFile" swt_gen="true"></enum>
<enum name="NSURLErrorClientCertificateRejected" swt_gen="true"></enum>
<enum name="NSURLErrorDNSLookupFailed" swt_gen="true"></enum>
<enum name="NSURLErrorDataLengthExceedsMaximum" swt_gen="true"></enum>
<enum name="NSURLErrorDownloadDecodingFailedMidStream" swt_gen="true"></enum>
<enum name="NSURLErrorDownloadDecodingFailedToComplete" swt_gen="true"></enum>
<enum name="NSURLErrorFileDoesNotExist" swt_gen="true"></enum>
<enum name="NSURLErrorFileIsDirectory" swt_gen="true"></enum>
<enum name="NSURLErrorHTTPTooManyRedirects" swt_gen="true"></enum>
<enum name="NSURLErrorNetworkConnectionLost" swt_gen="true"></enum>
<enum name="NSURLErrorNoPermissionsToReadFile" swt_gen="true"></enum>
<enum name="NSURLErrorNotConnectedToInternet" swt_gen="true"></enum>
<enum name="NSURLErrorRedirectToNonExistentLocation" swt_gen="true"></enum>
<enum name="NSURLErrorResourceUnavailable" swt_gen="true"></enum>
<enum name="NSURLErrorSecureConnectionFailed" swt_gen="true"></enum>
<enum name="NSURLErrorServerCertificateHasBadDate" swt_gen="true"></enum>
<enum name="NSURLErrorServerCertificateHasUnknownRoot" swt_gen="true"></enum>
<enum name="NSURLErrorServerCertificateNotYetValid" swt_gen="true"></enum>
<enum name="NSURLErrorServerCertificateUntrusted" swt_gen="true"></enum>
<enum name="NSURLErrorTimedOut" swt_gen="true"></enum>
<enum name="NSURLErrorUnknown" swt_gen="true"></enum>
<enum name="NSURLErrorUnsupportedURL" swt_gen="true"></enum>
<enum name="NSURLErrorUserAuthenticationRequired" swt_gen="true"></enum>
<enum name="NSURLErrorUserCancelledAuthentication" swt_gen="true"></enum>
<enum name="NSURLErrorZeroByteResource" swt_gen="true"></enum>
<enum name="NSURLHandleLoadFailed" swt_gen="true"></enum>
<enum name="NSURLHandleLoadInProgress" swt_gen="true"></enum>
<enum name="NSURLHandleLoadSucceeded" swt_gen="true"></enum>
<enum name="NSURLHandleNotLoaded" swt_gen="true"></enum>
<enum name="NSURLRequestReloadIgnoringCacheData" swt_gen="true"></enum>
<enum name="NSURLRequestReloadIgnoringLocalAndRemoteCacheData" swt_gen="true"></enum>
<enum name="NSURLRequestReloadIgnoringLocalCacheData" swt_gen="true"></enum>
<enum name="NSURLRequestReloadRevalidatingCacheData" swt_gen="true"></enum>
<enum name="NSURLRequestReturnCacheDataDontLoad" swt_gen="true"></enum>
<enum name="NSURLRequestReturnCacheDataElseLoad" swt_gen="true"></enum>
<enum name="NSURLRequestUseProtocolCachePolicy" swt_gen="true"></enum>
<enum name="NSUTF16BigEndianStringEncoding" swt_gen="true"></enum>
<enum name="NSUTF16LittleEndianStringEncoding" swt_gen="true"></enum>
<enum name="NSUTF16StringEncoding" swt_gen="true"></enum>
<enum name="NSUTF32BigEndianStringEncoding" swt_gen="true"></enum>
<enum name="NSUTF32LittleEndianStringEncoding" swt_gen="true"></enum>
<enum name="NSUTF32StringEncoding" swt_gen="true"></enum>
<enum name="NSUTF8StringEncoding" swt_gen="true"></enum>
<enum name="NSUncachedRead" swt_gen="true"></enum>
<enum name="NSUndefinedDateComponent" swt_gen="true"></enum>
<enum name="NSUndoCloseGroupingRunLoopOrdering" swt_gen="true"></enum>
<enum name="NSUnicodeStringEncoding" swt_gen="true"></enum>
<enum name="NSUnionSetExpressionType" swt_gen="true"></enum>
<enum name="NSUnknownKeyScriptError" swt_gen="true"></enum>
<enum name="NSUnknownKeySpecifierError" swt_gen="true"></enum>
<enum name="NSUserCancelledError" swt_gen="true"></enum>
<enum name="NSUserDirectory" swt_gen="true"></enum>
<enum name="NSUserDomainMask" swt_gen="true"></enum>
<enum name="NSValidationErrorMaximum" swt_gen="true"></enum>
<enum name="NSValidationErrorMinimum" swt_gen="true"></enum>
<enum name="NSVariableExpressionType" swt_gen="true"></enum>
<enum name="NSWeekCalendarUnit" swt_gen="true"></enum>
<enum name="NSWeekdayCalendarUnit" swt_gen="true"></enum>
<enum name="NSWeekdayOrdinalCalendarUnit" swt_gen="true"></enum>
<enum name="NSWidthInsensitiveSearch" swt_gen="true"></enum>
<enum name="NSWindows95OperatingSystem" swt_gen="true"></enum>
<enum name="NSWindowsCP1250StringEncoding" swt_gen="true"></enum>
<enum name="NSWindowsCP1251StringEncoding" swt_gen="true"></enum>
<enum name="NSWindowsCP1252StringEncoding" swt_gen="true"></enum>
<enum name="NSWindowsCP1253StringEncoding" swt_gen="true"></enum>
<enum name="NSWindowsCP1254StringEncoding" swt_gen="true"></enum>
<enum name="NSWindowsNTOperatingSystem" swt_gen="true"></enum>
<enum name="NSWrapCalendarComponents" swt_gen="true"></enum>
<enum name="NSXMLAttributeCDATAKind" swt_gen="true"></enum>
<enum name="NSXMLAttributeDeclarationKind" swt_gen="true"></enum>
<enum name="NSXMLAttributeEntitiesKind" swt_gen="true"></enum>
<enum name="NSXMLAttributeEntityKind" swt_gen="true"></enum>
<enum name="NSXMLAttributeEnumerationKind" swt_gen="true"></enum>
<enum name="NSXMLAttributeIDKind" swt_gen="true"></enum>
<enum name="NSXMLAttributeIDRefKind" swt_gen="true"></enum>
<enum name="NSXMLAttributeIDRefsKind" swt_gen="true"></enum>
<enum name="NSXMLAttributeKind" swt_gen="true"></enum>
<enum name="NSXMLAttributeNMTokenKind" swt_gen="true"></enum>
<enum name="NSXMLAttributeNMTokensKind" swt_gen="true"></enum>
<enum name="NSXMLAttributeNotationKind" swt_gen="true"></enum>
<enum name="NSXMLCommentKind" swt_gen="true"></enum>
<enum name="NSXMLDTDKind" swt_gen="true"></enum>
<enum name="NSXMLDocumentHTMLKind" swt_gen="true"></enum>
<enum name="NSXMLDocumentIncludeContentTypeDeclaration" swt_gen="true"></enum>
<enum name="NSXMLDocumentKind" swt_gen="true"></enum>
<enum name="NSXMLDocumentTextKind" swt_gen="true"></enum>
<enum name="NSXMLDocumentTidyHTML" swt_gen="true"></enum>
<enum name="NSXMLDocumentTidyXML" swt_gen="true"></enum>
<enum name="NSXMLDocumentValidate" swt_gen="true"></enum>
<enum name="NSXMLDocumentXHTMLKind" swt_gen="true"></enum>
<enum name="NSXMLDocumentXInclude" swt_gen="true"></enum>
<enum name="NSXMLDocumentXMLKind" swt_gen="true"></enum>
<enum name="NSXMLElementDeclarationAnyKind" swt_gen="true"></enum>
<enum name="NSXMLElementDeclarationElementKind" swt_gen="true"></enum>
<enum name="NSXMLElementDeclarationEmptyKind" swt_gen="true"></enum>
<enum name="NSXMLElementDeclarationKind" swt_gen="true"></enum>
<enum name="NSXMLElementDeclarationMixedKind" swt_gen="true"></enum>
<enum name="NSXMLElementDeclarationUndefinedKind" swt_gen="true"></enum>
<enum name="NSXMLElementKind" swt_gen="true"></enum>
<enum name="NSXMLEntityDeclarationKind" swt_gen="true"></enum>
<enum name="NSXMLEntityGeneralKind" swt_gen="true"></enum>
<enum name="NSXMLEntityParameterKind" swt_gen="true"></enum>
<enum name="NSXMLEntityParsedKind" swt_gen="true"></enum>
<enum name="NSXMLEntityPredefined" swt_gen="true"></enum>
<enum name="NSXMLEntityUnparsedKind" swt_gen="true"></enum>
<enum name="NSXMLInvalidKind" swt_gen="true"></enum>
<enum name="NSXMLNamespaceKind" swt_gen="true"></enum>
<enum name="NSXMLNodeCompactEmptyElement" swt_gen="true"></enum>
<enum name="NSXMLNodeExpandEmptyElement" swt_gen="true"></enum>
<enum name="NSXMLNodeIsCDATA" swt_gen="true"></enum>
<enum name="NSXMLNodeOptionsNone" swt_gen="true"></enum>
<enum name="NSXMLNodePreserveAll" swt_gen="true"></enum>
<enum name="NSXMLNodePreserveAttributeOrder" swt_gen="true"></enum>
<enum name="NSXMLNodePreserveCDATA" swt_gen="true"></enum>
<enum name="NSXMLNodePreserveCharacterReferences" swt_gen="true"></enum>
<enum name="NSXMLNodePreserveDTD" swt_gen="true"></enum>
<enum name="NSXMLNodePreserveEmptyElements" swt_gen="true"></enum>
<enum name="NSXMLNodePreserveEntities" swt_gen="true"></enum>
<enum name="NSXMLNodePreserveNamespaceOrder" swt_gen="true"></enum>
<enum name="NSXMLNodePreservePrefixes" swt_gen="true"></enum>
<enum name="NSXMLNodePreserveQuotes" swt_gen="true"></enum>
<enum name="NSXMLNodePreserveWhitespace" swt_gen="true"></enum>
<enum name="NSXMLNodePrettyPrint" swt_gen="true"></enum>
<enum name="NSXMLNodeUseDoubleQuotes" swt_gen="true"></enum>
<enum name="NSXMLNodeUseSingleQuotes" swt_gen="true"></enum>
<enum name="NSXMLNotationDeclarationKind" swt_gen="true"></enum>
<enum name="NSXMLParserAttributeHasNoValueError" swt_gen="true"></enum>
<enum name="NSXMLParserAttributeListNotFinishedError" swt_gen="true"></enum>
<enum name="NSXMLParserAttributeListNotStartedError" swt_gen="true"></enum>
<enum name="NSXMLParserAttributeNotFinishedError" swt_gen="true"></enum>
<enum name="NSXMLParserAttributeNotStartedError" swt_gen="true"></enum>
<enum name="NSXMLParserAttributeRedefinedError" swt_gen="true"></enum>
<enum name="NSXMLParserCDATANotFinishedError" swt_gen="true"></enum>
<enum name="NSXMLParserCharacterRefAtEOFError" swt_gen="true"></enum>
<enum name="NSXMLParserCharacterRefInDTDError" swt_gen="true"></enum>
<enum name="NSXMLParserCharacterRefInEpilogError" swt_gen="true"></enum>
<enum name="NSXMLParserCharacterRefInPrologError" swt_gen="true"></enum>
<enum name="NSXMLParserCommentContainsDoubleHyphenError" swt_gen="true"></enum>
<enum name="NSXMLParserCommentNotFinishedError" swt_gen="true"></enum>
<enum name="NSXMLParserConditionalSectionNotFinishedError" swt_gen="true"></enum>
<enum name="NSXMLParserConditionalSectionNotStartedError" swt_gen="true"></enum>
<enum name="NSXMLParserDOCTYPEDeclNotFinishedError" swt_gen="true"></enum>
<enum name="NSXMLParserDelegateAbortedParseError" swt_gen="true"></enum>
<enum name="NSXMLParserDocumentStartError" swt_gen="true"></enum>
<enum name="NSXMLParserElementContentDeclNotFinishedError" swt_gen="true"></enum>
<enum name="NSXMLParserElementContentDeclNotStartedError" swt_gen="true"></enum>
<enum name="NSXMLParserEmptyDocumentError" swt_gen="true"></enum>
<enum name="NSXMLParserEncodingNotSupportedError" swt_gen="true"></enum>
<enum name="NSXMLParserEntityBoundaryError" swt_gen="true"></enum>
<enum name="NSXMLParserEntityIsExternalError" swt_gen="true"></enum>
<enum name="NSXMLParserEntityIsParameterError" swt_gen="true"></enum>
<enum name="NSXMLParserEntityNotFinishedError" swt_gen="true"></enum>
<enum name="NSXMLParserEntityNotStartedError" swt_gen="true"></enum>
<enum name="NSXMLParserEntityRefAtEOFError" swt_gen="true"></enum>
<enum name="NSXMLParserEntityRefInDTDError" swt_gen="true"></enum>
<enum name="NSXMLParserEntityRefInEpilogError" swt_gen="true"></enum>
<enum name="NSXMLParserEntityRefInPrologError" swt_gen="true"></enum>
<enum name="NSXMLParserEntityRefLoopError" swt_gen="true"></enum>
<enum name="NSXMLParserEntityReferenceMissingSemiError" swt_gen="true"></enum>
<enum name="NSXMLParserEntityReferenceWithoutNameError" swt_gen="true"></enum>
<enum name="NSXMLParserEntityValueRequiredError" swt_gen="true"></enum>
<enum name="NSXMLParserEqualExpectedError" swt_gen="true"></enum>
<enum name="NSXMLParserExternalStandaloneEntityError" swt_gen="true"></enum>
<enum name="NSXMLParserExternalSubsetNotFinishedError" swt_gen="true"></enum>
<enum name="NSXMLParserExtraContentError" swt_gen="true"></enum>
<enum name="NSXMLParserGTRequiredError" swt_gen="true"></enum>
<enum name="NSXMLParserInternalError" swt_gen="true"></enum>
<enum name="NSXMLParserInvalidCharacterError" swt_gen="true"></enum>
<enum name="NSXMLParserInvalidCharacterInEntityError" swt_gen="true"></enum>
<enum name="NSXMLParserInvalidCharacterRefError" swt_gen="true"></enum>
<enum name="NSXMLParserInvalidConditionalSectionError" swt_gen="true"></enum>
<enum name="NSXMLParserInvalidDecimalCharacterRefError" swt_gen="true"></enum>
<enum name="NSXMLParserInvalidEncodingError" swt_gen="true"></enum>
<enum name="NSXMLParserInvalidEncodingNameError" swt_gen="true"></enum>
<enum name="NSXMLParserInvalidHexCharacterRefError" swt_gen="true"></enum>
<enum name="NSXMLParserInvalidURIError" swt_gen="true"></enum>
<enum name="NSXMLParserLTRequiredError" swt_gen="true"></enum>
<enum name="NSXMLParserLTSlashRequiredError" swt_gen="true"></enum>
<enum name="NSXMLParserLessThanSymbolInAttributeError" swt_gen="true"></enum>
<enum name="NSXMLParserLiteralNotFinishedError" swt_gen="true"></enum>
<enum name="NSXMLParserLiteralNotStartedError" swt_gen="true"></enum>
<enum name="NSXMLParserMisplacedCDATAEndStringError" swt_gen="true"></enum>
<enum name="NSXMLParserMisplacedXMLDeclarationError" swt_gen="true"></enum>
<enum name="NSXMLParserMixedContentDeclNotFinishedError" swt_gen="true"></enum>
<enum name="NSXMLParserMixedContentDeclNotStartedError" swt_gen="true"></enum>
<enum name="NSXMLParserNAMERequiredError" swt_gen="true"></enum>
<enum name="NSXMLParserNMTOKENRequiredError" swt_gen="true"></enum>
<enum name="NSXMLParserNamespaceDeclarationError" swt_gen="true"></enum>
<enum name="NSXMLParserNoDTDError" swt_gen="true"></enum>
<enum name="NSXMLParserNotWellBalancedError" swt_gen="true"></enum>
<enum name="NSXMLParserNotationNotFinishedError" swt_gen="true"></enum>
<enum name="NSXMLParserNotationNotStartedError" swt_gen="true"></enum>
<enum name="NSXMLParserOutOfMemoryError" swt_gen="true"></enum>
<enum name="NSXMLParserPCDATARequiredError" swt_gen="true"></enum>
<enum name="NSXMLParserParsedEntityRefAtEOFError" swt_gen="true"></enum>
<enum name="NSXMLParserParsedEntityRefInEpilogError" swt_gen="true"></enum>
<enum name="NSXMLParserParsedEntityRefInInternalError" swt_gen="true"></enum>
<enum name="NSXMLParserParsedEntityRefInInternalSubsetError" swt_gen="true"></enum>
<enum name="NSXMLParserParsedEntityRefInPrologError" swt_gen="true"></enum>
<enum name="NSXMLParserParsedEntityRefMissingSemiError" swt_gen="true"></enum>
<enum name="NSXMLParserParsedEntityRefNoNameError" swt_gen="true"></enum>
<enum name="NSXMLParserPrematureDocumentEndError" swt_gen="true"></enum>
<enum name="NSXMLParserProcessingInstructionNotFinishedError" swt_gen="true"></enum>
<enum name="NSXMLParserProcessingInstructionNotStartedError" swt_gen="true"></enum>
<enum name="NSXMLParserPublicIdentifierRequiredError" swt_gen="true"></enum>
<enum name="NSXMLParserSeparatorRequiredError" swt_gen="true"></enum>
<enum name="NSXMLParserSpaceRequiredError" swt_gen="true"></enum>
<enum name="NSXMLParserStandaloneValueError" swt_gen="true"></enum>
<enum name="NSXMLParserStringNotClosedError" swt_gen="true"></enum>
<enum name="NSXMLParserStringNotStartedError" swt_gen="true"></enum>
<enum name="NSXMLParserTagNameMismatchError" swt_gen="true"></enum>
<enum name="NSXMLParserURIFragmentError" swt_gen="true"></enum>
<enum name="NSXMLParserURIRequiredError" swt_gen="true"></enum>
<enum name="NSXMLParserUndeclaredEntityError" swt_gen="true"></enum>
<enum name="NSXMLParserUnfinishedTagError" swt_gen="true"></enum>
<enum name="NSXMLParserUnknownEncodingError" swt_gen="true"></enum>
<enum name="NSXMLParserUnparsedEntityError" swt_gen="true"></enum>
<enum name="NSXMLParserXMLDeclNotFinishedError" swt_gen="true"></enum>
<enum name="NSXMLParserXMLDeclNotStartedError" swt_gen="true"></enum>
<enum name="NSXMLProcessingInstructionKind" swt_gen="true"></enum>
<enum name="NSXMLTextKind" swt_gen="true"></enum>
<enum name="NSYearCalendarUnit" swt_gen="true"></enum>
<enum name="NS_BigEndian" swt_gen="true"></enum>
<enum name="NS_LittleEndian" swt_gen="true"></enum>
<enum name="NS_UNICHAR_IS_EIGHT_BIT" swt_gen="true"></enum>
<enum name="NS_UnknownByteOrder" swt_gen="true"></enum>
<function name="NSAllHashTableObjects">
<arg name="table"></arg>
<retval></retval>
</function>
<function name="NSAllMapTableKeys">
<arg name="table"></arg>
<retval></retval>
</function>
<function name="NSAllMapTableValues">
<arg name="table"></arg>
<retval></retval>
</function>
<function name="NSAllocateCollectable">
<arg name="size"></arg>
<arg name="options"></arg>
<retval></retval>
</function>
<function name="NSAllocateMemoryPages">
<arg name="bytes"></arg>
<retval></retval>
</function>
<function name="NSAllocateObject">
<arg name="aClass"></arg>
<arg name="extraBytes"></arg>
<arg name="zone"></arg>
<retval></retval>
</function>
<function name="NSClassFromString">
<arg name="aClassName"></arg>
<retval></retval>
</function>
<function name="NSCompareHashTables">
<arg name="table1"></arg>
<arg name="table2"></arg>
<retval></retval>
</function>
<function name="NSCompareMapTables">
<arg name="table1"></arg>
<arg name="table2"></arg>
<retval></retval>
</function>
<function name="NSContainsRect">
<arg name="aRect"></arg>
<arg name="bRect"></arg>
<retval></retval>
</function>
<function name="NSConvertHostDoubleToSwapped">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSConvertHostFloatToSwapped">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSConvertSwappedDoubleToHost">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSConvertSwappedFloatToHost">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSCopyHashTableWithZone">
<arg name="table"></arg>
<arg name="zone"></arg>
<retval></retval>
</function>
<function name="NSCopyMapTableWithZone">
<arg name="table"></arg>
<arg name="zone"></arg>
<retval></retval>
</function>
<function name="NSCopyMemoryPages">
<arg name="source"></arg>
<arg name="dest"></arg>
<arg name="bytes"></arg>
</function>
<function name="NSCopyObject">
<arg name="object"></arg>
<arg name="extraBytes"></arg>
<arg name="zone"></arg>
<retval></retval>
</function>
<function name="NSCountFrames">
<retval></retval>
</function>
<function name="NSCountHashTable">
<arg name="table"></arg>
<retval></retval>
</function>
<function name="NSCountMapTable">
<arg name="table"></arg>
<retval></retval>
</function>
<function name="NSCreateHashTable">
<arg name="callBacks"></arg>
<arg name="capacity"></arg>
<retval></retval>
</function>
<function name="NSCreateHashTableWithZone">
<arg name="callBacks"></arg>
<arg name="capacity"></arg>
<arg name="zone"></arg>
<retval></retval>
</function>
<function name="NSCreateMapTable">
<arg name="keyCallBacks"></arg>
<arg name="valueCallBacks"></arg>
<arg name="capacity"></arg>
<retval></retval>
</function>
<function name="NSCreateMapTableWithZone">
<arg name="keyCallBacks"></arg>
<arg name="valueCallBacks"></arg>
<arg name="capacity"></arg>
<arg name="zone"></arg>
<retval></retval>
</function>
<function name="NSCreateZone">
<arg name="startSize"></arg>
<arg name="granularity"></arg>
<arg name="canFree"></arg>
<retval></retval>
</function>
<function name="NSDeallocateMemoryPages">
<arg name="ptr"></arg>
<arg name="bytes"></arg>
</function>
<function name="NSDeallocateObject">
<arg name="object"></arg>
</function>
<function name="NSDecimalAdd">
<arg name="result"></arg>
<arg name="leftOperand"></arg>
<arg name="rightOperand"></arg>
<arg name="roundingMode"></arg>
<retval></retval>
</function>
<function name="NSDecimalCompact">
<arg name="number"></arg>
</function>
<function name="NSDecimalCompare">
<arg name="leftOperand"></arg>
<arg name="rightOperand"></arg>
<retval></retval>
</function>
<function name="NSDecimalCopy">
<arg name="destination"></arg>
<arg name="source"></arg>
</function>
<function name="NSDecimalDivide">
<arg name="result"></arg>
<arg name="leftOperand"></arg>
<arg name="rightOperand"></arg>
<arg name="roundingMode"></arg>
<retval></retval>
</function>
<function name="NSDecimalIsNotANumber">
<arg name="dcm"></arg>
<retval></retval>
</function>
<function name="NSDecimalMultiply">
<arg name="result"></arg>
<arg name="leftOperand"></arg>
<arg name="rightOperand"></arg>
<arg name="roundingMode"></arg>
<retval></retval>
</function>
<function name="NSDecimalMultiplyByPowerOf10">
<arg name="result"></arg>
<arg name="number"></arg>
<arg name="power"></arg>
<arg name="roundingMode"></arg>
<retval></retval>
</function>
<function name="NSDecimalNormalize">
<arg name="number1"></arg>
<arg name="number2"></arg>
<arg name="roundingMode"></arg>
<retval></retval>
</function>
<function name="NSDecimalPower">
<arg name="result"></arg>
<arg name="number"></arg>
<arg name="power"></arg>
<arg name="roundingMode"></arg>
<retval></retval>
</function>
<function name="NSDecimalRound">
<arg name="result"></arg>
<arg name="number"></arg>
<arg name="scale"></arg>
<arg name="roundingMode"></arg>
</function>
<function name="NSDecimalString">
<arg name="dcm"></arg>
<arg name="locale"></arg>
<retval></retval>
</function>
<function name="NSDecimalSubtract">
<arg name="result"></arg>
<arg name="leftOperand"></arg>
<arg name="rightOperand"></arg>
<arg name="roundingMode"></arg>
<retval></retval>
</function>
<function name="NSDecrementExtraRefCountWasZero">
<arg name="object"></arg>
<retval></retval>
</function>
<function name="NSDefaultMallocZone">
<retval></retval>
</function>
<function name="NSDivideRect">
<arg name="inRect"></arg>
<arg name="slice"></arg>
<arg name="rem"></arg>
<arg name="amount"></arg>
<arg name="edge"></arg>
</function>
<function name="NSEndHashTableEnumeration">
<arg name="enumerator"></arg>
</function>
<function name="NSEndMapTableEnumeration">
<arg name="enumerator"></arg>
</function>
<function name="NSEnumerateHashTable">
<arg name="table"></arg>
<retval></retval>
</function>
<function name="NSEnumerateMapTable">
<arg name="table"></arg>
<retval></retval>
</function>
<function name="NSEqualPoints">
<arg name="aPoint"></arg>
<arg name="bPoint"></arg>
<retval></retval>
</function>
<function name="NSEqualRanges">
<arg name="range1"></arg>
<arg name="range2"></arg>
<retval></retval>
</function>
<function name="NSEqualRects" swt_gen="true">
<arg name="aRect" swt_gen="true"></arg>
<arg name="bRect" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</function>
<function name="NSEqualSizes">
<arg name="aSize"></arg>
<arg name="bSize"></arg>
<retval></retval>
</function>
<function name="NSExtraRefCount">
<arg name="object"></arg>
<retval></retval>
</function>
<function name="NSFileTypeForHFSTypeCode" swt_gen="true">
<arg name="hfsFileTypeCode" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</function>
<function name="NSFrameAddress">
<arg name="frame"></arg>
<retval></retval>
</function>
<function name="NSFreeHashTable">
<arg name="table"></arg>
</function>
<function name="NSFreeMapTable">
<arg name="table"></arg>
</function>
<function name="NSFullUserName">
<retval></retval>
</function>
<function name="NSGetSizeAndAlignment" swt_gen="true">
<arg name="typePtr" swt_gen="true"></arg>
<arg name="sizep" swt_gen="true" swt_java_type="int[]" swt_java_type64="long[]"></arg>
<arg name="alignp" swt_gen="true" swt_java_type="int[]" swt_java_type64="long[]"></arg>
<retval swt_gen="true"></retval>
</function>
<function name="NSGetUncaughtExceptionHandler">
<retval>
<arg></arg>
<retval></retval>
</retval>
</function>
<function name="NSHFSTypeCodeFromFileType">
<arg name="fileTypeString"></arg>
<retval></retval>
</function>
<function name="NSHFSTypeOfFile">
<arg name="fullFilePath"></arg>
<retval></retval>
</function>
<function name="NSHashGet">
<arg name="table"></arg>
<arg name="pointer"></arg>
<retval></retval>
</function>
<function name="NSHashInsert">
<arg name="table"></arg>
<arg name="pointer"></arg>
</function>
<function name="NSHashInsertIfAbsent">
<arg name="table"></arg>
<arg name="pointer"></arg>
<retval></retval>
</function>
<function name="NSHashInsertKnownAbsent">
<arg name="table"></arg>
<arg name="pointer"></arg>
</function>
<function name="NSHashRemove">
<arg name="table"></arg>
<arg name="pointer"></arg>
</function>
<function name="NSHeight">
<arg name="aRect"></arg>
<retval></retval>
</function>
<function name="NSHomeDirectory">
<retval></retval>
</function>
<function name="NSHomeDirectoryForUser">
<arg name="userName"></arg>
<retval></retval>
</function>
<function name="NSHostByteOrder">
<retval></retval>
</function>
<function name="NSIncrementExtraRefCount">
<arg name="object"></arg>
</function>
<function name="NSInsetRect">
<arg name="aRect"></arg>
<arg name="dX"></arg>
<arg name="dY"></arg>
<retval></retval>
</function>
<function name="NSIntegralRect">
<arg name="aRect"></arg>
<retval></retval>
</function>
<function name="NSIntersectionRange">
<arg name="range1"></arg>
<arg name="range2"></arg>
<retval></retval>
</function>
<function name="NSIntersectionRect">
<arg name="aRect"></arg>
<arg name="bRect"></arg>
<retval></retval>
</function>
<function name="NSIntersectsRect">
<arg name="aRect"></arg>
<arg name="bRect"></arg>
<retval></retval>
</function>
<function name="NSIsEmptyRect">
<arg name="aRect"></arg>
<retval></retval>
</function>
<function name="NSIsFreedObject">
<arg name="anObject"></arg>
<retval></retval>
</function>
<function name="NSLocationInRange">
<arg name="loc"></arg>
<arg name="range"></arg>
<retval></retval>
</function>
<function name="NSLog">
<arg name="format"></arg>
</function>
<function name="NSLogPageSize">
<retval></retval>
</function>
<function name="NSLogv">
<arg name="format"></arg>
<arg name="args"></arg>
</function>
<function name="NSMakeCollectable">
<arg name="cf"></arg>
<retval></retval>
</function>
<function name="NSMakePoint">
<arg name="x"></arg>
<arg name="y"></arg>
<retval></retval>
</function>
<function name="NSMakeRange">
<arg name="loc"></arg>
<arg name="len"></arg>
<retval></retval>
</function>
<function name="NSMakeRect">
<arg name="x"></arg>
<arg name="y"></arg>
<arg name="w"></arg>
<arg name="h"></arg>
<retval></retval>
</function>
<function name="NSMakeSize">
<arg name="w"></arg>
<arg name="h"></arg>
<retval></retval>
</function>
<function name="NSMapGet">
<arg name="table"></arg>
<arg name="key"></arg>
<retval></retval>
</function>
<function name="NSMapInsert">
<arg name="table"></arg>
<arg name="key"></arg>
<arg name="value"></arg>
</function>
<function name="NSMapInsertIfAbsent">
<arg name="table"></arg>
<arg name="key"></arg>
<arg name="value"></arg>
<retval></retval>
</function>
<function name="NSMapInsertKnownAbsent">
<arg name="table"></arg>
<arg name="key"></arg>
<arg name="value"></arg>
</function>
<function name="NSMapMember">
<arg name="table"></arg>
<arg name="key"></arg>
<arg name="originalKey"></arg>
<arg name="value"></arg>
<retval></retval>
</function>
<function name="NSMapRemove">
<arg name="table"></arg>
<arg name="key"></arg>
</function>
<function name="NSMaxRange">
<arg name="range"></arg>
<retval></retval>
</function>
<function name="NSMaxX">
<arg name="aRect"></arg>
<retval></retval>
</function>
<function name="NSMaxY">
<arg name="aRect"></arg>
<retval></retval>
</function>
<function name="NSMidX">
<arg name="aRect"></arg>
<retval></retval>
</function>
<function name="NSMidY">
<arg name="aRect"></arg>
<retval></retval>
</function>
<function name="NSMinX">
<arg name="aRect"></arg>
<retval></retval>
</function>
<function name="NSMinY">
<arg name="aRect"></arg>
<retval></retval>
</function>
<function name="NSMouseInRect">
<arg name="aPoint"></arg>
<arg name="aRect"></arg>
<arg name="flipped"></arg>
<retval></retval>
</function>
<function name="NSNextHashEnumeratorItem">
<arg name="enumerator"></arg>
<retval></retval>
</function>
<function name="NSNextMapEnumeratorPair">
<arg name="enumerator"></arg>
<arg name="key"></arg>
<arg name="value"></arg>
<retval></retval>
</function>
<function name="NSOffsetRect">
<arg name="aRect"></arg>
<arg name="dX"></arg>
<arg name="dY"></arg>
<retval></retval>
</function>
<function name="NSOpenStepRootDirectory">
<retval></retval>
</function>
<function name="NSPageSize">
<retval></retval>
</function>
<function name="NSPointFromCGPoint">
<arg name="cgpoint"></arg>
<retval></retval>
</function>
<function name="NSPointFromString">
<arg name="aString"></arg>
<retval></retval>
</function>
<function name="NSPointInRect" swt_gen="true">
<arg name="aPoint" swt_gen="true"></arg>
<arg name="aRect" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</function>
<function name="NSPointToCGPoint">
<arg name="nspoint"></arg>
<retval></retval>
</function>
<function name="NSProtocolFromString">
<arg name="namestr"></arg>
<retval></retval>
</function>
<function name="NSRangeFromString">
<arg name="aString"></arg>
<retval></retval>
</function>
<function name="NSRealMemoryAvailable">
<retval></retval>
</function>
<function name="NSReallocateCollectable">
<arg name="ptr"></arg>
<arg name="size"></arg>
<arg name="options"></arg>
<retval></retval>
</function>
<function name="NSRecordAllocationEvent">
<arg name="eventType"></arg>
<arg name="object"></arg>
</function>
<function name="NSRectFromCGRect">
<arg name="cgrect"></arg>
<retval></retval>
</function>
<function name="NSRectFromString">
<arg name="aString"></arg>
<retval></retval>
</function>
<function name="NSRectToCGRect">
<arg name="nsrect"></arg>
<retval></retval>
</function>
<function name="NSRecycleZone">
<arg name="zone"></arg>
</function>
<function name="NSResetHashTable">
<arg name="table"></arg>
</function>
<function name="NSResetMapTable">
<arg name="table"></arg>
</function>
<function name="NSReturnAddress">
<arg name="frame"></arg>
<retval></retval>
</function>
<function name="NSRoundDownToMultipleOfPageSize">
<arg name="bytes"></arg>
<retval></retval>
</function>
<function name="NSRoundUpToMultipleOfPageSize">
<arg name="bytes"></arg>
<retval></retval>
</function>
<function name="NSSearchPathForDirectoriesInDomains" swt_gen="true">
<arg name="directory" swt_gen="true"></arg>
<arg name="domainMask" swt_gen="true"></arg>
<arg name="expandTilde" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</function>
<function name="NSSelectorFromString">
<arg name="aSelectorName"></arg>
<retval></retval>
</function>
<function name="NSSetUncaughtExceptionHandler">
<arg name="dummy">
<arg></arg>
<retval></retval>
</arg>
</function>
<function name="NSSetZoneName">
<arg name="zone"></arg>
<arg name="name"></arg>
</function>
<function name="NSShouldRetainWithZone">
<arg name="anObject"></arg>
<arg name="requestedZone"></arg>
<retval></retval>
</function>
<function name="NSSizeFromCGSize">
<arg name="cgsize"></arg>
<retval></retval>
</function>
<function name="NSSizeFromString">
<arg name="aString"></arg>
<retval></retval>
</function>
<function name="NSSizeToCGSize">
<arg name="nssize"></arg>
<retval></retval>
</function>
<function name="NSStringFromClass">
<arg name="aClass"></arg>
<retval></retval>
</function>
<function name="NSStringFromHashTable">
<arg name="table"></arg>
<retval></retval>
</function>
<function name="NSStringFromMapTable">
<arg name="table"></arg>
<retval></retval>
</function>
<function name="NSStringFromPoint">
<arg name="aPoint"></arg>
<retval></retval>
</function>
<function name="NSStringFromProtocol">
<arg name="proto"></arg>
<retval></retval>
</function>
<function name="NSStringFromRange">
<arg name="range"></arg>
<retval></retval>
</function>
<function name="NSStringFromRect">
<arg name="aRect"></arg>
<retval></retval>
</function>
<function name="NSStringFromSelector">
<arg name="aSelector"></arg>
<retval></retval>
</function>
<function name="NSStringFromSize">
<arg name="aSize"></arg>
<retval></retval>
</function>
<function name="NSSwapBigDoubleToHost">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapBigFloatToHost">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapBigIntToHost">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapBigLongLongToHost">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapBigLongToHost">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapBigShortToHost">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapDouble">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapFloat">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapHostDoubleToBig">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapHostDoubleToLittle">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapHostFloatToBig">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapHostFloatToLittle">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapHostIntToBig">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapHostIntToLittle">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapHostLongLongToBig">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapHostLongLongToLittle">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapHostLongToBig">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapHostLongToLittle">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapHostShortToBig">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapHostShortToLittle">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapInt">
<arg name="inv"></arg>
<retval></retval>
</function>
<function name="NSSwapLittleDoubleToHost">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapLittleFloatToHost">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapLittleIntToHost">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapLittleLongLongToHost">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapLittleLongToHost">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapLittleShortToHost">
<arg name="x"></arg>
<retval></retval>
</function>
<function name="NSSwapLong">
<arg name="inv"></arg>
<retval></retval>
</function>
<function name="NSSwapLongLong">
<arg name="inv"></arg>
<retval></retval>
</function>
<function name="NSSwapShort">
<arg name="inv"></arg>
<retval></retval>
</function>
<function name="NSTemporaryDirectory" swt_gen="true">
<retval swt_gen="true"></retval>
</function>
<function name="NSUnionRange">
<arg name="range1"></arg>
<arg name="range2"></arg>
<retval></retval>
</function>
<function name="NSUnionRect">
<arg name="aRect"></arg>
<arg name="bRect"></arg>
<retval></retval>
</function>
<function name="NSUserName">
<retval></retval>
</function>
<function name="NSWidth">
<arg name="aRect"></arg>
<retval></retval>
</function>
<function name="NSZoneCalloc">
<arg name="zone"></arg>
<arg name="numElems"></arg>
<arg name="byteSize"></arg>
<retval></retval>
</function>
<function name="NSZoneFree">
<arg name="zone"></arg>
<arg name="ptr"></arg>
</function>
<function name="NSZoneFromPointer">
<arg name="ptr"></arg>
<retval></retval>
</function>
<function name="NSZoneMalloc">
<arg name="zone"></arg>
<arg name="size"></arg>
<retval></retval>
</function>
<function name="NSZoneName">
<arg name="zone"></arg>
<retval></retval>
</function>
<function name="NSZoneRealloc">
<arg name="zone"></arg>
<arg name="ptr"></arg>
<arg name="size"></arg>
<retval></retval>
</function>
<function name="NXReadNSObjectFromCoder">
<arg name="decoder"></arg>
<retval></retval>
</function>
<class name="NSAffineTransform">
<method selector="appendTransform:">
<arg name="transform"></arg>
<retval></retval>
</method>
<method selector="initWithTransform:">
<arg name="transform"></arg>
<retval></retval>
</method>
<method selector="invert">
<retval></retval>
</method>
<method selector="prependTransform:">
<arg name="transform"></arg>
<retval></retval>
</method>
<method selector="rotateByDegrees:">
<arg name="angle"></arg>
<retval></retval>
</method>
<method selector="rotateByRadians:">
<arg name="angle"></arg>
<retval></retval>
</method>
<method selector="scaleBy:">
<arg name="scale"></arg>
<retval></retval>
</method>
<method selector="scaleXBy:yBy:">
<arg name="scaleX"></arg>
<arg name="scaleY"></arg>
<retval></retval>
</method>
<method selector="setTransformStruct:">
<arg name="transformStruct"></arg>
<retval></retval>
</method>
<method class_method="true" selector="transform">
<retval></retval>
</method>
<method selector="transformPoint:">
<arg name="aPoint"></arg>
<retval></retval>
</method>
<method selector="transformSize:">
<arg name="aSize"></arg>
<retval></retval>
</method>
<method selector="transformStruct">
<retval></retval>
</method>
<method selector="translateXBy:yBy:">
<arg name="deltaX"></arg>
<arg name="deltaY"></arg>
<retval></retval>
</method>
</class>
<class name="NSAppleEventDescriptor" swt_gen="mixed">
<method selector="aeDesc">
<retval></retval>
</method>
<method class_method="true" selector="appleEventWithEventClass:eventID:targetDescriptor:returnID:transactionID:">
<arg name="eventClass"></arg>
<arg name="eventID"></arg>
<arg name="targetDescriptor"></arg>
<arg name="returnID"></arg>
<arg name="transactionID"></arg>
<retval></retval>
</method>
<method selector="attributeDescriptorForKeyword:">
<arg name="keyword"></arg>
<retval></retval>
</method>
<method selector="booleanValue">
<retval></retval>
</method>
<method selector="coerceToDescriptorType:">
<arg name="descriptorType"></arg>
<retval></retval>
</method>
<method selector="data">
<retval></retval>
</method>
<method selector="descriptorAtIndex:">
<arg name="index"></arg>
<retval></retval>
</method>
<method selector="descriptorForKeyword:">
<arg name="keyword"></arg>
<retval></retval>
</method>
<method selector="descriptorType">
<retval></retval>
</method>
<method class_method="true" selector="descriptorWithBoolean:">
<arg name="boolean"></arg>
<retval></retval>
</method>
<method class_method="true" selector="descriptorWithDescriptorType:bytes:length:">
<arg name="descriptorType"></arg>
<arg name="bytes"></arg>
<arg name="byteCount"></arg>
<retval></retval>
</method>
<method class_method="true" selector="descriptorWithDescriptorType:data:">
<arg name="descriptorType"></arg>
<arg name="data"></arg>
<retval></retval>
</method>
<method class_method="true" selector="descriptorWithEnumCode:">
<arg name="enumerator"></arg>
<retval></retval>
</method>
<method class_method="true" selector="descriptorWithInt32:">
<arg name="signedInt"></arg>
<retval></retval>
</method>
<method class_method="true" selector="descriptorWithString:">
<arg name="string"></arg>
<retval></retval>
</method>
<method class_method="true" selector="descriptorWithTypeCode:">
<arg name="typeCode"></arg>
<retval></retval>
</method>
<method selector="enumCodeValue">
<retval></retval>
</method>
<method selector="eventClass">
<retval></retval>
</method>
<method selector="eventID">
<retval></retval>
</method>
<method selector="initListDescriptor" swt_gen="true">
<retval swt_gen="true" swt_java_type="NSAppleEventDescriptor"></retval>
</method>
<method selector="initRecordDescriptor">
<retval swt_java_type="NSAppleEventDescriptor"></retval>
</method>
<method selector="initWithAEDescNoCopy:">
<arg name="aeDesc"></arg>
<retval swt_java_type="NSAppleEventDescriptor"></retval>
</method>
<method selector="initWithDescriptorType:bytes:length:">
<arg name="descriptorType"></arg>
<arg name="bytes"></arg>
<arg name="byteCount"></arg>
<retval swt_java_type="NSAppleEventDescriptor"></retval>
</method>
<method selector="initWithDescriptorType:data:">
<arg name="descriptorType"></arg>
<arg name="data"></arg>
<retval swt_java_type="NSAppleEventDescriptor"></retval>
</method>
<method selector="initWithEventClass:eventID:targetDescriptor:returnID:transactionID:">
<arg name="eventClass"></arg>
<arg name="eventID"></arg>
<arg name="targetDescriptor"></arg>
<arg name="returnID"></arg>
<arg name="transactionID"></arg>
<retval swt_java_type="NSAppleEventDescriptor"></retval>
</method>
<method selector="insertDescriptor:atIndex:">
<arg name="descriptor"></arg>
<arg name="index"></arg>
<retval></retval>
</method>
<method selector="int32Value">
<retval></retval>
</method>
<method selector="keywordForDescriptorAtIndex:">
<arg name="index"></arg>
<retval></retval>
</method>
<method class_method="true" selector="listDescriptor">
<retval></retval>
</method>
<method class_method="true" selector="nullDescriptor">
<retval></retval>
</method>
<method selector="numberOfItems">
<retval></retval>
</method>
<method selector="paramDescriptorForKeyword:">
<arg name="keyword"></arg>
<retval></retval>
</method>
<method class_method="true" selector="recordDescriptor">
<retval></retval>
</method>
<method selector="removeDescriptorAtIndex:">
<arg name="index"></arg>
<retval></retval>
</method>
<method selector="removeDescriptorWithKeyword:">
<arg name="keyword"></arg>
<retval></retval>
</method>
<method selector="removeParamDescriptorWithKeyword:">
<arg name="keyword"></arg>
<retval></retval>
</method>
<method selector="returnID">
<retval></retval>
</method>
<method selector="setAttributeDescriptor:forKeyword:">
<arg name="descriptor"></arg>
<arg name="keyword"></arg>
<retval></retval>
</method>
<method selector="setDescriptor:forKeyword:">
<arg name="descriptor"></arg>
<arg name="keyword"></arg>
<retval></retval>
</method>
<method selector="setParamDescriptor:forKeyword:">
<arg name="descriptor"></arg>
<arg name="keyword"></arg>
<retval></retval>
</method>
<method selector="stringValue">
<retval></retval>
</method>
<method selector="transactionID">
<retval></retval>
</method>
<method selector="typeCodeValue">
<retval></retval>
</method>
</class>
<class name="NSAppleEventManager">
<method selector="appleEventForSuspensionID:">
<arg name="suspensionID"></arg>
<retval></retval>
</method>
<method selector="currentAppleEvent">
<retval></retval>
</method>
<method selector="currentReplyAppleEvent">
<retval></retval>
</method>
<method selector="dispatchRawAppleEvent:withRawReply:handlerRefCon:">
<arg name="theAppleEvent"></arg>
<arg name="theReply"></arg>
<arg name="handlerRefCon"></arg>
<retval></retval>
</method>
<method selector="removeEventHandlerForEventClass:andEventID:">
<arg name="eventClass"></arg>
<arg name="eventID"></arg>
<retval></retval>
</method>
<method selector="replyAppleEventForSuspensionID:">
<arg name="suspensionID"></arg>
<retval></retval>
</method>
<method selector="resumeWithSuspensionID:">
<arg name="suspensionID"></arg>
<retval></retval>
</method>
<method selector="setCurrentAppleEventAndReplyEventWithSuspensionID:">
<arg name="suspensionID"></arg>
<retval></retval>
</method>
<method selector="setEventHandler:andSelector:forEventClass:andEventID:">
<arg name="handler"></arg>
<arg name="handleEventSelector"></arg>
<arg name="eventClass"></arg>
<arg name="eventID"></arg>
<retval></retval>
</method>
<method class_method="true" selector="sharedAppleEventManager">
<retval></retval>
</method>
<method selector="suspendCurrentAppleEvent">
<retval></retval>
</method>
</class>
<class name="NSAppleScript">
<method selector="compileAndReturnError:">
<arg name="errorInfo"></arg>
<retval></retval>
</method>
<method selector="executeAndReturnError:">
<arg name="errorInfo"></arg>
<retval></retval>
</method>
<method selector="executeAppleEvent:error:">
<arg name="event"></arg>
<arg name="errorInfo"></arg>
<retval></retval>
</method>
<method selector="initWithContentsOfURL:error:">
<arg name="url"></arg>
<arg name="errorInfo"></arg>
<retval swt_java_type="NSAppleScript"></retval>
</method>
<method selector="initWithSource:">
<arg name="source"></arg>
<retval swt_java_type="NSAppleScript"></retval>
</method>
<method selector="isCompiled">
<retval></retval>
</method>
<method selector="source">
<retval></retval>
</method>
</class>
<class name="NSArchiver">
<method class_method="true" selector="archiveRootObject:toFile:">
<arg name="rootObject"></arg>
<arg name="path"></arg>
<retval></retval>
</method>
<method class_method="true" selector="archivedDataWithRootObject:">
<arg name="rootObject"></arg>
<retval></retval>
</method>
<method selector="archiverData">
<retval></retval>
</method>
<method selector="classNameEncodedForTrueClassName:">
<arg name="trueName"></arg>
<retval></retval>
</method>
<method selector="encodeClassName:intoClassName:">
<arg name="trueName"></arg>
<arg name="inArchiveName"></arg>
<retval></retval>
</method>
<method selector="encodeConditionalObject:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="encodeRootObject:">
<arg name="rootObject"></arg>
<retval></retval>
</method>
<method selector="initForWritingWithMutableData:">
<arg name="mdata"></arg>
<retval swt_java_type="NSArchiver"></retval>
</method>
<method selector="replaceObject:withObject:">
<arg name="object"></arg>
<arg name="newObject"></arg>
<retval></retval>
</method>
</class>
<class name="NSArray" swt_gen="mixed">
<method selector="addObserver:forKeyPath:options:context:">
<arg name="observer"></arg>
<arg name="keyPath"></arg>
<arg name="options"></arg>
<arg name="context"></arg>
<retval></retval>
</method>
<method selector="addObserver:toObjectsAtIndexes:forKeyPath:options:context:">
<arg name="observer"></arg>
<arg name="indexes"></arg>
<arg name="keyPath"></arg>
<arg name="options"></arg>
<arg name="context"></arg>
<retval></retval>
</method>
<method class_method="true" selector="array" swt_gen="true">
<retval swt_gen="true" swt_java_type="NSArray"></retval>
</method>
<method selector="arrayByAddingObject:">
<arg name="anObject"></arg>
<retval></retval>
</method>
<method selector="arrayByAddingObjectsFromArray:">
<arg name="otherArray"></arg>
<retval></retval>
</method>
<method class_method="true" selector="arrayWithArray:">
<arg name="array"></arg>
<retval></retval>
</method>
<method class_method="true" selector="arrayWithContentsOfFile:">
<arg name="path"></arg>
<retval></retval>
</method>
<method class_method="true" selector="arrayWithContentsOfURL:">
<arg name="url"></arg>
<retval></retval>
</method>
<method class_method="true" selector="arrayWithObject:" swt_gen="true">
<arg name="anObject" swt_gen="true"></arg>
<retval swt_alloc="true" swt_gen="true" swt_java_type="NSArray"></retval>
</method>
<method class_method="true" selector="arrayWithObjects:">
<arg name="arrayWithObjects"></arg>
<retval></retval>
</method>
<method class_method="true" selector="arrayWithObjects:count:">
<arg name="objects"></arg>
<arg name="cnt"></arg>
<retval></retval>
</method>
<method selector="componentsJoinedByString:">
<arg name="separator"></arg>
<retval></retval>
</method>
<method selector="containsObject:" swt_gen="true">
<arg name="anObject" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="count" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="description">
<retval></retval>
</method>
<method selector="descriptionWithLocale:">
<arg name="locale"></arg>
<retval></retval>
</method>
<method selector="descriptionWithLocale:indent:">
<arg name="locale"></arg>
<arg name="level"></arg>
<retval></retval>
</method>
<method selector="filteredArrayUsingPredicate:">
<arg name="predicate"></arg>
<retval></retval>
</method>
<method selector="firstObjectCommonWithArray:">
<arg name="otherArray"></arg>
<retval></retval>
</method>
<method selector="getObjects:">
<arg name="objects"></arg>
<retval></retval>
</method>
<method selector="getObjects:range:">
<arg name="objects"></arg>
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="indexOfObject:">
<arg name="anObject"></arg>
<retval></retval>
</method>
<method selector="indexOfObject:inRange:">
<arg name="anObject"></arg>
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="indexOfObjectIdenticalTo:">
<arg name="anObject"></arg>
<retval></retval>
</method>
<method selector="indexOfObjectIdenticalTo:inRange:">
<arg name="anObject"></arg>
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="initWithArray:">
<arg name="array"></arg>
<retval swt_java_type="NSArray"></retval>
</method>
<method selector="initWithArray:copyItems:">
<arg name="array"></arg>
<arg name="flag"></arg>
<retval swt_java_type="NSArray"></retval>
</method>
<method selector="initWithContentsOfFile:">
<arg name="path"></arg>
<retval swt_java_type="NSArray"></retval>
</method>
<method selector="initWithContentsOfURL:">
<arg name="url"></arg>
<retval swt_java_type="NSArray"></retval>
</method>
<method selector="initWithObjects:">
<arg name="initWithObjects"></arg>
<retval swt_java_type="NSArray"></retval>
</method>
<method selector="initWithObjects:count:">
<arg name="objects"></arg>
<arg name="cnt"></arg>
<retval swt_java_type="NSArray"></retval>
</method>
<method selector="isEqualToArray:">
<arg name="otherArray"></arg>
<retval></retval>
</method>
<method selector="lastObject">
<retval></retval>
</method>
<method selector="makeObjectsPerformSelector:">
<arg name="aSelector"></arg>
<retval></retval>
</method>
<method selector="makeObjectsPerformSelector:withObject:">
<arg name="aSelector"></arg>
<arg name="argument"></arg>
<retval></retval>
</method>
<method selector="objectAtIndex:" swt_gen="true">
<arg name="index" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="objectEnumerator">
<retval></retval>
</method>
<method selector="objectsAtIndexes:">
<arg name="indexes"></arg>
<retval></retval>
</method>
<method selector="pathsMatchingExtensions:">
<arg name="filterTypes"></arg>
<retval></retval>
</method>
<method selector="removeObserver:forKeyPath:">
<arg name="observer"></arg>
<arg name="keyPath"></arg>
<retval></retval>
</method>
<method selector="removeObserver:fromObjectsAtIndexes:forKeyPath:">
<arg name="observer"></arg>
<arg name="indexes"></arg>
<arg name="keyPath"></arg>
<retval></retval>
</method>
<method selector="reverseObjectEnumerator">
<retval></retval>
</method>
<method selector="setValue:forKey:">
<arg name="value"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="sortedArrayHint">
<retval></retval>
</method>
<method selector="sortedArrayUsingDescriptors:">
<arg name="sortDescriptors"></arg>
<retval></retval>
</method>
<method selector="sortedArrayUsingFunction:context:">
<arg name="comparator">
<arg></arg>
<arg></arg>
<arg></arg>
<retval></retval>
</arg>
<arg name="context"></arg>
<retval></retval>
</method>
<method selector="sortedArrayUsingFunction:context:hint:">
<arg name="comparator">
<arg></arg>
<arg></arg>
<arg></arg>
<retval></retval>
</arg>
<arg name="context"></arg>
<arg name="hint"></arg>
<retval></retval>
</method>
<method selector="sortedArrayUsingSelector:">
<arg name="comparator"></arg>
<retval></retval>
</method>
<method selector="subarrayWithRange:">
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="valueForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="writeToFile:atomically:">
<arg name="path"></arg>
<arg name="useAuxiliaryFile"></arg>
<retval></retval>
</method>
<method selector="writeToURL:atomically:">
<arg name="url"></arg>
<arg name="atomically"></arg>
<retval></retval>
</method>
</class>
<class name="NSAssertionHandler">
<method class_method="true" selector="currentHandler">
<retval></retval>
</method>
<method selector="handleFailureInFunction:file:lineNumber:description:">
<arg name="functionName"></arg>
<arg name="fileName"></arg>
<arg name="line"></arg>
<arg name="description"></arg>
<retval></retval>
</method>
<method selector="handleFailureInMethod:object:file:lineNumber:description:">
<arg name="selector"></arg>
<arg name="object"></arg>
<arg name="fileName"></arg>
<arg name="line"></arg>
<arg name="description"></arg>
<retval></retval>
</method>
</class>
<class name="NSAttributedString" swt_gen="mixed">
<method selector="attribute:atIndex:effectiveRange:">
<arg name="attrName"></arg>
<arg name="location"></arg>
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="attribute:atIndex:longestEffectiveRange:inRange:">
<arg name="attrName"></arg>
<arg name="location"></arg>
<arg name="range"></arg>
<arg name="rangeLimit"></arg>
<retval></retval>
</method>
<method selector="attributedSubstringFromRange:" swt_gen="true">
<arg name="range" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="attributesAtIndex:effectiveRange:">
<arg name="location"></arg>
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="attributesAtIndex:longestEffectiveRange:inRange:">
<arg name="location"></arg>
<arg name="range"></arg>
<arg name="rangeLimit"></arg>
<retval></retval>
</method>
<method selector="initWithAttributedString:">
<arg name="attrStr"></arg>
<retval swt_java_type="NSAttributedString"></retval>
</method>
<method selector="initWithString:" swt_gen="true">
<arg name="str" swt_gen="true"></arg>
<retval swt_gen="true" swt_java_type="NSAttributedString"></retval>
</method>
<method selector="initWithString:attributes:">
<arg name="str"></arg>
<arg name="attrs"></arg>
<retval swt_java_type="NSAttributedString"></retval>
</method>
<method selector="isEqualToAttributedString:">
<arg name="other"></arg>
<retval></retval>
</method>
<method selector="length" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="string" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
</class>
<class name="NSAutoreleasePool" swt_gen="mixed">
<method class_method="true" selector="addObject:">
<arg name="anObject"></arg>
<retval></retval>
</method>
<method selector="addObject:">
<arg name="anObject"></arg>
<retval></retval>
</method>
<method class_method="true" selector="autoreleasedObjectCount">
<retval></retval>
</method>
<method selector="drain">
<retval></retval>
</method>
<method class_method="true" selector="enableFreedObjectCheck:" swt_gen="true">
<arg name="enable" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="enableRelease:">
<arg name="enable"></arg>
<retval></retval>
</method>
<method class_method="true" selector="poolCountHighWaterMark">
<retval></retval>
</method>
<method class_method="true" selector="poolCountHighWaterResolution">
<retval></retval>
</method>
<method class_method="true" selector="resetTotalAutoreleasedObjects">
<retval></retval>
</method>
<method class_method="true" selector="setPoolCountHighWaterMark:">
<arg name="count"></arg>
<retval></retval>
</method>
<method class_method="true" selector="setPoolCountHighWaterResolution:">
<arg name="res"></arg>
<retval></retval>
</method>
<method class_method="true" selector="showPools">
<retval></retval>
</method>
<method class_method="true" selector="topAutoreleasePoolCount">
<retval></retval>
</method>
<method class_method="true" selector="totalAutoreleasedObjects">
<retval></retval>
</method>
</class>
<class name="NSBundle" swt_gen="mixed">
<method class_method="true" selector="allBundles">
<retval></retval>
</method>
<method class_method="true" selector="allFrameworks">
<retval></retval>
</method>
<method selector="builtInPlugInsPath">
<retval></retval>
</method>
<method class_method="true" selector="bundleForClass:">
<arg name="aClass"></arg>
<retval></retval>
</method>
<method selector="bundleIdentifier" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="bundlePath" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="bundleWithIdentifier:">
<arg name="identifier"></arg>
<retval></retval>
</method>
<method class_method="true" selector="bundleWithPath:" swt_gen="true">
<arg name="path" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="classNamed:">
<arg name="className"></arg>
<retval></retval>
</method>
<method selector="developmentLocalization">
<retval></retval>
</method>
<method selector="executableArchitectures">
<retval></retval>
</method>
<method selector="executablePath">
<retval></retval>
</method>
<method selector="infoDictionary" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="initWithPath:">
<arg name="path"></arg>
<retval swt_java_type="NSBundle"></retval>
</method>
<method selector="isLoaded">
<retval></retval>
</method>
<method selector="load">
<retval></retval>
</method>
<method selector="loadAndReturnError:">
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="localizations">
<retval></retval>
</method>
<method selector="localizedInfoDictionary">
<retval></retval>
</method>
<method selector="localizedStringForKey:value:table:">
<arg name="key"></arg>
<arg name="value"></arg>
<arg name="tableName"></arg>
<retval></retval>
</method>
<method class_method="true" selector="mainBundle">
<retval></retval>
</method>
<method selector="objectForInfoDictionaryKey:" swt_gen="true">
<arg name="key" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="pathForAuxiliaryExecutable:">
<arg name="executableName"></arg>
<retval></retval>
</method>
<method selector="pathForResource:ofType:">
<arg name="name"></arg>
<arg name="ext"></arg>
<retval></retval>
</method>
<method selector="pathForResource:ofType:inDirectory:">
<arg name="name"></arg>
<arg name="ext"></arg>
<arg name="subpath"></arg>
<retval></retval>
</method>
<method class_method="true" selector="pathForResource:ofType:inDirectory:">
<arg name="name"></arg>
<arg name="ext"></arg>
<arg name="bundlePath"></arg>
<retval></retval>
</method>
<method selector="pathForResource:ofType:inDirectory:forLocalization:">
<arg name="name"></arg>
<arg name="ext"></arg>
<arg name="subpath"></arg>
<arg name="localizationName"></arg>
<retval></retval>
</method>
<method class_method="true" selector="pathsForResourcesOfType:inDirectory:">
<arg name="ext"></arg>
<arg name="bundlePath"></arg>
<retval></retval>
</method>
<method selector="pathsForResourcesOfType:inDirectory:">
<arg name="ext"></arg>
<arg name="subpath"></arg>
<retval></retval>
</method>
<method selector="pathsForResourcesOfType:inDirectory:forLocalization:">
<arg name="ext"></arg>
<arg name="subpath"></arg>
<arg name="localizationName"></arg>
<retval></retval>
</method>
<method selector="preferredLocalizations">
<retval></retval>
</method>
<method class_method="true" selector="preferredLocalizationsFromArray:">
<arg name="localizationsArray"></arg>
<retval></retval>
</method>
<method class_method="true" selector="preferredLocalizationsFromArray:forPreferences:">
<arg name="localizationsArray"></arg>
<arg name="preferencesArray"></arg>
<retval></retval>
</method>
<method selector="preflightAndReturnError:">
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="principalClass">
<retval></retval>
</method>
<method selector="privateFrameworksPath">
<retval></retval>
</method>
<method selector="resourcePath">
<retval></retval>
</method>
<method selector="sharedFrameworksPath">
<retval></retval>
</method>
<method selector="sharedSupportPath">
<retval></retval>
</method>
<method selector="unload">
<retval></retval>
</method>
</class>
<class name="NSCachedURLResponse">
<method selector="data">
<retval></retval>
</method>
<method selector="initWithResponse:data:">
<arg name="response"></arg>
<arg name="data"></arg>
<retval></retval>
</method>
<method selector="initWithResponse:data:userInfo:storagePolicy:">
<arg name="response"></arg>
<arg name="data"></arg>
<arg name="userInfo"></arg>
<arg name="storagePolicy"></arg>
<retval></retval>
</method>
<method selector="response">
<retval></retval>
</method>
<method selector="storagePolicy">
<retval></retval>
</method>
<method selector="userInfo">
<retval></retval>
</method>
</class>
<class name="NSCalendar">
<method class_method="true" selector="autoupdatingCurrentCalendar">
<retval></retval>
</method>
<method selector="calendarIdentifier">
<retval></retval>
</method>
<method selector="components:fromDate:">
<arg name="unitFlags"></arg>
<arg name="date"></arg>
<retval></retval>
</method>
<method selector="components:fromDate:toDate:options:">
<arg name="unitFlags"></arg>
<arg name="startingDate"></arg>
<arg name="resultDate"></arg>
<arg name="opts"></arg>
<retval></retval>
</method>
<method class_method="true" selector="currentCalendar">
<retval></retval>
</method>
<method selector="dateByAddingComponents:toDate:options:">
<arg name="comps"></arg>
<arg name="date"></arg>
<arg name="opts"></arg>
<retval></retval>
</method>
<method selector="dateFromComponents:">
<arg name="comps"></arg>
<retval></retval>
</method>
<method selector="firstWeekday">
<retval></retval>
</method>
<method selector="initWithCalendarIdentifier:">
<arg name="ident"></arg>
<retval></retval>
</method>
<method selector="locale">
<retval></retval>
</method>
<method selector="maximumRangeOfUnit:">
<arg name="unit"></arg>
<retval></retval>
</method>
<method selector="minimumDaysInFirstWeek">
<retval></retval>
</method>
<method selector="minimumRangeOfUnit:">
<arg name="unit"></arg>
<retval></retval>
</method>
<method selector="ordinalityOfUnit:inUnit:forDate:">
<arg name="smaller"></arg>
<arg name="larger"></arg>
<arg name="date"></arg>
<retval></retval>
</method>
<method selector="rangeOfUnit:inUnit:forDate:">
<arg name="smaller"></arg>
<arg name="larger"></arg>
<arg name="date"></arg>
<retval></retval>
</method>
<method selector="rangeOfUnit:startDate:interval:forDate:">
<arg name="unit"></arg>
<arg name="datep"></arg>
<arg name="tip"></arg>
<arg name="date"></arg>
<retval></retval>
</method>
<method selector="setFirstWeekday:">
<arg name="weekday"></arg>
<retval></retval>
</method>
<method selector="setLocale:">
<arg name="locale"></arg>
<retval></retval>
</method>
<method selector="setMinimumDaysInFirstWeek:">
<arg name="mdw"></arg>
<retval></retval>
</method>
<method selector="setTimeZone:">
<arg name="tz"></arg>
<retval></retval>
</method>
<method selector="timeZone">
<retval></retval>
</method>
</class>
<class name="NSCalendarDate" swt_gen="mixed" swt_superclass="NSDate">
<method class_method="true" selector="calendarDate" swt_gen="true">
<retval swt_gen="true" swt_java_type="NSCalendarDate"></retval>
</method>
<method selector="calendarFormat">
<retval></retval>
</method>
<method selector="dateByAddingYears:months:days:hours:minutes:seconds:">
<arg name="year"></arg>
<arg name="month"></arg>
<arg name="day"></arg>
<arg name="hour"></arg>
<arg name="minute"></arg>
<arg name="second"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dateWithString:calendarFormat:">
<arg name="description"></arg>
<arg name="format"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dateWithString:calendarFormat:locale:">
<arg name="description"></arg>
<arg name="format"></arg>
<arg name="locale"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dateWithYear:month:day:hour:minute:second:timeZone:" swt_gen="true">
<arg name="year" swt_gen="true"></arg>
<arg name="month" swt_gen="true"></arg>
<arg name="day" swt_gen="true"></arg>
<arg name="hour" swt_gen="true"></arg>
<arg name="minute" swt_gen="true"></arg>
<arg name="second" swt_gen="true"></arg>
<arg name="aTimeZone" swt_gen="true"></arg>
<retval swt_gen="true" swt_java_type="NSCalendarDate"></retval>
</method>
<method selector="dayOfCommonEra">
<retval></retval>
</method>
<method selector="dayOfMonth" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="dayOfWeek">
<retval></retval>
</method>
<method selector="dayOfYear">
<retval></retval>
</method>
<method selector="description">
<retval></retval>
</method>
<method selector="descriptionWithCalendarFormat:">
<arg name="format"></arg>
<retval></retval>
</method>
<method selector="descriptionWithCalendarFormat:locale:">
<arg name="format"></arg>
<arg name="locale"></arg>
<retval></retval>
</method>
<method selector="descriptionWithLocale:">
<arg name="locale"></arg>
<retval></retval>
</method>
<method selector="hourOfDay" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="initWithString:">
<arg name="description"></arg>
<retval></retval>
</method>
<method selector="initWithString:calendarFormat:">
<arg name="description"></arg>
<arg name="format"></arg>
<retval></retval>
</method>
<method selector="initWithString:calendarFormat:locale:">
<arg name="description"></arg>
<arg name="format"></arg>
<arg name="locale"></arg>
<retval></retval>
</method>
<method selector="initWithYear:month:day:hour:minute:second:timeZone:">
<arg name="year"></arg>
<arg name="month"></arg>
<arg name="day"></arg>
<arg name="hour"></arg>
<arg name="minute"></arg>
<arg name="second"></arg>
<arg name="aTimeZone"></arg>
<retval></retval>
</method>
<method selector="minuteOfHour" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="monthOfYear" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="secondOfMinute" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="setCalendarFormat:">
<arg name="format"></arg>
<retval></retval>
</method>
<method selector="setTimeZone:">
<arg name="aTimeZone"></arg>
<retval></retval>
</method>
<method selector="timeZone" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="yearOfCommonEra" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="years:months:days:hours:minutes:seconds:sinceDate:">
<arg name="yp"></arg>
<arg name="mop"></arg>
<arg name="dp"></arg>
<arg name="hp"></arg>
<arg name="mip"></arg>
<arg name="sp"></arg>
<arg name="date"></arg>
<retval></retval>
</method>
</class>
<class name="NSCharacterSet" swt_gen="mixed">
<method class_method="true" selector="alphanumericCharacterSet">
<retval></retval>
</method>
<method selector="bitmapRepresentation">
<retval></retval>
</method>
<method class_method="true" selector="capitalizedLetterCharacterSet">
<retval></retval>
</method>
<method selector="characterIsMember:" swt_gen="true">
<arg name="aCharacter" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="characterSetWithBitmapRepresentation:">
<arg name="data"></arg>
<retval></retval>
</method>
<method class_method="true" selector="characterSetWithCharactersInString:">
<arg name="aString"></arg>
<retval></retval>
</method>
<method class_method="true" selector="characterSetWithContentsOfFile:">
<arg name="fName"></arg>
<retval></retval>
</method>
<method class_method="true" selector="characterSetWithRange:">
<arg name="aRange"></arg>
<retval></retval>
</method>
<method class_method="true" selector="controlCharacterSet">
<retval></retval>
</method>
<method class_method="true" selector="decimalDigitCharacterSet" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="decomposableCharacterSet">
<retval></retval>
</method>
<method selector="hasMemberInPlane:">
<arg name="thePlane"></arg>
<retval></retval>
</method>
<method class_method="true" selector="illegalCharacterSet">
<retval></retval>
</method>
<method selector="invertedSet">
<retval></retval>
</method>
<method selector="isSupersetOfSet:">
<arg name="theOtherSet"></arg>
<retval></retval>
</method>
<method class_method="true" selector="letterCharacterSet">
<retval></retval>
</method>
<method selector="longCharacterIsMember:">
<arg name="theLongChar"></arg>
<retval></retval>
</method>
<method class_method="true" selector="lowercaseLetterCharacterSet">
<retval></retval>
</method>
<method class_method="true" selector="newlineCharacterSet">
<retval></retval>
</method>
<method class_method="true" selector="nonBaseCharacterSet">
<retval></retval>
</method>
<method class_method="true" selector="punctuationCharacterSet">
<retval></retval>
</method>
<method class_method="true" selector="symbolCharacterSet">
<retval></retval>
</method>
<method class_method="true" selector="uppercaseLetterCharacterSet">
<retval></retval>
</method>
<method class_method="true" selector="whitespaceAndNewlineCharacterSet">
<retval></retval>
</method>
<method class_method="true" selector="whitespaceCharacterSet">
<retval></retval>
</method>
</class>
<class name="NSClassDescription">
<method selector="attributeKeys">
<retval></retval>
</method>
<method class_method="true" selector="classDescriptionForClass:">
<arg name="aClass"></arg>
<retval></retval>
</method>
<method class_method="true" selector="invalidateClassDescriptionCache">
<retval></retval>
</method>
<method selector="inverseForRelationshipKey:">
<arg name="relationshipKey"></arg>
<retval></retval>
</method>
<method class_method="true" selector="registerClassDescription:forClass:">
<arg name="description"></arg>
<arg name="aClass"></arg>
<retval></retval>
</method>
<method selector="toManyRelationshipKeys">
<retval></retval>
</method>
<method selector="toOneRelationshipKeys">
<retval></retval>
</method>
</class>
<class name="NSCloneCommand" swt_superclass="NSScriptCommand">
<method selector="keySpecifier">
<retval></retval>
</method>
<method selector="setReceiversSpecifier:">
<arg name="receiversRef"></arg>
<retval></retval>
</method>
</class>
<class name="NSCloseCommand" swt_superclass="NSScriptCommand">
<method selector="saveOptions">
<retval></retval>
</method>
</class>
<class name="NSCoder" swt_gen="mixed">
<method selector="allowsKeyedCoding">
<retval></retval>
</method>
<method selector="containsValueForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="decodeArrayOfObjCType:count:at:">
<arg name="itemType"></arg>
<arg name="count"></arg>
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="decodeBoolForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="decodeBytesForKey:returnedLength:">
<arg name="key"></arg>
<arg name="lengthp"></arg>
<retval></retval>
</method>
<method selector="decodeBytesWithReturnedLength:">
<arg name="lengthp"></arg>
<retval></retval>
</method>
<method selector="decodeDataObject">
<retval></retval>
</method>
<method selector="decodeDoubleForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="decodeFloatForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="decodeInt32ForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="decodeInt64ForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="decodeIntForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="decodeIntegerForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="decodeNXObject">
<retval></retval>
</method>
<method selector="decodeObject">
<retval></retval>
</method>
<method selector="decodeObjectForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="decodePoint">
<retval></retval>
</method>
<method selector="decodePointForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="decodePropertyList">
<retval></retval>
</method>
<method selector="decodeRect">
<retval></retval>
</method>
<method selector="decodeRectForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="decodeSize">
<retval></retval>
</method>
<method selector="decodeSizeForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="decodeValueOfObjCType:at:">
<arg name="type"></arg>
<arg name="data"></arg>
<retval></retval>
</method>
<method selector="decodeValuesOfObjCTypes:">
<arg name="decodeValuesOfObjCTypes"></arg>
<retval></retval>
</method>
<method selector="encodeArrayOfObjCType:count:at:">
<arg name="type"></arg>
<arg name="count"></arg>
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="encodeBool:forKey:">
<arg name="boolv"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="encodeBycopyObject:">
<arg name="anObject"></arg>
<retval></retval>
</method>
<method selector="encodeByrefObject:">
<arg name="anObject"></arg>
<retval></retval>
</method>
<method selector="encodeBytes:length:">
<arg name="byteaddr"></arg>
<arg name="length"></arg>
<retval></retval>
</method>
<method selector="encodeBytes:length:forKey:">
<arg name="bytesp"></arg>
<arg name="lenv"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="encodeConditionalObject:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="encodeConditionalObject:forKey:">
<arg name="objv"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="encodeDataObject:">
<arg name="data"></arg>
<retval></retval>
</method>
<method selector="encodeDouble:forKey:">
<arg name="realv"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="encodeFloat:forKey:">
<arg name="realv"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="encodeInt32:forKey:">
<arg name="intv"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="encodeInt64:forKey:">
<arg name="intv"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="encodeInt:forKey:">
<arg name="intv"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="encodeInteger:forKey:">
<arg name="intv"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="encodeNXObject:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="encodeObject:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="encodeObject:forKey:">
<arg name="objv"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="encodePoint:">
<arg name="point"></arg>
<retval></retval>
</method>
<method selector="encodePoint:forKey:">
<arg name="point"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="encodePropertyList:">
<arg name="aPropertyList"></arg>
<retval></retval>
</method>
<method selector="encodeRect:">
<arg name="rect"></arg>
<retval></retval>
</method>
<method selector="encodeRect:forKey:">
<arg name="rect"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="encodeRootObject:">
<arg name="rootObject"></arg>
<retval></retval>
</method>
<method selector="encodeSize:">
<arg name="size"></arg>
<retval></retval>
</method>
<method selector="encodeSize:forKey:">
<arg name="size"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="encodeValueOfObjCType:at:">
<arg name="type"></arg>
<arg name="addr"></arg>
<retval></retval>
</method>
<method selector="encodeValuesOfObjCTypes:">
<arg name="encodeValuesOfObjCTypes"></arg>
<retval></retval>
</method>
<method selector="objectZone">
<retval></retval>
</method>
<method selector="setObjectZone:">
<arg name="zone"></arg>
<retval></retval>
</method>
<method selector="systemVersion" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="versionForClassName:">
<arg name="className"></arg>
<retval></retval>
</method>
</class>
<class name="NSComparisonPredicate" swt_superclass="NSPredicate">
<method selector="comparisonPredicateModifier">
<retval></retval>
</method>
<method selector="customSelector">
<retval></retval>
</method>
<method selector="initWithLeftExpression:rightExpression:customSelector:">
<arg name="lhs"></arg>
<arg name="rhs"></arg>
<arg name="selector"></arg>
<retval></retval>
</method>
<method selector="initWithLeftExpression:rightExpression:modifier:type:options:">
<arg name="lhs"></arg>
<arg name="rhs"></arg>
<arg name="modifier"></arg>
<arg name="type"></arg>
<arg name="options"></arg>
<retval></retval>
</method>
<method selector="leftExpression">
<retval></retval>
</method>
<method selector="options">
<retval></retval>
</method>
<method selector="predicateOperatorType">
<retval></retval>
</method>
<method class_method="true" selector="predicateWithLeftExpression:rightExpression:customSelector:">
<arg name="lhs"></arg>
<arg name="rhs"></arg>
<arg name="selector"></arg>
<retval></retval>
</method>
<method class_method="true" selector="predicateWithLeftExpression:rightExpression:modifier:type:options:">
<arg name="lhs"></arg>
<arg name="rhs"></arg>
<arg name="modifier"></arg>
<arg name="type"></arg>
<arg name="options"></arg>
<retval></retval>
</method>
<method selector="rightExpression">
<retval></retval>
</method>
</class>
<class name="NSCompoundPredicate" swt_superclass="NSPredicate">
<method class_method="true" selector="andPredicateWithSubpredicates:">
<arg name="subpredicates"></arg>
<retval></retval>
</method>
<method selector="compoundPredicateType">
<retval></retval>
</method>
<method selector="initWithType:subpredicates:">
<arg name="type"></arg>
<arg name="subpredicates"></arg>
<retval></retval>
</method>
<method class_method="true" selector="notPredicateWithSubpredicate:">
<arg name="predicate"></arg>
<retval></retval>
</method>
<method class_method="true" selector="orPredicateWithSubpredicates:">
<arg name="subpredicates"></arg>
<retval></retval>
</method>
<method selector="subpredicates">
<retval></retval>
</method>
</class>
<class name="NSCondition">
<method selector="broadcast">
<retval></retval>
</method>
<method selector="name">
<retval></retval>
</method>
<method selector="setName:">
<arg name="n"></arg>
<retval></retval>
</method>
<method selector="signal">
<retval></retval>
</method>
<method selector="wait">
<retval></retval>
</method>
<method selector="waitUntilDate:">
<arg name="limit"></arg>
<retval></retval>
</method>
</class>
<class name="NSConditionLock">
<method selector="condition">
<retval></retval>
</method>
<method selector="initWithCondition:">
<arg name="condition"></arg>
<retval></retval>
</method>
<method selector="lockBeforeDate:">
<arg name="limit"></arg>
<retval></retval>
</method>
<method selector="lockWhenCondition:">
<arg name="condition"></arg>
<retval></retval>
</method>
<method selector="lockWhenCondition:beforeDate:">
<arg name="condition"></arg>
<arg name="limit"></arg>
<retval></retval>
</method>
<method selector="name">
<retval></retval>
</method>
<method selector="setName:">
<arg name="n"></arg>
<retval></retval>
</method>
<method selector="tryLock">
<retval></retval>
</method>
<method selector="tryLockWhenCondition:">
<arg name="condition"></arg>
<retval></retval>
</method>
<method selector="unlockWithCondition:">
<arg name="condition"></arg>
<retval></retval>
</method>
</class>
<class name="NSConnection">
<method selector="addRequestMode:">
<arg name="rmode"></arg>
<retval></retval>
</method>
<method selector="addRunLoop:">
<arg name="runloop"></arg>
<retval></retval>
</method>
<method class_method="true" selector="allConnections">
<retval></retval>
</method>
<method class_method="true" selector="connectionWithReceivePort:sendPort:">
<arg name="receivePort"></arg>
<arg name="sendPort"></arg>
<retval></retval>
</method>
<method class_method="true" selector="connectionWithRegisteredName:host:">
<arg name="name"></arg>
<arg name="hostName"></arg>
<retval></retval>
</method>
<method class_method="true" selector="connectionWithRegisteredName:host:usingNameServer:">
<arg name="name"></arg>
<arg name="hostName"></arg>
<arg name="server"></arg>
<retval></retval>
</method>
<method class_method="true" selector="currentConversation">
<retval></retval>
</method>
<method class_method="true" selector="defaultConnection">
<retval></retval>
</method>
<method selector="delegate">
<retval></retval>
</method>
<method selector="enableMultipleThreads">
<retval></retval>
</method>
<method selector="independentConversationQueueing">
<retval></retval>
</method>
<method selector="initWithReceivePort:sendPort:">
<arg name="receivePort"></arg>
<arg name="sendPort"></arg>
<retval></retval>
</method>
<method selector="invalidate">
<retval></retval>
</method>
<method selector="isValid">
<retval></retval>
</method>
<method selector="localObjects">
<retval></retval>
</method>
<method selector="multipleThreadsEnabled">
<retval></retval>
</method>
<method selector="receivePort">
<retval></retval>
</method>
<method selector="registerName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="registerName:withNameServer:">
<arg name="name"></arg>
<arg name="server"></arg>
<retval></retval>
</method>
<method selector="remoteObjects">
<retval></retval>
</method>
<method selector="removeRequestMode:">
<arg name="rmode"></arg>
<retval></retval>
</method>
<method selector="removeRunLoop:">
<arg name="runloop"></arg>
<retval></retval>
</method>
<method selector="replyTimeout">
<retval></retval>
</method>
<method selector="requestModes">
<retval></retval>
</method>
<method selector="requestTimeout">
<retval></retval>
</method>
<method selector="rootObject">
<retval></retval>
</method>
<method selector="rootProxy">
<retval></retval>
</method>
<method class_method="true" selector="rootProxyForConnectionWithRegisteredName:host:">
<arg name="name"></arg>
<arg name="hostName"></arg>
<retval></retval>
</method>
<method class_method="true" selector="rootProxyForConnectionWithRegisteredName:host:usingNameServer:">
<arg name="name"></arg>
<arg name="hostName"></arg>
<arg name="server"></arg>
<retval></retval>
</method>
<method selector="runInNewThread">
<retval></retval>
</method>
<method selector="sendPort">
<retval></retval>
</method>
<method class_method="true" selector="serviceConnectionWithName:rootObject:">
<arg name="name"></arg>
<arg name="root"></arg>
<retval></retval>
</method>
<method class_method="true" selector="serviceConnectionWithName:rootObject:usingNameServer:">
<arg name="name"></arg>
<arg name="root"></arg>
<arg name="server"></arg>
<retval></retval>
</method>
<method selector="setDelegate:">
<arg name="anObject"></arg>
<retval></retval>
</method>
<method selector="setIndependentConversationQueueing:">
<arg name="yorn"></arg>
<retval></retval>
</method>
<method selector="setReplyTimeout:">
<arg name="ti"></arg>
<retval></retval>
</method>
<method selector="setRequestTimeout:">
<arg name="ti"></arg>
<retval></retval>
</method>
<method selector="setRootObject:">
<arg name="anObject"></arg>
<retval></retval>
</method>
<method selector="statistics">
<retval></retval>
</method>
</class>
<class name="NSCountedSet" swt_superclass="NSMutableSet">
<method selector="addObject:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="countForObject:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="initWithArray:">
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="initWithCapacity:">
<arg name="numItems"></arg>
<retval></retval>
</method>
<method selector="initWithSet:">
<arg name="set"></arg>
<retval></retval>
</method>
<method selector="objectEnumerator">
<retval></retval>
</method>
<method selector="removeObject:">
<arg name="object"></arg>
<retval></retval>
</method>
</class>
<class name="NSCreateCommand" swt_superclass="NSScriptCommand">
<method selector="createClassDescription">
<retval></retval>
</method>
<method selector="resolvedKeyDictionary">
<retval></retval>
</method>
</class>
<class name="NSData" swt_gen="mixed">
<method selector="bytes" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="data">
<retval></retval>
</method>
<method class_method="true" selector="dataWithBytes:length:" swt_gen="true">
<arg name="bytes" swt_gen="true" swt_java_type="byte[]"></arg>
<arg name="length" swt_gen="true"></arg>
<retval swt_gen="true" swt_java_type="NSData"></retval>
</method>
<method class_method="true" selector="dataWithBytesNoCopy:length:">
<arg name="bytes"></arg>
<arg name="length"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dataWithBytesNoCopy:length:freeWhenDone:">
<arg name="bytes"></arg>
<arg name="length"></arg>
<arg name="b"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dataWithContentsOfFile:">
<arg name="path"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dataWithContentsOfFile:options:error:">
<arg name="path"></arg>
<arg name="readOptionsMask"></arg>
<arg name="errorPtr"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dataWithContentsOfMappedFile:">
<arg name="path"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dataWithContentsOfURL:">
<arg name="url"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dataWithContentsOfURL:options:error:">
<arg name="url"></arg>
<arg name="readOptionsMask"></arg>
<arg name="errorPtr"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dataWithData:">
<arg name="data"></arg>
<retval></retval>
</method>
<method selector="description">
<retval></retval>
</method>
<method selector="getBytes:" swt_gen="true">
<arg name="buffer" swt_gen="true" swt_java_type="byte[]"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="getBytes:length:" swt_gen="true">
<arg name="buffer" swt_gen="true"></arg>
<arg name="length" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="getBytes:range:">
<arg name="buffer"></arg>
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="initWithBytes:length:">
<arg name="bytes"></arg>
<arg name="length"></arg>
<retval></retval>
</method>
<method selector="initWithBytesNoCopy:length:">
<arg name="bytes"></arg>
<arg name="length"></arg>
<retval></retval>
</method>
<method selector="initWithBytesNoCopy:length:freeWhenDone:">
<arg name="bytes"></arg>
<arg name="length"></arg>
<arg name="b"></arg>
<retval></retval>
</method>
<method selector="initWithContentsOfFile:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="initWithContentsOfFile:options:error:">
<arg name="path"></arg>
<arg name="readOptionsMask"></arg>
<arg name="errorPtr"></arg>
<retval></retval>
</method>
<method selector="initWithContentsOfMappedFile:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="initWithContentsOfURL:">
<arg name="url"></arg>
<retval></retval>
</method>
<method selector="initWithContentsOfURL:options:error:">
<arg name="url"></arg>
<arg name="readOptionsMask"></arg>
<arg name="errorPtr"></arg>
<retval></retval>
</method>
<method selector="initWithData:">
<arg name="data"></arg>
<retval></retval>
</method>
<method selector="isEqualToData:">
<arg name="other"></arg>
<retval></retval>
</method>
<method selector="length" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="subdataWithRange:">
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="writeToFile:atomically:">
<arg name="path"></arg>
<arg name="useAuxiliaryFile"></arg>
<retval></retval>
</method>
<method selector="writeToFile:options:error:">
<arg name="path"></arg>
<arg name="writeOptionsMask"></arg>
<arg name="errorPtr"></arg>
<retval></retval>
</method>
<method selector="writeToURL:atomically:">
<arg name="url"></arg>
<arg name="atomically"></arg>
<retval></retval>
</method>
<method selector="writeToURL:options:error:">
<arg name="url"></arg>
<arg name="writeOptionsMask"></arg>
<arg name="errorPtr"></arg>
<retval></retval>
</method>
</class>
<class name="NSDate" swt_gen="mixed">
<method selector="addTimeInterval:">
<arg name="seconds"></arg>
<retval></retval>
</method>
<method selector="compare:">
<arg name="other"></arg>
<retval></retval>
</method>
<method class_method="true" selector="date">
<retval></retval>
</method>
<method selector="dateWithCalendarFormat:timeZone:" swt_gen="true">
<arg name="format" swt_gen="true"></arg>
<arg name="aTimeZone" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="dateWithNaturalLanguageString:">
<arg name="string"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dateWithNaturalLanguageString:locale:">
<arg name="string"></arg>
<arg name="locale"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dateWithString:">
<arg name="aString"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dateWithTimeIntervalSince1970:">
<arg name="secs"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dateWithTimeIntervalSinceNow:" swt_gen="true">
<arg name="secs" swt_gen="true"></arg>
<retval swt_alloc="true" swt_gen="true" swt_java_type="NSDate"></retval>
</method>
<method class_method="true" selector="dateWithTimeIntervalSinceReferenceDate:">
<arg name="secs"></arg>
<retval></retval>
</method>
<method selector="description">
<retval></retval>
</method>
<method selector="descriptionWithCalendarFormat:timeZone:locale:">
<arg name="format"></arg>
<arg name="aTimeZone"></arg>
<arg name="locale"></arg>
<retval></retval>
</method>
<method selector="descriptionWithLocale:">
<arg name="locale"></arg>
<retval></retval>
</method>
<method class_method="true" selector="distantFuture" swt_gen="true">
<retval swt_alloc="true" swt_gen="true" swt_java_type="NSDate"></retval>
</method>
<method class_method="true" selector="distantPast">
<retval></retval>
</method>
<method selector="earlierDate:">
<arg name="anotherDate"></arg>
<retval></retval>
</method>
<method selector="init">
<retval></retval>
</method>
<method selector="initWithString:">
<arg name="description"></arg>
<retval></retval>
</method>
<method selector="initWithTimeInterval:sinceDate:">
<arg name="secsToBeAdded"></arg>
<arg name="anotherDate"></arg>
<retval></retval>
</method>
<method selector="initWithTimeIntervalSinceNow:">
<arg name="secsToBeAddedToNow"></arg>
<retval></retval>
</method>
<method selector="initWithTimeIntervalSinceReferenceDate:">
<arg name="secsToBeAdded"></arg>
<retval></retval>
</method>
<method selector="isEqualToDate:">
<arg name="otherDate"></arg>
<retval></retval>
</method>
<method selector="laterDate:">
<arg name="anotherDate"></arg>
<retval></retval>
</method>
<method selector="timeIntervalSince1970">
<retval></retval>
</method>
<method selector="timeIntervalSinceDate:">
<arg name="anotherDate"></arg>
<retval></retval>
</method>
<method selector="timeIntervalSinceNow">
<retval></retval>
</method>
<method class_method="true" selector="timeIntervalSinceReferenceDate">
<retval></retval>
</method>
<method selector="timeIntervalSinceReferenceDate">
<retval></retval>
</method>
</class>
<class name="NSDateComponents">
<method selector="day">
<retval></retval>
</method>
<method selector="era">
<retval></retval>
</method>
<method selector="hour">
<retval></retval>
</method>
<method selector="minute">
<retval></retval>
</method>
<method selector="month">
<retval></retval>
</method>
<method selector="second">
<retval></retval>
</method>
<method selector="setDay:">
<arg name="v"></arg>
<retval></retval>
</method>
<method selector="setEra:">
<arg name="v"></arg>
<retval></retval>
</method>
<method selector="setHour:">
<arg name="v"></arg>
<retval></retval>
</method>
<method selector="setMinute:">
<arg name="v"></arg>
<retval></retval>
</method>
<method selector="setMonth:">
<arg name="v"></arg>
<retval></retval>
</method>
<method selector="setSecond:">
<arg name="v"></arg>
<retval></retval>
</method>
<method selector="setWeek:">
<arg name="v"></arg>
<retval></retval>
</method>
<method selector="setWeekday:">
<arg name="v"></arg>
<retval></retval>
</method>
<method selector="setWeekdayOrdinal:">
<arg name="v"></arg>
<retval></retval>
</method>
<method selector="setYear:">
<arg name="v"></arg>
<retval></retval>
</method>
<method selector="week">
<retval></retval>
</method>
<method selector="weekday">
<retval></retval>
</method>
<method selector="weekdayOrdinal">
<retval></retval>
</method>
<method selector="year">
<retval></retval>
</method>
</class>
<class name="NSDateFormatter" swt_superclass="NSFormatter">
<method selector="AMSymbol">
<retval></retval>
</method>
<method selector="PMSymbol">
<retval></retval>
</method>
<method selector="allowsNaturalLanguage">
<retval></retval>
</method>
<method selector="calendar">
<retval></retval>
</method>
<method selector="dateFormat">
<retval></retval>
</method>
<method selector="dateFromString:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="dateStyle">
<retval></retval>
</method>
<method selector="defaultDate">
<retval></retval>
</method>
<method class_method="true" selector="defaultFormatterBehavior">
<retval></retval>
</method>
<method selector="eraSymbols">
<retval></retval>
</method>
<method selector="formatterBehavior">
<retval></retval>
</method>
<method selector="generatesCalendarDates">
<retval></retval>
</method>
<method selector="getObjectValue:forString:range:error:">
<arg name="obj"></arg>
<arg name="string"></arg>
<arg name="rangep"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="gregorianStartDate">
<retval></retval>
</method>
<method selector="init">
<retval></retval>
</method>
<method selector="initWithDateFormat:allowNaturalLanguage:">
<arg name="format"></arg>
<arg name="flag"></arg>
<retval></retval>
</method>
<method selector="isLenient">
<retval></retval>
</method>
<method selector="locale">
<retval></retval>
</method>
<method selector="longEraSymbols">
<retval></retval>
</method>
<method selector="monthSymbols">
<retval></retval>
</method>
<method selector="quarterSymbols">
<retval></retval>
</method>
<method selector="setAMSymbol:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setCalendar:">
<arg name="calendar"></arg>
<retval></retval>
</method>
<method selector="setDateFormat:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setDateStyle:">
<arg name="style"></arg>
<retval></retval>
</method>
<method selector="setDefaultDate:">
<arg name="date"></arg>
<retval></retval>
</method>
<method class_method="true" selector="setDefaultFormatterBehavior:">
<arg name="behavior"></arg>
<retval></retval>
</method>
<method selector="setEraSymbols:">
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="setFormatterBehavior:">
<arg name="behavior"></arg>
<retval></retval>
</method>
<method selector="setGeneratesCalendarDates:">
<arg name="b"></arg>
<retval></retval>
</method>
<method selector="setGregorianStartDate:">
<arg name="date"></arg>
<retval></retval>
</method>
<method selector="setLenient:">
<arg name="b"></arg>
<retval></retval>
</method>
<method selector="setLocale:">
<arg name="locale"></arg>
<retval></retval>
</method>
<method selector="setLongEraSymbols:">
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="setMonthSymbols:">
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="setPMSymbol:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setQuarterSymbols:">
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="setShortMonthSymbols:">
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="setShortQuarterSymbols:">
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="setShortStandaloneMonthSymbols:">
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="setShortStandaloneQuarterSymbols:">
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="setShortStandaloneWeekdaySymbols:">
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="setShortWeekdaySymbols:">
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="setStandaloneMonthSymbols:">
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="setStandaloneQuarterSymbols:">
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="setStandaloneWeekdaySymbols:">
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="setTimeStyle:">
<arg name="style"></arg>
<retval></retval>
</method>
<method selector="setTimeZone:">
<arg name="tz"></arg>
<retval></retval>
</method>
<method selector="setTwoDigitStartDate:">
<arg name="date"></arg>
<retval></retval>
</method>
<method selector="setVeryShortMonthSymbols:">
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="setVeryShortStandaloneMonthSymbols:">
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="setVeryShortStandaloneWeekdaySymbols:">
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="setVeryShortWeekdaySymbols:">
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="setWeekdaySymbols:">
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="shortMonthSymbols">
<retval></retval>
</method>
<method selector="shortQuarterSymbols">
<retval></retval>
</method>
<method selector="shortStandaloneMonthSymbols">
<retval></retval>
</method>
<method selector="shortStandaloneQuarterSymbols">
<retval></retval>
</method>
<method selector="shortStandaloneWeekdaySymbols">
<retval></retval>
</method>
<method selector="shortWeekdaySymbols">
<retval></retval>
</method>
<method selector="standaloneMonthSymbols">
<retval></retval>
</method>
<method selector="standaloneQuarterSymbols">
<retval></retval>
</method>
<method selector="standaloneWeekdaySymbols">
<retval></retval>
</method>
<method selector="stringFromDate:">
<arg name="date"></arg>
<retval></retval>
</method>
<method selector="timeStyle">
<retval></retval>
</method>
<method selector="timeZone">
<retval></retval>
</method>
<method selector="twoDigitStartDate">
<retval></retval>
</method>
<method selector="veryShortMonthSymbols">
<retval></retval>
</method>
<method selector="veryShortStandaloneMonthSymbols">
<retval></retval>
</method>
<method selector="veryShortStandaloneWeekdaySymbols">
<retval></retval>
</method>
<method selector="veryShortWeekdaySymbols">
<retval></retval>
</method>
<method selector="weekdaySymbols">
<retval></retval>
</method>
</class>
<class name="NSDecimalNumber" swt_superclass="NSNumber">
<method selector="compare:">
<arg name="decimalNumber"></arg>
<retval></retval>
</method>
<method selector="decimalNumberByAdding:">
<arg name="decimalNumber"></arg>
<retval></retval>
</method>
<method selector="decimalNumberByAdding:withBehavior:">
<arg name="decimalNumber"></arg>
<arg name="behavior"></arg>
<retval></retval>
</method>
<method selector="decimalNumberByDividingBy:">
<arg name="decimalNumber"></arg>
<retval></retval>
</method>
<method selector="decimalNumberByDividingBy:withBehavior:">
<arg name="decimalNumber"></arg>
<arg name="behavior"></arg>
<retval></retval>
</method>
<method selector="decimalNumberByMultiplyingBy:">
<arg name="decimalNumber"></arg>
<retval></retval>
</method>
<method selector="decimalNumberByMultiplyingBy:withBehavior:">
<arg name="decimalNumber"></arg>
<arg name="behavior"></arg>
<retval></retval>
</method>
<method selector="decimalNumberByMultiplyingByPowerOf10:">
<arg name="power"></arg>
<retval></retval>
</method>
<method selector="decimalNumberByMultiplyingByPowerOf10:withBehavior:">
<arg name="power"></arg>
<arg name="behavior"></arg>
<retval></retval>
</method>
<method selector="decimalNumberByRaisingToPower:">
<arg name="power"></arg>
<retval></retval>
</method>
<method selector="decimalNumberByRaisingToPower:withBehavior:">
<arg name="power"></arg>
<arg name="behavior"></arg>
<retval></retval>
</method>
<method selector="decimalNumberByRoundingAccordingToBehavior:">
<arg name="behavior"></arg>
<retval></retval>
</method>
<method selector="decimalNumberBySubtracting:">
<arg name="decimalNumber"></arg>
<retval></retval>
</method>
<method selector="decimalNumberBySubtracting:withBehavior:">
<arg name="decimalNumber"></arg>
<arg name="behavior"></arg>
<retval></retval>
</method>
<method class_method="true" selector="decimalNumberWithDecimal:">
<arg name="dcm"></arg>
<retval></retval>
</method>
<method class_method="true" selector="decimalNumberWithMantissa:exponent:isNegative:">
<arg name="mantissa"></arg>
<arg name="exponent"></arg>
<arg name="flag"></arg>
<retval></retval>
</method>
<method class_method="true" selector="decimalNumberWithString:">
<arg name="numberValue"></arg>
<retval></retval>
</method>
<method class_method="true" selector="decimalNumberWithString:locale:">
<arg name="numberValue"></arg>
<arg name="locale"></arg>
<retval></retval>
</method>
<method selector="decimalValue">
<retval></retval>
</method>
<method class_method="true" selector="defaultBehavior">
<retval></retval>
</method>
<method selector="descriptionWithLocale:">
<arg name="locale"></arg>
<retval></retval>
</method>
<method selector="doubleValue">
<retval></retval>
</method>
<method selector="initWithDecimal:">
<arg name="dcm"></arg>
<retval></retval>
</method>
<method selector="initWithMantissa:exponent:isNegative:">
<arg name="mantissa"></arg>
<arg name="exponent"></arg>
<arg name="flag"></arg>
<retval></retval>
</method>
<method selector="initWithString:">
<arg name="numberValue"></arg>
<retval></retval>
</method>
<method selector="initWithString:locale:">
<arg name="numberValue"></arg>
<arg name="locale"></arg>
<retval></retval>
</method>
<method class_method="true" selector="maximumDecimalNumber">
<retval></retval>
</method>
<method class_method="true" selector="minimumDecimalNumber">
<retval></retval>
</method>
<method class_method="true" selector="notANumber">
<retval></retval>
</method>
<method selector="objCType">
<retval></retval>
</method>
<method class_method="true" selector="one">
<retval></retval>
</method>
<method class_method="true" selector="setDefaultBehavior:">
<arg name="behavior"></arg>
<retval></retval>
</method>
<method class_method="true" selector="zero">
<retval></retval>
</method>
</class>
<class name="NSDecimalNumberHandler">
<method class_method="true" selector="decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:">
<arg name="roundingMode"></arg>
<arg name="scale"></arg>
<arg name="exact"></arg>
<arg name="overflow"></arg>
<arg name="underflow"></arg>
<arg name="divideByZero"></arg>
<retval></retval>
</method>
<method class_method="true" selector="defaultDecimalNumberHandler">
<retval></retval>
</method>
<method selector="initWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:">
<arg name="roundingMode"></arg>
<arg name="scale"></arg>
<arg name="exact"></arg>
<arg name="overflow"></arg>
<arg name="underflow"></arg>
<arg name="divideByZero"></arg>
<retval></retval>
</method>
</class>
<class name="NSDeleteCommand" swt_superclass="NSScriptCommand">
<method selector="keySpecifier">
<retval></retval>
</method>
<method selector="setReceiversSpecifier:">
<arg name="receiversRef"></arg>
<retval></retval>
</method>
</class>
<class name="NSDictionary" swt_gen="mixed">
<method selector="allKeys" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="allKeysForObject:">
<arg name="anObject"></arg>
<retval></retval>
</method>
<method selector="allValues">
<retval></retval>
</method>
<method selector="count" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="description">
<retval></retval>
</method>
<method selector="descriptionInStringsFileFormat">
<retval></retval>
</method>
<method selector="descriptionWithLocale:">
<arg name="locale"></arg>
<retval></retval>
</method>
<method selector="descriptionWithLocale:indent:">
<arg name="locale"></arg>
<arg name="level"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dictionary">
<retval></retval>
</method>
<method class_method="true" selector="dictionaryWithContentsOfFile:">
<arg name="path"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dictionaryWithContentsOfURL:">
<arg name="url"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dictionaryWithDictionary:">
<arg name="dict"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dictionaryWithObject:forKey:" swt_gen="true">
<arg name="object" swt_gen="true"></arg>
<arg name="key" swt_gen="true"></arg>
<retval swt_alloc="true" swt_gen="true" swt_java_type="NSDictionary"></retval>
</method>
<method class_method="true" selector="dictionaryWithObjects:forKeys:">
<arg name="objects"></arg>
<arg name="keys"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dictionaryWithObjects:forKeys:count:">
<arg name="objects"></arg>
<arg name="keys"></arg>
<arg name="cnt"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dictionaryWithObjectsAndKeys:">
<arg name="dictionaryWithObjectsAndKeys"></arg>
<retval></retval>
</method>
<method selector="fileCreationDate">
<retval></retval>
</method>
<method selector="fileExtensionHidden">
<retval></retval>
</method>
<method selector="fileGroupOwnerAccountID">
<retval></retval>
</method>
<method selector="fileGroupOwnerAccountName">
<retval></retval>
</method>
<method selector="fileHFSCreatorCode">
<retval></retval>
</method>
<method selector="fileHFSTypeCode">
<retval></retval>
</method>
<method selector="fileIsAppendOnly">
<retval></retval>
</method>
<method selector="fileIsImmutable">
<retval></retval>
</method>
<method selector="fileModificationDate">
<retval></retval>
</method>
<method selector="fileOwnerAccountID">
<retval></retval>
</method>
<method selector="fileOwnerAccountName">
<retval></retval>
</method>
<method selector="filePosixPermissions">
<retval></retval>
</method>
<method selector="fileSize">
<retval></retval>
</method>
<method selector="fileSystemFileNumber">
<retval></retval>
</method>
<method selector="fileSystemNumber">
<retval></retval>
</method>
<method selector="fileType">
<retval></retval>
</method>
<method selector="getObjects:andKeys:">
<arg name="objects"></arg>
<arg name="keys"></arg>
<retval></retval>
</method>
<method selector="initWithContentsOfFile:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="initWithContentsOfURL:">
<arg name="url"></arg>
<retval></retval>
</method>
<method selector="initWithDictionary:">
<arg name="otherDictionary"></arg>
<retval></retval>
</method>
<method selector="initWithDictionary:copyItems:">
<arg name="otherDictionary"></arg>
<arg name="flag"></arg>
<retval></retval>
</method>
<method selector="initWithObjects:forKeys:">
<arg name="objects"></arg>
<arg name="keys"></arg>
<retval></retval>
</method>
<method selector="initWithObjects:forKeys:count:">
<arg name="objects"></arg>
<arg name="keys"></arg>
<arg name="cnt"></arg>
<retval></retval>
</method>
<method selector="initWithObjectsAndKeys:">
<arg name="initWithObjectsAndKeys"></arg>
<retval></retval>
</method>
<method selector="isEqualToDictionary:">
<arg name="otherDictionary"></arg>
<retval></retval>
</method>
<method selector="keyEnumerator">
<retval></retval>
</method>
<method selector="keysSortedByValueUsingSelector:">
<arg name="comparator"></arg>
<retval></retval>
</method>
<method selector="objectEnumerator" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="objectForKey:" swt_gen="true">
<arg name="aKey" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="objectsForKeys:notFoundMarker:">
<arg name="keys"></arg>
<arg name="marker"></arg>
<retval></retval>
</method>
<method selector="valueForKey:" swt_gen="true">
<arg name="key" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="writeToFile:atomically:">
<arg name="path"></arg>
<arg name="useAuxiliaryFile"></arg>
<retval></retval>
</method>
<method selector="writeToURL:atomically:">
<arg name="url"></arg>
<arg name="atomically"></arg>
<retval></retval>
</method>
</class>
<class name="NSDirectoryEnumerator" swt_gen="mixed" swt_superclass="NSEnumerator">
<method selector="directoryAttributes">
<retval></retval>
</method>
<method selector="fileAttributes">
<retval></retval>
</method>
<method selector="skipDescendents" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
</class>
<class name="NSDistantObject" swt_superclass="NSProxy">
<method selector="connectionForProxy">
<retval></retval>
</method>
<method selector="initWithLocal:connection:">
<arg name="target"></arg>
<arg name="connection"></arg>
<retval></retval>
</method>
<method selector="initWithTarget:connection:">
<arg name="target"></arg>
<arg name="connection"></arg>
<retval></retval>
</method>
<method class_method="true" selector="proxyWithLocal:connection:">
<arg name="target"></arg>
<arg name="connection"></arg>
<retval></retval>
</method>
<method class_method="true" selector="proxyWithTarget:connection:">
<arg name="target"></arg>
<arg name="connection"></arg>
<retval></retval>
</method>
<method selector="setProtocolForProxy:">
<arg name="proto"></arg>
<retval></retval>
</method>
</class>
<class name="NSDistantObjectRequest">
<method selector="connection">
<retval></retval>
</method>
<method selector="conversation">
<retval></retval>
</method>
<method selector="invocation">
<retval></retval>
</method>
<method selector="replyWithException:">
<arg name="exception"></arg>
<retval></retval>
</method>
</class>
<class name="NSDistributedLock">
<method selector="breakLock">
<retval></retval>
</method>
<method selector="initWithPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="lockDate">
<retval></retval>
</method>
<method class_method="true" selector="lockWithPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="tryLock">
<retval></retval>
</method>
<method selector="unlock">
<retval></retval>
</method>
</class>
<class name="NSDistributedNotificationCenter" swt_superclass="NSNotificationCenter">
<method selector="addObserver:selector:name:object:">
<arg name="observer"></arg>
<arg name="aSelector"></arg>
<arg name="aName"></arg>
<arg name="anObject"></arg>
<retval></retval>
</method>
<method selector="addObserver:selector:name:object:suspensionBehavior:">
<arg name="observer"></arg>
<arg name="selector"></arg>
<arg name="name"></arg>
<arg name="object"></arg>
<arg name="suspensionBehavior"></arg>
<retval></retval>
</method>
<method class_method="true" selector="defaultCenter">
<retval swt_java_type="NSNotificationCenter"></retval>
</method>
<method class_method="true" selector="notificationCenterForType:">
<arg name="notificationCenterType"></arg>
<retval></retval>
</method>
<method selector="postNotificationName:object:">
<arg name="aName"></arg>
<arg name="anObject"></arg>
<retval></retval>
</method>
<method selector="postNotificationName:object:userInfo:">
<arg name="aName"></arg>
<arg name="anObject"></arg>
<arg name="aUserInfo"></arg>
<retval></retval>
</method>
<method selector="postNotificationName:object:userInfo:deliverImmediately:">
<arg name="name"></arg>
<arg name="object"></arg>
<arg name="userInfo"></arg>
<arg name="deliverImmediately"></arg>
<retval></retval>
</method>
<method selector="postNotificationName:object:userInfo:options:">
<arg name="name"></arg>
<arg name="object"></arg>
<arg name="userInfo"></arg>
<arg name="options"></arg>
<retval></retval>
</method>
<method selector="removeObserver:name:object:">
<arg name="observer"></arg>
<arg name="aName"></arg>
<arg name="anObject"></arg>
<retval></retval>
</method>
<method selector="setSuspended:">
<arg name="suspended"></arg>
<retval></retval>
</method>
<method selector="suspended">
<retval></retval>
</method>
</class>
<class name="NSEnumerator" swt_gen="mixed">
<method selector="allObjects">
<retval></retval>
</method>
<method selector="nextObject" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
</class>
<class name="NSError" swt_gen="mixed">
<method selector="code" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="domain">
<retval></retval>
</method>
<method class_method="true" selector="errorWithDomain:code:userInfo:">
<arg name="domain"></arg>
<arg name="code"></arg>
<arg name="dict"></arg>
<retval></retval>
</method>
<method selector="initWithDomain:code:userInfo:">
<arg name="domain"></arg>
<arg name="code"></arg>
<arg name="dict"></arg>
<retval></retval>
</method>
<method selector="localizedDescription" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="localizedFailureReason">
<retval></retval>
</method>
<method selector="localizedRecoveryOptions">
<retval></retval>
</method>
<method selector="localizedRecoverySuggestion">
<retval></retval>
</method>
<method selector="recoveryAttempter">
<retval></retval>
</method>
<method selector="userInfo" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
</class>
<class name="NSException">
<method selector="callStackReturnAddresses">
<retval></retval>
</method>
<method class_method="true" selector="exceptionWithName:reason:userInfo:">
<arg name="name"></arg>
<arg name="reason"></arg>
<arg name="userInfo"></arg>
<retval></retval>
</method>
<method selector="initWithName:reason:userInfo:">
<arg name="aName"></arg>
<arg name="aReason"></arg>
<arg name="aUserInfo"></arg>
<retval></retval>
</method>
<method selector="name">
<retval></retval>
</method>
<method selector="raise">
<retval></retval>
</method>
<method class_method="true" selector="raise:format:">
<arg name="name"></arg>
<arg name="format"></arg>
<retval></retval>
</method>
<method class_method="true" selector="raise:format:arguments:">
<arg name="name"></arg>
<arg name="format"></arg>
<arg name="argList"></arg>
<retval></retval>
</method>
<method selector="reason">
<retval></retval>
</method>
<method selector="userInfo">
<retval></retval>
</method>
</class>
<class name="NSExpression">
<method selector="arguments">
<retval></retval>
</method>
<method selector="collection">
<retval></retval>
</method>
<method selector="constantValue">
<retval></retval>
</method>
<method class_method="true" selector="expressionForAggregate:">
<arg name="subexpressions"></arg>
<retval></retval>
</method>
<method class_method="true" selector="expressionForConstantValue:">
<arg name="obj"></arg>
<retval></retval>
</method>
<method class_method="true" selector="expressionForEvaluatedObject">
<retval></retval>
</method>
<method class_method="true" selector="expressionForFunction:arguments:">
<arg name="name"></arg>
<arg name="parameters"></arg>
<retval></retval>
</method>
<method class_method="true" selector="expressionForFunction:selectorName:arguments:">
<arg name="target"></arg>
<arg name="name"></arg>
<arg name="parameters"></arg>
<retval></retval>
</method>
<method class_method="true" selector="expressionForIntersectSet:with:">
<arg name="left"></arg>
<arg name="right"></arg>
<retval></retval>
</method>
<method class_method="true" selector="expressionForKeyPath:">
<arg name="keyPath"></arg>
<retval></retval>
</method>
<method class_method="true" selector="expressionForMinusSet:with:">
<arg name="left"></arg>
<arg name="right"></arg>
<retval></retval>
</method>
<method class_method="true" selector="expressionForSubquery:usingIteratorVariable:predicate:">
<arg name="expression"></arg>
<arg name="variable"></arg>
<arg name="predicate"></arg>
<retval></retval>
</method>
<method class_method="true" selector="expressionForUnionSet:with:">
<arg name="left"></arg>
<arg name="right"></arg>
<retval></retval>
</method>
<method class_method="true" selector="expressionForVariable:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="expressionType">
<retval></retval>
</method>
<method selector="expressionValueWithObject:context:">
<arg name="object"></arg>
<arg name="context"></arg>
<retval></retval>
</method>
<method selector="function">
<retval></retval>
</method>
<method selector="initWithExpressionType:">
<arg name="type"></arg>
<retval></retval>
</method>
<method selector="keyPath">
<retval></retval>
</method>
<method selector="leftExpression">
<retval></retval>
</method>
<method selector="operand">
<retval></retval>
</method>
<method selector="predicate">
<retval></retval>
</method>
<method selector="rightExpression">
<retval></retval>
</method>
<method selector="variable">
<retval></retval>
</method>
</class>
<class name="NSFileHandle">
<method selector="acceptConnectionInBackgroundAndNotify">
<retval></retval>
</method>
<method selector="acceptConnectionInBackgroundAndNotifyForModes:">
<arg name="modes"></arg>
<retval></retval>
</method>
<method selector="availableData">
<retval></retval>
</method>
<method selector="closeFile">
<retval></retval>
</method>
<method selector="fileDescriptor">
<retval></retval>
</method>
<method class_method="true" selector="fileHandleForReadingAtPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method class_method="true" selector="fileHandleForUpdatingAtPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method class_method="true" selector="fileHandleForWritingAtPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method class_method="true" selector="fileHandleWithNullDevice">
<retval></retval>
</method>
<method class_method="true" selector="fileHandleWithStandardError">
<retval></retval>
</method>
<method class_method="true" selector="fileHandleWithStandardInput">
<retval></retval>
</method>
<method class_method="true" selector="fileHandleWithStandardOutput">
<retval></retval>
</method>
<method selector="initWithFileDescriptor:">
<arg name="fd"></arg>
<retval></retval>
</method>
<method selector="initWithFileDescriptor:closeOnDealloc:">
<arg name="fd"></arg>
<arg name="closeopt"></arg>
<retval></retval>
</method>
<method selector="offsetInFile">
<retval></retval>
</method>
<method selector="readDataOfLength:">
<arg name="length"></arg>
<retval></retval>
</method>
<method selector="readDataToEndOfFile">
<retval></retval>
</method>
<method selector="readInBackgroundAndNotify">
<retval></retval>
</method>
<method selector="readInBackgroundAndNotifyForModes:">
<arg name="modes"></arg>
<retval></retval>
</method>
<method selector="readToEndOfFileInBackgroundAndNotify">
<retval></retval>
</method>
<method selector="readToEndOfFileInBackgroundAndNotifyForModes:">
<arg name="modes"></arg>
<retval></retval>
</method>
<method selector="seekToEndOfFile">
<retval></retval>
</method>
<method selector="seekToFileOffset:">
<arg name="offset"></arg>
<retval></retval>
</method>
<method selector="synchronizeFile">
<retval></retval>
</method>
<method selector="truncateFileAtOffset:">
<arg name="offset"></arg>
<retval></retval>
</method>
<method selector="waitForDataInBackgroundAndNotify">
<retval></retval>
</method>
<method selector="waitForDataInBackgroundAndNotifyForModes:">
<arg name="modes"></arg>
<retval></retval>
</method>
<method selector="writeData:">
<arg name="data"></arg>
<retval></retval>
</method>
</class>
<class name="NSFileManager" swt_gen="mixed">
<method selector="attributesOfFileSystemForPath:error:">
<arg name="path"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="attributesOfItemAtPath:error:">
<arg name="path"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="changeCurrentDirectoryPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="changeFileAttributes:atPath:">
<arg name="attributes"></arg>
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="componentsToDisplayForPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="contentsAtPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="contentsEqualAtPath:andPath:">
<arg name="path1"></arg>
<arg name="path2"></arg>
<retval></retval>
</method>
<method selector="contentsOfDirectoryAtPath:error:">
<arg name="path"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="copyItemAtPath:toPath:error:">
<arg name="srcPath"></arg>
<arg name="dstPath"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="copyPath:toPath:handler:">
<arg name="src"></arg>
<arg name="dest"></arg>
<arg name="handler"></arg>
<retval></retval>
</method>
<method selector="createDirectoryAtPath:attributes:">
<arg name="path"></arg>
<arg name="attributes"></arg>
<retval></retval>
</method>
<method selector="createDirectoryAtPath:withIntermediateDirectories:attributes:error:">
<arg name="path"></arg>
<arg name="createIntermediates"></arg>
<arg name="attributes"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="createFileAtPath:contents:attributes:" swt_gen="true">
<arg name="path" swt_gen="true"></arg>
<arg name="data" swt_gen="true"></arg>
<arg name="attr" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="createSymbolicLinkAtPath:pathContent:">
<arg name="path"></arg>
<arg name="otherpath"></arg>
<retval></retval>
</method>
<method selector="createSymbolicLinkAtPath:withDestinationPath:error:">
<arg name="path"></arg>
<arg name="destPath"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="currentDirectoryPath">
<retval></retval>
</method>
<method class_method="true" selector="defaultManager" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="delegate">
<retval></retval>
</method>
<method selector="destinationOfSymbolicLinkAtPath:error:">
<arg name="path"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="directoryContentsAtPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="displayNameAtPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="enumeratorAtPath:" swt_gen="true">
<arg name="path" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="fileAttributesAtPath:traverseLink:">
<arg name="path"></arg>
<arg name="yorn"></arg>
<retval></retval>
</method>
<method selector="fileExistsAtPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="fileExistsAtPath:isDirectory:">
<arg name="path"></arg>
<arg name="isDirectory"></arg>
<retval></retval>
</method>
<method selector="fileSystemAttributesAtPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="fileSystemRepresentationWithPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="isDeletableFileAtPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="isExecutableFileAtPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="isReadableFileAtPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="isWritableFileAtPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="linkItemAtPath:toPath:error:">
<arg name="srcPath"></arg>
<arg name="dstPath"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="linkPath:toPath:handler:">
<arg name="src"></arg>
<arg name="dest"></arg>
<arg name="handler"></arg>
<retval></retval>
</method>
<method selector="moveItemAtPath:toPath:error:">
<arg name="srcPath"></arg>
<arg name="dstPath"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="movePath:toPath:handler:">
<arg name="src"></arg>
<arg name="dest"></arg>
<arg name="handler"></arg>
<retval></retval>
</method>
<method selector="pathContentOfSymbolicLinkAtPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="removeFileAtPath:handler:">
<arg name="path"></arg>
<arg name="handler"></arg>
<retval></retval>
</method>
<method selector="removeItemAtPath:error:" swt_gen="true">
<arg name="path" swt_gen="true"></arg>
<arg name="error" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="setAttributes:ofItemAtPath:error:">
<arg name="attributes"></arg>
<arg name="path"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="setDelegate:">
<arg name="delegate"></arg>
<retval></retval>
</method>
<method selector="stringWithFileSystemRepresentation:length:">
<arg name="str"></arg>
<arg name="len"></arg>
<retval></retval>
</method>
<method selector="subpathsAtPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="subpathsOfDirectoryAtPath:error:">
<arg name="path"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
</class>
<class name="NSFormatter" swt_gen="mixed">
<method selector="attributedStringForObjectValue:withDefaultAttributes:">
<arg name="obj"></arg>
<arg name="attrs"></arg>
<retval></retval>
</method>
<method selector="editingStringForObjectValue:">
<arg name="obj"></arg>
<retval></retval>
</method>
<method selector="getObjectValue:forString:errorDescription:">
<arg name="obj"></arg>
<arg name="string"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="isPartialStringValid:newEditingString:errorDescription:">
<arg name="partialString"></arg>
<arg name="newString"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:">
<arg name="partialStringPtr"></arg>
<arg name="proposedSelRangePtr"></arg>
<arg name="origString"></arg>
<arg name="origSelRange"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="stringForObjectValue:" swt_gen="true">
<arg name="obj" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
</class>
<class name="NSGarbageCollector">
<method selector="collectExhaustively">
<retval></retval>
</method>
<method selector="collectIfNeeded">
<retval></retval>
</method>
<method class_method="true" selector="defaultCollector">
<retval></retval>
</method>
<method selector="disable">
<retval></retval>
</method>
<method selector="disableCollectorForPointer:">
<arg name="ptr"></arg>
<retval></retval>
</method>
<method selector="enable">
<retval></retval>
</method>
<method selector="enableCollectorForPointer:">
<arg name="ptr"></arg>
<retval></retval>
</method>
<method selector="isCollecting">
<retval></retval>
</method>
<method selector="isEnabled">
<retval></retval>
</method>
<method selector="zone">
<retval></retval>
</method>
</class>
<class name="NSHTTPCookie" swt_gen="mixed">
<method selector="comment">
<retval></retval>
</method>
<method selector="commentURL">
<retval></retval>
</method>
<method class_method="true" selector="cookieWithProperties:">
<arg name="properties"></arg>
<retval></retval>
</method>
<method class_method="true" selector="cookiesWithResponseHeaderFields:forURL:" swt_gen="true">
<arg name="headerFields" swt_gen="true"></arg>
<arg name="URL" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="domain">
<retval></retval>
</method>
<method selector="expiresDate">
<retval></retval>
</method>
<method selector="initWithProperties:">
<arg name="properties"></arg>
<retval></retval>
</method>
<method selector="isSecure">
<retval></retval>
</method>
<method selector="isSessionOnly" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="name" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="path">
<retval></retval>
</method>
<method selector="portList">
<retval></retval>
</method>
<method selector="properties">
<retval></retval>
</method>
<method class_method="true" selector="requestHeaderFieldsWithCookies:">
<arg name="cookies"></arg>
<retval></retval>
</method>
<method selector="value" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="version">
<retval></retval>
</method>
</class>
<class name="NSHTTPCookieStorage" swt_gen="mixed">
<method selector="cookieAcceptPolicy">
<retval></retval>
</method>
<method selector="cookies" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="cookiesForURL:" swt_gen="true">
<arg name="URL" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="deleteCookie:" swt_gen="true">
<arg name="cookie" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="setCookie:" swt_gen="true">
<arg name="cookie" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="setCookieAcceptPolicy:">
<arg name="cookieAcceptPolicy"></arg>
<retval></retval>
</method>
<method selector="setCookies:forURL:mainDocumentURL:">
<arg name="cookies"></arg>
<arg name="URL"></arg>
<arg name="mainDocumentURL"></arg>
<retval></retval>
</method>
<method class_method="true" selector="sharedHTTPCookieStorage" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
</class>
<class name="NSHTTPURLResponse" swt_superclass="NSURLResponse">
<method selector="allHeaderFields">
<retval></retval>
</method>
<method class_method="true" selector="localizedStringForStatusCode:">
<arg name="statusCode"></arg>
<retval></retval>
</method>
<method selector="statusCode">
<retval></retval>
</method>
</class>
<class name="NSHashTable">
<method selector="addObject:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="allObjects">
<retval></retval>
</method>
<method selector="anyObject">
<retval></retval>
</method>
<method selector="containsObject:">
<arg name="anObject"></arg>
<retval></retval>
</method>
<method selector="count">
<retval></retval>
</method>
<method class_method="true" selector="hashTableWithOptions:">
<arg name="options"></arg>
<retval></retval>
</method>
<method class_method="true" selector="hashTableWithWeakObjects">
<retval></retval>
</method>
<method selector="initWithOptions:capacity:">
<arg name="options"></arg>
<arg name="initialCapacity"></arg>
<retval></retval>
</method>
<method selector="initWithPointerFunctions:capacity:">
<arg name="functions"></arg>
<arg name="initialCapacity"></arg>
<retval></retval>
</method>
<method selector="intersectHashTable:">
<arg name="other"></arg>
<retval></retval>
</method>
<method selector="intersectsHashTable:">
<arg name="other"></arg>
<retval></retval>
</method>
<method selector="isEqualToHashTable:">
<arg name="other"></arg>
<retval></retval>
</method>
<method selector="isSubsetOfHashTable:">
<arg name="other"></arg>
<retval></retval>
</method>
<method selector="member:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="minusHashTable:">
<arg name="other"></arg>
<retval></retval>
</method>
<method selector="objectEnumerator">
<retval></retval>
</method>
<method selector="pointerFunctions">
<retval></retval>
</method>
<method selector="removeAllObjects">
<retval></retval>
</method>
<method selector="removeObject:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="setRepresentation">
<retval></retval>
</method>
<method selector="unionHashTable:">
<arg name="other"></arg>
<retval></retval>
</method>
</class>
<class name="NSHost">
<method selector="address">
<retval></retval>
</method>
<method selector="addresses">
<retval></retval>
</method>
<method class_method="true" selector="currentHost">
<retval></retval>
</method>
<method class_method="true" selector="flushHostCache">
<retval></retval>
</method>
<method class_method="true" selector="hostWithAddress:">
<arg name="address"></arg>
<retval></retval>
</method>
<method class_method="true" selector="hostWithName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="isEqualToHost:">
<arg name="aHost"></arg>
<retval></retval>
</method>
<method class_method="true" selector="isHostCacheEnabled">
<retval></retval>
</method>
<method selector="name">
<retval></retval>
</method>
<method selector="names">
<retval></retval>
</method>
<method class_method="true" selector="setHostCacheEnabled:">
<arg name="flag"></arg>
<retval></retval>
</method>
</class>
<class name="NSIndexPath">
<method selector="compare:">
<arg name="otherObject"></arg>
<retval></retval>
</method>
<method selector="getIndexes:">
<arg name="indexes"></arg>
<retval></retval>
</method>
<method selector="indexAtPosition:">
<arg name="position"></arg>
<retval></retval>
</method>
<method selector="indexPathByAddingIndex:">
<arg name="index"></arg>
<retval></retval>
</method>
<method selector="indexPathByRemovingLastIndex">
<retval></retval>
</method>
<method class_method="true" selector="indexPathWithIndex:">
<arg name="index"></arg>
<retval></retval>
</method>
<method class_method="true" selector="indexPathWithIndexes:length:">
<arg name="indexes"></arg>
<arg name="length"></arg>
<retval></retval>
</method>
<method selector="initWithIndex:">
<arg name="index"></arg>
<retval></retval>
</method>
<method selector="initWithIndexes:length:">
<arg name="indexes"></arg>
<arg name="length"></arg>
<retval></retval>
</method>
<method selector="length">
<retval></retval>
</method>
</class>
<class name="NSIndexSet" swt_gen="mixed">
<method selector="containsIndex:" swt_gen="true">
<arg name="value" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="containsIndexes:">
<arg name="indexSet"></arg>
<retval></retval>
</method>
<method selector="containsIndexesInRange:">
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="count" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="countOfIndexesInRange:">
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="firstIndex" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="getIndexes:maxCount:inIndexRange:" swt_gen="true">
<arg name="indexBuffer" swt_gen="true" swt_java_type="int[]" swt_java_type64="long[]"></arg>
<arg name="bufferSize" swt_gen="true"></arg>
<arg name="range" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="indexGreaterThanIndex:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="indexGreaterThanOrEqualToIndex:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="indexLessThanIndex:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="indexLessThanOrEqualToIndex:">
<arg name="value"></arg>
<retval></retval>
</method>
<method class_method="true" selector="indexSet">
<retval></retval>
</method>
<method class_method="true" selector="indexSetWithIndex:" swt_gen="true">
<arg name="value" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="indexSetWithIndexesInRange:">
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="init">
<retval></retval>
</method>
<method selector="initWithIndex:" swt_gen="true">
<arg name="value" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="initWithIndexSet:">
<arg name="indexSet"></arg>
<retval></retval>
</method>
<method selector="initWithIndexesInRange:" swt_gen="true">
<arg name="range" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="intersectsIndexesInRange:">
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="isEqualToIndexSet:">
<arg name="indexSet"></arg>
<retval></retval>
</method>
<method selector="lastIndex">
<retval></retval>
</method>
</class>
<class name="NSIndexSpecifier" swt_superclass="NSScriptObjectSpecifier">
<method selector="index">
<retval></retval>
</method>
<method selector="initWithContainerClassDescription:containerSpecifier:key:index:">
<arg name="classDesc"></arg>
<arg name="container"></arg>
<arg name="property"></arg>
<arg name="index"></arg>
<retval></retval>
</method>
<method selector="setIndex:">
<arg name="index"></arg>
<retval></retval>
</method>
</class>
<class name="NSInputStream" swt_superclass="NSStream">
<method selector="getBuffer:length:">
<arg name="buffer"></arg>
<arg name="len"></arg>
<retval></retval>
</method>
<method selector="hasBytesAvailable">
<retval></retval>
</method>
<method selector="initWithData:">
<arg name="data"></arg>
<retval></retval>
</method>
<method selector="initWithFileAtPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method class_method="true" selector="inputStreamWithData:">
<arg name="data"></arg>
<retval></retval>
</method>
<method class_method="true" selector="inputStreamWithFileAtPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="read:maxLength:">
<arg name="buffer"></arg>
<arg name="len"></arg>
<retval></retval>
</method>
</class>
<class name="NSInvocation">
<method selector="argumentsRetained">
<retval></retval>
</method>
<method selector="getArgument:atIndex:">
<arg name="argumentLocation"></arg>
<arg name="idx"></arg>
<retval></retval>
</method>
<method selector="getReturnValue:">
<arg name="retLoc"></arg>
<retval></retval>
</method>
<method class_method="true" selector="invocationWithMethodSignature:">
<arg name="sig"></arg>
<retval></retval>
</method>
<method selector="invoke">
<retval></retval>
</method>
<method selector="invokeWithTarget:">
<arg name="target"></arg>
<retval></retval>
</method>
<method selector="methodSignature">
<retval></retval>
</method>
<method selector="retainArguments">
<retval></retval>
</method>
<method selector="selector">
<retval></retval>
</method>
<method selector="setArgument:atIndex:">
<arg name="argumentLocation"></arg>
<arg name="idx"></arg>
<retval></retval>
</method>
<method selector="setReturnValue:">
<arg name="retLoc"></arg>
<retval></retval>
</method>
<method selector="setSelector:">
<arg name="selector"></arg>
<retval></retval>
</method>
<method selector="setTarget:">
<arg name="target"></arg>
<retval></retval>
</method>
<method selector="target">
<retval></retval>
</method>
</class>
<class name="NSInvocationOperation" swt_superclass="NSOperation">
<method selector="initWithInvocation:">
<arg name="inv"></arg>
<retval></retval>
</method>
<method selector="initWithTarget:selector:object:">
<arg name="target"></arg>
<arg name="sel"></arg>
<arg name="arg"></arg>
<retval></retval>
</method>
<method selector="invocation">
<retval></retval>
</method>
<method selector="result">
<retval></retval>
</method>
</class>
<class name="NSKeyedArchiver" swt_gen="mixed" swt_superclass="NSCoder">
<method class_method="true" selector="archiveRootObject:toFile:">
<arg name="rootObject"></arg>
<arg name="path"></arg>
<retval></retval>
</method>
<method class_method="true" selector="archivedDataWithRootObject:" swt_gen="true">
<arg name="rootObject" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="classNameForClass:">
<arg name="cls"></arg>
<retval></retval>
</method>
<method class_method="true" selector="classNameForClass:">
<arg name="cls"></arg>
<retval></retval>
</method>
<method selector="delegate">
<retval></retval>
</method>
<method selector="encodeBool:forKey:">
<arg name="boolv"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="encodeBytes:length:forKey:">
<arg name="bytesp"></arg>
<arg name="lenv"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="encodeConditionalObject:forKey:">
<arg name="objv"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="encodeDouble:forKey:">
<arg name="realv"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="encodeFloat:forKey:">
<arg name="realv"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="encodeInt32:forKey:">
<arg name="intv"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="encodeInt64:forKey:">
<arg name="intv"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="encodeInt:forKey:">
<arg name="intv"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="encodeObject:forKey:">
<arg name="objv"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="finishEncoding">
<retval></retval>
</method>
<method selector="initForWritingWithMutableData:">
<arg name="data"></arg>
<retval></retval>
</method>
<method selector="outputFormat">
<retval></retval>
</method>
<method class_method="true" selector="setClassName:forClass:">
<arg name="codedName"></arg>
<arg name="cls"></arg>
<retval></retval>
</method>
<method selector="setClassName:forClass:">
<arg name="codedName"></arg>
<arg name="cls"></arg>
<retval></retval>
</method>
<method selector="setDelegate:">
<arg name="delegate"></arg>
<retval></retval>
</method>
<method selector="setOutputFormat:">
<arg name="format"></arg>
<retval></retval>
</method>
</class>
<class name="NSKeyedUnarchiver" swt_gen="mixed" swt_superclass="NSCoder">
<method selector="classForClassName:">
<arg name="codedName"></arg>
<retval></retval>
</method>
<method class_method="true" selector="classForClassName:">
<arg name="codedName"></arg>
<retval></retval>
</method>
<method selector="containsValueForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="decodeBoolForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="decodeBytesForKey:returnedLength:">
<arg name="key"></arg>
<arg name="lengthp"></arg>
<retval></retval>
</method>
<method selector="decodeDoubleForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="decodeFloatForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="decodeInt32ForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="decodeInt64ForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="decodeIntForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="decodeObjectForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="delegate">
<retval></retval>
</method>
<method selector="finishDecoding">
<retval></retval>
</method>
<method selector="initForReadingWithData:">
<arg name="data"></arg>
<retval></retval>
</method>
<method selector="setClass:forClassName:">
<arg name="cls"></arg>
<arg name="codedName"></arg>
<retval></retval>
</method>
<method class_method="true" selector="setClass:forClassName:">
<arg name="cls"></arg>
<arg name="codedName"></arg>
<retval></retval>
</method>
<method selector="setDelegate:">
<arg name="delegate"></arg>
<retval></retval>
</method>
<method class_method="true" selector="unarchiveObjectWithData:" swt_gen="true">
<arg name="data" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="unarchiveObjectWithFile:">
<arg name="path"></arg>
<retval></retval>
</method>
</class>
<class name="NSLocale">
<method class_method="true" selector="ISOCountryCodes">
<retval></retval>
</method>
<method class_method="true" selector="ISOCurrencyCodes">
<retval></retval>
</method>
<method class_method="true" selector="ISOLanguageCodes">
<retval></retval>
</method>
<method class_method="true" selector="autoupdatingCurrentLocale">
<retval></retval>
</method>
<method class_method="true" selector="availableLocaleIdentifiers">
<retval></retval>
</method>
<method class_method="true" selector="canonicalLocaleIdentifierFromString:">
<arg name="string"></arg>
<retval></retval>
</method>
<method class_method="true" selector="commonISOCurrencyCodes">
<retval></retval>
</method>
<method class_method="true" selector="componentsFromLocaleIdentifier:">
<arg name="string"></arg>
<retval></retval>
</method>
<method class_method="true" selector="currentLocale">
<retval></retval>
</method>
<method selector="displayNameForKey:value:">
<arg name="key"></arg>
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="initWithLocaleIdentifier:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="localeIdentifier">
<retval></retval>
</method>
<method class_method="true" selector="localeIdentifierFromComponents:">
<arg name="dict"></arg>
<retval></retval>
</method>
<method selector="objectForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method class_method="true" selector="preferredLanguages">
<retval></retval>
</method>
<method class_method="true" selector="systemLocale">
<retval></retval>
</method>
</class>
<class name="NSLock">
<method selector="lockBeforeDate:">
<arg name="limit"></arg>
<retval></retval>
</method>
<method selector="name">
<retval></retval>
</method>
<method selector="setName:">
<arg name="n"></arg>
<retval></retval>
</method>
<method selector="tryLock">
<retval></retval>
</method>
</class>
<class name="NSLogicalTest" swt_superclass="NSScriptWhoseTest">
<method selector="initAndTestWithTests:">
<arg name="subTests"></arg>
<retval></retval>
</method>
<method selector="initNotTestWithTest:">
<arg name="subTest"></arg>
<retval></retval>
</method>
<method selector="initOrTestWithTests:">
<arg name="subTests"></arg>
<retval></retval>
</method>
</class>
<class name="NSMachBootstrapServer" swt_superclass="NSPortNameServer">
<method selector="portForName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="portForName:host:">
<arg name="name"></arg>
<arg name="host"></arg>
<retval></retval>
</method>
<method selector="registerPort:name:">
<arg name="port"></arg>
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="servicePortWithName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method class_method="true" selector="sharedInstance">
<retval></retval>
</method>
</class>
<class name="NSMachPort" swt_superclass="NSPort">
<method selector="initWithMachPort:">
<arg name="machPort"></arg>
<retval></retval>
</method>
<method selector="initWithMachPort:options:">
<arg name="machPort"></arg>
<arg name="f"></arg>
<retval></retval>
</method>
<method selector="machPort">
<retval></retval>
</method>
<method class_method="true" selector="portWithMachPort:">
<arg name="machPort"></arg>
<retval></retval>
</method>
<method class_method="true" selector="portWithMachPort:options:">
<arg name="machPort"></arg>
<arg name="f"></arg>
<retval></retval>
</method>
<method selector="removeFromRunLoop:forMode:">
<arg name="runLoop"></arg>
<arg name="mode"></arg>
<retval></retval>
</method>
<method selector="scheduleInRunLoop:forMode:">
<arg name="runLoop"></arg>
<arg name="mode"></arg>
<retval></retval>
</method>
</class>
<class name="NSMapTable">
<method selector="count">
<retval></retval>
</method>
<method selector="dictionaryRepresentation">
<retval></retval>
</method>
<method selector="initWithKeyOptions:valueOptions:capacity:">
<arg name="keyOptions"></arg>
<arg name="valueOptions"></arg>
<arg name="initialCapacity"></arg>
<retval></retval>
</method>
<method selector="initWithKeyPointerFunctions:valuePointerFunctions:capacity:">
<arg name="keyFunctions"></arg>
<arg name="valueFunctions"></arg>
<arg name="initialCapacity"></arg>
<retval></retval>
</method>
<method selector="keyEnumerator">
<retval></retval>
</method>
<method selector="keyPointerFunctions">
<retval></retval>
</method>
<method class_method="true" selector="mapTableWithKeyOptions:valueOptions:">
<arg name="keyOptions"></arg>
<arg name="valueOptions"></arg>
<retval></retval>
</method>
<method class_method="true" selector="mapTableWithStrongToStrongObjects">
<retval></retval>
</method>
<method class_method="true" selector="mapTableWithStrongToWeakObjects">
<retval></retval>
</method>
<method class_method="true" selector="mapTableWithWeakToStrongObjects">
<retval></retval>
</method>
<method class_method="true" selector="mapTableWithWeakToWeakObjects">
<retval></retval>
</method>
<method selector="objectEnumerator">
<retval></retval>
</method>
<method selector="objectForKey:">
<arg name="aKey"></arg>
<retval></retval>
</method>
<method selector="removeAllObjects">
<retval></retval>
</method>
<method selector="removeObjectForKey:">
<arg name="aKey"></arg>
<retval></retval>
</method>
<method selector="setObject:forKey:">
<arg name="anObject"></arg>
<arg name="aKey"></arg>
<retval></retval>
</method>
<method selector="valuePointerFunctions">
<retval></retval>
</method>
</class>
<class name="NSMessagePortNameServer" swt_superclass="NSPortNameServer">
<method selector="portForName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="portForName:host:">
<arg name="name"></arg>
<arg name="host"></arg>
<retval></retval>
</method>
<method class_method="true" selector="sharedInstance">
<retval></retval>
</method>
</class>
<class name="NSMetadataItem">
<method selector="attributes">
<retval></retval>
</method>
<method selector="valueForAttribute:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="valuesForAttributes:">
<arg name="keys"></arg>
<retval></retval>
</method>
</class>
<class name="NSMetadataQuery">
<method selector="delegate">
<retval></retval>
</method>
<method selector="disableUpdates">
<retval></retval>
</method>
<method selector="enableUpdates">
<retval></retval>
</method>
<method selector="groupedResults">
<retval></retval>
</method>
<method selector="groupingAttributes">
<retval></retval>
</method>
<method selector="indexOfResult:">
<arg name="result"></arg>
<retval></retval>
</method>
<method selector="init">
<retval></retval>
</method>
<method selector="isGathering">
<retval></retval>
</method>
<method selector="isStarted">
<retval></retval>
</method>
<method selector="isStopped">
<retval></retval>
</method>
<method selector="notificationBatchingInterval">
<retval></retval>
</method>
<method selector="predicate">
<retval></retval>
</method>
<method selector="resultAtIndex:">
<arg name="idx"></arg>
<retval></retval>
</method>
<method selector="resultCount">
<retval></retval>
</method>
<method selector="results">
<retval></retval>
</method>
<method selector="searchScopes">
<retval></retval>
</method>
<method selector="setDelegate:">
<arg name="delegate"></arg>
<retval></retval>
</method>
<method selector="setGroupingAttributes:">
<arg name="attrs"></arg>
<retval></retval>
</method>
<method selector="setNotificationBatchingInterval:">
<arg name="ti"></arg>
<retval></retval>
</method>
<method selector="setPredicate:">
<arg name="predicate"></arg>
<retval></retval>
</method>
<method selector="setSearchScopes:">
<arg name="scopes"></arg>
<retval></retval>
</method>
<method selector="setSortDescriptors:">
<arg name="descriptors"></arg>
<retval></retval>
</method>
<method selector="setValueListAttributes:">
<arg name="attrs"></arg>
<retval></retval>
</method>
<method selector="sortDescriptors">
<retval></retval>
</method>
<method selector="startQuery">
<retval></retval>
</method>
<method selector="stopQuery">
<retval></retval>
</method>
<method selector="valueListAttributes">
<retval></retval>
</method>
<method selector="valueLists">
<retval></retval>
</method>
<method selector="valueOfAttribute:forResultAtIndex:">
<arg name="attrName"></arg>
<arg name="idx"></arg>
<retval></retval>
</method>
</class>
<class name="NSMetadataQueryAttributeValueTuple">
<method selector="attribute">
<retval></retval>
</method>
<method selector="count">
<retval></retval>
</method>
<method selector="value">
<retval></retval>
</method>
</class>
<class name="NSMetadataQueryResultGroup">
<method selector="attribute">
<retval></retval>
</method>
<method selector="resultAtIndex:">
<arg name="idx"></arg>
<retval></retval>
</method>
<method selector="resultCount">
<retval></retval>
</method>
<method selector="results">
<retval></retval>
</method>
<method selector="subgroups">
<retval></retval>
</method>
<method selector="value">
<retval></retval>
</method>
</class>
<class name="NSMethodSignature">
<method selector="frameLength">
<retval></retval>
</method>
<method selector="getArgumentTypeAtIndex:">
<arg name="idx"></arg>
<retval></retval>
</method>
<method selector="isOneway">
<retval></retval>
</method>
<method selector="methodReturnLength">
<retval></retval>
</method>
<method selector="methodReturnType">
<retval></retval>
</method>
<method selector="numberOfArguments">
<retval></retval>
</method>
<method class_method="true" selector="signatureWithObjCTypes:">
<arg name="types"></arg>
<retval></retval>
</method>
</class>
<class name="NSMoveCommand" swt_superclass="NSScriptCommand">
<method selector="keySpecifier">
<retval></retval>
</method>
<method selector="setReceiversSpecifier:">
<arg name="receiversRef"></arg>
<retval></retval>
</method>
</class>
<class name="NSMutableArray" swt_gen="mixed" swt_superclass="NSArray">
<method selector="addObject:" swt_gen="true">
<arg name="anObject" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="addObjectsFromArray:" swt_gen="true">
<arg name="otherArray" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="arrayWithCapacity:" swt_gen="true">
<arg name="numItems" swt_gen="true"></arg>
<retval swt_gen="true" swt_java_type="NSMutableArray"></retval>
</method>
<method selector="exchangeObjectAtIndex:withObjectAtIndex:">
<arg name="idx1"></arg>
<arg name="idx2"></arg>
<retval></retval>
</method>
<method selector="filterUsingPredicate:">
<arg name="predicate"></arg>
<retval></retval>
</method>
<method selector="initWithCapacity:" swt_gen="true">
<arg name="numItems" swt_gen="true"></arg>
<retval swt_gen="true" swt_java_type="NSMutableArray"></retval>
</method>
<method selector="insertObject:atIndex:">
<arg name="anObject"></arg>
<arg name="index"></arg>
<retval></retval>
</method>
<method selector="insertObjects:atIndexes:">
<arg name="objects"></arg>
<arg name="indexes"></arg>
<retval></retval>
</method>
<method selector="removeAllObjects">
<retval></retval>
</method>
<method selector="removeLastObject" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="removeObject:" swt_gen="true">
<arg name="anObject" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="removeObject:inRange:">
<arg name="anObject"></arg>
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="removeObjectAtIndex:" swt_gen="true">
<arg name="index" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="removeObjectIdenticalTo:" swt_gen="true">
<arg name="anObject" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="removeObjectIdenticalTo:inRange:">
<arg name="anObject"></arg>
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="removeObjectsAtIndexes:">
<arg name="indexes"></arg>
<retval></retval>
</method>
<method selector="removeObjectsFromIndices:numIndices:">
<arg name="indices"></arg>
<arg name="cnt"></arg>
<retval></retval>
</method>
<method selector="removeObjectsInArray:">
<arg name="otherArray"></arg>
<retval></retval>
</method>
<method selector="removeObjectsInRange:">
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="replaceObjectAtIndex:withObject:">
<arg name="index"></arg>
<arg name="anObject"></arg>
<retval></retval>
</method>
<method selector="replaceObjectsAtIndexes:withObjects:">
<arg name="indexes"></arg>
<arg name="objects"></arg>
<retval></retval>
</method>
<method selector="replaceObjectsInRange:withObjectsFromArray:">
<arg name="range"></arg>
<arg name="otherArray"></arg>
<retval></retval>
</method>
<method selector="replaceObjectsInRange:withObjectsFromArray:range:">
<arg name="range"></arg>
<arg name="otherArray"></arg>
<arg name="otherRange"></arg>
<retval></retval>
</method>
<method selector="setArray:">
<arg name="otherArray"></arg>
<retval></retval>
</method>
<method selector="sortUsingDescriptors:">
<arg name="sortDescriptors"></arg>
<retval></retval>
</method>
<method selector="sortUsingFunction:context:">
<arg name="compare">
<arg></arg>
<arg></arg>
<arg></arg>
<retval></retval>
</arg>
<arg name="context"></arg>
<retval></retval>
</method>
<method selector="sortUsingSelector:">
<arg name="comparator"></arg>
<retval></retval>
</method>
</class>
<class name="NSMutableAttributedString" swt_gen="mixed" swt_superclass="NSAttributedString">
<method selector="addAttribute:value:range:" swt_gen="true">
<arg name="name" swt_gen="true"></arg>
<arg name="value" swt_gen="true"></arg>
<arg name="range" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="addAttributes:range:">
<arg name="attrs"></arg>
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="appendAttributedString:">
<arg name="attrString"></arg>
<retval></retval>
</method>
<method selector="beginEditing" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="deleteCharactersInRange:">
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="endEditing" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="insertAttributedString:atIndex:">
<arg name="attrString"></arg>
<arg name="loc"></arg>
<retval></retval>
</method>
<method selector="mutableString">
<retval></retval>
</method>
<method selector="removeAttribute:range:">
<arg name="name"></arg>
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="replaceCharactersInRange:withAttributedString:">
<arg name="range"></arg>
<arg name="attrString"></arg>
<retval></retval>
</method>
<method selector="replaceCharactersInRange:withString:">
<arg name="range"></arg>
<arg name="str"></arg>
<retval></retval>
</method>
<method selector="setAttributedString:" swt_gen="true">
<arg name="attrString" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="setAttributes:range:">
<arg name="attrs"></arg>
<arg name="range"></arg>
<retval></retval>
</method>
</class>
<class name="NSMutableCharacterSet" swt_superclass="NSCharacterSet">
<method selector="addCharactersInRange:">
<arg name="aRange"></arg>
<retval></retval>
</method>
<method selector="addCharactersInString:">
<arg name="aString"></arg>
<retval></retval>
</method>
<method selector="formIntersectionWithCharacterSet:">
<arg name="otherSet"></arg>
<retval></retval>
</method>
<method selector="formUnionWithCharacterSet:">
<arg name="otherSet"></arg>
<retval></retval>
</method>
<method selector="invert">
<retval></retval>
</method>
<method selector="removeCharactersInRange:">
<arg name="aRange"></arg>
<retval></retval>
</method>
<method selector="removeCharactersInString:">
<arg name="aString"></arg>
<retval></retval>
</method>
</class>
<class name="NSMutableData" swt_superclass="NSData">
<method selector="appendBytes:length:">
<arg name="bytes"></arg>
<arg name="length"></arg>
<retval></retval>
</method>
<method selector="appendData:">
<arg name="other"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dataWithCapacity:">
<arg name="aNumItems"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dataWithLength:">
<arg name="length"></arg>
<retval></retval>
</method>
<method selector="increaseLengthBy:">
<arg name="extraLength"></arg>
<retval></retval>
</method>
<method selector="initWithCapacity:">
<arg name="capacity"></arg>
<retval></retval>
</method>
<method selector="initWithLength:">
<arg name="length"></arg>
<retval></retval>
</method>
<method selector="mutableBytes">
<retval></retval>
</method>
<method selector="replaceBytesInRange:withBytes:">
<arg name="range"></arg>
<arg name="bytes"></arg>
<retval></retval>
</method>
<method selector="replaceBytesInRange:withBytes:length:">
<arg name="range"></arg>
<arg name="replacementBytes"></arg>
<arg name="replacementLength"></arg>
<retval></retval>
</method>
<method selector="resetBytesInRange:">
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="setData:">
<arg name="data"></arg>
<retval></retval>
</method>
<method selector="setLength:">
<arg name="length"></arg>
<retval></retval>
</method>
</class>
<class name="NSMutableDictionary" swt_gen="mixed" swt_superclass="NSDictionary">
<method selector="addEntriesFromDictionary:">
<arg name="otherDictionary"></arg>
<retval></retval>
</method>
<method class_method="true" selector="dictionaryWithCapacity:" swt_gen="true">
<arg name="numItems" swt_gen="true"></arg>
<retval swt_gen="true" swt_java_type="NSMutableDictionary"></retval>
</method>
<method selector="initWithCapacity:" swt_gen="true">
<arg name="numItems" swt_gen="true"></arg>
<retval swt_gen="true" swt_java_type="NSMutableDictionary"></retval>
</method>
<method selector="removeAllObjects">
<retval></retval>
</method>
<method selector="removeObjectForKey:">
<arg name="aKey"></arg>
<retval></retval>
</method>
<method selector="removeObjectsForKeys:">
<arg name="keyArray"></arg>
<retval></retval>
</method>
<method selector="setDictionary:" swt_gen="true">
<arg name="otherDictionary" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="setObject:forKey:" swt_gen="true">
<arg name="anObject" swt_gen="true"></arg>
<arg name="aKey" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="setValue:forKey:" swt_gen="true">
<arg name="value" swt_gen="true"></arg>
<arg name="key" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
</class>
<class name="NSMutableIndexSet" swt_gen="mixed" swt_superclass="NSIndexSet">
<method selector="addIndex:" swt_gen="true">
<arg name="value" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="addIndexes:">
<arg name="indexSet"></arg>
<retval></retval>
</method>
<method selector="addIndexesInRange:">
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="removeAllIndexes">
<retval></retval>
</method>
<method selector="removeIndex:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="removeIndexes:">
<arg name="indexSet"></arg>
<retval></retval>
</method>
<method selector="removeIndexesInRange:">
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="shiftIndexesStartingAtIndex:by:">
<arg name="index"></arg>
<arg name="delta"></arg>
<retval></retval>
</method>
</class>
<class name="NSMutableSet" swt_gen="mixed" swt_superclass="NSSet">
<method selector="addObject:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="addObjectsFromArray:" swt_gen="true">
<arg name="array" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="filterUsingPredicate:">
<arg name="predicate"></arg>
<retval></retval>
</method>
<method selector="initWithCapacity:">
<arg name="numItems"></arg>
<retval></retval>
</method>
<method selector="intersectSet:">
<arg name="otherSet"></arg>
<retval></retval>
</method>
<method selector="minusSet:">
<arg name="otherSet"></arg>
<retval></retval>
</method>
<method selector="removeAllObjects">
<retval></retval>
</method>
<method selector="removeObject:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="setSet:">
<arg name="otherSet"></arg>
<retval></retval>
</method>
<method class_method="true" selector="setWithCapacity:">
<arg name="numItems"></arg>
<retval></retval>
</method>
<method selector="unionSet:">
<arg name="otherSet"></arg>
<retval></retval>
</method>
</class>
<class name="NSMutableString" swt_gen="mixed" swt_superclass="NSString">
<method selector="appendFormat:">
<arg name="appendFormat"></arg>
<retval></retval>
</method>
<method selector="appendString:" swt_gen="true">
<arg name="aString" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="deleteCharactersInRange:">
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="initWithCapacity:">
<arg name="capacity"></arg>
<retval></retval>
</method>
<method selector="insertString:atIndex:">
<arg name="aString"></arg>
<arg name="loc"></arg>
<retval></retval>
</method>
<method selector="replaceCharactersInRange:withString:">
<arg name="range"></arg>
<arg name="aString"></arg>
<retval></retval>
</method>
<method selector="replaceOccurrencesOfString:withString:options:range:">
<arg name="target"></arg>
<arg name="replacement"></arg>
<arg name="options"></arg>
<arg name="searchRange"></arg>
<retval></retval>
</method>
<method selector="setString:">
<arg name="aString"></arg>
<retval></retval>
</method>
<method class_method="true" selector="stringWithCapacity:">
<arg name="capacity"></arg>
<retval></retval>
</method>
</class>
<class name="NSMutableURLRequest" swt_gen="mixed" swt_superclass="NSURLRequest">
<method selector="addValue:forHTTPHeaderField:">
<arg name="value"></arg>
<arg name="field"></arg>
<retval></retval>
</method>
<method selector="setAllHTTPHeaderFields:">
<arg name="headerFields"></arg>
<retval></retval>
</method>
<method selector="setCachePolicy:">
<arg name="policy"></arg>
<retval></retval>
</method>
<method selector="setHTTPBody:">
<arg name="data"></arg>
<retval></retval>
</method>
<method selector="setHTTPBodyStream:">
<arg name="inputStream"></arg>
<retval></retval>
</method>
<method selector="setHTTPMethod:">
<arg name="method"></arg>
<retval></retval>
</method>
<method selector="setHTTPShouldHandleCookies:">
<arg name="should"></arg>
<retval></retval>
</method>
<method selector="setMainDocumentURL:">
<arg name="URL"></arg>
<retval></retval>
</method>
<method selector="setTimeoutInterval:">
<arg name="seconds"></arg>
<retval></retval>
</method>
<method selector="setURL:" swt_gen="true">
<arg name="URL" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="setValue:forHTTPHeaderField:">
<arg name="value"></arg>
<arg name="field"></arg>
<retval></retval>
</method>
</class>
<class name="NSNameSpecifier" swt_superclass="NSScriptObjectSpecifier">
<method selector="initWithContainerClassDescription:containerSpecifier:key:name:">
<arg name="classDesc"></arg>
<arg name="container"></arg>
<arg name="property"></arg>
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="name">
<retval></retval>
</method>
<method selector="setName:">
<arg name="name"></arg>
<retval></retval>
</method>
</class>
<class name="NSNetService">
<method selector="TXTRecordData">
<retval></retval>
</method>
<method selector="addresses">
<retval></retval>
</method>
<method class_method="true" selector="dataFromTXTRecordDictionary:">
<arg name="txtDictionary"></arg>
<retval></retval>
</method>
<method selector="delegate">
<retval></retval>
</method>
<method class_method="true" selector="dictionaryFromTXTRecordData:">
<arg name="txtData"></arg>
<retval></retval>
</method>
<method selector="domain">
<retval></retval>
</method>
<method selector="getInputStream:outputStream:">
<arg name="inputStream"></arg>
<arg name="outputStream"></arg>
<retval></retval>
</method>
<method selector="hostName">
<retval></retval>
</method>
<method selector="initWithDomain:type:name:">
<arg name="domain"></arg>
<arg name="type"></arg>
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="initWithDomain:type:name:port:">
<arg name="domain"></arg>
<arg name="type"></arg>
<arg name="name"></arg>
<arg name="port"></arg>
<retval></retval>
</method>
<method selector="name">
<retval></retval>
</method>
<method selector="port">
<retval></retval>
</method>
<method selector="protocolSpecificInformation">
<retval></retval>
</method>
<method selector="publish">
<retval></retval>
</method>
<method selector="publishWithOptions:">
<arg name="options"></arg>
<retval></retval>
</method>
<method selector="removeFromRunLoop:forMode:">
<arg name="aRunLoop"></arg>
<arg name="mode"></arg>
<retval></retval>
</method>
<method selector="resolve">
<retval></retval>
</method>
<method selector="resolveWithTimeout:">
<arg name="timeout"></arg>
<retval></retval>
</method>
<method selector="scheduleInRunLoop:forMode:">
<arg name="aRunLoop"></arg>
<arg name="mode"></arg>
<retval></retval>
</method>
<method selector="setDelegate:">
<arg name="delegate"></arg>
<retval></retval>
</method>
<method selector="setProtocolSpecificInformation:">
<arg name="specificInformation"></arg>
<retval></retval>
</method>
<method selector="setTXTRecordData:">
<arg name="recordData"></arg>
<retval></retval>
</method>
<method selector="startMonitoring">
<retval></retval>
</method>
<method selector="stop">
<retval></retval>
</method>
<method selector="stopMonitoring">
<retval></retval>
</method>
<method selector="type">
<retval></retval>
</method>
</class>
<class name="NSNetServiceBrowser">
<method selector="delegate">
<retval></retval>
</method>
<method selector="init">
<retval></retval>
</method>
<method selector="removeFromRunLoop:forMode:">
<arg name="aRunLoop"></arg>
<arg name="mode"></arg>
<retval></retval>
</method>
<method selector="scheduleInRunLoop:forMode:">
<arg name="aRunLoop"></arg>
<arg name="mode"></arg>
<retval></retval>
</method>
<method selector="searchForAllDomains">
<retval></retval>
</method>
<method selector="searchForBrowsableDomains">
<retval></retval>
</method>
<method selector="searchForRegistrationDomains">
<retval></retval>
</method>
<method selector="searchForServicesOfType:inDomain:">
<arg name="type"></arg>
<arg name="domainString"></arg>
<retval></retval>
</method>
<method selector="setDelegate:">
<arg name="delegate"></arg>
<retval></retval>
</method>
<method selector="stop">
<retval></retval>
</method>
</class>
<class name="NSNotification" swt_gen="mixed">
<method selector="name">
<retval></retval>
</method>
<method class_method="true" selector="notificationWithName:object:">
<arg name="aName"></arg>
<arg name="anObject"></arg>
<retval></retval>
</method>
<method class_method="true" selector="notificationWithName:object:userInfo:">
<arg name="aName"></arg>
<arg name="anObject"></arg>
<arg name="aUserInfo"></arg>
<retval></retval>
</method>
<method selector="object" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="userInfo" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
</class>
<class name="NSNotificationCenter" swt_gen="mixed">
<method selector="addObserver:selector:name:object:" swt_gen="true">
<arg name="observer" swt_gen="true"></arg>
<arg name="aSelector" swt_gen="true"></arg>
<arg name="aName" swt_gen="true"></arg>
<arg name="anObject" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="defaultCenter" swt_gen="true">
<retval swt_gen="true" swt_java_type="NSNotificationCenter"></retval>
</method>
<method selector="postNotification:">
<arg name="notification"></arg>
<retval></retval>
</method>
<method selector="postNotificationName:object:">
<arg name="aName"></arg>
<arg name="anObject"></arg>
<retval></retval>
</method>
<method selector="postNotificationName:object:userInfo:">
<arg name="aName"></arg>
<arg name="anObject"></arg>
<arg name="aUserInfo"></arg>
<retval></retval>
</method>
<method selector="removeObserver:" swt_gen="true">
<arg name="observer" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="removeObserver:name:object:">
<arg name="observer"></arg>
<arg name="aName"></arg>
<arg name="anObject"></arg>
<retval></retval>
</method>
</class>
<class name="NSNotificationQueue">
<method class_method="true" selector="defaultQueue">
<retval></retval>
</method>
<method selector="dequeueNotificationsMatching:coalesceMask:">
<arg name="notification"></arg>
<arg name="coalesceMask"></arg>
<retval></retval>
</method>
<method selector="enqueueNotification:postingStyle:">
<arg name="notification"></arg>
<arg name="postingStyle"></arg>
<retval></retval>
</method>
<method selector="enqueueNotification:postingStyle:coalesceMask:forModes:">
<arg name="notification"></arg>
<arg name="postingStyle"></arg>
<arg name="coalesceMask"></arg>
<arg name="modes"></arg>
<retval></retval>
</method>
<method selector="initWithNotificationCenter:">
<arg name="notificationCenter"></arg>
<retval></retval>
</method>
</class>
<class name="NSNull">
<method class_method="true" selector="null">
<retval></retval>
</method>
</class>
<class name="NSNumber" swt_gen="mixed" swt_superclass="NSValue">
<method selector="boolValue" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="charValue">
<retval></retval>
</method>
<method selector="compare:">
<arg name="otherNumber"></arg>
<retval></retval>
</method>
<method selector="decimalValue">
<retval></retval>
</method>
<method selector="descriptionWithLocale:">
<arg name="locale"></arg>
<retval></retval>
</method>
<method selector="doubleValue" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="floatValue" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="initWithBool:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="initWithChar:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="initWithDouble:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="initWithFloat:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="initWithInt:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="initWithInteger:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="initWithLong:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="initWithLongLong:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="initWithShort:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="initWithUnsignedChar:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="initWithUnsignedInt:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="initWithUnsignedInteger:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="initWithUnsignedLong:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="initWithUnsignedLongLong:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="initWithUnsignedShort:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="intValue" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="integerValue" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="isEqualToNumber:">
<arg name="number"></arg>
<retval></retval>
</method>
<method selector="longLongValue">
<retval></retval>
</method>
<method selector="longValue">
<retval></retval>
</method>
<method class_method="true" selector="numberWithBool:" swt_gen="true">
<arg name="value" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="numberWithChar:">
<arg name="value"></arg>
<retval></retval>
</method>
<method class_method="true" selector="numberWithDouble:" swt_gen="true">
<arg name="value" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="numberWithFloat:">
<arg name="value"></arg>
<retval></retval>
</method>
<method class_method="true" selector="numberWithInt:" swt_gen="true">
<arg name="value" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="numberWithInteger:" swt_gen="true">
<arg name="value" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="numberWithLong:">
<arg name="value"></arg>
<retval></retval>
</method>
<method class_method="true" selector="numberWithLongLong:">
<arg name="value"></arg>
<retval></retval>
</method>
<method class_method="true" selector="numberWithShort:">
<arg name="value"></arg>
<retval></retval>
</method>
<method class_method="true" selector="numberWithUnsignedChar:">
<arg name="value"></arg>
<retval></retval>
</method>
<method class_method="true" selector="numberWithUnsignedInt:">
<arg name="value"></arg>
<retval></retval>
</method>
<method class_method="true" selector="numberWithUnsignedInteger:">
<arg name="value"></arg>
<retval></retval>
</method>
<method class_method="true" selector="numberWithUnsignedLong:">
<arg name="value"></arg>
<retval></retval>
</method>
<method class_method="true" selector="numberWithUnsignedLongLong:">
<arg name="value"></arg>
<retval></retval>
</method>
<method class_method="true" selector="numberWithUnsignedShort:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="shortValue">
<retval></retval>
</method>
<method selector="stringValue">
<retval></retval>
</method>
<method selector="unsignedCharValue">
<retval></retval>
</method>
<method selector="unsignedIntValue">
<retval></retval>
</method>
<method selector="unsignedIntegerValue">
<retval></retval>
</method>
<method selector="unsignedLongLongValue">
<retval></retval>
</method>
<method selector="unsignedLongValue">
<retval></retval>
</method>
<method selector="unsignedShortValue">
<retval></retval>
</method>
</class>
<class name="NSNumberFormatter" swt_gen="mixed" swt_superclass="NSFormatter">
<method selector="allowsFloats" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="alwaysShowsDecimalSeparator" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="attributedStringForNil">
<retval></retval>
</method>
<method selector="attributedStringForNotANumber">
<retval></retval>
</method>
<method selector="attributedStringForZero">
<retval></retval>
</method>
<method selector="currencyCode">
<retval></retval>
</method>
<method selector="currencyDecimalSeparator">
<retval></retval>
</method>
<method selector="currencyGroupingSeparator">
<retval></retval>
</method>
<method selector="currencySymbol">
<retval></retval>
</method>
<method selector="decimalSeparator" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="defaultFormatterBehavior">
<retval></retval>
</method>
<method selector="exponentSymbol">
<retval></retval>
</method>
<method selector="format">
<retval></retval>
</method>
<method selector="formatWidth">
<retval></retval>
</method>
<method selector="formatterBehavior">
<retval></retval>
</method>
<method selector="generatesDecimalNumbers">
<retval></retval>
</method>
<method selector="getObjectValue:forString:range:error:">
<arg name="obj"></arg>
<arg name="string"></arg>
<arg name="rangep"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="groupingSeparator">
<retval></retval>
</method>
<method selector="groupingSize">
<retval></retval>
</method>
<method selector="hasThousandSeparators">
<retval></retval>
</method>
<method selector="init">
<retval></retval>
</method>
<method selector="internationalCurrencySymbol">
<retval></retval>
</method>
<method selector="isLenient">
<retval></retval>
</method>
<method selector="isPartialStringValidationEnabled">
<retval></retval>
</method>
<method selector="locale">
<retval></retval>
</method>
<method selector="localizesFormat">
<retval></retval>
</method>
<method selector="maximum" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="maximumFractionDigits" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="maximumIntegerDigits" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="maximumSignificantDigits">
<retval></retval>
</method>
<method selector="minimum" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="minimumFractionDigits">
<retval></retval>
</method>
<method selector="minimumIntegerDigits">
<retval></retval>
</method>
<method selector="minimumSignificantDigits">
<retval></retval>
</method>
<method selector="minusSign">
<retval></retval>
</method>
<method selector="multiplier">
<retval></retval>
</method>
<method selector="negativeFormat">
<retval></retval>
</method>
<method selector="negativeInfinitySymbol">
<retval></retval>
</method>
<method selector="negativePrefix">
<retval></retval>
</method>
<method selector="negativeSuffix">
<retval></retval>
</method>
<method selector="nilSymbol">
<retval></retval>
</method>
<method selector="notANumberSymbol">
<retval></retval>
</method>
<method selector="numberFromString:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="numberStyle">
<retval></retval>
</method>
<method selector="paddingCharacter">
<retval></retval>
</method>
<method selector="paddingPosition">
<retval></retval>
</method>
<method selector="perMillSymbol">
<retval></retval>
</method>
<method selector="percentSymbol">
<retval></retval>
</method>
<method selector="plusSign">
<retval></retval>
</method>
<method selector="positiveFormat">
<retval></retval>
</method>
<method selector="positiveInfinitySymbol">
<retval></retval>
</method>
<method selector="positivePrefix">
<retval></retval>
</method>
<method selector="positiveSuffix">
<retval></retval>
</method>
<method selector="roundingBehavior">
<retval></retval>
</method>
<method selector="roundingIncrement">
<retval></retval>
</method>
<method selector="roundingMode">
<retval></retval>
</method>
<method selector="secondaryGroupingSize">
<retval></retval>
</method>
<method selector="setAllowsFloats:" swt_gen="true">
<arg name="flag" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="setAlwaysShowsDecimalSeparator:">
<arg name="b"></arg>
<retval></retval>
</method>
<method selector="setAttributedStringForNil:">
<arg name="newAttributedString"></arg>
<retval></retval>
</method>
<method selector="setAttributedStringForNotANumber:">
<arg name="newAttributedString"></arg>
<retval></retval>
</method>
<method selector="setAttributedStringForZero:">
<arg name="newAttributedString"></arg>
<retval></retval>
</method>
<method selector="setCurrencyCode:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setCurrencyDecimalSeparator:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setCurrencyGroupingSeparator:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setCurrencySymbol:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setDecimalSeparator:">
<arg name="string"></arg>
<retval></retval>
</method>
<method class_method="true" selector="setDefaultFormatterBehavior:">
<arg name="behavior"></arg>
<retval></retval>
</method>
<method selector="setExponentSymbol:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setFormat:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setFormatWidth:">
<arg name="number"></arg>
<retval></retval>
</method>
<method selector="setFormatterBehavior:">
<arg name="behavior"></arg>
<retval></retval>
</method>
<method selector="setGeneratesDecimalNumbers:">
<arg name="b"></arg>
<retval></retval>
</method>
<method selector="setGroupingSeparator:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setGroupingSize:">
<arg name="number"></arg>
<retval></retval>
</method>
<method selector="setHasThousandSeparators:">
<arg name="flag"></arg>
<retval></retval>
</method>
<method selector="setInternationalCurrencySymbol:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setLenient:">
<arg name="b"></arg>
<retval></retval>
</method>
<method selector="setLocale:">
<arg name="locale"></arg>
<retval></retval>
</method>
<method selector="setLocalizesFormat:">
<arg name="flag"></arg>
<retval></retval>
</method>
<method selector="setMaximum:" swt_gen="true">
<arg name="number" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="setMaximumFractionDigits:" swt_gen="true">
<arg name="number" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="setMaximumIntegerDigits:" swt_gen="true">
<arg name="number" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="setMaximumSignificantDigits:">
<arg name="number"></arg>
<retval></retval>
</method>
<method selector="setMinimum:" swt_gen="true">
<arg name="number" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="setMinimumFractionDigits:" swt_gen="true">
<arg name="number" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="setMinimumIntegerDigits:" swt_gen="true">
<arg name="number" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="setMinimumSignificantDigits:">
<arg name="number"></arg>
<retval></retval>
</method>
<method selector="setMinusSign:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setMultiplier:">
<arg name="number"></arg>
<retval></retval>
</method>
<method selector="setNegativeFormat:">
<arg name="format"></arg>
<retval></retval>
</method>
<method selector="setNegativeInfinitySymbol:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setNegativePrefix:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setNegativeSuffix:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setNilSymbol:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setNotANumberSymbol:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setNumberStyle:" swt_gen="true">
<arg name="style" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="setPaddingCharacter:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setPaddingPosition:">
<arg name="position"></arg>
<retval></retval>
</method>
<method selector="setPartialStringValidationEnabled:" swt_gen="true">
<arg name="b" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="setPerMillSymbol:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setPercentSymbol:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setPlusSign:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setPositiveFormat:">
<arg name="format"></arg>
<retval></retval>
</method>
<method selector="setPositiveInfinitySymbol:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setPositivePrefix:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setPositiveSuffix:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setRoundingBehavior:">
<arg name="newRoundingBehavior"></arg>
<retval></retval>
</method>
<method selector="setRoundingIncrement:">
<arg name="number"></arg>
<retval></retval>
</method>
<method selector="setRoundingMode:">
<arg name="mode"></arg>
<retval></retval>
</method>
<method selector="setSecondaryGroupingSize:">
<arg name="number"></arg>
<retval></retval>
</method>
<method selector="setTextAttributesForNegativeInfinity:">
<arg name="newAttributes"></arg>
<retval></retval>
</method>
<method selector="setTextAttributesForNegativeValues:">
<arg name="newAttributes"></arg>
<retval></retval>
</method>
<method selector="setTextAttributesForNil:">
<arg name="newAttributes"></arg>
<retval></retval>
</method>
<method selector="setTextAttributesForNotANumber:">
<arg name="newAttributes"></arg>
<retval></retval>
</method>
<method selector="setTextAttributesForPositiveInfinity:">
<arg name="newAttributes"></arg>
<retval></retval>
</method>
<method selector="setTextAttributesForPositiveValues:">
<arg name="newAttributes"></arg>
<retval></retval>
</method>
<method selector="setTextAttributesForZero:">
<arg name="newAttributes"></arg>
<retval></retval>
</method>
<method selector="setThousandSeparator:">
<arg name="newSeparator"></arg>
<retval></retval>
</method>
<method selector="setUsesGroupingSeparator:">
<arg name="b"></arg>
<retval></retval>
</method>
<method selector="setUsesSignificantDigits:">
<arg name="b"></arg>
<retval></retval>
</method>
<method selector="setZeroSymbol:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="stringFromNumber:">
<arg name="number"></arg>
<retval></retval>
</method>
<method selector="textAttributesForNegativeInfinity">
<retval></retval>
</method>
<method selector="textAttributesForNegativeValues">
<retval></retval>
</method>
<method selector="textAttributesForNil">
<retval></retval>
</method>
<method selector="textAttributesForNotANumber">
<retval></retval>
</method>
<method selector="textAttributesForPositiveInfinity">
<retval></retval>
</method>
<method selector="textAttributesForPositiveValues">
<retval></retval>
</method>
<method selector="textAttributesForZero">
<retval></retval>
</method>
<method selector="thousandSeparator">
<retval></retval>
</method>
<method selector="usesGroupingSeparator">
<retval></retval>
</method>
<method selector="usesSignificantDigits">
<retval></retval>
</method>
<method selector="zeroSymbol">
<retval></retval>
</method>
</class>
<class name="NSObject" swt_gen="mixed">
<method selector="URL:resourceDataDidBecomeAvailable:">
<arg name="sender"></arg>
<arg name="newBytes"></arg>
<retval></retval>
</method>
<method selector="URL:resourceDidFailLoadingWithReason:">
<arg name="sender"></arg>
<arg name="reason"></arg>
<retval></retval>
</method>
<method selector="URLHandle:resourceDataDidBecomeAvailable:">
<arg name="sender"></arg>
<arg name="newBytes"></arg>
<retval></retval>
</method>
<method selector="URLHandle:resourceDidFailLoadingWithReason:">
<arg name="sender"></arg>
<arg name="reason"></arg>
<retval></retval>
</method>
<method selector="URLHandleResourceDidBeginLoading:">
<arg name="sender"></arg>
<retval></retval>
</method>
<method selector="URLHandleResourceDidCancelLoading:">
<arg name="sender"></arg>
<retval></retval>
</method>
<method selector="URLHandleResourceDidFinishLoading:">
<arg name="sender"></arg>
<retval></retval>
</method>
<method selector="URLProtocol:cachedResponseIsValid:">
<arg name="protocol"></arg>
<arg name="cachedResponse"></arg>
<retval></retval>
</method>
<method selector="URLProtocol:didCancelAuthenticationChallenge:">
<arg name="protocol"></arg>
<arg name="challenge"></arg>
<retval></retval>
</method>
<method selector="URLProtocol:didFailWithError:">
<arg name="protocol"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="URLProtocol:didLoadData:">
<arg name="protocol"></arg>
<arg name="data"></arg>
<retval></retval>
</method>
<method selector="URLProtocol:didReceiveAuthenticationChallenge:">
<arg name="protocol"></arg>
<arg name="challenge"></arg>
<retval></retval>
</method>
<method selector="URLProtocol:didReceiveResponse:cacheStoragePolicy:">
<arg name="protocol"></arg>
<arg name="response"></arg>
<arg name="policy"></arg>
<retval></retval>
</method>
<method selector="URLProtocol:wasRedirectedToRequest:redirectResponse:">
<arg name="protocol"></arg>
<arg name="request"></arg>
<arg name="redirectResponse"></arg>
<retval></retval>
</method>
<method selector="URLProtocolDidFinishLoading:">
<arg name="protocol"></arg>
<retval></retval>
</method>
<method selector="URLResourceDidCancelLoading:">
<arg name="sender"></arg>
<retval></retval>
</method>
<method selector="URLResourceDidFinishLoading:">
<arg name="sender"></arg>
<retval></retval>
</method>
<method class_method="true" selector="accessInstanceVariablesDirectly">
<retval></retval>
</method>
<method selector="addObserver:forKeyPath:options:context:">
<arg name="observer"></arg>
<arg name="keyPath"></arg>
<arg name="options"></arg>
<arg name="context"></arg>
<retval></retval>
</method>
<method class_method="true" selector="alloc">
<retval></retval>
</method>
<method class_method="true" selector="allocWithZone:">
<arg name="zone"></arg>
<retval></retval>
</method>
<method selector="archiver:didEncodeObject:">
<arg name="archiver"></arg>
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="archiver:willEncodeObject:">
<arg name="archiver"></arg>
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="archiver:willReplaceObject:withObject:">
<arg name="archiver"></arg>
<arg name="object"></arg>
<arg name="newObject"></arg>
<retval></retval>
</method>
<method selector="archiverDidFinish:">
<arg name="archiver"></arg>
<retval></retval>
</method>
<method selector="archiverWillFinish:">
<arg name="archiver"></arg>
<retval></retval>
</method>
<method selector="attemptRecoveryFromError:optionIndex:">
<arg name="error"></arg>
<arg name="recoveryOptionIndex"></arg>
<retval></retval>
</method>
<method selector="attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:">
<arg name="error"></arg>
<arg name="recoveryOptionIndex"></arg>
<arg name="delegate"></arg>
<arg name="didRecoverSelector"></arg>
<arg name="contextInfo"></arg>
<retval></retval>
</method>
<method selector="attributeKeys">
<retval></retval>
</method>
<method selector="authenticateComponents:withData:">
<arg name="components"></arg>
<arg name="signature"></arg>
<retval></retval>
</method>
<method selector="authenticationDataForComponents:">
<arg name="components"></arg>
<retval></retval>
</method>
<method class_method="true" selector="automaticallyNotifiesObserversForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="autorelease" swt_gen="true">
<retval swt_gen="true" swt_java_type="NSObject"></retval>
</method>
<method selector="awakeAfterUsingCoder:">
<arg name="aDecoder"></arg>
<retval></retval>
</method>
<method selector="cancelAuthenticationChallenge:">
<arg name="challenge"></arg>
<retval></retval>
</method>
<method class_method="true" selector="cancelPreviousPerformRequestsWithTarget:">
<arg name="aTarget"></arg>
<retval></retval>
</method>
<method class_method="true" selector="cancelPreviousPerformRequestsWithTarget:selector:object:">
<arg name="aTarget"></arg>
<arg name="aSelector"></arg>
<arg name="anArgument"></arg>
<retval></retval>
</method>
<method class_method="true" selector="class">
<retval></retval>
</method>
<method selector="class">
<retval></retval>
</method>
<method selector="classCode">
<retval></retval>
</method>
<method selector="classDescription">
<retval></retval>
</method>
<method class_method="true" selector="classFallbacksForKeyedArchiver">
<retval></retval>
</method>
<method selector="classForArchiver">
<retval></retval>
</method>
<method selector="classForCoder">
<retval></retval>
</method>
<method selector="classForKeyedArchiver">
<retval></retval>
</method>
<method class_method="true" selector="classForKeyedUnarchiver">
<retval></retval>
</method>
<method selector="classForPortCoder">
<retval></retval>
</method>
<method selector="className" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="coerceValue:forKey:">
<arg name="value"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="conformsToProtocol:" swt_gen="true">
<arg name="aProtocol" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="conformsToProtocol:">
<arg name="protocol"></arg>
<retval></retval>
</method>
<method selector="connection:didCancelAuthenticationChallenge:">
<arg name="connection"></arg>
<arg name="challenge"></arg>
<retval></retval>
</method>
<method selector="connection:didFailWithError:">
<arg name="connection"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="connection:didReceiveAuthenticationChallenge:">
<arg name="connection"></arg>
<arg name="challenge"></arg>
<retval></retval>
</method>
<method selector="connection:didReceiveData:">
<arg name="connection"></arg>
<arg name="data"></arg>
<retval></retval>
</method>
<method selector="connection:didReceiveResponse:">
<arg name="connection"></arg>
<arg name="response"></arg>
<retval></retval>
</method>
<method selector="connection:handleRequest:">
<arg name="connection"></arg>
<arg name="doreq"></arg>
<retval></retval>
</method>
<method selector="connection:shouldMakeNewConnection:">
<arg name="ancestor"></arg>
<arg name="conn"></arg>
<retval></retval>
</method>
<method selector="connection:willCacheResponse:">
<arg name="connection"></arg>
<arg name="cachedResponse"></arg>
<retval></retval>
</method>
<method selector="connection:willSendRequest:redirectResponse:">
<arg name="connection"></arg>
<arg name="request"></arg>
<arg name="response"></arg>
<retval></retval>
</method>
<method selector="connectionDidFinishLoading:">
<arg name="connection"></arg>
<retval></retval>
</method>
<method selector="continueWithoutCredentialForAuthenticationChallenge:">
<arg name="challenge"></arg>
<retval></retval>
</method>
<method selector="copy" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="copyScriptingValue:forKey:withProperties:">
<arg name="value"></arg>
<arg name="key"></arg>
<arg name="properties"></arg>
<retval></retval>
</method>
<method selector="copyWithZone:">
<arg name="zone"></arg>
<retval></retval>
</method>
<method class_method="true" selector="copyWithZone:">
<arg name="zone"></arg>
<retval></retval>
</method>
<method selector="countByEnumeratingWithState:objects:count:">
<arg name="state"></arg>
<arg name="stackbuf"></arg>
<arg name="len"></arg>
<retval></retval>
</method>
<method selector="createConversationForConnection:">
<arg name="conn"></arg>
<retval></retval>
</method>
<method selector="dealloc">
<retval></retval>
</method>
<method selector="description" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="description">
<retval></retval>
</method>
<method selector="dictionaryWithValuesForKeys:">
<arg name="keys"></arg>
<retval></retval>
</method>
<method selector="didChange:valuesAtIndexes:forKey:">
<arg name="changeKind"></arg>
<arg name="indexes"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="didChangeValueForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="didChangeValueForKey:withSetMutation:usingObjects:">
<arg name="key"></arg>
<arg name="mutationKind"></arg>
<arg name="objects"></arg>
<retval></retval>
</method>
<method selector="doesContain:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="doesNotRecognizeSelector:">
<arg name="aSelector"></arg>
<retval></retval>
</method>
<method selector="download:decideDestinationWithSuggestedFilename:">
<arg name="download"></arg>
<arg name="filename"></arg>
<retval></retval>
</method>
<method selector="download:didCancelAuthenticationChallenge:">
<arg name="download"></arg>
<arg name="challenge"></arg>
<retval></retval>
</method>
<method selector="download:didCreateDestination:">
<arg name="download"></arg>
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="download:didFailWithError:">
<arg name="download"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="download:didReceiveAuthenticationChallenge:">
<arg name="download"></arg>
<arg name="challenge"></arg>
<retval></retval>
</method>
<method selector="download:didReceiveDataOfLength:">
<arg name="download"></arg>
<arg name="length"></arg>
<retval></retval>
</method>
<method selector="download:didReceiveResponse:">
<arg name="download"></arg>
<arg name="response"></arg>
<retval></retval>
</method>
<method selector="download:shouldDecodeSourceDataOfMIMEType:">
<arg name="download"></arg>
<arg name="encodingType"></arg>
<retval></retval>
</method>
<method selector="download:willResumeWithResponse:fromByte:">
<arg name="download"></arg>
<arg name="response"></arg>
<arg name="startingByte"></arg>
<retval></retval>
</method>
<method selector="download:willSendRequest:redirectResponse:">
<arg name="download"></arg>
<arg name="request"></arg>
<arg name="redirectResponse"></arg>
<retval></retval>
</method>
<method selector="downloadDidBegin:">
<arg name="download"></arg>
<retval></retval>
</method>
<method selector="downloadDidFinish:">
<arg name="download"></arg>
<retval></retval>
</method>
<method selector="encodeWithCoder:">
<arg name="aCoder"></arg>
<retval></retval>
</method>
<method selector="exceptionDuringOperation:error:leftOperand:rightOperand:">
<arg name="operation"></arg>
<arg name="error"></arg>
<arg name="leftOperand"></arg>
<arg name="rightOperand"></arg>
<retval></retval>
</method>
<method selector="fileManager:shouldCopyItemAtPath:toPath:">
<arg name="fileManager"></arg>
<arg name="srcPath"></arg>
<arg name="dstPath"></arg>
<retval></retval>
</method>
<method selector="fileManager:shouldLinkItemAtPath:toPath:">
<arg name="fileManager"></arg>
<arg name="srcPath"></arg>
<arg name="dstPath"></arg>
<retval></retval>
</method>
<method selector="fileManager:shouldMoveItemAtPath:toPath:">
<arg name="fileManager"></arg>
<arg name="srcPath"></arg>
<arg name="dstPath"></arg>
<retval></retval>
</method>
<method selector="fileManager:shouldProceedAfterError:">
<arg name="fm"></arg>
<arg name="errorInfo"></arg>
<retval></retval>
</method>
<method selector="fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:">
<arg name="fileManager"></arg>
<arg name="error"></arg>
<arg name="srcPath"></arg>
<arg name="dstPath"></arg>
<retval></retval>
</method>
<method selector="fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:">
<arg name="fileManager"></arg>
<arg name="error"></arg>
<arg name="srcPath"></arg>
<arg name="dstPath"></arg>
<retval></retval>
</method>
<method selector="fileManager:shouldProceedAfterError:movingItemAtPath:toPath:">
<arg name="fileManager"></arg>
<arg name="error"></arg>
<arg name="srcPath"></arg>
<arg name="dstPath"></arg>
<retval></retval>
</method>
<method selector="fileManager:shouldProceedAfterError:removingItemAtPath:">
<arg name="fileManager"></arg>
<arg name="error"></arg>
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="fileManager:shouldRemoveItemAtPath:">
<arg name="fileManager"></arg>
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="fileManager:willProcessPath:">
<arg name="fm"></arg>
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="finalize">
<retval></retval>
</method>
<method selector="forwardInvocation:">
<arg name="anInvocation"></arg>
<retval></retval>
</method>
<method selector="handleMachMessage:">
<arg name="msg"></arg>
<retval></retval>
</method>
<method selector="handlePortMessage:">
<arg name="message"></arg>
<retval></retval>
</method>
<method selector="handleQueryWithUnboundKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="handleTakeValue:forUnboundKey:">
<arg name="value"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="hash">
<retval></retval>
</method>
<method selector="indicesOfObjectsByEvaluatingObjectSpecifier:">
<arg name="specifier"></arg>
<retval></retval>
</method>
<method selector="init" swt_gen="true">
<retval swt_gen="true" swt_java_type="NSObject"></retval>
</method>
<method selector="initWithCoder:">
<arg name="aDecoder"></arg>
<retval></retval>
</method>
<method class_method="true" selector="initialize">
<retval></retval>
</method>
<method selector="insertValue:atIndex:inPropertyWithKey:">
<arg name="value"></arg>
<arg name="index"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="insertValue:inPropertyWithKey:">
<arg name="value"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method class_method="true" selector="instanceMethodForSelector:">
<arg name="aSelector"></arg>
<retval></retval>
</method>
<method class_method="true" selector="instanceMethodSignatureForSelector:">
<arg name="aSelector"></arg>
<retval></retval>
</method>
<method class_method="true" selector="instancesRespondToSelector:">
<arg name="aSelector"></arg>
<retval></retval>
</method>
<method selector="inverseForRelationshipKey:">
<arg name="relationshipKey"></arg>
<retval></retval>
</method>
<method selector="isCaseInsensitiveLike:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="isEqual:" swt_gen="true">
<arg name="object" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="isEqualTo:" swt_gen="true">
<arg name="object" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="isGreaterThan:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="isGreaterThanOrEqualTo:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="isKindOfClass:" swt_gen="true">
<arg name="aClass" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="isLessThan:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="isLessThanOrEqualTo:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="isLike:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="isMemberOfClass:">
<arg name="aClass"></arg>
<retval></retval>
</method>
<method selector="isNotEqualTo:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="isProxy">
<retval></retval>
</method>
<method class_method="true" selector="isSubclassOfClass:">
<arg name="aClass"></arg>
<retval></retval>
</method>
<method class_method="true" selector="keyPathsForValuesAffectingValueForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method class_method="true" selector="load">
<retval></retval>
</method>
<method selector="lock">
<retval></retval>
</method>
<method selector="makeNewConnection:sender:">
<arg name="conn"></arg>
<arg name="ancestor"></arg>
<retval></retval>
</method>
<method selector="metadataQuery:replacementObjectForResultObject:">
<arg name="query"></arg>
<arg name="result"></arg>
<retval></retval>
</method>
<method selector="metadataQuery:replacementValueForAttribute:value:">
<arg name="query"></arg>
<arg name="attrName"></arg>
<arg name="attrValue"></arg>
<retval></retval>
</method>
<method selector="methodForSelector:">
<arg name="aSelector"></arg>
<retval></retval>
</method>
<method selector="methodSignatureForSelector:">
<arg name="aSelector"></arg>
<retval></retval>
</method>
<method selector="mutableArrayValueForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="mutableArrayValueForKeyPath:">
<arg name="keyPath"></arg>
<retval></retval>
</method>
<method selector="mutableCopy">
<retval></retval>
</method>
<method selector="mutableCopyWithZone:">
<arg name="zone"></arg>
<retval></retval>
</method>
<method class_method="true" selector="mutableCopyWithZone:">
<arg name="zone"></arg>
<retval></retval>
</method>
<method selector="mutableSetValueForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="mutableSetValueForKeyPath:">
<arg name="keyPath"></arg>
<retval></retval>
</method>
<method selector="netService:didNotPublish:">
<arg name="sender"></arg>
<arg name="errorDict"></arg>
<retval></retval>
</method>
<method selector="netService:didNotResolve:">
<arg name="sender"></arg>
<arg name="errorDict"></arg>
<retval></retval>
</method>
<method selector="netService:didUpdateTXTRecordData:">
<arg name="sender"></arg>
<arg name="data"></arg>
<retval></retval>
</method>
<method selector="netServiceBrowser:didFindDomain:moreComing:">
<arg name="aNetServiceBrowser"></arg>
<arg name="domainString"></arg>
<arg name="moreComing"></arg>
<retval></retval>
</method>
<method selector="netServiceBrowser:didFindService:moreComing:">
<arg name="aNetServiceBrowser"></arg>
<arg name="aNetService"></arg>
<arg name="moreComing"></arg>
<retval></retval>
</method>
<method selector="netServiceBrowser:didNotSearch:">
<arg name="aNetServiceBrowser"></arg>
<arg name="errorDict"></arg>
<retval></retval>
</method>
<method selector="netServiceBrowser:didRemoveDomain:moreComing:">
<arg name="aNetServiceBrowser"></arg>
<arg name="domainString"></arg>
<arg name="moreComing"></arg>
<retval></retval>
</method>
<method selector="netServiceBrowser:didRemoveService:moreComing:">
<arg name="aNetServiceBrowser"></arg>
<arg name="aNetService"></arg>
<arg name="moreComing"></arg>
<retval></retval>
</method>
<method selector="netServiceBrowserDidStopSearch:">
<arg name="aNetServiceBrowser"></arg>
<retval></retval>
</method>
<method selector="netServiceBrowserWillSearch:">
<arg name="aNetServiceBrowser"></arg>
<retval></retval>
</method>
<method selector="netServiceDidPublish:">
<arg name="sender"></arg>
<retval></retval>
</method>
<method selector="netServiceDidResolveAddress:">
<arg name="sender"></arg>
<retval></retval>
</method>
<method selector="netServiceDidStop:">
<arg name="sender"></arg>
<retval></retval>
</method>
<method selector="netServiceWillPublish:">
<arg name="sender"></arg>
<retval></retval>
</method>
<method selector="netServiceWillResolve:">
<arg name="sender"></arg>
<retval></retval>
</method>
<method class_method="true" selector="new">
<retval></retval>
</method>
<method selector="newScriptingObjectOfClass:forValueForKey:withContentsValue:properties:">
<arg name="objectClass"></arg>
<arg name="key"></arg>
<arg name="contentsValue"></arg>
<arg name="properties"></arg>
<retval></retval>
</method>
<method selector="objectSpecifier">
<retval></retval>
</method>
<method selector="observationInfo">
<retval></retval>
</method>
<method selector="observeValueForKeyPath:ofObject:change:context:">
<arg name="keyPath"></arg>
<arg name="object"></arg>
<arg name="change"></arg>
<arg name="context"></arg>
<retval></retval>
</method>
<method selector="parser:didEndElement:namespaceURI:qualifiedName:">
<arg name="parser"></arg>
<arg name="elementName"></arg>
<arg name="namespaceURI"></arg>
<arg name="qName"></arg>
<retval></retval>
</method>
<method selector="parser:didEndMappingPrefix:">
<arg name="parser"></arg>
<arg name="prefix"></arg>
<retval></retval>
</method>
<method selector="parser:didStartElement:namespaceURI:qualifiedName:attributes:">
<arg name="parser"></arg>
<arg name="elementName"></arg>
<arg name="namespaceURI"></arg>
<arg name="qName"></arg>
<arg name="attributeDict"></arg>
<retval></retval>
</method>
<method selector="parser:didStartMappingPrefix:toURI:">
<arg name="parser"></arg>
<arg name="prefix"></arg>
<arg name="namespaceURI"></arg>
<retval></retval>
</method>
<method selector="parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:">
<arg name="parser"></arg>
<arg name="attributeName"></arg>
<arg name="elementName"></arg>
<arg name="type"></arg>
<arg name="defaultValue"></arg>
<retval></retval>
</method>
<method selector="parser:foundCDATA:">
<arg name="parser"></arg>
<arg name="CDATABlock"></arg>
<retval></retval>
</method>
<method selector="parser:foundCharacters:">
<arg name="parser"></arg>
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="parser:foundComment:">
<arg name="parser"></arg>
<arg name="comment"></arg>
<retval></retval>
</method>
<method selector="parser:foundElementDeclarationWithName:model:">
<arg name="parser"></arg>
<arg name="elementName"></arg>
<arg name="model"></arg>
<retval></retval>
</method>
<method selector="parser:foundExternalEntityDeclarationWithName:publicID:systemID:">
<arg name="parser"></arg>
<arg name="name"></arg>
<arg name="publicID"></arg>
<arg name="systemID"></arg>
<retval></retval>
</method>
<method selector="parser:foundIgnorableWhitespace:">
<arg name="parser"></arg>
<arg name="whitespaceString"></arg>
<retval></retval>
</method>
<method selector="parser:foundInternalEntityDeclarationWithName:value:">
<arg name="parser"></arg>
<arg name="name"></arg>
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="parser:foundNotationDeclarationWithName:publicID:systemID:">
<arg name="parser"></arg>
<arg name="name"></arg>
<arg name="publicID"></arg>
<arg name="systemID"></arg>
<retval></retval>
</method>
<method selector="parser:foundProcessingInstructionWithTarget:data:">
<arg name="parser"></arg>
<arg name="target"></arg>
<arg name="data"></arg>
<retval></retval>
</method>
<method selector="parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:">
<arg name="parser"></arg>
<arg name="name"></arg>
<arg name="publicID"></arg>
<arg name="systemID"></arg>
<arg name="notationName"></arg>
<retval></retval>
</method>
<method selector="parser:parseErrorOccurred:">
<arg name="parser"></arg>
<arg name="parseError"></arg>
<retval></retval>
</method>
<method selector="parser:resolveExternalEntityName:systemID:">
<arg name="parser"></arg>
<arg name="name"></arg>
<arg name="systemID"></arg>
<retval></retval>
</method>
<method selector="parser:validationErrorOccurred:">
<arg name="parser"></arg>
<arg name="validationError"></arg>
<retval></retval>
</method>
<method selector="parserDidEndDocument:">
<arg name="parser"></arg>
<retval></retval>
</method>
<method selector="parserDidStartDocument:">
<arg name="parser"></arg>
<retval></retval>
</method>
<method selector="performSelector:">
<arg name="aSelector"></arg>
<retval></retval>
</method>
<method selector="performSelector:onThread:withObject:waitUntilDone:">
<arg name="aSelector"></arg>
<arg name="thr"></arg>
<arg name="arg"></arg>
<arg name="wait"></arg>
<retval></retval>
</method>
<method selector="performSelector:onThread:withObject:waitUntilDone:modes:">
<arg name="aSelector"></arg>
<arg name="thr"></arg>
<arg name="arg"></arg>
<arg name="wait"></arg>
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="performSelector:withObject:">
<arg name="aSelector"></arg>
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="performSelector:withObject:afterDelay:">
<arg name="aSelector"></arg>
<arg name="anArgument"></arg>
<arg name="delay"></arg>
<retval></retval>
</method>
<method selector="performSelector:withObject:afterDelay:inModes:">
<arg name="aSelector"></arg>
<arg name="anArgument"></arg>
<arg name="delay"></arg>
<arg name="modes"></arg>
<retval></retval>
</method>
<method selector="performSelector:withObject:withObject:">
<arg name="aSelector"></arg>
<arg name="object1"></arg>
<arg name="object2"></arg>
<retval></retval>
</method>
<method selector="performSelectorInBackground:withObject:">
<arg name="aSelector"></arg>
<arg name="arg"></arg>
<retval></retval>
</method>
<method selector="performSelectorOnMainThread:withObject:waitUntilDone:" swt_gen="true">
<arg name="aSelector" swt_gen="true"></arg>
<arg name="arg" swt_gen="true"></arg>
<arg name="wait" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="performSelectorOnMainThread:withObject:waitUntilDone:modes:">
<arg name="aSelector"></arg>
<arg name="arg"></arg>
<arg name="wait"></arg>
<arg name="array"></arg>
<retval></retval>
</method>
<method class_method="true" selector="poseAsClass:">
<arg name="aClass"></arg>
<retval></retval>
</method>
<method selector="release" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="removeObserver:forKeyPath:">
<arg name="observer"></arg>
<arg name="keyPath"></arg>
<retval></retval>
</method>
<method selector="removeValueAtIndex:fromPropertyWithKey:">
<arg name="index"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="replaceValueAtIndex:inPropertyWithKey:withValue:">
<arg name="index"></arg>
<arg name="key"></arg>
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="replacementObjectForArchiver:">
<arg name="archiver"></arg>
<retval></retval>
</method>
<method selector="replacementObjectForCoder:">
<arg name="aCoder"></arg>
<retval></retval>
</method>
<method selector="replacementObjectForKeyedArchiver:">
<arg name="archiver"></arg>
<retval></retval>
</method>
<method selector="replacementObjectForPortCoder:">
<arg name="coder"></arg>
<retval></retval>
</method>
<method class_method="true" selector="resolveClassMethod:">
<arg name="sel"></arg>
<retval></retval>
</method>
<method class_method="true" selector="resolveInstanceMethod:">
<arg name="sel"></arg>
<retval></retval>
</method>
<method selector="respondsToSelector:" swt_gen="true">
<arg name="aSelector" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="retain" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="retainCount" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="roundingMode">
<retval></retval>
</method>
<method selector="scale">
<retval></retval>
</method>
<method selector="scriptingBeginsWith:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="scriptingContains:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="scriptingEndsWith:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="scriptingIsEqualTo:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="scriptingIsGreaterThan:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="scriptingIsGreaterThanOrEqualTo:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="scriptingIsLessThan:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="scriptingIsLessThanOrEqualTo:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="scriptingProperties">
<retval></retval>
</method>
<method selector="scriptingValueForSpecifier:">
<arg name="objectSpecifier"></arg>
<retval></retval>
</method>
<method selector="self">
<retval></retval>
</method>
<method class_method="true" selector="setKeys:triggerChangeNotificationsForDependentKey:">
<arg name="keys"></arg>
<arg name="dependentKey"></arg>
<retval></retval>
</method>
<method selector="setNilValueForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="setObservationInfo:">
<arg name="observationInfo"></arg>
<retval></retval>
</method>
<method selector="setScriptingProperties:">
<arg name="properties"></arg>
<retval></retval>
</method>
<method selector="setValue:forKey:" swt_gen="true">
<arg name="value" swt_gen="true"></arg>
<arg name="key" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="setValue:forKeyPath:">
<arg name="value"></arg>
<arg name="keyPath"></arg>
<retval></retval>
</method>
<method selector="setValue:forUndefinedKey:">
<arg name="value"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="setValuesForKeysWithDictionary:">
<arg name="keyedValues"></arg>
<retval></retval>
</method>
<method class_method="true" selector="setVersion:">
<arg name="aVersion"></arg>
<retval></retval>
</method>
<method selector="spellServer:checkGrammarInString:language:details:">
<arg name="sender"></arg>
<arg name="stringToCheck"></arg>
<arg name="language"></arg>
<arg name="details"></arg>
<retval></retval>
</method>
<method selector="spellServer:didForgetWord:inLanguage:">
<arg name="sender"></arg>
<arg name="word"></arg>
<arg name="language"></arg>
<retval></retval>
</method>
<method selector="spellServer:didLearnWord:inLanguage:">
<arg name="sender"></arg>
<arg name="word"></arg>
<arg name="language"></arg>
<retval></retval>
</method>
<method selector="spellServer:findMisspelledWordInString:language:wordCount:countOnly:">
<arg name="sender"></arg>
<arg name="stringToCheck"></arg>
<arg name="language"></arg>
<arg name="wordCount"></arg>
<arg name="countOnly"></arg>
<retval></retval>
</method>
<method selector="spellServer:suggestCompletionsForPartialWordRange:inString:language:">
<arg name="sender"></arg>
<arg name="range"></arg>
<arg name="string"></arg>
<arg name="language"></arg>
<retval></retval>
</method>
<method selector="spellServer:suggestGuessesForWord:inLanguage:">
<arg name="sender"></arg>
<arg name="word"></arg>
<arg name="language"></arg>
<retval></retval>
</method>
<method selector="storedValueForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="stream:handleEvent:">
<arg name="aStream"></arg>
<arg name="eventCode"></arg>
<retval></retval>
</method>
<method class_method="true" selector="superclass">
<retval></retval>
</method>
<method selector="superclass" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="takeStoredValue:forKey:">
<arg name="value"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="takeValue:forKey:">
<arg name="value"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="takeValue:forKeyPath:">
<arg name="value"></arg>
<arg name="keyPath"></arg>
<retval></retval>
</method>
<method selector="takeValuesFromDictionary:">
<arg name="properties"></arg>
<retval></retval>
</method>
<method selector="toManyRelationshipKeys">
<retval></retval>
</method>
<method selector="toOneRelationshipKeys">
<retval></retval>
</method>
<method selector="unableToSetNilForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="unarchiver:cannotDecodeObjectOfClassName:originalClasses:">
<arg name="unarchiver"></arg>
<arg name="name"></arg>
<arg name="classNames"></arg>
<retval></retval>
</method>
<method selector="unarchiver:didDecodeObject:">
<arg name="unarchiver"></arg>
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="unarchiver:willReplaceObject:withObject:">
<arg name="unarchiver"></arg>
<arg name="object"></arg>
<arg name="newObject"></arg>
<retval></retval>
</method>
<method selector="unarchiverDidFinish:">
<arg name="unarchiver"></arg>
<retval></retval>
</method>
<method selector="unarchiverWillFinish:">
<arg name="unarchiver"></arg>
<retval></retval>
</method>
<method selector="unlock">
<retval></retval>
</method>
<method selector="useCredential:forAuthenticationChallenge:">
<arg name="credential"></arg>
<arg name="challenge"></arg>
<retval></retval>
</method>
<method class_method="true" selector="useStoredAccessor">
<retval></retval>
</method>
<method selector="validateValue:forKey:error:">
<arg name="ioValue"></arg>
<arg name="inKey"></arg>
<arg name="outError"></arg>
<retval></retval>
</method>
<method selector="validateValue:forKeyPath:error:">
<arg name="ioValue"></arg>
<arg name="inKeyPath"></arg>
<arg name="outError"></arg>
<retval></retval>
</method>
<method selector="valueAtIndex:inPropertyWithKey:">
<arg name="index"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="valueForKey:" swt_gen="true">
<arg name="key" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="valueForKeyPath:">
<arg name="keyPath"></arg>
<retval></retval>
</method>
<method selector="valueForUndefinedKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="valueWithName:inPropertyWithKey:">
<arg name="name"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="valueWithUniqueID:inPropertyWithKey:">
<arg name="uniqueID"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="valuesForKeys:">
<arg name="keys"></arg>
<retval></retval>
</method>
<method class_method="true" selector="version">
<retval></retval>
</method>
<method selector="willChange:valuesAtIndexes:forKey:">
<arg name="changeKind"></arg>
<arg name="indexes"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="willChangeValueForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="willChangeValueForKey:withSetMutation:usingObjects:">
<arg name="key"></arg>
<arg name="mutationKind"></arg>
<arg name="objects"></arg>
<retval></retval>
</method>
<method selector="zone">
<retval></retval>
</method>
</class>
<class name="NSOperation">
<method selector="addDependency:">
<arg name="op"></arg>
<retval></retval>
</method>
<method selector="cancel">
<retval></retval>
</method>
<method selector="dependencies">
<retval></retval>
</method>
<method selector="init">
<retval></retval>
</method>
<method selector="isCancelled">
<retval></retval>
</method>
<method selector="isConcurrent">
<retval></retval>
</method>
<method selector="isExecuting">
<retval></retval>
</method>
<method selector="isFinished">
<retval></retval>
</method>
<method selector="isReady">
<retval></retval>
</method>
<method selector="main">
<retval></retval>
</method>
<method selector="queuePriority">
<retval></retval>
</method>
<method selector="removeDependency:">
<arg name="op"></arg>
<retval></retval>
</method>
<method selector="setQueuePriority:">
<arg name="p"></arg>
<retval></retval>
</method>
<method selector="start">
<retval></retval>
</method>
</class>
<class name="NSOperationQueue">
<method selector="addOperation:">
<arg name="op"></arg>
<retval></retval>
</method>
<method selector="cancelAllOperations">
<retval></retval>
</method>
<method selector="isSuspended">
<retval></retval>
</method>
<method selector="maxConcurrentOperationCount">
<retval></retval>
</method>
<method selector="operations">
<retval></retval>
</method>
<method selector="setMaxConcurrentOperationCount:">
<arg name="cnt"></arg>
<retval></retval>
</method>
<method selector="setSuspended:">
<arg name="b"></arg>
<retval></retval>
</method>
<method selector="waitUntilAllOperationsAreFinished">
<retval></retval>
</method>
</class>
<class name="NSOutputStream" swt_superclass="NSStream">
<method selector="hasSpaceAvailable">
<retval></retval>
</method>
<method selector="initToBuffer:capacity:">
<arg name="buffer"></arg>
<arg name="capacity"></arg>
<retval></retval>
</method>
<method selector="initToFileAtPath:append:">
<arg name="path"></arg>
<arg name="shouldAppend"></arg>
<retval></retval>
</method>
<method selector="initToMemory">
<retval></retval>
</method>
<method class_method="true" selector="outputStreamToBuffer:capacity:">
<arg name="buffer"></arg>
<arg name="capacity"></arg>
<retval></retval>
</method>
<method class_method="true" selector="outputStreamToFileAtPath:append:">
<arg name="path"></arg>
<arg name="shouldAppend"></arg>
<retval></retval>
</method>
<method class_method="true" selector="outputStreamToMemory">
<retval></retval>
</method>
<method selector="write:maxLength:">
<arg name="buffer"></arg>
<arg name="len"></arg>
<retval></retval>
</method>
</class>
<class name="NSPipe">
<method selector="fileHandleForReading">
<retval></retval>
</method>
<method selector="fileHandleForWriting">
<retval></retval>
</method>
<method selector="init">
<retval></retval>
</method>
<method class_method="true" selector="pipe">
<retval></retval>
</method>
</class>
<class name="NSPointerArray">
<method selector="addPointer:">
<arg name="pointer"></arg>
<retval></retval>
</method>
<method selector="allObjects">
<retval></retval>
</method>
<method selector="compact">
<retval></retval>
</method>
<method selector="count">
<retval></retval>
</method>
<method selector="initWithOptions:">
<arg name="options"></arg>
<retval></retval>
</method>
<method selector="initWithPointerFunctions:">
<arg name="functions"></arg>
<retval></retval>
</method>
<method selector="insertPointer:atIndex:">
<arg name="item"></arg>
<arg name="index"></arg>
<retval></retval>
</method>
<method class_method="true" selector="pointerArrayWithOptions:">
<arg name="options"></arg>
<retval></retval>
</method>
<method class_method="true" selector="pointerArrayWithPointerFunctions:">
<arg name="functions"></arg>
<retval></retval>
</method>
<method class_method="true" selector="pointerArrayWithStrongObjects">
<retval></retval>
</method>
<method class_method="true" selector="pointerArrayWithWeakObjects">
<retval></retval>
</method>
<method selector="pointerAtIndex:">
<arg name="index"></arg>
<retval></retval>
</method>
<method selector="pointerFunctions">
<retval></retval>
</method>
<method selector="removePointerAtIndex:">
<arg name="index"></arg>
<retval></retval>
</method>
<method selector="replacePointerAtIndex:withPointer:">
<arg name="index"></arg>
<arg name="item"></arg>
<retval></retval>
</method>
<method selector="setCount:">
<arg name="count"></arg>
<retval></retval>
</method>
</class>
<class name="NSPointerFunctions">
<method selector="initWithOptions:">
<arg name="options"></arg>
<retval></retval>
</method>
<method class_method="true" selector="pointerFunctionsWithOptions:">
<arg name="options"></arg>
<retval></retval>
</method>
<method selector="setUsesStrongWriteBarrier:">
<arg name=""></arg>
<retval></retval>
</method>
<method selector="setUsesWeakReadAndWriteBarriers:">
<arg name=""></arg>
<retval></retval>
</method>
<method selector="usesStrongWriteBarrier">
<retval></retval>
</method>
<method selector="usesWeakReadAndWriteBarriers">
<retval></retval>
</method>
</class>
<class name="NSPort">
<method selector="addConnection:toRunLoop:forMode:">
<arg name="conn"></arg>
<arg name="runLoop"></arg>
<arg name="mode"></arg>
<retval></retval>
</method>
<method class_method="true" selector="allocWithZone:">
<arg name="zone"></arg>
<retval></retval>
</method>
<method selector="delegate">
<retval></retval>
</method>
<method selector="invalidate">
<retval></retval>
</method>
<method selector="isValid">
<retval></retval>
</method>
<method class_method="true" selector="port">
<retval></retval>
</method>
<method selector="removeConnection:fromRunLoop:forMode:">
<arg name="conn"></arg>
<arg name="runLoop"></arg>
<arg name="mode"></arg>
<retval></retval>
</method>
<method selector="removeFromRunLoop:forMode:">
<arg name="runLoop"></arg>
<arg name="mode"></arg>
<retval></retval>
</method>
<method selector="reservedSpaceLength">
<retval></retval>
</method>
<method selector="scheduleInRunLoop:forMode:">
<arg name="runLoop"></arg>
<arg name="mode"></arg>
<retval></retval>
</method>
<method selector="sendBeforeDate:components:from:reserved:">
<arg name="limitDate"></arg>
<arg name="components"></arg>
<arg name="receivePort"></arg>
<arg name="headerSpaceReserved"></arg>
<retval></retval>
</method>
<method selector="sendBeforeDate:msgid:components:from:reserved:">
<arg name="limitDate"></arg>
<arg name="msgID"></arg>
<arg name="components"></arg>
<arg name="receivePort"></arg>
<arg name="headerSpaceReserved"></arg>
<retval></retval>
</method>
<method selector="setDelegate:">
<arg name="anId"></arg>
<retval></retval>
</method>
</class>
<class name="NSPortCoder" swt_superclass="NSCoder">
<method selector="connection">
<retval></retval>
</method>
<method selector="decodePortObject">
<retval></retval>
</method>
<method selector="dispatch">
<retval></retval>
</method>
<method selector="encodePortObject:">
<arg name="aport"></arg>
<retval></retval>
</method>
<method selector="initWithReceivePort:sendPort:components:">
<arg name="rcvPort"></arg>
<arg name="sndPort"></arg>
<arg name="comps"></arg>
<retval></retval>
</method>
<method selector="isBycopy">
<retval></retval>
</method>
<method selector="isByref">
<retval></retval>
</method>
<method class_method="true" selector="portCoderWithReceivePort:sendPort:components:">
<arg name="rcvPort"></arg>
<arg name="sndPort"></arg>
<arg name="comps"></arg>
<retval></retval>
</method>
</class>
<class name="NSPortMessage">
<method selector="components">
<retval></retval>
</method>
<method selector="initWithSendPort:receivePort:components:">
<arg name="sendPort"></arg>
<arg name="replyPort"></arg>
<arg name="components"></arg>
<retval></retval>
</method>
<method selector="msgid">
<retval></retval>
</method>
<method selector="receivePort">
<retval></retval>
</method>
<method selector="sendBeforeDate:">
<arg name="date"></arg>
<retval></retval>
</method>
<method selector="sendPort">
<retval></retval>
</method>
<method selector="setMsgid:">
<arg name="msgid"></arg>
<retval></retval>
</method>
</class>
<class name="NSPortNameServer">
<method selector="portForName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="portForName:host:">
<arg name="name"></arg>
<arg name="host"></arg>
<retval></retval>
</method>
<method selector="registerPort:name:">
<arg name="port"></arg>
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="removePortForName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method class_method="true" selector="systemDefaultPortNameServer">
<retval></retval>
</method>
</class>
<class name="NSPositionalSpecifier">
<method selector="evaluate">
<retval></retval>
</method>
<method selector="initWithPosition:objectSpecifier:">
<arg name="position"></arg>
<arg name="specifier"></arg>
<retval></retval>
</method>
<method selector="insertionContainer">
<retval></retval>
</method>
<method selector="insertionIndex">
<retval></retval>
</method>
<method selector="insertionKey">
<retval></retval>
</method>
<method selector="insertionReplaces">
<retval></retval>
</method>
<method selector="objectSpecifier">
<retval></retval>
</method>
<method selector="position">
<retval></retval>
</method>
<method selector="setInsertionClassDescription:">
<arg name="classDescription"></arg>
<retval></retval>
</method>
</class>
<class name="NSPredicate">
<method selector="evaluateWithObject:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="evaluateWithObject:substitutionVariables:">
<arg name="object"></arg>
<arg name="bindings"></arg>
<retval></retval>
</method>
<method selector="predicateFormat">
<retval></retval>
</method>
<method class_method="true" selector="predicateWithFormat:">
<arg name="predicateWithFormat"></arg>
<retval></retval>
</method>
<method class_method="true" selector="predicateWithFormat:argumentArray:">
<arg name="predicateFormat"></arg>
<arg name="arguments"></arg>
<retval></retval>
</method>
<method class_method="true" selector="predicateWithFormat:arguments:">
<arg name="predicateFormat"></arg>
<arg name="argList"></arg>
<retval></retval>
</method>
<method selector="predicateWithSubstitutionVariables:">
<arg name="variables"></arg>
<retval></retval>
</method>
<method class_method="true" selector="predicateWithValue:">
<arg name="value"></arg>
<retval></retval>
</method>
</class>
<class name="NSProcessInfo">
<method selector="activeProcessorCount">
<retval></retval>
</method>
<method selector="arguments">
<retval></retval>
</method>
<method selector="environment">
<retval></retval>
</method>
<method selector="globallyUniqueString">
<retval></retval>
</method>
<method selector="hostName">
<retval></retval>
</method>
<method selector="operatingSystem">
<retval></retval>
</method>
<method selector="operatingSystemName">
<retval></retval>
</method>
<method selector="operatingSystemVersionString">
<retval></retval>
</method>
<method selector="physicalMemory">
<retval></retval>
</method>
<method selector="processIdentifier">
<retval></retval>
</method>
<method class_method="true" selector="processInfo">
<retval></retval>
</method>
<method selector="processName">
<retval></retval>
</method>
<method selector="processorCount">
<retval></retval>
</method>
<method selector="setProcessName:">
<arg name="newName"></arg>
<retval></retval>
</method>
</class>
<class name="NSPropertyListSerialization">
<method class_method="true" selector="dataFromPropertyList:format:errorDescription:">
<arg name="plist"></arg>
<arg name="format"></arg>
<arg name="errorString"></arg>
<retval></retval>
</method>
<method class_method="true" selector="propertyList:isValidForFormat:">
<arg name="plist"></arg>
<arg name="format"></arg>
<retval></retval>
</method>
<method class_method="true" selector="propertyListFromData:mutabilityOption:format:errorDescription:">
<arg name="data"></arg>
<arg name="opt"></arg>
<arg name="format"></arg>
<arg name="errorString"></arg>
<retval></retval>
</method>
</class>
<class name="NSProtocolChecker" swt_superclass="NSProxy">
<method selector="initWithTarget:protocol:">
<arg name="anObject"></arg>
<arg name="aProtocol"></arg>
<retval></retval>
</method>
<method selector="protocol">
<retval></retval>
</method>
<method class_method="true" selector="protocolCheckerWithTarget:protocol:">
<arg name="anObject"></arg>
<arg name="aProtocol"></arg>
<retval></retval>
</method>
<method selector="target">
<retval></retval>
</method>
</class>
<class name="NSProxy">
<method class_method="true" selector="alloc">
<retval></retval>
</method>
<method class_method="true" selector="allocWithZone:">
<arg name="zone"></arg>
<retval></retval>
</method>
<method class_method="true" selector="class">
<retval></retval>
</method>
<method selector="dealloc">
<retval></retval>
</method>
<method selector="description">
<retval></retval>
</method>
<method selector="finalize">
<retval></retval>
</method>
<method selector="forwardInvocation:">
<arg name="invocation"></arg>
<retval></retval>
</method>
<method selector="methodSignatureForSelector:">
<arg name="sel"></arg>
<retval></retval>
</method>
<method class_method="true" selector="respondsToSelector:">
<arg name="aSelector"></arg>
<retval></retval>
</method>
</class>
<class name="NSQuitCommand" swt_superclass="NSScriptCommand">
<method selector="saveOptions">
<retval></retval>
</method>
</class>
<class name="NSRangeSpecifier" swt_superclass="NSScriptObjectSpecifier">
<method selector="endSpecifier">
<retval></retval>
</method>
<method selector="initWithContainerClassDescription:containerSpecifier:key:startSpecifier:endSpecifier:">
<arg name="classDesc"></arg>
<arg name="container"></arg>
<arg name="property"></arg>
<arg name="startSpec"></arg>
<arg name="endSpec"></arg>
<retval></retval>
</method>
<method selector="setEndSpecifier:">
<arg name="endSpec"></arg>
<retval></retval>
</method>
<method selector="setStartSpecifier:">
<arg name="startSpec"></arg>
<retval></retval>
</method>
<method selector="startSpecifier">
<retval></retval>
</method>
</class>
<class name="NSRecursiveLock">
<method selector="lockBeforeDate:">
<arg name="limit"></arg>
<retval></retval>
</method>
<method selector="name">
<retval></retval>
</method>
<method selector="setName:">
<arg name="n"></arg>
<retval></retval>
</method>
<method selector="tryLock">
<retval></retval>
</method>
</class>
<class name="NSRelativeSpecifier" swt_superclass="NSScriptObjectSpecifier">
<method selector="baseSpecifier">
<retval></retval>
</method>
<method selector="initWithContainerClassDescription:containerSpecifier:key:relativePosition:baseSpecifier:">
<arg name="classDesc"></arg>
<arg name="container"></arg>
<arg name="property"></arg>
<arg name="relPos"></arg>
<arg name="baseSpecifier"></arg>
<retval></retval>
</method>
<method selector="relativePosition">
<retval></retval>
</method>
<method selector="setBaseSpecifier:">
<arg name="baseSpecifier"></arg>
<retval></retval>
</method>
<method selector="setRelativePosition:">
<arg name="relPos"></arg>
<retval></retval>
</method>
</class>
<class name="NSRunLoop" swt_gen="mixed">
<method selector="acceptInputForMode:beforeDate:">
<arg name="mode"></arg>
<arg name="limitDate"></arg>
<retval></retval>
</method>
<method selector="addPort:forMode:">
<arg name="aPort"></arg>
<arg name="mode"></arg>
<retval></retval>
</method>
<method selector="addTimer:forMode:" swt_gen="true">
<arg name="timer" swt_gen="true"></arg>
<arg name="mode" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="cancelPerformSelector:target:argument:">
<arg name="aSelector"></arg>
<arg name="target"></arg>
<arg name="arg"></arg>
<retval></retval>
</method>
<method selector="cancelPerformSelectorsWithTarget:">
<arg name="target"></arg>
<retval></retval>
</method>
<method selector="configureAsServer">
<retval></retval>
</method>
<method selector="currentMode">
<retval></retval>
</method>
<method class_method="true" selector="currentRunLoop" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="getCFRunLoop">
<retval></retval>
</method>
<method selector="limitDateForMode:">
<arg name="mode"></arg>
<retval></retval>
</method>
<method class_method="true" selector="mainRunLoop" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="performSelector:target:argument:order:modes:">
<arg name="aSelector"></arg>
<arg name="target"></arg>
<arg name="arg"></arg>
<arg name="order"></arg>
<arg name="modes"></arg>
<retval></retval>
</method>
<method selector="removePort:forMode:">
<arg name="aPort"></arg>
<arg name="mode"></arg>
<retval></retval>
</method>
<method selector="run">
<retval></retval>
</method>
<method selector="runMode:beforeDate:" swt_gen="true">
<arg name="mode" swt_gen="true"></arg>
<arg name="limitDate" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="runUntilDate:">
<arg name="limitDate"></arg>
<retval></retval>
</method>
</class>
<class name="NSScanner">
<method selector="caseSensitive">
<retval></retval>
</method>
<method selector="charactersToBeSkipped">
<retval></retval>
</method>
<method selector="initWithString:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="isAtEnd">
<retval></retval>
</method>
<method selector="locale">
<retval></retval>
</method>
<method class_method="true" selector="localizedScannerWithString:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="scanCharactersFromSet:intoString:">
<arg name="set"></arg>
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="scanDecimal:">
<arg name="dcm"></arg>
<retval></retval>
</method>
<method selector="scanDouble:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="scanFloat:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="scanHexDouble:">
<arg name="result"></arg>
<retval></retval>
</method>
<method selector="scanHexFloat:">
<arg name="result"></arg>
<retval></retval>
</method>
<method selector="scanHexInt:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="scanHexLongLong:">
<arg name="result"></arg>
<retval></retval>
</method>
<method selector="scanInt:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="scanInteger:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="scanLocation">
<retval></retval>
</method>
<method selector="scanLongLong:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="scanString:intoString:">
<arg name="string"></arg>
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="scanUpToCharactersFromSet:intoString:">
<arg name="set"></arg>
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="scanUpToString:intoString:">
<arg name="string"></arg>
<arg name="value"></arg>
<retval></retval>
</method>
<method class_method="true" selector="scannerWithString:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setCaseSensitive:">
<arg name="flag"></arg>
<retval></retval>
</method>
<method selector="setCharactersToBeSkipped:">
<arg name="set"></arg>
<retval></retval>
</method>
<method selector="setLocale:">
<arg name="locale"></arg>
<retval></retval>
</method>
<method selector="setScanLocation:">
<arg name="pos"></arg>
<retval></retval>
</method>
<method selector="string">
<retval></retval>
</method>
</class>
<class name="NSScriptClassDescription" swt_superclass="NSClassDescription">
<method selector="appleEventCode">
<retval></retval>
</method>
<method selector="appleEventCodeForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method class_method="true" selector="classDescriptionForClass:">
<arg name="aClass"></arg>
<retval></retval>
</method>
<method selector="classDescriptionForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="className">
<retval></retval>
</method>
<method selector="defaultSubcontainerAttributeKey">
<retval></retval>
</method>
<method selector="hasOrderedToManyRelationshipForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="hasPropertyForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="hasReadablePropertyForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="hasWritablePropertyForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="implementationClassName">
<retval></retval>
</method>
<method selector="initWithSuiteName:className:dictionary:">
<arg name="suiteName"></arg>
<arg name="className"></arg>
<arg name="classDeclaration"></arg>
<retval></retval>
</method>
<method selector="isLocationRequiredToCreateForKey:">
<arg name="toManyRelationshipKey"></arg>
<retval></retval>
</method>
<method selector="isReadOnlyKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="keyWithAppleEventCode:">
<arg name="appleEventCode"></arg>
<retval></retval>
</method>
<method selector="matchesAppleEventCode:">
<arg name="appleEventCode"></arg>
<retval></retval>
</method>
<method selector="selectorForCommand:">
<arg name="commandDescription"></arg>
<retval></retval>
</method>
<method selector="suiteName">
<retval></retval>
</method>
<method selector="superclassDescription">
<retval></retval>
</method>
<method selector="supportsCommand:">
<arg name="commandDescription"></arg>
<retval></retval>
</method>
<method selector="typeForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
</class>
<class name="NSScriptCoercionHandler">
<method selector="coerceValue:toClass:">
<arg name="value"></arg>
<arg name="toClass"></arg>
<retval></retval>
</method>
<method selector="registerCoercer:selector:toConvertFromClass:toClass:">
<arg name="coercer"></arg>
<arg name="selector"></arg>
<arg name="fromClass"></arg>
<arg name="toClass"></arg>
<retval></retval>
</method>
<method class_method="true" selector="sharedCoercionHandler">
<retval></retval>
</method>
</class>
<class name="NSScriptCommand">
<method selector="appleEvent">
<retval></retval>
</method>
<method selector="arguments">
<retval></retval>
</method>
<method selector="commandDescription">
<retval></retval>
</method>
<method class_method="true" selector="currentCommand">
<retval></retval>
</method>
<method selector="directParameter">
<retval></retval>
</method>
<method selector="evaluatedArguments">
<retval></retval>
</method>
<method selector="evaluatedReceivers">
<retval></retval>
</method>
<method selector="executeCommand">
<retval></retval>
</method>
<method selector="initWithCommandDescription:">
<arg name="commandDef"></arg>
<retval></retval>
</method>
<method selector="isWellFormed">
<retval></retval>
</method>
<method selector="performDefaultImplementation">
<retval></retval>
</method>
<method selector="receiversSpecifier">
<retval></retval>
</method>
<method selector="resumeExecutionWithResult:">
<arg name="result"></arg>
<retval></retval>
</method>
<method selector="scriptErrorExpectedTypeDescriptor">
<retval></retval>
</method>
<method selector="scriptErrorNumber">
<retval></retval>
</method>
<method selector="scriptErrorOffendingObjectDescriptor">
<retval></retval>
</method>
<method selector="scriptErrorString">
<retval></retval>
</method>
<method selector="setArguments:">
<arg name="args"></arg>
<retval></retval>
</method>
<method selector="setDirectParameter:">
<arg name="directParameter"></arg>
<retval></retval>
</method>
<method selector="setReceiversSpecifier:">
<arg name="receiversRef"></arg>
<retval></retval>
</method>
<method selector="setScriptErrorExpectedTypeDescriptor:">
<arg name="errorExpectedTypeDescriptor"></arg>
<retval></retval>
</method>
<method selector="setScriptErrorNumber:">
<arg name="errorNumber"></arg>
<retval></retval>
</method>
<method selector="setScriptErrorOffendingObjectDescriptor:">
<arg name="errorOffendingObjectDescriptor"></arg>
<retval></retval>
</method>
<method selector="setScriptErrorString:">
<arg name="errorString"></arg>
<retval></retval>
</method>
<method selector="suspendExecution">
<retval></retval>
</method>
</class>
<class name="NSScriptCommandDescription">
<method selector="appleEventClassCode">
<retval></retval>
</method>
<method selector="appleEventCode">
<retval></retval>
</method>
<method selector="appleEventCodeForArgumentWithName:">
<arg name="argumentName"></arg>
<retval></retval>
</method>
<method selector="appleEventCodeForReturnType">
<retval></retval>
</method>
<method selector="argumentNames">
<retval></retval>
</method>
<method selector="commandClassName">
<retval></retval>
</method>
<method selector="commandName">
<retval></retval>
</method>
<method selector="createCommandInstance">
<retval></retval>
</method>
<method selector="createCommandInstanceWithZone:">
<arg name="zone"></arg>
<retval></retval>
</method>
<method selector="initWithSuiteName:commandName:dictionary:">
<arg name="suiteName"></arg>
<arg name="commandName"></arg>
<arg name="commandDeclaration"></arg>
<retval></retval>
</method>
<method selector="isOptionalArgumentWithName:">
<arg name="argumentName"></arg>
<retval></retval>
</method>
<method selector="returnType">
<retval></retval>
</method>
<method selector="suiteName">
<retval></retval>
</method>
<method selector="typeForArgumentWithName:">
<arg name="argumentName"></arg>
<retval></retval>
</method>
</class>
<class name="NSScriptExecutionContext">
<method selector="objectBeingTested">
<retval></retval>
</method>
<method selector="rangeContainerObject">
<retval></retval>
</method>
<method selector="setObjectBeingTested:">
<arg name="obj"></arg>
<retval></retval>
</method>
<method selector="setRangeContainerObject:">
<arg name="obj"></arg>
<retval></retval>
</method>
<method selector="setTopLevelObject:">
<arg name="obj"></arg>
<retval></retval>
</method>
<method class_method="true" selector="sharedScriptExecutionContext">
<retval></retval>
</method>
<method selector="topLevelObject">
<retval></retval>
</method>
</class>
<class name="NSScriptObjectSpecifier">
<method selector="childSpecifier">
<retval></retval>
</method>
<method selector="containerClassDescription">
<retval></retval>
</method>
<method selector="containerIsObjectBeingTested">
<retval></retval>
</method>
<method selector="containerIsRangeContainerObject">
<retval></retval>
</method>
<method selector="containerSpecifier">
<retval></retval>
</method>
<method selector="descriptor">
<retval></retval>
</method>
<method selector="evaluationErrorNumber">
<retval></retval>
</method>
<method selector="evaluationErrorSpecifier">
<retval></retval>
</method>
<method selector="indicesOfObjectsByEvaluatingWithContainer:count:">
<arg name="container"></arg>
<arg name="count"></arg>
<retval></retval>
</method>
<method selector="initWithContainerClassDescription:containerSpecifier:key:">
<arg name="classDesc"></arg>
<arg name="container"></arg>
<arg name="property"></arg>
<retval></retval>
</method>
<method selector="initWithContainerSpecifier:key:">
<arg name="container"></arg>
<arg name="property"></arg>
<retval></retval>
</method>
<method selector="key">
<retval></retval>
</method>
<method selector="keyClassDescription">
<retval></retval>
</method>
<method class_method="true" selector="objectSpecifierWithDescriptor:">
<arg name="descriptor"></arg>
<retval></retval>
</method>
<method selector="objectsByEvaluatingSpecifier">
<retval></retval>
</method>
<method selector="objectsByEvaluatingWithContainers:">
<arg name="containers"></arg>
<retval></retval>
</method>
<method selector="setChildSpecifier:">
<arg name="child"></arg>
<retval></retval>
</method>
<method selector="setContainerClassDescription:">
<arg name="classDesc"></arg>
<retval></retval>
</method>
<method selector="setContainerIsObjectBeingTested:">
<arg name="flag"></arg>
<retval></retval>
</method>
<method selector="setContainerIsRangeContainerObject:">
<arg name="flag"></arg>
<retval></retval>
</method>
<method selector="setContainerSpecifier:">
<arg name="subRef"></arg>
<retval></retval>
</method>
<method selector="setEvaluationErrorNumber:">
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="setKey:">
<arg name="key"></arg>
<retval></retval>
</method>
</class>
<class name="NSScriptSuiteRegistry">
<method selector="aeteResource:">
<arg name="languageName"></arg>
<retval></retval>
</method>
<method selector="appleEventCodeForSuite:">
<arg name="suiteName"></arg>
<retval></retval>
</method>
<method selector="bundleForSuite:">
<arg name="suiteName"></arg>
<retval></retval>
</method>
<method selector="classDescriptionWithAppleEventCode:">
<arg name="appleEventCode"></arg>
<retval></retval>
</method>
<method selector="classDescriptionsInSuite:">
<arg name="suiteName"></arg>
<retval></retval>
</method>
<method selector="commandDescriptionWithAppleEventClass:andAppleEventCode:">
<arg name="appleEventClassCode"></arg>
<arg name="appleEventIDCode"></arg>
<retval></retval>
</method>
<method selector="commandDescriptionsInSuite:">
<arg name="suiteName"></arg>
<retval></retval>
</method>
<method selector="loadSuiteWithDictionary:fromBundle:">
<arg name="suiteDeclaration"></arg>
<arg name="bundle"></arg>
<retval></retval>
</method>
<method selector="loadSuitesFromBundle:">
<arg name="bundle"></arg>
<retval></retval>
</method>
<method selector="registerClassDescription:">
<arg name="classDescription"></arg>
<retval></retval>
</method>
<method selector="registerCommandDescription:">
<arg name="commandDescription"></arg>
<retval></retval>
</method>
<method class_method="true" selector="setSharedScriptSuiteRegistry:">
<arg name="registry"></arg>
<retval></retval>
</method>
<method class_method="true" selector="sharedScriptSuiteRegistry">
<retval></retval>
</method>
<method selector="suiteForAppleEventCode:">
<arg name="appleEventCode"></arg>
<retval></retval>
</method>
<method selector="suiteNames">
<retval></retval>
</method>
</class>
<class name="NSScriptWhoseTest">
<method selector="isTrue">
<retval></retval>
</method>
</class>
<class name="NSSet" swt_gen="mixed">
<method selector="addObserver:forKeyPath:options:context:">
<arg name="observer"></arg>
<arg name="keyPath"></arg>
<arg name="options"></arg>
<arg name="context"></arg>
<retval></retval>
</method>
<method selector="allObjects">
<retval></retval>
</method>
<method selector="anyObject">
<retval></retval>
</method>
<method selector="containsObject:">
<arg name="anObject"></arg>
<retval></retval>
</method>
<method selector="count" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="description">
<retval></retval>
</method>
<method selector="descriptionWithLocale:">
<arg name="locale"></arg>
<retval></retval>
</method>
<method selector="filteredSetUsingPredicate:">
<arg name="predicate"></arg>
<retval></retval>
</method>
<method selector="initWithArray:">
<arg name="array"></arg>
<retval></retval>
</method>
<method selector="initWithObjects:">
<arg name="initWithObjects"></arg>
<retval></retval>
</method>
<method selector="initWithObjects:count:">
<arg name="objects"></arg>
<arg name="cnt"></arg>
<retval></retval>
</method>
<method selector="initWithSet:">
<arg name="set"></arg>
<retval></retval>
</method>
<method selector="initWithSet:copyItems:">
<arg name="set"></arg>
<arg name="flag"></arg>
<retval></retval>
</method>
<method selector="intersectsSet:">
<arg name="otherSet"></arg>
<retval></retval>
</method>
<method selector="isEqualToSet:">
<arg name="otherSet"></arg>
<retval></retval>
</method>
<method selector="isSubsetOfSet:">
<arg name="otherSet"></arg>
<retval></retval>
</method>
<method selector="makeObjectsPerformSelector:">
<arg name="aSelector"></arg>
<retval></retval>
</method>
<method selector="makeObjectsPerformSelector:withObject:">
<arg name="aSelector"></arg>
<arg name="argument"></arg>
<retval></retval>
</method>
<method selector="member:">
<arg name="object"></arg>
<retval></retval>
</method>
<method selector="objectEnumerator" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="removeObserver:forKeyPath:">
<arg name="observer"></arg>
<arg name="keyPath"></arg>
<retval></retval>
</method>
<method class_method="true" selector="set" swt_gen="true">
<retval swt_alloc="true" swt_gen="true" swt_java_type="NSSet"></retval>
</method>
<method selector="setByAddingObject:">
<arg name="anObject"></arg>
<retval></retval>
</method>
<method selector="setByAddingObjectsFromArray:">
<arg name="other"></arg>
<retval></retval>
</method>
<method selector="setByAddingObjectsFromSet:">
<arg name="other"></arg>
<retval></retval>
</method>
<method selector="setValue:forKey:">
<arg name="value"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method class_method="true" selector="setWithArray:">
<arg name="array"></arg>
<retval></retval>
</method>
<method class_method="true" selector="setWithObject:">
<arg name="object"></arg>
<retval></retval>
</method>
<method class_method="true" selector="setWithObjects:">
<arg name="setWithObjects"></arg>
<retval></retval>
</method>
<method class_method="true" selector="setWithObjects:count:">
<arg name="objects"></arg>
<arg name="cnt"></arg>
<retval></retval>
</method>
<method class_method="true" selector="setWithSet:">
<arg name="set"></arg>
<retval></retval>
</method>
<method selector="valueForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
</class>
<class name="NSSetCommand" swt_superclass="NSScriptCommand">
<method selector="keySpecifier">
<retval></retval>
</method>
<method selector="setReceiversSpecifier:">
<arg name="receiversRef"></arg>
<retval></retval>
</method>
</class>
<class name="NSSocketPort" swt_superclass="NSPort">
<method selector="address">
<retval></retval>
</method>
<method selector="init">
<retval></retval>
</method>
<method selector="initRemoteWithProtocolFamily:socketType:protocol:address:">
<arg name="family"></arg>
<arg name="type"></arg>
<arg name="protocol"></arg>
<arg name="address"></arg>
<retval></retval>
</method>
<method selector="initRemoteWithTCPPort:host:">
<arg name="port"></arg>
<arg name="hostName"></arg>
<retval></retval>
</method>
<method selector="initWithProtocolFamily:socketType:protocol:address:">
<arg name="family"></arg>
<arg name="type"></arg>
<arg name="protocol"></arg>
<arg name="address"></arg>
<retval></retval>
</method>
<method selector="initWithProtocolFamily:socketType:protocol:socket:">
<arg name="family"></arg>
<arg name="type"></arg>
<arg name="protocol"></arg>
<arg name="sock"></arg>
<retval></retval>
</method>
<method selector="initWithTCPPort:">
<arg name="port"></arg>
<retval></retval>
</method>
<method selector="protocol">
<retval></retval>
</method>
<method selector="protocolFamily">
<retval></retval>
</method>
<method selector="socket">
<retval></retval>
</method>
<method selector="socketType">
<retval></retval>
</method>
</class>
<class name="NSSocketPortNameServer" swt_superclass="NSPortNameServer">
<method selector="defaultNameServerPortNumber">
<retval></retval>
</method>
<method selector="portForName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="portForName:host:">
<arg name="name"></arg>
<arg name="host"></arg>
<retval></retval>
</method>
<method selector="portForName:host:nameServerPortNumber:">
<arg name="name"></arg>
<arg name="host"></arg>
<arg name="portNumber"></arg>
<retval></retval>
</method>
<method selector="registerPort:name:">
<arg name="port"></arg>
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="registerPort:name:nameServerPortNumber:">
<arg name="port"></arg>
<arg name="name"></arg>
<arg name="portNumber"></arg>
<retval></retval>
</method>
<method selector="removePortForName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="setDefaultNameServerPortNumber:">
<arg name="portNumber"></arg>
<retval></retval>
</method>
<method class_method="true" selector="sharedInstance">
<retval></retval>
</method>
</class>
<class name="NSSortDescriptor">
<method selector="ascending">
<retval></retval>
</method>
<method selector="compareObject:toObject:">
<arg name="object1"></arg>
<arg name="object2"></arg>
<retval></retval>
</method>
<method selector="initWithKey:ascending:">
<arg name="key"></arg>
<arg name="ascending"></arg>
<retval></retval>
</method>
<method selector="initWithKey:ascending:selector:">
<arg name="key"></arg>
<arg name="ascending"></arg>
<arg name="selector"></arg>
<retval></retval>
</method>
<method selector="key">
<retval></retval>
</method>
<method selector="reversedSortDescriptor">
<retval></retval>
</method>
<method selector="selector">
<retval></retval>
</method>
</class>
<class name="NSSpecifierTest" swt_superclass="NSScriptWhoseTest">
<method selector="initWithObjectSpecifier:comparisonOperator:testObject:">
<arg name="obj1"></arg>
<arg name="compOp"></arg>
<arg name="obj2"></arg>
<retval></retval>
</method>
</class>
<class name="NSSpellServer">
<method selector="delegate">
<retval></retval>
</method>
<method selector="isWordInUserDictionaries:caseSensitive:">
<arg name="word"></arg>
<arg name="flag"></arg>
<retval></retval>
</method>
<method selector="registerLanguage:byVendor:">
<arg name="language"></arg>
<arg name="vendor"></arg>
<retval></retval>
</method>
<method selector="run">
<retval></retval>
</method>
<method selector="setDelegate:">
<arg name="anObject"></arg>
<retval></retval>
</method>
</class>
<class name="NSStream">
<method selector="close">
<retval></retval>
</method>
<method selector="delegate">
<retval></retval>
</method>
<method class_method="true" selector="getStreamsToHost:port:inputStream:outputStream:">
<arg name="host"></arg>
<arg name="port"></arg>
<arg name="inputStream"></arg>
<arg name="outputStream"></arg>
<retval></retval>
</method>
<method selector="open">
<retval></retval>
</method>
<method selector="propertyForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="removeFromRunLoop:forMode:">
<arg name="aRunLoop"></arg>
<arg name="mode"></arg>
<retval></retval>
</method>
<method selector="scheduleInRunLoop:forMode:">
<arg name="aRunLoop"></arg>
<arg name="mode"></arg>
<retval></retval>
</method>
<method selector="setDelegate:">
<arg name="delegate"></arg>
<retval></retval>
</method>
<method selector="setProperty:forKey:">
<arg name="property"></arg>
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="streamError">
<retval></retval>
</method>
<method selector="streamStatus">
<retval></retval>
</method>
</class>
<class name="NSString" swt_gen="mixed">
<method selector="UTF8String" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="availableStringEncodings">
<retval></retval>
</method>
<method selector="boolValue">
<retval></retval>
</method>
<method selector="cString">
<retval></retval>
</method>
<method selector="cStringLength">
<retval></retval>
</method>
<method selector="cStringUsingEncoding:">
<arg name="encoding"></arg>
<retval></retval>
</method>
<method selector="canBeConvertedToEncoding:">
<arg name="encoding"></arg>
<retval></retval>
</method>
<method selector="capitalizedString">
<retval></retval>
</method>
<method selector="caseInsensitiveCompare:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="characterAtIndex:" swt_gen="true">
<arg name="index" swt_gen="true"></arg>
<retval swt_gen="true" swt_java_type="int" swt_java_type64="long"></retval>
</method>
<method selector="commonPrefixWithString:options:">
<arg name="aString"></arg>
<arg name="mask"></arg>
<retval></retval>
</method>
<method selector="compare:" swt_gen="true">
<arg name="string" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="compare:options:">
<arg name="string"></arg>
<arg name="mask"></arg>
<retval></retval>
</method>
<method selector="compare:options:range:">
<arg name="string"></arg>
<arg name="mask"></arg>
<arg name="compareRange"></arg>
<retval></retval>
</method>
<method selector="compare:options:range:locale:">
<arg name="string"></arg>
<arg name="mask"></arg>
<arg name="compareRange"></arg>
<arg name="locale"></arg>
<retval></retval>
</method>
<method selector="completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:">
<arg name="outputName"></arg>
<arg name="flag"></arg>
<arg name="outputArray"></arg>
<arg name="filterTypes"></arg>
<retval></retval>
</method>
<method selector="componentsSeparatedByCharactersInSet:">
<arg name="separator"></arg>
<retval></retval>
</method>
<method selector="componentsSeparatedByString:">
<arg name="separator"></arg>
<retval></retval>
</method>
<method selector="dataUsingEncoding:">
<arg name="encoding"></arg>
<retval></retval>
</method>
<method selector="dataUsingEncoding:allowLossyConversion:">
<arg name="encoding"></arg>
<arg name="lossy"></arg>
<retval></retval>
</method>
<method selector="decomposedStringWithCanonicalMapping">
<retval></retval>
</method>
<method selector="decomposedStringWithCompatibilityMapping">
<retval></retval>
</method>
<method class_method="true" selector="defaultCStringEncoding">
<retval></retval>
</method>
<method selector="description">
<retval></retval>
</method>
<method selector="doubleValue">
<retval></retval>
</method>
<method selector="fastestEncoding">
<retval></retval>
</method>
<method selector="fileSystemRepresentation">
<retval></retval>
</method>
<method selector="floatValue">
<retval></retval>
</method>
<method selector="getBytes:maxLength:usedLength:encoding:options:range:remainingRange:">
<arg name="buffer"></arg>
<arg name="maxBufferCount"></arg>
<arg name="usedBufferCount"></arg>
<arg name="encoding"></arg>
<arg name="options"></arg>
<arg name="range"></arg>
<arg name="leftover"></arg>
<retval></retval>
</method>
<method selector="getCString:">
<arg name="bytes"></arg>
<retval></retval>
</method>
<method selector="getCString:maxLength:">
<arg name="bytes"></arg>
<arg name="maxLength"></arg>
<retval></retval>
</method>
<method selector="getCString:maxLength:encoding:">
<arg name="buffer"></arg>
<arg name="maxBufferCount"></arg>
<arg name="encoding"></arg>
<retval></retval>
</method>
<method selector="getCString:maxLength:range:remainingRange:">
<arg name="bytes"></arg>
<arg name="maxLength"></arg>
<arg name="aRange"></arg>
<arg name="leftoverRange"></arg>
<retval></retval>
</method>
<method selector="getCharacters:" swt_gen="true">
<arg name="buffer" swt_gen="true" swt_java_type="char[]"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="getCharacters:range:" swt_gen="true">
<arg name="buffer" swt_gen="true" swt_java_type="char[]"></arg>
<arg name="aRange" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="getFileSystemRepresentation:maxLength:">
<arg name="cname"></arg>
<arg name="max"></arg>
<retval></retval>
</method>
<method selector="getLineStart:end:contentsEnd:forRange:">
<arg name="startPtr"></arg>
<arg name="lineEndPtr"></arg>
<arg name="contentsEndPtr"></arg>
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="getParagraphStart:end:contentsEnd:forRange:">
<arg name="startPtr"></arg>
<arg name="parEndPtr"></arg>
<arg name="contentsEndPtr"></arg>
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="hasPrefix:">
<arg name="aString"></arg>
<retval></retval>
</method>
<method selector="hasSuffix:">
<arg name="aString"></arg>
<retval></retval>
</method>
<method selector="hash">
<retval></retval>
</method>
<method selector="init">
<retval></retval>
</method>
<method selector="initWithBytes:length:encoding:">
<arg name="bytes"></arg>
<arg name="len"></arg>
<arg name="encoding"></arg>
<retval></retval>
</method>
<method selector="initWithBytesNoCopy:length:encoding:freeWhenDone:">
<arg name="bytes"></arg>
<arg name="len"></arg>
<arg name="encoding"></arg>
<arg name="freeBuffer"></arg>
<retval></retval>
</method>
<method selector="initWithCString:">
<arg name="bytes"></arg>
<retval></retval>
</method>
<method selector="initWithCString:encoding:">
<arg name="nullTerminatedCString"></arg>
<arg name="encoding"></arg>
<retval></retval>
</method>
<method selector="initWithCString:length:">
<arg name="bytes"></arg>
<arg name="length"></arg>
<retval></retval>
</method>
<method selector="initWithCStringNoCopy:length:freeWhenDone:">
<arg name="bytes"></arg>
<arg name="length"></arg>
<arg name="freeBuffer"></arg>
<retval></retval>
</method>
<method selector="initWithCharacters:length:" swt_gen="true">
<arg name="characters" swt_gen="true" swt_java_type="char[]"></arg>
<arg name="length" swt_gen="true"></arg>
<retval swt_gen="true" swt_java_type="NSString"></retval>
</method>
<method selector="initWithCharactersNoCopy:length:freeWhenDone:">
<arg name="characters"></arg>
<arg name="length"></arg>
<arg name="freeBuffer"></arg>
<retval></retval>
</method>
<method selector="initWithContentsOfFile:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="initWithContentsOfFile:encoding:error:">
<arg name="path"></arg>
<arg name="enc"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="initWithContentsOfFile:usedEncoding:error:">
<arg name="path"></arg>
<arg name="enc"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="initWithContentsOfURL:">
<arg name="url"></arg>
<retval></retval>
</method>
<method selector="initWithContentsOfURL:encoding:error:">
<arg name="url"></arg>
<arg name="enc"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="initWithContentsOfURL:usedEncoding:error:">
<arg name="url"></arg>
<arg name="enc"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="initWithData:encoding:">
<arg name="data"></arg>
<arg name="encoding"></arg>
<retval></retval>
</method>
<method selector="initWithFormat:">
<arg name="initWithFormat"></arg>
<retval></retval>
</method>
<method selector="initWithFormat:arguments:">
<arg name="format"></arg>
<arg name="argList"></arg>
<retval></retval>
</method>
<method selector="initWithFormat:locale:">
<arg name="format"></arg>
<arg name="locale"></arg>
<retval></retval>
</method>
<method selector="initWithFormat:locale:arguments:">
<arg name="format"></arg>
<arg name="locale"></arg>
<arg name="argList"></arg>
<retval></retval>
</method>
<method selector="initWithString:">
<arg name="aString"></arg>
<retval></retval>
</method>
<method selector="initWithUTF8String:">
<arg name="nullTerminatedCString"></arg>
<retval></retval>
</method>
<method selector="intValue">
<retval></retval>
</method>
<method selector="integerValue">
<retval></retval>
</method>
<method selector="isAbsolutePath">
<retval></retval>
</method>
<method selector="isEqualToString:" swt_gen="true">
<arg name="aString" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="lastPathComponent" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="length" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="lengthOfBytesUsingEncoding:">
<arg name="enc"></arg>
<retval></retval>
</method>
<method selector="lineRangeForRange:">
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="localizedCaseInsensitiveCompare:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="localizedCompare:">
<arg name="string"></arg>
<retval></retval>
</method>
<method class_method="true" selector="localizedNameOfStringEncoding:">
<arg name="encoding"></arg>
<retval></retval>
</method>
<method class_method="true" selector="localizedStringWithFormat:">
<arg name="localizedStringWithFormat"></arg>
<retval></retval>
</method>
<method selector="longLongValue">
<retval></retval>
</method>
<method selector="lossyCString">
<retval></retval>
</method>
<method selector="lowercaseString" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="maximumLengthOfBytesUsingEncoding:">
<arg name="enc"></arg>
<retval></retval>
</method>
<method selector="paragraphRangeForRange:">
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="pathComponents">
<retval></retval>
</method>
<method selector="pathExtension">
<retval></retval>
</method>
<method class_method="true" selector="pathWithComponents:">
<arg name="components"></arg>
<retval></retval>
</method>
<method selector="precomposedStringWithCanonicalMapping">
<retval></retval>
</method>
<method selector="precomposedStringWithCompatibilityMapping">
<retval></retval>
</method>
<method selector="propertyList">
<retval></retval>
</method>
<method selector="propertyListFromStringsFileFormat">
<retval></retval>
</method>
<method selector="rangeOfCharacterFromSet:">
<arg name="aSet"></arg>
<retval></retval>
</method>
<method selector="rangeOfCharacterFromSet:options:">
<arg name="aSet"></arg>
<arg name="mask"></arg>
<retval></retval>
</method>
<method selector="rangeOfCharacterFromSet:options:range:">
<arg name="aSet"></arg>
<arg name="mask"></arg>
<arg name="searchRange"></arg>
<retval></retval>
</method>
<method selector="rangeOfComposedCharacterSequenceAtIndex:">
<arg name="index"></arg>
<retval></retval>
</method>
<method selector="rangeOfComposedCharacterSequencesForRange:">
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="rangeOfString:">
<arg name="aString"></arg>
<retval></retval>
</method>
<method selector="rangeOfString:options:">
<arg name="aString"></arg>
<arg name="mask"></arg>
<retval></retval>
</method>
<method selector="rangeOfString:options:range:">
<arg name="aString"></arg>
<arg name="mask"></arg>
<arg name="searchRange"></arg>
<retval></retval>
</method>
<method selector="rangeOfString:options:range:locale:">
<arg name="aString"></arg>
<arg name="mask"></arg>
<arg name="searchRange"></arg>
<arg name="locale"></arg>
<retval></retval>
</method>
<method selector="smallestEncoding">
<retval></retval>
</method>
<method class_method="true" selector="string">
<retval></retval>
</method>
<method selector="stringByAbbreviatingWithTildeInPath">
<retval></retval>
</method>
<method selector="stringByAddingPercentEscapesUsingEncoding:" swt_gen="true">
<arg name="enc" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="stringByAppendingFormat:">
<arg name="stringByAppendingFormat"></arg>
<retval></retval>
</method>
<method selector="stringByAppendingPathComponent:" swt_gen="true">
<arg name="str" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="stringByAppendingPathExtension:">
<arg name="str"></arg>
<retval></retval>
</method>
<method selector="stringByAppendingString:" swt_gen="true">
<arg name="aString" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="stringByDeletingLastPathComponent" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="stringByDeletingPathExtension" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="stringByExpandingTildeInPath">
<retval></retval>
</method>
<method selector="stringByFoldingWithOptions:locale:">
<arg name="options"></arg>
<arg name="locale"></arg>
<retval></retval>
</method>
<method selector="stringByPaddingToLength:withString:startingAtIndex:">
<arg name="newLength"></arg>
<arg name="padString"></arg>
<arg name="padIndex"></arg>
<retval></retval>
</method>
<method selector="stringByReplacingCharactersInRange:withString:">
<arg name="range"></arg>
<arg name="replacement"></arg>
<retval></retval>
</method>
<method selector="stringByReplacingOccurrencesOfString:withString:" swt_gen="true">
<arg name="target" swt_gen="true"></arg>
<arg name="replacement" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="stringByReplacingOccurrencesOfString:withString:options:range:">
<arg name="target"></arg>
<arg name="replacement"></arg>
<arg name="options"></arg>
<arg name="searchRange"></arg>
<retval></retval>
</method>
<method selector="stringByReplacingPercentEscapesUsingEncoding:">
<arg name="enc"></arg>
<retval></retval>
</method>
<method selector="stringByResolvingSymlinksInPath">
<retval></retval>
</method>
<method selector="stringByStandardizingPath">
<retval></retval>
</method>
<method selector="stringByTrimmingCharactersInSet:">
<arg name="set"></arg>
<retval></retval>
</method>
<method class_method="true" selector="stringWithCString:">
<arg name="bytes"></arg>
<retval></retval>
</method>
<method class_method="true" selector="stringWithCString:encoding:">
<arg name="cString"></arg>
<arg name="enc"></arg>
<retval></retval>
</method>
<method class_method="true" selector="stringWithCString:length:">
<arg name="bytes"></arg>
<arg name="length"></arg>
<retval></retval>
</method>
<method class_method="true" selector="stringWithCharacters:length:" swt_gen="true">
<arg name="characters" swt_gen="true" swt_java_type="char[]"></arg>
<arg name="length" swt_gen="true"></arg>
<retval swt_alloc="true" swt_gen="true" swt_java_type="NSString"></retval>
</method>
<method class_method="true" selector="stringWithContentsOfFile:">
<arg name="path"></arg>
<retval></retval>
</method>
<method class_method="true" selector="stringWithContentsOfFile:encoding:error:">
<arg name="path"></arg>
<arg name="enc"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method class_method="true" selector="stringWithContentsOfFile:usedEncoding:error:">
<arg name="path"></arg>
<arg name="enc"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method class_method="true" selector="stringWithContentsOfURL:">
<arg name="url"></arg>
<retval></retval>
</method>
<method class_method="true" selector="stringWithContentsOfURL:encoding:error:">
<arg name="url"></arg>
<arg name="enc"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method class_method="true" selector="stringWithContentsOfURL:usedEncoding:error:">
<arg name="url"></arg>
<arg name="enc"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method class_method="true" selector="stringWithFormat:">
<arg name="stringWithFormat"></arg>
<retval></retval>
</method>
<method class_method="true" selector="stringWithString:">
<arg name="string"></arg>
<retval></retval>
</method>
<method class_method="true" selector="stringWithUTF8String:" swt_gen="true">
<arg name="nullTerminatedCString" swt_gen="true"></arg>
<retval swt_gen="true" swt_java_type="NSString"></retval>
</method>
<method selector="stringsByAppendingPaths:">
<arg name="paths"></arg>
<retval></retval>
</method>
<method selector="substringFromIndex:">
<arg name="from"></arg>
<retval></retval>
</method>
<method selector="substringToIndex:">
<arg name="to"></arg>
<retval></retval>
</method>
<method selector="substringWithRange:">
<arg name="range"></arg>
<retval></retval>
</method>
<method selector="uppercaseString">
<retval></retval>
</method>
<method selector="writeToFile:atomically:">
<arg name="path"></arg>
<arg name="useAuxiliaryFile"></arg>
<retval></retval>
</method>
<method selector="writeToFile:atomically:encoding:error:">
<arg name="path"></arg>
<arg name="useAuxiliaryFile"></arg>
<arg name="enc"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="writeToURL:atomically:">
<arg name="url"></arg>
<arg name="atomically"></arg>
<retval></retval>
</method>
<method selector="writeToURL:atomically:encoding:error:">
<arg name="url"></arg>
<arg name="useAuxiliaryFile"></arg>
<arg name="enc"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
</class>
<class name="NSTask">
<method selector="arguments">
<retval></retval>
</method>
<method selector="currentDirectoryPath">
<retval></retval>
</method>
<method selector="environment">
<retval></retval>
</method>
<method selector="init">
<retval></retval>
</method>
<method selector="interrupt">
<retval></retval>
</method>
<method selector="isRunning">
<retval></retval>
</method>
<method selector="launch">
<retval></retval>
</method>
<method selector="launchPath">
<retval></retval>
</method>
<method class_method="true" selector="launchedTaskWithLaunchPath:arguments:">
<arg name="path"></arg>
<arg name="arguments"></arg>
<retval></retval>
</method>
<method selector="processIdentifier">
<retval></retval>
</method>
<method selector="resume">
<retval></retval>
</method>
<method selector="setArguments:">
<arg name="arguments"></arg>
<retval></retval>
</method>
<method selector="setCurrentDirectoryPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="setEnvironment:">
<arg name="dict"></arg>
<retval></retval>
</method>
<method selector="setLaunchPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="setStandardError:">
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="setStandardInput:">
<arg name="input"></arg>
<retval></retval>
</method>
<method selector="setStandardOutput:">
<arg name="output"></arg>
<retval></retval>
</method>
<method selector="standardError">
<retval></retval>
</method>
<method selector="standardInput">
<retval></retval>
</method>
<method selector="standardOutput">
<retval></retval>
</method>
<method selector="suspend">
<retval></retval>
</method>
<method selector="terminate">
<retval></retval>
</method>
<method selector="terminationStatus">
<retval></retval>
</method>
<method selector="waitUntilExit">
<retval></retval>
</method>
</class>
<class name="NSThread" swt_gen="mixed">
<method class_method="true" selector="callStackReturnAddresses">
<retval></retval>
</method>
<method selector="cancel">
<retval></retval>
</method>
<method class_method="true" selector="currentThread" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="detachNewThreadSelector:toTarget:withObject:">
<arg name="selector"></arg>
<arg name="target"></arg>
<arg name="argument"></arg>
<retval></retval>
</method>
<method class_method="true" selector="exit">
<retval></retval>
</method>
<method selector="init">
<retval></retval>
</method>
<method selector="initWithTarget:selector:object:">
<arg name="target"></arg>
<arg name="selector"></arg>
<arg name="argument"></arg>
<retval></retval>
</method>
<method selector="isCancelled">
<retval></retval>
</method>
<method selector="isExecuting">
<retval></retval>
</method>
<method selector="isFinished">
<retval></retval>
</method>
<method class_method="true" selector="isMainThread" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="isMainThread">
<retval></retval>
</method>
<method class_method="true" selector="isMultiThreaded">
<retval></retval>
</method>
<method selector="main">
<retval></retval>
</method>
<method class_method="true" selector="mainThread">
<retval></retval>
</method>
<method selector="name">
<retval></retval>
</method>
<method selector="setName:">
<arg name="n"></arg>
<retval></retval>
</method>
<method selector="setStackSize:">
<arg name="s"></arg>
<retval></retval>
</method>
<method class_method="true" selector="setThreadPriority:">
<arg name="p"></arg>
<retval></retval>
</method>
<method class_method="true" selector="sleepForTimeInterval:">
<arg name="ti"></arg>
<retval></retval>
</method>
<method class_method="true" selector="sleepUntilDate:">
<arg name="date"></arg>
<retval></retval>
</method>
<method selector="stackSize">
<retval></retval>
</method>
<method selector="start">
<retval></retval>
</method>
<method selector="threadDictionary" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="threadPriority">
<retval></retval>
</method>
</class>
<class name="NSTimeZone" swt_gen="mixed">
<method selector="abbreviation">
<retval></retval>
</method>
<method class_method="true" selector="abbreviationDictionary">
<retval></retval>
</method>
<method selector="abbreviationForDate:">
<arg name="aDate"></arg>
<retval></retval>
</method>
<method selector="data">
<retval></retval>
</method>
<method selector="daylightSavingTimeOffset">
<retval></retval>
</method>
<method selector="daylightSavingTimeOffsetForDate:">
<arg name="aDate"></arg>
<retval></retval>
</method>
<method class_method="true" selector="defaultTimeZone" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="description">
<retval></retval>
</method>
<method selector="initWithName:">
<arg name="tzName"></arg>
<retval></retval>
</method>
<method selector="initWithName:data:">
<arg name="tzName"></arg>
<arg name="aData"></arg>
<retval></retval>
</method>
<method selector="isDaylightSavingTime">
<retval></retval>
</method>
<method selector="isDaylightSavingTimeForDate:">
<arg name="aDate"></arg>
<retval></retval>
</method>
<method selector="isEqualToTimeZone:">
<arg name="aTimeZone"></arg>
<retval></retval>
</method>
<method class_method="true" selector="knownTimeZoneNames">
<retval></retval>
</method>
<method class_method="true" selector="localTimeZone">
<retval></retval>
</method>
<method selector="localizedName:locale:">
<arg name="style"></arg>
<arg name="locale"></arg>
<retval></retval>
</method>
<method selector="name">
<retval></retval>
</method>
<method selector="nextDaylightSavingTimeTransition">
<retval></retval>
</method>
<method selector="nextDaylightSavingTimeTransitionAfterDate:">
<arg name="aDate"></arg>
<retval></retval>
</method>
<method class_method="true" selector="resetSystemTimeZone">
<retval></retval>
</method>
<method selector="secondsFromGMT">
<retval></retval>
</method>
<method selector="secondsFromGMTForDate:">
<arg name="aDate"></arg>
<retval></retval>
</method>
<method class_method="true" selector="setDefaultTimeZone:">
<arg name="aTimeZone"></arg>
<retval></retval>
</method>
<method class_method="true" selector="systemTimeZone">
<retval></retval>
</method>
<method class_method="true" selector="timeZoneForSecondsFromGMT:">
<arg name="seconds"></arg>
<retval></retval>
</method>
<method class_method="true" selector="timeZoneWithAbbreviation:">
<arg name="abbreviation"></arg>
<retval></retval>
</method>
<method class_method="true" selector="timeZoneWithName:">
<arg name="tzName"></arg>
<retval></retval>
</method>
<method class_method="true" selector="timeZoneWithName:data:">
<arg name="tzName"></arg>
<arg name="aData"></arg>
<retval></retval>
</method>
</class>
<class name="NSTimer" swt_gen="mixed">
<method selector="fire">
<retval></retval>
</method>
<method selector="fireDate">
<retval></retval>
</method>
<method selector="initWithFireDate:interval:target:selector:userInfo:repeats:">
<arg name="date"></arg>
<arg name="ti"></arg>
<arg name="t"></arg>
<arg name="s"></arg>
<arg name="ui"></arg>
<arg name="rep"></arg>
<retval></retval>
</method>
<method selector="invalidate" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="isValid">
<retval></retval>
</method>
<method class_method="true" selector="scheduledTimerWithTimeInterval:invocation:repeats:">
<arg name="ti"></arg>
<arg name="invocation"></arg>
<arg name="yesOrNo"></arg>
<retval></retval>
</method>
<method class_method="true" selector="scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:" swt_gen="true">
<arg name="ti" swt_gen="true"></arg>
<arg name="aTarget" swt_gen="true"></arg>
<arg name="aSelector" swt_gen="true"></arg>
<arg name="userInfo" swt_gen="true"></arg>
<arg name="yesOrNo" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="setFireDate:" swt_gen="true">
<arg name="date" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method selector="timeInterval">
<retval></retval>
</method>
<method class_method="true" selector="timerWithTimeInterval:invocation:repeats:">
<arg name="ti"></arg>
<arg name="invocation"></arg>
<arg name="yesOrNo"></arg>
<retval></retval>
</method>
<method class_method="true" selector="timerWithTimeInterval:target:selector:userInfo:repeats:">
<arg name="ti"></arg>
<arg name="aTarget"></arg>
<arg name="aSelector"></arg>
<arg name="userInfo"></arg>
<arg name="yesOrNo"></arg>
<retval></retval>
</method>
<method selector="userInfo" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
</class>
<class name="NSURL" swt_gen="mixed">
<method selector="URLHandleUsingCache:">
<arg name="shouldUseCache"></arg>
<retval></retval>
</method>
<method class_method="true" selector="URLWithString:" swt_gen="true">
<arg name="URLString" swt_gen="true"></arg>
<retval swt_gen="true" swt_java_type="NSURL"></retval>
</method>
<method class_method="true" selector="URLWithString:relativeToURL:">
<arg name="URLString"></arg>
<arg name="baseURL"></arg>
<retval></retval>
</method>
<method selector="absoluteString" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="absoluteURL">
<retval></retval>
</method>
<method selector="baseURL">
<retval></retval>
</method>
<method class_method="true" selector="fileURLWithPath:" swt_gen="true">
<arg name="path" swt_gen="true"></arg>
<retval swt_gen="true" swt_java_type="NSURL"></retval>
</method>
<method class_method="true" selector="fileURLWithPath:isDirectory:">
<arg name="path"></arg>
<arg name="isDir"></arg>
<retval></retval>
</method>
<method selector="fragment">
<retval></retval>
</method>
<method selector="host">
<retval></retval>
</method>
<method selector="initFileURLWithPath:">
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="initFileURLWithPath:isDirectory:">
<arg name="path"></arg>
<arg name="isDir"></arg>
<retval></retval>
</method>
<method selector="initWithScheme:host:path:">
<arg name="scheme"></arg>
<arg name="host"></arg>
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="initWithString:">
<arg name="URLString"></arg>
<retval></retval>
</method>
<method selector="initWithString:relativeToURL:">
<arg name="URLString"></arg>
<arg name="baseURL"></arg>
<retval></retval>
</method>
<method selector="isFileURL">
<retval></retval>
</method>
<method selector="loadResourceDataNotifyingClient:usingCache:">
<arg name="client"></arg>
<arg name="shouldUseCache"></arg>
<retval></retval>
</method>
<method selector="parameterString">
<retval></retval>
</method>
<method selector="password">
<retval></retval>
</method>
<method selector="path">
<retval></retval>
</method>
<method selector="port">
<retval></retval>
</method>
<method selector="propertyForKey:">
<arg name="propertyKey"></arg>
<retval></retval>
</method>
<method selector="query">
<retval></retval>
</method>
<method selector="relativePath">
<retval></retval>
</method>
<method selector="relativeString">
<retval></retval>
</method>
<method selector="resourceDataUsingCache:">
<arg name="shouldUseCache"></arg>
<retval></retval>
</method>
<method selector="resourceSpecifier">
<retval></retval>
</method>
<method selector="scheme">
<retval></retval>
</method>
<method selector="setProperty:forKey:">
<arg name="property"></arg>
<arg name="propertyKey"></arg>
<retval></retval>
</method>
<method selector="setResourceData:">
<arg name="data"></arg>
<retval></retval>
</method>
<method selector="standardizedURL">
<retval></retval>
</method>
<method selector="user">
<retval></retval>
</method>
</class>
<class name="NSURLAuthenticationChallenge">
<method selector="error">
<retval></retval>
</method>
<method selector="failureResponse">
<retval></retval>
</method>
<method selector="initWithAuthenticationChallenge:sender:">
<arg name="challenge"></arg>
<arg name="sender"></arg>
<retval></retval>
</method>
<method selector="initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:">
<arg name="space"></arg>
<arg name="credential"></arg>
<arg name="previousFailureCount"></arg>
<arg name="response"></arg>
<arg name="error"></arg>
<arg name="sender"></arg>
<retval></retval>
</method>
<method selector="previousFailureCount">
<retval></retval>
</method>
<method selector="proposedCredential">
<retval></retval>
</method>
<method selector="protectionSpace">
<retval></retval>
</method>
<method selector="sender">
<retval></retval>
</method>
</class>
<class name="NSURLCache">
<method selector="cachedResponseForRequest:">
<arg name="request"></arg>
<retval></retval>
</method>
<method selector="currentDiskUsage">
<retval></retval>
</method>
<method selector="currentMemoryUsage">
<retval></retval>
</method>
<method selector="diskCapacity">
<retval></retval>
</method>
<method selector="initWithMemoryCapacity:diskCapacity:diskPath:">
<arg name="memoryCapacity"></arg>
<arg name="diskCapacity"></arg>
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="memoryCapacity">
<retval></retval>
</method>
<method selector="removeAllCachedResponses">
<retval></retval>
</method>
<method selector="removeCachedResponseForRequest:">
<arg name="request"></arg>
<retval></retval>
</method>
<method selector="setDiskCapacity:">
<arg name="diskCapacity"></arg>
<retval></retval>
</method>
<method selector="setMemoryCapacity:">
<arg name="memoryCapacity"></arg>
<retval></retval>
</method>
<method class_method="true" selector="setSharedURLCache:">
<arg name="cache"></arg>
<retval></retval>
</method>
<method class_method="true" selector="sharedURLCache">
<retval></retval>
</method>
<method selector="storeCachedResponse:forRequest:">
<arg name="cachedResponse"></arg>
<arg name="request"></arg>
<retval></retval>
</method>
</class>
<class name="NSURLConnection">
<method class_method="true" selector="canHandleRequest:">
<arg name="request"></arg>
<retval></retval>
</method>
<method selector="cancel">
<retval></retval>
</method>
<method class_method="true" selector="connectionWithRequest:delegate:">
<arg name="request"></arg>
<arg name="delegate"></arg>
<retval></retval>
</method>
<method selector="initWithRequest:delegate:">
<arg name="request"></arg>
<arg name="delegate"></arg>
<retval></retval>
</method>
<method selector="initWithRequest:delegate:startImmediately:">
<arg name="request"></arg>
<arg name="delegate"></arg>
<arg name="startImmediately"></arg>
<retval></retval>
</method>
<method selector="scheduleInRunLoop:forMode:">
<arg name="aRunLoop"></arg>
<arg name="mode"></arg>
<retval></retval>
</method>
<method class_method="true" selector="sendSynchronousRequest:returningResponse:error:">
<arg name="request"></arg>
<arg name="response"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="start">
<retval></retval>
</method>
<method selector="unscheduleFromRunLoop:forMode:">
<arg name="aRunLoop"></arg>
<arg name="mode"></arg>
<retval></retval>
</method>
</class>
<class name="NSURLCredential">
<method class_method="true" selector="credentialWithUser:password:persistence:">
<arg name="user"></arg>
<arg name="password"></arg>
<arg name="persistence"></arg>
<retval></retval>
</method>
<method selector="hasPassword">
<retval></retval>
</method>
<method selector="initWithUser:password:persistence:">
<arg name="user"></arg>
<arg name="password"></arg>
<arg name="persistence"></arg>
<retval></retval>
</method>
<method selector="password">
<retval></retval>
</method>
<method selector="persistence">
<retval></retval>
</method>
<method selector="user">
<retval></retval>
</method>
</class>
<class name="NSURLCredentialStorage">
<method selector="allCredentials">
<retval></retval>
</method>
<method selector="credentialsForProtectionSpace:">
<arg name="space"></arg>
<retval></retval>
</method>
<method selector="defaultCredentialForProtectionSpace:">
<arg name="space"></arg>
<retval></retval>
</method>
<method selector="removeCredential:forProtectionSpace:">
<arg name="credential"></arg>
<arg name="space"></arg>
<retval></retval>
</method>
<method selector="setCredential:forProtectionSpace:">
<arg name="credential"></arg>
<arg name="space"></arg>
<retval></retval>
</method>
<method selector="setDefaultCredential:forProtectionSpace:">
<arg name="credential"></arg>
<arg name="space"></arg>
<retval></retval>
</method>
<method class_method="true" selector="sharedCredentialStorage">
<retval></retval>
</method>
</class>
<class name="NSURLDownload" swt_gen="mixed">
<method class_method="true" selector="canResumeDownloadDecodedWithEncodingMIMEType:">
<arg name="MIMEType"></arg>
<retval></retval>
</method>
<method selector="cancel" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="deletesFileUponFailure">
<retval></retval>
</method>
<method selector="initWithRequest:delegate:">
<arg name="request"></arg>
<arg name="delegate"></arg>
<retval></retval>
</method>
<method selector="initWithResumeData:delegate:path:">
<arg name="resumeData"></arg>
<arg name="delegate"></arg>
<arg name="path"></arg>
<retval></retval>
</method>
<method selector="request">
<retval></retval>
</method>
<method selector="resumeData">
<retval></retval>
</method>
<method selector="setDeletesFileUponFailure:">
<arg name="deletesFileUponFailure"></arg>
<retval></retval>
</method>
<method selector="setDestination:allowOverwrite:" swt_gen="true">
<arg name="path" swt_gen="true"></arg>
<arg name="allowOverwrite" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
</class>
<class name="NSURLHandle">
<method class_method="true" selector="URLHandleClassForURL:">
<arg name="anURL"></arg>
<retval></retval>
</method>
<method selector="addClient:">
<arg name="client"></arg>
<retval></retval>
</method>
<method selector="availableResourceData">
<retval></retval>
</method>
<method selector="backgroundLoadDidFailWithReason:">
<arg name="reason"></arg>
<retval></retval>
</method>
<method selector="beginLoadInBackground">
<retval></retval>
</method>
<method class_method="true" selector="cachedHandleForURL:">
<arg name="anURL"></arg>
<retval></retval>
</method>
<method class_method="true" selector="canInitWithURL:">
<arg name="anURL"></arg>
<retval></retval>
</method>
<method selector="cancelLoadInBackground">
<retval></retval>
</method>
<method selector="didLoadBytes:loadComplete:">
<arg name="newBytes"></arg>
<arg name="yorn"></arg>
<retval></retval>
</method>
<method selector="endLoadInBackground">
<retval></retval>
</method>
<method selector="expectedResourceDataSize">
<retval></retval>
</method>
<method selector="failureReason">
<retval></retval>
</method>
<method selector="flushCachedData">
<retval></retval>
</method>
<method selector="initWithURL:cached:">
<arg name="anURL"></arg>
<arg name="willCache"></arg>
<retval></retval>
</method>
<method selector="loadInBackground">
<retval></retval>
</method>
<method selector="loadInForeground">
<retval></retval>
</method>
<method selector="propertyForKey:">
<arg name="propertyKey"></arg>
<retval></retval>
</method>
<method selector="propertyForKeyIfAvailable:">
<arg name="propertyKey"></arg>
<retval></retval>
</method>
<method class_method="true" selector="registerURLHandleClass:">
<arg name="anURLHandleSubclass"></arg>
<retval></retval>
</method>
<method selector="removeClient:">
<arg name="client"></arg>
<retval></retval>
</method>
<method selector="resourceData">
<retval></retval>
</method>
<method selector="status">
<retval></retval>
</method>
<method selector="writeData:">
<arg name="data"></arg>
<retval></retval>
</method>
<method selector="writeProperty:forKey:">
<arg name="propertyValue"></arg>
<arg name="propertyKey"></arg>
<retval></retval>
</method>
</class>
<class name="NSURLProtectionSpace">
<method selector="authenticationMethod">
<retval></retval>
</method>
<method selector="host">
<retval></retval>
</method>
<method selector="initWithHost:port:protocol:realm:authenticationMethod:">
<arg name="host"></arg>
<arg name="port"></arg>
<arg name="protocol"></arg>
<arg name="realm"></arg>
<arg name="authenticationMethod"></arg>
<retval></retval>
</method>
<method selector="initWithProxyHost:port:type:realm:authenticationMethod:">
<arg name="host"></arg>
<arg name="port"></arg>
<arg name="type"></arg>
<arg name="realm"></arg>
<arg name="authenticationMethod"></arg>
<retval></retval>
</method>
<method selector="isProxy">
<retval></retval>
</method>
<method selector="port">
<retval></retval>
</method>
<method selector="protocol">
<retval></retval>
</method>
<method selector="proxyType">
<retval></retval>
</method>
<method selector="realm">
<retval></retval>
</method>
<method selector="receivesCredentialSecurely">
<retval></retval>
</method>
</class>
<class name="NSURLProtocol">
<method selector="cachedResponse">
<retval></retval>
</method>
<method class_method="true" selector="canInitWithRequest:">
<arg name="request"></arg>
<retval></retval>
</method>
<method class_method="true" selector="canonicalRequestForRequest:">
<arg name="request"></arg>
<retval></retval>
</method>
<method selector="client">
<retval></retval>
</method>
<method selector="initWithRequest:cachedResponse:client:">
<arg name="request"></arg>
<arg name="cachedResponse"></arg>
<arg name="client"></arg>
<retval></retval>
</method>
<method class_method="true" selector="propertyForKey:inRequest:">
<arg name="key"></arg>
<arg name="request"></arg>
<retval></retval>
</method>
<method class_method="true" selector="registerClass:">
<arg name="protocolClass"></arg>
<retval></retval>
</method>
<method class_method="true" selector="removePropertyForKey:inRequest:">
<arg name="key"></arg>
<arg name="request"></arg>
<retval></retval>
</method>
<method selector="request">
<retval></retval>
</method>
<method class_method="true" selector="requestIsCacheEquivalent:toRequest:">
<arg name="a"></arg>
<arg name="b"></arg>
<retval></retval>
</method>
<method class_method="true" selector="setProperty:forKey:inRequest:">
<arg name="value"></arg>
<arg name="key"></arg>
<arg name="request"></arg>
<retval></retval>
</method>
<method selector="startLoading">
<retval></retval>
</method>
<method selector="stopLoading">
<retval></retval>
</method>
<method class_method="true" selector="unregisterClass:">
<arg name="protocolClass"></arg>
<retval></retval>
</method>
</class>
<class name="NSURLRequest" swt_gen="mixed">
<method selector="HTTPBody">
<retval></retval>
</method>
<method selector="HTTPBodyStream">
<retval></retval>
</method>
<method selector="HTTPMethod">
<retval></retval>
</method>
<method selector="HTTPShouldHandleCookies">
<retval></retval>
</method>
<method selector="URL" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="allHTTPHeaderFields">
<retval></retval>
</method>
<method selector="cachePolicy">
<retval></retval>
</method>
<method selector="initWithURL:" swt_gen="true">
<arg name="URL" swt_gen="true"></arg>
<retval swt_gen="true" swt_java_type="NSURLRequest"></retval>
</method>
<method selector="initWithURL:cachePolicy:timeoutInterval:">
<arg name="URL"></arg>
<arg name="cachePolicy"></arg>
<arg name="timeoutInterval"></arg>
<retval></retval>
</method>
<method selector="mainDocumentURL">
<retval></retval>
</method>
<method class_method="true" selector="requestWithURL:" swt_gen="true">
<arg name="URL" swt_gen="true"></arg>
<retval swt_alloc="true" swt_gen="true" swt_java_type="NSURLRequest"></retval>
</method>
<method class_method="true" selector="requestWithURL:cachePolicy:timeoutInterval:">
<arg name="URL"></arg>
<arg name="cachePolicy"></arg>
<arg name="timeoutInterval"></arg>
<retval></retval>
</method>
<method selector="timeoutInterval">
<retval></retval>
</method>
<method selector="valueForHTTPHeaderField:">
<arg name="field"></arg>
<retval></retval>
</method>
</class>
<class name="NSURLResponse">
<method selector="MIMEType">
<retval></retval>
</method>
<method selector="URL">
<retval></retval>
</method>
<method selector="expectedContentLength">
<retval></retval>
</method>
<method selector="initWithURL:MIMEType:expectedContentLength:textEncodingName:">
<arg name="URL"></arg>
<arg name="MIMEType"></arg>
<arg name="length"></arg>
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="suggestedFilename">
<retval></retval>
</method>
<method selector="textEncodingName">
<retval></retval>
</method>
</class>
<class name="NSUnarchiver" swt_superclass="NSCoder">
<method class_method="true" selector="classNameDecodedForArchiveClassName:">
<arg name="inArchiveName"></arg>
<retval></retval>
</method>
<method selector="classNameDecodedForArchiveClassName:">
<arg name="inArchiveName"></arg>
<retval></retval>
</method>
<method selector="decodeClassName:asClassName:">
<arg name="inArchiveName"></arg>
<arg name="trueName"></arg>
<retval></retval>
</method>
<method class_method="true" selector="decodeClassName:asClassName:">
<arg name="inArchiveName"></arg>
<arg name="trueName"></arg>
<retval></retval>
</method>
<method selector="initForReadingWithData:">
<arg name="data"></arg>
<retval></retval>
</method>
<method selector="isAtEnd">
<retval></retval>
</method>
<method selector="objectZone">
<retval></retval>
</method>
<method selector="replaceObject:withObject:">
<arg name="object"></arg>
<arg name="newObject"></arg>
<retval></retval>
</method>
<method selector="setObjectZone:">
<arg name="zone"></arg>
<retval></retval>
</method>
<method selector="systemVersion">
<retval></retval>
</method>
<method class_method="true" selector="unarchiveObjectWithData:">
<arg name="data"></arg>
<retval></retval>
</method>
<method class_method="true" selector="unarchiveObjectWithFile:">
<arg name="path"></arg>
<retval></retval>
</method>
</class>
<class name="NSUndoManager">
<method selector="beginUndoGrouping">
<retval></retval>
</method>
<method selector="canRedo">
<retval></retval>
</method>
<method selector="canUndo">
<retval></retval>
</method>
<method selector="disableUndoRegistration">
<retval></retval>
</method>
<method selector="enableUndoRegistration">
<retval></retval>
</method>
<method selector="endUndoGrouping">
<retval></retval>
</method>
<method selector="groupingLevel">
<retval></retval>
</method>
<method selector="groupsByEvent">
<retval></retval>
</method>
<method selector="isRedoing">
<retval></retval>
</method>
<method selector="isUndoRegistrationEnabled">
<retval></retval>
</method>
<method selector="isUndoing">
<retval></retval>
</method>
<method selector="levelsOfUndo">
<retval></retval>
</method>
<method selector="prepareWithInvocationTarget:">
<arg name="target"></arg>
<retval></retval>
</method>
<method selector="redo">
<retval></retval>
</method>
<method selector="redoActionName">
<retval></retval>
</method>
<method selector="redoMenuItemTitle">
<retval></retval>
</method>
<method selector="redoMenuTitleForUndoActionName:">
<arg name="actionName"></arg>
<retval></retval>
</method>
<method selector="registerUndoWithTarget:selector:object:">
<arg name="target"></arg>
<arg name="selector"></arg>
<arg name="anObject"></arg>
<retval></retval>
</method>
<method selector="removeAllActions">
<retval></retval>
</method>
<method selector="removeAllActionsWithTarget:">
<arg name="target"></arg>
<retval></retval>
</method>
<method selector="runLoopModes">
<retval></retval>
</method>
<method selector="setActionName:">
<arg name="actionName"></arg>
<retval></retval>
</method>
<method selector="setGroupsByEvent:">
<arg name="groupsByEvent"></arg>
<retval></retval>
</method>
<method selector="setLevelsOfUndo:">
<arg name="levels"></arg>
<retval></retval>
</method>
<method selector="setRunLoopModes:">
<arg name="runLoopModes"></arg>
<retval></retval>
</method>
<method selector="undo">
<retval></retval>
</method>
<method selector="undoActionName">
<retval></retval>
</method>
<method selector="undoMenuItemTitle">
<retval></retval>
</method>
<method selector="undoMenuTitleForUndoActionName:">
<arg name="actionName"></arg>
<retval></retval>
</method>
<method selector="undoNestedGroup">
<retval></retval>
</method>
</class>
<class name="NSUniqueIDSpecifier" swt_superclass="NSScriptObjectSpecifier">
<method selector="initWithContainerClassDescription:containerSpecifier:key:uniqueID:">
<arg name="classDesc"></arg>
<arg name="container"></arg>
<arg name="property"></arg>
<arg name="uniqueID"></arg>
<retval></retval>
</method>
<method selector="setUniqueID:">
<arg name="uniqueID"></arg>
<retval></retval>
</method>
<method selector="uniqueID">
<retval></retval>
</method>
</class>
<class name="NSUserDefaults">
<method selector="addSuiteNamed:">
<arg name="suiteName"></arg>
<retval></retval>
</method>
<method selector="arrayForKey:">
<arg name="defaultName"></arg>
<retval></retval>
</method>
<method selector="boolForKey:">
<arg name="defaultName"></arg>
<retval></retval>
</method>
<method selector="dataForKey:">
<arg name="defaultName"></arg>
<retval></retval>
</method>
<method selector="dictionaryForKey:">
<arg name="defaultName"></arg>
<retval></retval>
</method>
<method selector="dictionaryRepresentation">
<retval></retval>
</method>
<method selector="doubleForKey:">
<arg name="defaultName"></arg>
<retval></retval>
</method>
<method selector="floatForKey:">
<arg name="defaultName"></arg>
<retval></retval>
</method>
<method selector="init">
<retval></retval>
</method>
<method selector="initWithUser:">
<arg name="username"></arg>
<retval></retval>
</method>
<method selector="integerForKey:">
<arg name="defaultName"></arg>
<retval></retval>
</method>
<method selector="objectForKey:">
<arg name="defaultName"></arg>
<retval></retval>
</method>
<method selector="objectIsForcedForKey:">
<arg name="key"></arg>
<retval></retval>
</method>
<method selector="objectIsForcedForKey:inDomain:">
<arg name="key"></arg>
<arg name="domain"></arg>
<retval></retval>
</method>
<method selector="persistentDomainForName:">
<arg name="domainName"></arg>
<retval></retval>
</method>
<method selector="persistentDomainNames">
<retval></retval>
</method>
<method selector="registerDefaults:">
<arg name="registrationDictionary"></arg>
<retval></retval>
</method>
<method selector="removeObjectForKey:">
<arg name="defaultName"></arg>
<retval></retval>
</method>
<method selector="removePersistentDomainForName:">
<arg name="domainName"></arg>
<retval></retval>
</method>
<method selector="removeSuiteNamed:">
<arg name="suiteName"></arg>
<retval></retval>
</method>
<method selector="removeVolatileDomainForName:">
<arg name="domainName"></arg>
<retval></retval>
</method>
<method class_method="true" selector="resetStandardUserDefaults">
<retval></retval>
</method>
<method selector="setBool:forKey:">
<arg name="value"></arg>
<arg name="defaultName"></arg>
<retval></retval>
</method>
<method selector="setDouble:forKey:">
<arg name="value"></arg>
<arg name="defaultName"></arg>
<retval></retval>
</method>
<method selector="setFloat:forKey:">
<arg name="value"></arg>
<arg name="defaultName"></arg>
<retval></retval>
</method>
<method selector="setInteger:forKey:">
<arg name="value"></arg>
<arg name="defaultName"></arg>
<retval></retval>
</method>
<method selector="setObject:forKey:">
<arg name="value"></arg>
<arg name="defaultName"></arg>
<retval></retval>
</method>
<method selector="setPersistentDomain:forName:">
<arg name="domain"></arg>
<arg name="domainName"></arg>
<retval></retval>
</method>
<method selector="setVolatileDomain:forName:">
<arg name="domain"></arg>
<arg name="domainName"></arg>
<retval></retval>
</method>
<method class_method="true" selector="standardUserDefaults">
<retval></retval>
</method>
<method selector="stringArrayForKey:">
<arg name="defaultName"></arg>
<retval></retval>
</method>
<method selector="stringForKey:">
<arg name="defaultName"></arg>
<retval></retval>
</method>
<method selector="synchronize">
<retval></retval>
</method>
<method selector="volatileDomainForName:">
<arg name="domainName"></arg>
<retval></retval>
</method>
<method selector="volatileDomainNames">
<retval></retval>
</method>
</class>
<class name="NSValue" swt_gen="mixed">
<method selector="getValue:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="initWithBytes:objCType:">
<arg name="value"></arg>
<arg name="type"></arg>
<retval></retval>
</method>
<method selector="isEqualToValue:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="nonretainedObjectValue">
<retval></retval>
</method>
<method selector="objCType" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="pointValue" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="pointerValue">
<retval></retval>
</method>
<method selector="rangeValue" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="rectValue" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method selector="sizeValue" swt_gen="true">
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="value:withObjCType:">
<arg name="value"></arg>
<arg name="type"></arg>
<retval></retval>
</method>
<method class_method="true" selector="valueWithBytes:objCType:">
<arg name="value"></arg>
<arg name="type"></arg>
<retval></retval>
</method>
<method class_method="true" selector="valueWithNonretainedObject:">
<arg name="anObject"></arg>
<retval></retval>
</method>
<method class_method="true" selector="valueWithPoint:" swt_gen="true">
<arg name="point" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="valueWithPointer:">
<arg name="pointer"></arg>
<retval></retval>
</method>
<method class_method="true" selector="valueWithRange:" swt_gen="true">
<arg name="range" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="valueWithRect:" swt_gen="true">
<arg name="rect" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
<method class_method="true" selector="valueWithSize:" swt_gen="true">
<arg name="size" swt_gen="true"></arg>
<retval swt_gen="true"></retval>
</method>
</class>
<class name="NSValueTransformer">
<method class_method="true" selector="allowsReverseTransformation">
<retval></retval>
</method>
<method selector="reverseTransformedValue:">
<arg name="value"></arg>
<retval></retval>
</method>
<method class_method="true" selector="setValueTransformer:forName:">
<arg name="transformer"></arg>
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="transformedValue:">
<arg name="value"></arg>
<retval></retval>
</method>
<method class_method="true" selector="transformedValueClass">
<retval></retval>
</method>
<method class_method="true" selector="valueTransformerForName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method class_method="true" selector="valueTransformerNames">
<retval></retval>
</method>
</class>
<class name="NSWhoseSpecifier" swt_superclass="NSScriptObjectSpecifier">
<method selector="endSubelementIdentifier">
<retval></retval>
</method>
<method selector="endSubelementIndex">
<retval></retval>
</method>
<method selector="initWithContainerClassDescription:containerSpecifier:key:test:">
<arg name="classDesc"></arg>
<arg name="container"></arg>
<arg name="property"></arg>
<arg name="test"></arg>
<retval></retval>
</method>
<method selector="setEndSubelementIdentifier:">
<arg name="subelement"></arg>
<retval></retval>
</method>
<method selector="setEndSubelementIndex:">
<arg name="index"></arg>
<retval></retval>
</method>
<method selector="setStartSubelementIdentifier:">
<arg name="subelement"></arg>
<retval></retval>
</method>
<method selector="setStartSubelementIndex:">
<arg name="index"></arg>
<retval></retval>
</method>
<method selector="setTest:">
<arg name="test"></arg>
<retval></retval>
</method>
<method selector="startSubelementIdentifier">
<retval></retval>
</method>
<method selector="startSubelementIndex">
<retval></retval>
</method>
<method selector="test">
<retval></retval>
</method>
</class>
<class name="NSXMLDTD" swt_superclass="NSXMLNode">
<method selector="addChild:">
<arg name="child"></arg>
<retval></retval>
</method>
<method selector="attributeDeclarationForName:elementName:">
<arg name="name"></arg>
<arg name="elementName"></arg>
<retval></retval>
</method>
<method selector="elementDeclarationForName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="entityDeclarationForName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="initWithContentsOfURL:options:error:">
<arg name="url"></arg>
<arg name="mask"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="initWithData:options:error:">
<arg name="data"></arg>
<arg name="mask"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="insertChild:atIndex:">
<arg name="child"></arg>
<arg name="index"></arg>
<retval></retval>
</method>
<method selector="insertChildren:atIndex:">
<arg name="children"></arg>
<arg name="index"></arg>
<retval></retval>
</method>
<method selector="notationDeclarationForName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method class_method="true" selector="predefinedEntityDeclarationForName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="publicID">
<retval></retval>
</method>
<method selector="removeChildAtIndex:">
<arg name="index"></arg>
<retval></retval>
</method>
<method selector="replaceChildAtIndex:withNode:">
<arg name="index"></arg>
<arg name="node"></arg>
<retval></retval>
</method>
<method selector="setChildren:">
<arg name="children"></arg>
<retval></retval>
</method>
<method selector="setPublicID:">
<arg name="publicID"></arg>
<retval></retval>
</method>
<method selector="setSystemID:">
<arg name="systemID"></arg>
<retval></retval>
</method>
<method selector="systemID">
<retval></retval>
</method>
</class>
<class name="NSXMLDTDNode" swt_superclass="NSXMLNode">
<method selector="DTDKind">
<retval></retval>
</method>
<method selector="initWithXMLString:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="isExternal">
<retval></retval>
</method>
<method selector="notationName">
<retval></retval>
</method>
<method selector="publicID">
<retval></retval>
</method>
<method selector="setDTDKind:">
<arg name="kind"></arg>
<retval></retval>
</method>
<method selector="setNotationName:">
<arg name="notationName"></arg>
<retval></retval>
</method>
<method selector="setPublicID:">
<arg name="publicID"></arg>
<retval></retval>
</method>
<method selector="setSystemID:">
<arg name="systemID"></arg>
<retval></retval>
</method>
<method selector="systemID">
<retval></retval>
</method>
</class>
<class name="NSXMLDocument" swt_superclass="NSXMLNode">
<method selector="DTD">
<retval></retval>
</method>
<method selector="MIMEType">
<retval></retval>
</method>
<method selector="XMLData">
<retval></retval>
</method>
<method selector="XMLDataWithOptions:">
<arg name="options"></arg>
<retval></retval>
</method>
<method selector="addChild:">
<arg name="child"></arg>
<retval></retval>
</method>
<method selector="characterEncoding">
<retval></retval>
</method>
<method selector="documentContentKind">
<retval></retval>
</method>
<method selector="initWithContentsOfURL:options:error:">
<arg name="url"></arg>
<arg name="mask"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="initWithData:options:error:">
<arg name="data"></arg>
<arg name="mask"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="initWithRootElement:">
<arg name="element"></arg>
<retval></retval>
</method>
<method selector="initWithXMLString:options:error:">
<arg name="string"></arg>
<arg name="mask"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="insertChild:atIndex:">
<arg name="child"></arg>
<arg name="index"></arg>
<retval></retval>
</method>
<method selector="insertChildren:atIndex:">
<arg name="children"></arg>
<arg name="index"></arg>
<retval></retval>
</method>
<method selector="isStandalone">
<retval></retval>
</method>
<method selector="objectByApplyingXSLT:arguments:error:">
<arg name="xslt"></arg>
<arg name="arguments"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="objectByApplyingXSLTAtURL:arguments:error:">
<arg name="xsltURL"></arg>
<arg name="argument"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="objectByApplyingXSLTString:arguments:error:">
<arg name="xslt"></arg>
<arg name="arguments"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="removeChildAtIndex:">
<arg name="index"></arg>
<retval></retval>
</method>
<method selector="replaceChildAtIndex:withNode:">
<arg name="index"></arg>
<arg name="node"></arg>
<retval></retval>
</method>
<method class_method="true" selector="replacementClassForClass:">
<arg name="cls"></arg>
<retval></retval>
</method>
<method selector="rootElement">
<retval></retval>
</method>
<method selector="setCharacterEncoding:">
<arg name="encoding"></arg>
<retval></retval>
</method>
<method selector="setChildren:">
<arg name="children"></arg>
<retval></retval>
</method>
<method selector="setDTD:">
<arg name="documentTypeDeclaration"></arg>
<retval></retval>
</method>
<method selector="setDocumentContentKind:">
<arg name="kind"></arg>
<retval></retval>
</method>
<method selector="setMIMEType:">
<arg name="MIMEType"></arg>
<retval></retval>
</method>
<method selector="setRootElement:">
<arg name="root"></arg>
<retval></retval>
</method>
<method selector="setStandalone:">
<arg name="standalone"></arg>
<retval></retval>
</method>
<method selector="setVersion:">
<arg name="version"></arg>
<retval></retval>
</method>
<method selector="validateAndReturnError:">
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="version">
<retval></retval>
</method>
</class>
<class name="NSXMLElement" swt_superclass="NSXMLNode">
<method selector="addAttribute:">
<arg name="attribute"></arg>
<retval></retval>
</method>
<method selector="addChild:">
<arg name="child"></arg>
<retval></retval>
</method>
<method selector="addNamespace:">
<arg name="aNamespace"></arg>
<retval></retval>
</method>
<method selector="attributeForLocalName:URI:">
<arg name="localName"></arg>
<arg name="URI"></arg>
<retval></retval>
</method>
<method selector="attributeForName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="attributes">
<retval></retval>
</method>
<method selector="elementsForLocalName:URI:">
<arg name="localName"></arg>
<arg name="URI"></arg>
<retval></retval>
</method>
<method selector="elementsForName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="initWithName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="initWithName:URI:">
<arg name="name"></arg>
<arg name="URI"></arg>
<retval></retval>
</method>
<method selector="initWithName:stringValue:">
<arg name="name"></arg>
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="initWithXMLString:error:">
<arg name="string"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="insertChild:atIndex:">
<arg name="child"></arg>
<arg name="index"></arg>
<retval></retval>
</method>
<method selector="insertChildren:atIndex:">
<arg name="children"></arg>
<arg name="index"></arg>
<retval></retval>
</method>
<method selector="namespaceForPrefix:">
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="namespaces">
<retval></retval>
</method>
<method selector="normalizeAdjacentTextNodesPreservingCDATA:">
<arg name="preserve"></arg>
<retval></retval>
</method>
<method selector="removeAttributeForName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="removeChildAtIndex:">
<arg name="index"></arg>
<retval></retval>
</method>
<method selector="removeNamespaceForPrefix:">
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="replaceChildAtIndex:withNode:">
<arg name="index"></arg>
<arg name="node"></arg>
<retval></retval>
</method>
<method selector="resolveNamespaceForName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="resolvePrefixForNamespaceURI:">
<arg name="namespaceURI"></arg>
<retval></retval>
</method>
<method selector="setAttributes:">
<arg name="attributes"></arg>
<retval></retval>
</method>
<method selector="setAttributesAsDictionary:">
<arg name="attributes"></arg>
<retval></retval>
</method>
<method selector="setChildren:">
<arg name="children"></arg>
<retval></retval>
</method>
<method selector="setNamespaces:">
<arg name="namespaces"></arg>
<retval></retval>
</method>
</class>
<class name="NSXMLNode">
<method class_method="true" selector="DTDNodeWithXMLString:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="URI">
<retval></retval>
</method>
<method selector="XMLString">
<retval></retval>
</method>
<method selector="XMLStringWithOptions:">
<arg name="options"></arg>
<retval></retval>
</method>
<method selector="XPath">
<retval></retval>
</method>
<method class_method="true" selector="attributeWithName:URI:stringValue:">
<arg name="name"></arg>
<arg name="URI"></arg>
<arg name="stringValue"></arg>
<retval></retval>
</method>
<method class_method="true" selector="attributeWithName:stringValue:">
<arg name="name"></arg>
<arg name="stringValue"></arg>
<retval></retval>
</method>
<method selector="canonicalXMLStringPreservingComments:">
<arg name="comments"></arg>
<retval></retval>
</method>
<method selector="childAtIndex:">
<arg name="index"></arg>
<retval></retval>
</method>
<method selector="childCount">
<retval></retval>
</method>
<method selector="children">
<retval></retval>
</method>
<method class_method="true" selector="commentWithStringValue:">
<arg name="stringValue"></arg>
<retval></retval>
</method>
<method selector="description">
<retval></retval>
</method>
<method selector="detach">
<retval></retval>
</method>
<method class_method="true" selector="document">
<retval></retval>
</method>
<method class_method="true" selector="documentWithRootElement:">
<arg name="element"></arg>
<retval></retval>
</method>
<method class_method="true" selector="elementWithName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method class_method="true" selector="elementWithName:URI:">
<arg name="name"></arg>
<arg name="URI"></arg>
<retval></retval>
</method>
<method class_method="true" selector="elementWithName:children:attributes:">
<arg name="name"></arg>
<arg name="children"></arg>
<arg name="attributes"></arg>
<retval></retval>
</method>
<method class_method="true" selector="elementWithName:stringValue:">
<arg name="name"></arg>
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="index">
<retval></retval>
</method>
<method selector="initWithKind:">
<arg name="kind"></arg>
<retval></retval>
</method>
<method selector="initWithKind:options:">
<arg name="kind"></arg>
<arg name="options"></arg>
<retval></retval>
</method>
<method selector="kind">
<retval></retval>
</method>
<method selector="level">
<retval></retval>
</method>
<method selector="localName">
<retval></retval>
</method>
<method class_method="true" selector="localNameForName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="name">
<retval></retval>
</method>
<method class_method="true" selector="namespaceWithName:stringValue:">
<arg name="name"></arg>
<arg name="stringValue"></arg>
<retval></retval>
</method>
<method selector="nextNode">
<retval></retval>
</method>
<method selector="nextSibling">
<retval></retval>
</method>
<method selector="nodesForXPath:error:">
<arg name="xpath"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="objectValue">
<retval></retval>
</method>
<method selector="objectsForXQuery:constants:error:">
<arg name="xquery"></arg>
<arg name="constants"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="objectsForXQuery:error:">
<arg name="xquery"></arg>
<arg name="error"></arg>
<retval></retval>
</method>
<method selector="parent">
<retval></retval>
</method>
<method class_method="true" selector="predefinedNamespaceForPrefix:">
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="prefix">
<retval></retval>
</method>
<method class_method="true" selector="prefixForName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="previousNode">
<retval></retval>
</method>
<method selector="previousSibling">
<retval></retval>
</method>
<method class_method="true" selector="processingInstructionWithName:stringValue:">
<arg name="name"></arg>
<arg name="stringValue"></arg>
<retval></retval>
</method>
<method selector="rootDocument">
<retval></retval>
</method>
<method selector="setName:">
<arg name="name"></arg>
<retval></retval>
</method>
<method selector="setObjectValue:">
<arg name="value"></arg>
<retval></retval>
</method>
<method selector="setStringValue:">
<arg name="string"></arg>
<retval></retval>
</method>
<method selector="setStringValue:resolvingEntities:">
<arg name="string"></arg>
<arg name="resolve"></arg>
<retval></retval>
</method>
<method selector="setURI:">
<arg name="URI"></arg>
<retval></retval>
</method>
<method selector="stringValue">
<retval></retval>
</method>
<method class_method="true" selector="textWithStringValue:">
<arg name="stringValue"></arg>
<retval></retval>
</method>
</class>
<class name="NSXMLParser">
<method selector="abortParsing">
<retval></retval>
</method>
<method selector="columnNumber">
<retval></retval>
</method>
<method selector="delegate">
<retval></retval>
</method>
<method selector="initWithContentsOfURL:">
<arg name="url"></arg>
<retval></retval>
</method>
<method selector="initWithData:">
<arg name="data"></arg>
<retval></retval>
</method>
<method selector="lineNumber">
<retval></retval>
</method>
<method selector="parse">
<retval></retval>
</method>
<method selector="parserError">
<retval></retval>
</method>
<method selector="publicID">
<retval></retval>
</method>
<method selector="setDelegate:">
<arg name="delegate"></arg>
<retval></retval>
</method>
<method selector="setShouldProcessNamespaces:">
<arg name="shouldProcessNamespaces"></arg>
<retval></retval>
</method>
<method selector="setShouldReportNamespacePrefixes:">
<arg name="shouldReportNamespacePrefixes"></arg>
<retval></retval>
</method>
<method selector="setShouldResolveExternalEntities:">
<arg name="shouldResolveExternalEntities"></arg>
<retval></retval>
</method>
<method selector="shouldProcessNamespaces">
<retval></retval>
</method>
<method selector="shouldReportNamespacePrefixes">
<retval></retval>
</method>
<method selector="shouldResolveExternalEntities">
<retval></retval>
</method>
<method selector="systemID">
<retval></retval>
</method>
</class>
<informal_protocol name="NSArchiverCallback">
<method selector="classForArchiver"></method>
<method selector="replacementObjectForArchiver:">
<arg name="archiver"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSClassDescriptionPrimitives">
<method selector="attributeKeys"></method>
<method selector="classDescription"></method>
<method selector="inverseForRelationshipKey:">
<arg name="relationshipKey"></arg>
</method>
<method selector="toManyRelationshipKeys"></method>
<method selector="toOneRelationshipKeys"></method>
</informal_protocol>
<informal_protocol name="NSCoderMethods">
<method selector="awakeAfterUsingCoder:">
<arg name="aDecoder"></arg>
</method>
<method selector="classForCoder"></method>
<method selector="replacementObjectForCoder:">
<arg name="aCoder"></arg>
</method>
<method class_method="true" selector="setVersion:">
<arg name="aVersion"></arg>
</method>
<method class_method="true" selector="version"></method>
</informal_protocol>
<informal_protocol name="NSComparisonMethods">
<method selector="doesContain:">
<arg name="object"></arg>
</method>
<method selector="isCaseInsensitiveLike:">
<arg name="object"></arg>
</method>
<method selector="isEqualTo:">
<arg name="object"></arg>
</method>
<method selector="isGreaterThan:">
<arg name="object"></arg>
</method>
<method selector="isGreaterThanOrEqualTo:">
<arg name="object"></arg>
</method>
<method selector="isLessThan:">
<arg name="object"></arg>
</method>
<method selector="isLessThanOrEqualTo:">
<arg name="object"></arg>
</method>
<method selector="isLike:">
<arg name="object"></arg>
</method>
<method selector="isNotEqualTo:">
<arg name="object"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSConnectionDelegateMethods">
<method selector="authenticateComponents:withData:">
<arg name="components"></arg>
<arg name="signature"></arg>
</method>
<method selector="authenticationDataForComponents:">
<arg name="components"></arg>
</method>
<method selector="connection:shouldMakeNewConnection:">
<arg name="ancestor"></arg>
<arg name="conn"></arg>
</method>
<method selector="createConversationForConnection:">
<arg name="conn"></arg>
</method>
<method selector="makeNewConnection:sender:">
<arg name="conn"></arg>
<arg name="ancestor"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSCopyLinkMoveHandler">
<method selector="fileManager:shouldProceedAfterError:">
<arg name="fm"></arg>
<arg name="errorInfo"></arg>
</method>
<method selector="fileManager:willProcessPath:">
<arg name="fm"></arg>
<arg name="path"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSDelayedPerforming">
<method class_method="true" selector="cancelPreviousPerformRequestsWithTarget:">
<arg name="aTarget"></arg>
</method>
<method class_method="true" selector="cancelPreviousPerformRequestsWithTarget:selector:object:">
<arg name="aTarget"></arg>
<arg name="aSelector"></arg>
<arg name="anArgument"></arg>
</method>
<method selector="performSelector:withObject:afterDelay:">
<arg name="aSelector"></arg>
<arg name="anArgument"></arg>
<arg name="delay"></arg>
</method>
<method selector="performSelector:withObject:afterDelay:inModes:">
<arg name="aSelector"></arg>
<arg name="anArgument"></arg>
<arg name="delay"></arg>
<arg name="modes"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSDeprecatedKeyValueCoding">
<method selector="handleQueryWithUnboundKey:">
<arg name="key"></arg>
</method>
<method selector="handleTakeValue:forUnboundKey:">
<arg name="value"></arg>
<arg name="key"></arg>
</method>
<method selector="storedValueForKey:">
<arg name="key"></arg>
</method>
<method selector="takeStoredValue:forKey:">
<arg name="value"></arg>
<arg name="key"></arg>
</method>
<method selector="takeValue:forKey:">
<arg name="value"></arg>
<arg name="key"></arg>
</method>
<method selector="takeValue:forKeyPath:">
<arg name="value"></arg>
<arg name="keyPath"></arg>
</method>
<method selector="takeValuesFromDictionary:">
<arg name="properties"></arg>
</method>
<method selector="unableToSetNilForKey:">
<arg name="key"></arg>
</method>
<method class_method="true" selector="useStoredAccessor"></method>
<method selector="valuesForKeys:">
<arg name="keys"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSDeprecatedKeyValueObservingCustomization">
<method class_method="true" selector="setKeys:triggerChangeNotificationsForDependentKey:">
<arg name="keys"></arg>
<arg name="dependentKey"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSDeprecatedMethods">
<method class_method="true" selector="poseAsClass:">
<arg name="aClass"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSDistantObjectRequestMethods">
<method selector="connection:handleRequest:">
<arg name="connection"></arg>
<arg name="doreq"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSDistributedObjects">
<method selector="classForPortCoder"></method>
<method selector="replacementObjectForPortCoder:">
<arg name="coder"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSErrorRecoveryAttempting">
<method selector="attemptRecoveryFromError:optionIndex:">
<arg name="error"></arg>
<arg name="recoveryOptionIndex"></arg>
</method>
<method selector="attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:">
<arg name="error"></arg>
<arg name="recoveryOptionIndex"></arg>
<arg name="delegate"></arg>
<arg name="didRecoverSelector"></arg>
<arg name="contextInfo"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSFileManagerFileOperationAdditions">
<method selector="fileManager:shouldCopyItemAtPath:toPath:">
<arg name="fileManager"></arg>
<arg name="srcPath"></arg>
<arg name="dstPath"></arg>
</method>
<method selector="fileManager:shouldLinkItemAtPath:toPath:">
<arg name="fileManager"></arg>
<arg name="srcPath"></arg>
<arg name="dstPath"></arg>
</method>
<method selector="fileManager:shouldMoveItemAtPath:toPath:">
<arg name="fileManager"></arg>
<arg name="srcPath"></arg>
<arg name="dstPath"></arg>
</method>
<method selector="fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:">
<arg name="fileManager"></arg>
<arg name="error"></arg>
<arg name="srcPath"></arg>
<arg name="dstPath"></arg>
</method>
<method selector="fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:">
<arg name="fileManager"></arg>
<arg name="error"></arg>
<arg name="srcPath"></arg>
<arg name="dstPath"></arg>
</method>
<method selector="fileManager:shouldProceedAfterError:movingItemAtPath:toPath:">
<arg name="fileManager"></arg>
<arg name="error"></arg>
<arg name="srcPath"></arg>
<arg name="dstPath"></arg>
</method>
<method selector="fileManager:shouldProceedAfterError:removingItemAtPath:">
<arg name="fileManager"></arg>
<arg name="error"></arg>
<arg name="path"></arg>
</method>
<method selector="fileManager:shouldRemoveItemAtPath:">
<arg name="fileManager"></arg>
<arg name="path"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSKeyValueCoding">
<method class_method="true" selector="accessInstanceVariablesDirectly"></method>
<method selector="dictionaryWithValuesForKeys:">
<arg name="keys"></arg>
</method>
<method selector="mutableArrayValueForKey:">
<arg name="key"></arg>
</method>
<method selector="mutableArrayValueForKeyPath:">
<arg name="keyPath"></arg>
</method>
<method selector="mutableSetValueForKey:">
<arg name="key"></arg>
</method>
<method selector="mutableSetValueForKeyPath:">
<arg name="keyPath"></arg>
</method>
<method selector="setNilValueForKey:">
<arg name="key"></arg>
</method>
<method selector="setValue:forKey:">
<arg name="value"></arg>
<arg name="key"></arg>
</method>
<method selector="setValue:forKeyPath:">
<arg name="value"></arg>
<arg name="keyPath"></arg>
</method>
<method selector="setValue:forUndefinedKey:">
<arg name="value"></arg>
<arg name="key"></arg>
</method>
<method selector="setValuesForKeysWithDictionary:">
<arg name="keyedValues"></arg>
</method>
<method selector="validateValue:forKey:error:">
<arg name="ioValue"></arg>
<arg name="inKey"></arg>
<arg name="outError"></arg>
</method>
<method selector="validateValue:forKeyPath:error:">
<arg name="ioValue"></arg>
<arg name="inKeyPath"></arg>
<arg name="outError"></arg>
</method>
<method selector="valueForKey:">
<arg name="key"></arg>
</method>
<method selector="valueForKeyPath:">
<arg name="keyPath"></arg>
</method>
<method selector="valueForUndefinedKey:">
<arg name="key"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSKeyValueObserverNotification">
<method selector="didChange:valuesAtIndexes:forKey:">
<arg name="changeKind"></arg>
<arg name="indexes"></arg>
<arg name="key"></arg>
</method>
<method selector="didChangeValueForKey:">
<arg name="key"></arg>
</method>
<method selector="didChangeValueForKey:withSetMutation:usingObjects:">
<arg name="key"></arg>
<arg name="mutationKind"></arg>
<arg name="objects"></arg>
</method>
<method selector="willChange:valuesAtIndexes:forKey:">
<arg name="changeKind"></arg>
<arg name="indexes"></arg>
<arg name="key"></arg>
</method>
<method selector="willChangeValueForKey:">
<arg name="key"></arg>
</method>
<method selector="willChangeValueForKey:withSetMutation:usingObjects:">
<arg name="key"></arg>
<arg name="mutationKind"></arg>
<arg name="objects"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSKeyValueObserverRegistration">
<method selector="addObserver:forKeyPath:options:context:">
<arg name="observer"></arg>
<arg name="keyPath"></arg>
<arg name="options"></arg>
<arg name="context"></arg>
</method>
<method selector="removeObserver:forKeyPath:">
<arg name="observer"></arg>
<arg name="keyPath"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSKeyValueObserving">
<method selector="observeValueForKeyPath:ofObject:change:context:">
<arg name="keyPath"></arg>
<arg name="object"></arg>
<arg name="change"></arg>
<arg name="context"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSKeyValueObservingCustomization">
<method class_method="true" selector="automaticallyNotifiesObserversForKey:">
<arg name="key"></arg>
</method>
<method class_method="true" selector="keyPathsForValuesAffectingValueForKey:">
<arg name="key"></arg>
</method>
<method selector="observationInfo"></method>
<method selector="setObservationInfo:">
<arg name="observationInfo"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSKeyedArchiverDelegate">
<method selector="archiver:didEncodeObject:">
<arg name="archiver"></arg>
<arg name="object"></arg>
</method>
<method selector="archiver:willEncodeObject:">
<arg name="archiver"></arg>
<arg name="object"></arg>
</method>
<method selector="archiver:willReplaceObject:withObject:">
<arg name="archiver"></arg>
<arg name="object"></arg>
<arg name="newObject"></arg>
</method>
<method selector="archiverDidFinish:">
<arg name="archiver"></arg>
</method>
<method selector="archiverWillFinish:">
<arg name="archiver"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSKeyedArchiverObjectSubstitution">
<method class_method="true" selector="classFallbacksForKeyedArchiver"></method>
<method selector="classForKeyedArchiver"></method>
<method selector="replacementObjectForKeyedArchiver:">
<arg name="archiver"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSKeyedUnarchiverDelegate">
<method selector="unarchiver:cannotDecodeObjectOfClassName:originalClasses:">
<arg name="unarchiver"></arg>
<arg name="name"></arg>
<arg name="classNames"></arg>
</method>
<method selector="unarchiver:didDecodeObject:">
<arg name="unarchiver"></arg>
<arg name="object"></arg>
</method>
<method selector="unarchiver:willReplaceObject:withObject:">
<arg name="unarchiver"></arg>
<arg name="object"></arg>
<arg name="newObject"></arg>
</method>
<method selector="unarchiverDidFinish:">
<arg name="unarchiver"></arg>
</method>
<method selector="unarchiverWillFinish:">
<arg name="unarchiver"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSKeyedUnarchiverObjectSubstitution">
<method class_method="true" selector="classForKeyedUnarchiver"></method>
</informal_protocol>
<informal_protocol name="NSMachPortDelegateMethods">
<method selector="handleMachMessage:">
<arg name="msg"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSMetadataQueryDelegate">
<method selector="metadataQuery:replacementObjectForResultObject:">
<arg name="query"></arg>
<arg name="result"></arg>
</method>
<method selector="metadataQuery:replacementValueForAttribute:value:">
<arg name="query"></arg>
<arg name="attrName"></arg>
<arg name="attrValue"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSNetServiceBrowserDelegateMethods">
<method selector="netServiceBrowser:didFindDomain:moreComing:">
<arg name="aNetServiceBrowser"></arg>
<arg name="domainString"></arg>
<arg name="moreComing"></arg>
</method>
<method selector="netServiceBrowser:didFindService:moreComing:">
<arg name="aNetServiceBrowser"></arg>
<arg name="aNetService"></arg>
<arg name="moreComing"></arg>
</method>
<method selector="netServiceBrowser:didNotSearch:">
<arg name="aNetServiceBrowser"></arg>
<arg name="errorDict"></arg>
</method>
<method selector="netServiceBrowser:didRemoveDomain:moreComing:">
<arg name="aNetServiceBrowser"></arg>
<arg name="domainString"></arg>
<arg name="moreComing"></arg>
</method>
<method selector="netServiceBrowser:didRemoveService:moreComing:">
<arg name="aNetServiceBrowser"></arg>
<arg name="aNetService"></arg>
<arg name="moreComing"></arg>
</method>
<method selector="netServiceBrowserDidStopSearch:">
<arg name="aNetServiceBrowser"></arg>
</method>
<method selector="netServiceBrowserWillSearch:">
<arg name="aNetServiceBrowser"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSNetServiceDelegateMethods">
<method selector="netService:didNotPublish:">
<arg name="sender"></arg>
<arg name="errorDict"></arg>
</method>
<method selector="netService:didNotResolve:">
<arg name="sender"></arg>
<arg name="errorDict"></arg>
</method>
<method selector="netService:didUpdateTXTRecordData:">
<arg name="sender"></arg>
<arg name="data"></arg>
</method>
<method selector="netServiceDidPublish:">
<arg name="sender"></arg>
</method>
<method selector="netServiceDidResolveAddress:">
<arg name="sender"></arg>
</method>
<method selector="netServiceDidStop:">
<arg name="sender"></arg>
</method>
<method selector="netServiceWillPublish:">
<arg name="sender"></arg>
</method>
<method selector="netServiceWillResolve:">
<arg name="sender"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSPortDelegateMethods">
<method selector="handlePortMessage:">
<arg name="message"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSScriptClassDescription">
<method selector="classCode"></method>
<method selector="className"></method>
</informal_protocol>
<informal_protocol name="NSScriptKeyValueCoding">
<method selector="coerceValue:forKey:">
<arg name="value"></arg>
<arg name="key"></arg>
</method>
<method selector="insertValue:atIndex:inPropertyWithKey:">
<arg name="value"></arg>
<arg name="index"></arg>
<arg name="key"></arg>
</method>
<method selector="insertValue:inPropertyWithKey:">
<arg name="value"></arg>
<arg name="key"></arg>
</method>
<method selector="removeValueAtIndex:fromPropertyWithKey:">
<arg name="index"></arg>
<arg name="key"></arg>
</method>
<method selector="replaceValueAtIndex:inPropertyWithKey:withValue:">
<arg name="index"></arg>
<arg name="key"></arg>
<arg name="value"></arg>
</method>
<method selector="valueAtIndex:inPropertyWithKey:">
<arg name="index"></arg>
<arg name="key"></arg>
</method>
<method selector="valueWithName:inPropertyWithKey:">
<arg name="name"></arg>
<arg name="key"></arg>
</method>
<method selector="valueWithUniqueID:inPropertyWithKey:">
<arg name="uniqueID"></arg>
<arg name="key"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSScriptObjectSpecifiers">
<method selector="indicesOfObjectsByEvaluatingObjectSpecifier:">
<arg name="specifier"></arg>
</method>
<method selector="objectSpecifier"></method>
</informal_protocol>
<informal_protocol name="NSScripting">
<method selector="copyScriptingValue:forKey:withProperties:">
<arg name="value"></arg>
<arg name="key"></arg>
<arg name="properties"></arg>
</method>
<method selector="newScriptingObjectOfClass:forValueForKey:withContentsValue:properties:">
<arg name="objectClass"></arg>
<arg name="key"></arg>
<arg name="contentsValue"></arg>
<arg name="properties"></arg>
</method>
<method selector="scriptingProperties"></method>
<method selector="scriptingValueForSpecifier:">
<arg name="objectSpecifier"></arg>
</method>
<method selector="setScriptingProperties:">
<arg name="properties"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSScriptingComparisonMethods">
<method selector="scriptingBeginsWith:">
<arg name="object"></arg>
</method>
<method selector="scriptingContains:">
<arg name="object"></arg>
</method>
<method selector="scriptingEndsWith:">
<arg name="object"></arg>
</method>
<method selector="scriptingIsEqualTo:">
<arg name="object"></arg>
</method>
<method selector="scriptingIsGreaterThan:">
<arg name="object"></arg>
</method>
<method selector="scriptingIsGreaterThanOrEqualTo:">
<arg name="object"></arg>
</method>
<method selector="scriptingIsLessThan:">
<arg name="object"></arg>
</method>
<method selector="scriptingIsLessThanOrEqualTo:">
<arg name="object"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSSpellServerDelegate">
<method selector="spellServer:checkGrammarInString:language:details:">
<arg name="sender"></arg>
<arg name="stringToCheck"></arg>
<arg name="language"></arg>
<arg name="details"></arg>
</method>
<method selector="spellServer:didForgetWord:inLanguage:">
<arg name="sender"></arg>
<arg name="word"></arg>
<arg name="language"></arg>
</method>
<method selector="spellServer:didLearnWord:inLanguage:">
<arg name="sender"></arg>
<arg name="word"></arg>
<arg name="language"></arg>
</method>
<method selector="spellServer:findMisspelledWordInString:language:wordCount:countOnly:">
<arg name="sender"></arg>
<arg name="stringToCheck"></arg>
<arg name="language"></arg>
<arg name="wordCount"></arg>
<arg name="countOnly"></arg>
</method>
<method selector="spellServer:suggestCompletionsForPartialWordRange:inString:language:">
<arg name="sender"></arg>
<arg name="range"></arg>
<arg name="string"></arg>
<arg name="language"></arg>
</method>
<method selector="spellServer:suggestGuessesForWord:inLanguage:">
<arg name="sender"></arg>
<arg name="word"></arg>
<arg name="language"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSStreamDelegateEventExtensions">
<method selector="stream:handleEvent:">
<arg name="aStream"></arg>
<arg name="eventCode"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSThreadPerformAdditions">
<method selector="performSelector:onThread:withObject:waitUntilDone:">
<arg name="aSelector"></arg>
<arg name="thr"></arg>
<arg name="arg"></arg>
<arg name="wait"></arg>
</method>
<method selector="performSelector:onThread:withObject:waitUntilDone:modes:">
<arg name="aSelector"></arg>
<arg name="thr"></arg>
<arg name="arg"></arg>
<arg name="wait"></arg>
<arg name="array"></arg>
</method>
<method selector="performSelectorInBackground:withObject:">
<arg name="aSelector"></arg>
<arg name="arg"></arg>
</method>
<method selector="performSelectorOnMainThread:withObject:waitUntilDone:">
<arg name="aSelector"></arg>
<arg name="arg"></arg>
<arg name="wait"></arg>
</method>
<method selector="performSelectorOnMainThread:withObject:waitUntilDone:modes:">
<arg name="aSelector"></arg>
<arg name="arg"></arg>
<arg name="wait"></arg>
<arg name="array"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSURLClient">
<method selector="URL:resourceDataDidBecomeAvailable:">
<arg name="sender"></arg>
<arg name="newBytes"></arg>
</method>
<method selector="URL:resourceDidFailLoadingWithReason:">
<arg name="sender"></arg>
<arg name="reason"></arg>
</method>
<method selector="URLResourceDidCancelLoading:">
<arg name="sender"></arg>
</method>
<method selector="URLResourceDidFinishLoading:">
<arg name="sender"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSURLConnectionDelegate">
<method selector="connection:didCancelAuthenticationChallenge:">
<arg name="connection"></arg>
<arg name="challenge"></arg>
</method>
<method selector="connection:didFailWithError:">
<arg name="connection"></arg>
<arg name="error"></arg>
</method>
<method selector="connection:didReceiveAuthenticationChallenge:">
<arg name="connection"></arg>
<arg name="challenge"></arg>
</method>
<method selector="connection:didReceiveData:">
<arg name="connection"></arg>
<arg name="data"></arg>
</method>
<method selector="connection:didReceiveResponse:">
<arg name="connection"></arg>
<arg name="response"></arg>
</method>
<method selector="connection:willCacheResponse:">
<arg name="connection"></arg>
<arg name="cachedResponse"></arg>
</method>
<method selector="connection:willSendRequest:redirectResponse:">
<arg name="connection"></arg>
<arg name="request"></arg>
<arg name="response"></arg>
</method>
<method selector="connectionDidFinishLoading:">
<arg name="connection"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSURLDownloadDelegate" swt_gen="mixed">
<method selector="download:decideDestinationWithSuggestedFilename:" swt_gen="true">
<arg name="download" swt_gen="true"></arg>
<arg name="filename" swt_gen="true"></arg>
</method>
<method selector="download:didCancelAuthenticationChallenge:">
<arg name="download"></arg>
<arg name="challenge"></arg>
</method>
<method selector="download:didCreateDestination:">
<arg name="download"></arg>
<arg name="path"></arg>
</method>
<method selector="download:didFailWithError:">
<arg name="download"></arg>
<arg name="error"></arg>
</method>
<method selector="download:didReceiveAuthenticationChallenge:">
<arg name="download"></arg>
<arg name="challenge"></arg>
</method>
<method selector="download:didReceiveDataOfLength:">
<arg name="download"></arg>
<arg name="length"></arg>
</method>
<method selector="download:didReceiveResponse:">
<arg name="download"></arg>
<arg name="response"></arg>
</method>
<method selector="download:shouldDecodeSourceDataOfMIMEType:">
<arg name="download"></arg>
<arg name="encodingType"></arg>
</method>
<method selector="download:willResumeWithResponse:fromByte:">
<arg name="download"></arg>
<arg name="response"></arg>
<arg name="startingByte"></arg>
</method>
<method selector="download:willSendRequest:redirectResponse:">
<arg name="download"></arg>
<arg name="request"></arg>
<arg name="redirectResponse"></arg>
</method>
<method selector="downloadDidBegin:">
<arg name="download"></arg>
</method>
<method selector="downloadDidFinish:">
<arg name="download"></arg>
</method>
</informal_protocol>
<informal_protocol name="NSXMLParserDelegateEventAdditions">
<method selector="parser:didEndElement:namespaceURI:qualifiedName:">
<arg name="parser"></arg>
<arg name="elementName"></arg>
<arg name="namespaceURI"></arg>
<arg name="qName"></arg>
</method>
<method selector="parser:didEndMappingPrefix:">
<arg name="parser"></arg>
<arg name="prefix"></arg>
</method>
<method selector="parser:didStartElement:namespaceURI:qualifiedName:attributes:">
<arg name="parser"></arg>
<arg name="elementName"></arg>
<arg name="namespaceURI"></arg>
<arg name="qName"></arg>
<arg name="attributeDict"></arg>
</method>
<method selector="parser:didStartMappingPrefix:toURI:">
<arg name="parser"></arg>
<arg name="prefix"></arg>
<arg name="namespaceURI"></arg>
</method>
<method selector="parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:">
<arg name="parser"></arg>
<arg name="attributeName"></arg>
<arg name="elementName"></arg>
<arg name="type"></arg>
<arg name="defaultValue"></arg>
</method>
<method selector="parser:foundCDATA:">
<arg name="parser"></arg>
<arg name="CDATABlock"></arg>
</method>
<method selector="parser:foundCharacters:">
<arg name="parser"></arg>
<arg name="string"></arg>
</method>
<method selector="parser:foundComment:">
<arg name="parser"></arg>
<arg name="comment"></arg>
</method>
<method selector="parser:foundElementDeclarationWithName:model:">
<arg name="parser"></arg>
<arg name="elementName"></arg>
<arg name="model"></arg>
</method>
<method selector="parser:foundExternalEntityDeclarationWithName:publicID:systemID:">
<arg name="parser"></arg>
<arg name="name"></arg>
<arg name="publicID"></arg>
<arg name="systemID"></arg>
</method>
<method selector="parser:foundIgnorableWhitespace:">
<arg name="parser"></arg>
<arg name="whitespaceString"></arg>
</method>
<method selector="parser:foundInternalEntityDeclarationWithName:value:">
<arg name="parser"></arg>
<arg name="name"></arg>
<arg name="value"></arg>
</method>
<method selector="parser:foundNotationDeclarationWithName:publicID:systemID:">
<arg name="parser"></arg>
<arg name="name"></arg>
<arg name="publicID"></arg>
<arg name="systemID"></arg>
</method>
<method selector="parser:foundProcessingInstructionWithTarget:data:">
<arg name="parser"></arg>
<arg name="target"></arg>
<arg name="data"></arg>
</method>
<method selector="parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:">
<arg name="parser"></arg>
<arg name="name"></arg>
<arg name="publicID"></arg>
<arg name="systemID"></arg>
<arg name="notationName"></arg>
</method>
<method selector="parser:parseErrorOccurred:">
<arg name="parser"></arg>
<arg name="parseError"></arg>
</method>
<method selector="parser:resolveExternalEntityName:systemID:">
<arg name="parser"></arg>
<arg name="name"></arg>
<arg name="systemID"></arg>
</method>
<method selector="parser:validationErrorOccurred:">
<arg name="parser"></arg>
<arg name="validationError"></arg>
</method>
<method selector="parserDidEndDocument:">
<arg name="parser"></arg>
</method>
<method selector="parserDidStartDocument:">
<arg name="parser"></arg>
</method>
</informal_protocol>
</signatures>